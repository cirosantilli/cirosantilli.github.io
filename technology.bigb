= Technology
{wiki}

= Technological
{synonym}

= Clothing
{parent=Technology}
{wiki}

= Bra
{parent=Clothing}
{wiki}

= Deep tech
{parent=Technology}
{wiki}

= Physics is brutal
{synonym}
{title2}

<Ciro Santilli> is a fan of this late 2010's buzzword.

It basically came about because of the endless stream of useless software startups made since the 2000's by one or two people with no investments with the continued increase in computers and Internet speeds <Moore's law>[until the great wall was reached].

Deep tech means not one of those. More specifically, it means technologies that require significant investment in expensive materials and laboratory equipment to progress, such as <molecular biology technologies> and <quantum computing>.

And it basically comes down to technologies that wrestle with the fundamental laws of <physics> rather than software data wrangling.

<Computers> are of course limited by the laws of physics, but those are much hidden by several layers of indirection.

Full visibility, and full control, make computer tasks be tasks that eventually always work out more or less as expected.

The same does not hold true when real Physics is involved.

Physics is brutal.

To start with, you can't even see your system very clearly, and often doing so requires altering its behaviour.

For example, in <molecular biology>, most great discoveries are made after some new technique is made to be able to observe smaller things.

But you often have to kill your cells to make those observations, which makes it very hard to understand how they work dynamically.

What we would really want would be to track every single protein as it goes about inside the cell. But that is likely an impossible dream.

The same for the brain. If we had observations of every neuron, how long would it take to understand it? Not long, people are really good at <reverse engineering> things when there is enough information available to do so, see also <science is the reverse engineering of nature>.

Then, even when you start to see the system, you might have a very hard time controlling it, because it is so fragile. This is basically the case of quantum computing in 2020.

It is for those reasons that deep tech is so exciting.

The <the next big thing>[next big things] will come from deep tech. Failure is always a possibility, and you can't know before you try.

But that's also why its so fun to dare.

Stuff that <Ciro Santilli> considers "deep tech" as of 2020:
* <brain-computer interface>{child}
* <fusion power>{child}. The question there is, when is "deep", "too deep"?

= Engineering
{parent=Technology}
{wiki}

= Engineer
{parent=Engineering}
{wiki}

= Computer engineer
{parent=Engineer}
{wiki}

= Gordon Moore
{c}
{parent=Computer engineer}
{wiki}

= Robert Noyce
{c}
{parent=Computer engineer}
{wiki}

= Robert Noyce: The Man Behind the Microchip by Leslie Berlin (2006)
{c}
{parent=Robert Noyce}
{tag=Good book}

Borrow from the <Internet Archive> for free: https://archive.org/details/manbehindmicroc000berl/page/n445/mode/2up

= Seymour Cray
{c}
{parent=Computer engineer}
{wiki}

= Cray
{c}
{parent=Seymour Cray}
{wiki}

= The Supermen: The Story of Seymour Cray by Charles J. Murray (1997)
{c}
{parent=Seymour Cray}
{tag=Good book}

Borrow from the <Internet Archive> for free: https://archive.org/details/supermenstory00murr

Initial chapters put good clarity on the formation of the <military-industrial complex>. Being backed by the military, especially just after <World War II>, was in itself enough credibility to start and foster a company.

It is funny to see how the first computers were very artisanal, made on a one-off basis.

Amazing how Control Data Corporation raised capital IPO style as a startup without a product. The dude was selling shares at dinner parties in his home.

Very interesting mention on page 70 of how <Israel> bought CDC's https://en.wikipedia.org/wiki/UNIVAC_1103[UNIVAC 1103] which Cray contributed greatly to design, and everyone knew that it was to make <thermonuclear weapons>, since that was what the big American labs like  this mention should be added to: https://en.wikipedia.org/wiki/Nuclear_weapons_and_Israel but that's Extended Protected... the horrors of <Wikipedia>.

Another interesting insight is how "unintegrated" computers were back then. They were literally building computers out of individual <vacuum tubes>, then individual semiconducting transistors, a gate at a time. Then things got more and more integrated as time went. That is why the now outdated word "microprocessor" existed. When processors start to fit into a single <integrated circuit>, they were truly micro compared to the monstrosities that existed previously.

Also, because integration was so weak initially, it was important to more manually consider the length of wire signals had to travel, and try to put components closer together to reduce the <critical path> to be able to increase clock speeds. These constraints are also of course present in modern computer design, but they were just so much more visible in those days.

The book does unfortunately not give much detail in Crays personal life as mentioned on this book review: https://www.goodreads.com/review/show/1277733185?book_show_action=true[]. His childhood section is brief, and his wedding is described in one paragraph, and divorce in one sentence. Part of this is because he was very private about his family most likely note how Wikipedia had missed his first wedding, and likely misattribute children to the second wedding; https://en.wikipedia.org/wiki/Talk:Seymour_Cray section "Weddings and Children".

Crays work philosophy is is highlighted many times in the book, and it is something worthy to have in mind:
* if a design is not working, start from scratch
* don't be the very first pioneer of a technology, let others work out the problems for you first, and then come second and win

Cray's final downfall was when he opted to try to use a promising but hard to work with material <gallium arsenide> instead of <silicon> as his way to try and speed up computers, see also: <gallium arsenide vs silicon>. Also, he went against the extremely current of the late 80's early 90's pointing rather towards using massively parallel systems based on <silicon> off-the-shelf <Intel> processors, a current that had <DARPA> support, and which by far the path that won very dramatically as of 2020, see: <Intel supercomputer market share>.

= Industry
{parent=Engineering}
{wiki}

= Industrial
{synonym}

= Industrialized
{synonym}

= Electricity generation
{parent=Technology}
{wiki}

= Nuclear power
{parent=Electricity generation}
{wiki}

= Fusion power
{parent=Nuclear power}
{wiki}

= Fusion energy
{synonym}

<Fusion power could be the next big thing>.

Most promising approaches as of 2020:
* <magnetic confinement fusion>
* <inertial confinement fusion>

= Magnetic confinement fusion
{parent=Fusion power}
{wiki}

Once again, relies on <superconductivity> to reach insane magnetic fields. Superconductivity is just so important.

<Ciro Santilli> saw a good presentation about it once circa 2020, it seems that the main difficulty of the time was turbulence messing things up. They have some nice simulations with cross section pictures e.g. at: https://www.eurekalert.org/news-releases/937941[].

= List of magnetic confinement fusion reactors
{parent=Magnetic confinement fusion}

= JT-60
{c}
{parent=List of magnetic confinement fusion reactors}
{title2=Japan, 1985-2010}
{wiki}

= Joint European Torus
{c}
{parent=List of magnetic confinement fusion reactors}
{title2=JET, Oxfordshire, United Kingdom, 1985-2010, 1991-}
{wiki}

\Video[https://www.youtube.com/watch?v=JrGeuIe17MA]
{title=Inside JET: The world's biggest nuclear fusion experiment by Wired UK (2020)}

= ITER
{c}
{parent=List of magnetic confinement fusion reactors}
{wiki}

= Inertial confinement fusion
{parent=Fusion power}
{wiki}

= Fusion energy gain factor
{parent=Fusion power}
{wiki}

= Lawson criterion
{c}
{parent=Fusion energy gain factor}
{wiki}

= Fusion ignition
{parent=Lawson criterion}
{wiki}

= Electronics
{parent=Technology}
{wiki}

= Electronic component
{parent=Electronics}
{wiki}

= Amplifier
{parent=Electronic component}
{wiki}

Main implementations: the same as <electronic switches>: <vacuum tubes> in the past, and <transistors> in the second half of the 20th century.

= Diode
{parent=Electronic component}
{wiki}

= Resistor
{parent=Electronic component}
{wiki}

= Electrical resistance
{parent=Resistor}
{wiki=Electrical_resistance_and_conductance}

= Transformer
{parent=Electronic component}
{wiki}

= Electronic switch
{parent=Electronic component}
{wiki}

= Vacuum tube
{parent=Electronic switch}
{wiki}

= Transistor
{parent=Electronic switch}
{wiki}

A <solid-state> <electronic switch> and <amplifier>.

Although transistors were revolutionary, it is fun to note that they were just "way cheaper and more reliable and smaller" versions of exactly the main functions that a <vacuum tube> could achieve
* <amplifier>
* <electronic switch>

= Point-contact transistor
{parent=Transistor}
{title2=BJT, 1947}
{wiki}

The first working one in 1947 by <John Bardeen> and <walter Brattain> in <Bell Labs Murray Hill>.

People had already <patented> a lot of stuff before without being able to make them work. Nonsense.

As the name suggests, this is not very sturdy, and was quickly replaced by <bipolar junction transistor>.

= Bipolar junction transistor
{parent=Transistor}
{title2=BJT, 1948}
{wiki}

By <William Shockley> in 1948 also at <Bell Labs Murray Hill>.

As of 2020, not used anymore in <logic gates>, but still used in <amplifiers>.

= Field-effect transistor
{parent=Transistor}
{title2=FET}
{wiki}

= MOSFET
{c}
{parent=Field-effect transistor}
{title2=1959}
{wiki}

= CMOS
{c}
{parent=MOSFET}
{wiki}

= Electronic test equipment
{parent=Electronics}
{wiki}

= Oscilloscope
{parent=Electronic test equipment}
{wiki}

= Electronic circuit
{parent=Electronics}
{wiki}

= Breadboard
{parent=Electronic circuit}
{wiki}

= Digital electronic circuit
{parent=Electronic circuit}

= Frequency divider
{parent=Digital electronic circuit}
{wiki}

= Semiconductor package
{parent=Electronics}
{wiki}

= Dual in-line package
{parent=Semiconductor package}
{wiki}

= Explosive
{parent=Technology}
{wiki}

Types:
* <chemical explosive>. Almost a synonym for explosive in most contexts.

= Information technology
{parent=Technology}
{wiki}

\Include[computer]{parent=information-technology}

= Error correction code
{parent=Information technology}
{wiki}

= Cyclic redundancy check
{parent=Error correction code}
{wiki}

= CRC-32
{c}
{parent=Cyclic redundancy check}
{wiki=Cyclic_redundancy_check#CRC-32_algorithm}

= Telecommunication
{parent=Information technology}
{wiki}

= Television
{parent=Telecommunication}
{wiki}

= Writing
{parent=Telecommunication}
{wiki}

= Scribe
{parent=Writing}
{wiki}

= Scriptorium
{parent=Writing}
{wiki}

= Illuminated manuscript
{parent=Scriptorium}
{wiki}

= Publishing
{parent=Writing}
{wiki}

= Self-publishing website
{parent=Publishing}
{wiki}

= Leanpub
{parent=Publishing}

https://leanpub.com

Founder: Peter Armstrong

The general idea is publishing entire books with usual copyright, but with gradual updates.

http://ruboss.com/ documents their stack, a somewhat similar choice to <OurBigBook.com> as of 2021, notably <Next.js>. But backend in <Ruby on Rails>. They actually managed Apollo/<GraphQL>, which <Ciro Santilli> would have liked, but din't have the patience for.

The founder/CEO Peter Armstrong https://www.linkedin.com/in/peterburtonarmstrong/ He looks like a nice guy.

= Markua
{parent=Leanpub}

In <leanpub> you write your book in a <markdown> variant they call Markua, marketed as "markdown for books".

TODO is there a reference implementation that runs locally for HTML output? Or the only reference implementation is closed under <leanpub>?

Spec: http://markua.com/

= Publishing company
{parent=Publishing}
{wiki}

= O'Reilly Media
{c}
{parent=Publishing company}
{wiki}

= Lighter
{parent=Technology}
{wiki}

= Barbequeue lighter
{parent=Lighter}

\Include[microscopy]{parent=technology}

= Mechanical engineering
{parent=Technology}
{wiki}

= Mechanical engineering company
{parent=Mechanical engineering}

= Park Tool
{c}
{parent=Mechanical engineering company}
{tag=Good}
{wiki}

= Nanotechnology
{parent=Technology}
{wiki}

= Microelectromechanical systems
{parent=Nanotechnology}
{wiki}

= MEMS
{c}
{synonym}
{title2}

\Video[https://www.youtube.com/watch?v=RiRyap-EVg0]
{title=<MEMS>: The Second Silicon Revolution? by <Asianometry> (2022)}

= Molecular machine
{parent=Nanotechnology}
{wiki}

The most beautiful ones:
* <sodium channel>
* basically anything that falls in the <DNA replication> and <transcription (biology)>
see also <animations of molecular biology processes>{full}

= Sodium channel
{parent=Molecular machine}
{wiki}

Base machinery of the <nervous system>.

= Reverse engineering
{parent=Technology}
{wiki}

This is what society gets for not using <open knowledge>: some of its best minds will be bound to waste endless hours reversing some useless technology.

With that said, even when you do have the source code, reading run logs and using <debuggers> are a sort of reverse engineering at heart.

One of the most jaw dropping reverse engineering projects Ciro has ever seen is the <Super Mario 64 reverse engineering project>.

= Science is the reverse engineering of nature
{parent=Reverse engineering}
{wiki}

How <software engineer>[software engineers] view science:
\Q[Science is the <reverse engineering> of nature.]

<Ciro Santilli> had once assigned this as one of <Ciro Santilli's best random thoughts>, but he later found that <Wikipedia> actually says exactly that: https://en.wikipedia.org/wiki/Reverse_engineering ("similar to scientific research, the only difference being that scientific research is about a natural phenomenon") so maybe that is where Ciro picked it up unconsciously in the first place.

\Include[social-technology]{parent=technology}

= Robotics
{parent=Technology}
{wiki}

= Robot
{synonym}

= Actuator
{parent=Robotics}
{wiki}

= Robotics software
{parent=Robotics}

= Drake
{disambiguate=robotics software}
{c}
{parent=Robotics software}
{tag=Simulation software}

Looks cool! <Ciro Santilli> loves <simulations>!
* https://github.com/RobotLocomotion/drake
* https://drake.mit.edu/gallery.html

TRI means <Toyota Research Institute> BTW.

\Q[The Robotics team at TRI is working hard to close the gap between simulation and reality. For manipulation, one important piece is accurate simulation of rigid-body contact.]

= Robot Operating System
{c}
{parent=Robotics software}
{tag=Open source software}
{wiki}

= Transport
{parent=Technology}
{wiki}

= Bicycle
{parent=Transport}
{wiki}

= Bicycle tire sizes
{parent=Bicycle}
{wiki}

The images you have to have in mind are:
* https://en.wikipedia.org/wiki/File:Sezione_cerchione_bicicletta.svg
* https://cdn-0.sheldonbrown.com/images/bead-seat-diameter.jpg

Yes, Sheldon he has separate American and British English versions of pages!!!
* https://www.sheldonbrown.com/tyre-sizing.html
* https://www.sheldonbrown.com/tire-sizing.html

For example, <ciro santilli s hardware/Kross bicycle (2017)> had a Schwalbe tyre with markings:
\Q[42-622 (28 x 1.60, 700x40C)]
When inflated, the tires were about 3.5cm wide as measured with a ruler.

And the https://shop.mavic.com/en-gb/a-319-j24500.html#1028=3283&1035=3501[Mavic A319 rim] had markings:
\Q[622x19C]

In this:
* ISO (Etrto): 42-622. So:
  * 42 is the inner rim width. The actual inflated tire is going to be even wider.
  * 622 is the bead seat diameter. The actual inflated tire is going to be even wider.
* imperial: 28 x 1.60
* French: 700x40C:
  * meaning of the "C" asked at: https://bicycles.stackexchange.com/questions/16190/what-does-the-c-in-bicycle-tire-size-mean
    * https://www.sheldonbrown.com/tire-sizing.html#french says A is larger than B which is larger than C, and C means 622 mm

= Shimano
{c}
{parent=Bicycle}
{wiki}

Manuals: https://si.shimano.com/

= Shimano product lines
{c}
{parent=Shimano}

Overview of Shimano brands 2018: https://www.evanscycles.com/coffeestop/advice/the-complete-guide-to-shimanos-mountain-bike-groupsets-and-their-hierarchy

* Shimano Altus RD-M310: almost cheapest MTB
* Shimano Acera RD-M360: second cheapest MTB
* Shimano Alivio RD-M410: third cheapest MTB
* Shimano Claris: entry 8-speed road bike https://www.youtube.com/watch?v=6dFQDDg6Wt0
* Shimano Sora: 9-speed road bike https://bike.shimano.com/en-EU/product/component/sora-r3000.html
* Shimano Tiagra: 10-speed road bike https://bike.shimano.com/en-EU/product/component/tiagra-4700.html
* Shimano Deore: non-<shitty> MTB, in increasing performance: M610, M6000, M7000, ...)
* Shimano Tourney; commuter, likely the shittiest of all lines: https://bike.shimano.com/en-EU/product/component/tourney.html

= Balloon
{parent=Transport}
{wiki}

= Motor vehicle
{parent=Transport}
{wiki}

= Car
{parent=Motor vehicle}
{tag=Evil}
{wiki}

= Automotive company
{parent=Motor vehicle}

= Toyota
{c}
{parent=Automotive company}
{wiki}

= Toyota Research Institute
{c}
{parent=Toyota}
{title2=TRI}

= Public transport
{parent=Transport}
{wiki}

= Train
{parent=Transport}
{wiki}

= User interface
{parent=Technology}
{wiki}

= UI
{c}
{synonym}
{title2}

For <computer> interfaces see: <computer user-interface>.

= Software with bad user interface
{parent=User interface}

It is hard to pinpoint why, but the following useful software just feel bad for some reason:
* <Inkscape>{child}
* <Launchpad (website)>{child}

= Brain-computer interface
{parent=User interface}
{wiki=Brain–computer_interface}

The ultimate <computer user-interface>{parent}.

<Brain-computer interfaces could be the next big thing>.

And life extension? https://worldbuilding.stackexchange.com/questions/112022/would-an-invasive-spinal-cord-brain-computer-interface-allow-healthy-individuals

= Neuralink
{parent=Brain-computer interface}
{wiki}

<Elon Musk>{parent}'s attempt.

\Video[https://www.youtube.com/watch?v=CLUWDLKAF1M]
{title=Neuralink: <Elon Musk>'s entire brain chip presentation in 14 minutes (supercut) by CNET (2020)}
{description=
* https://youtu.be/CLUWDLKAF1M?t=380 Shows a pig with the implant, and live signals are shown when its nose touches something.
* https://youtu.be/CLUWDLKAF1M?t=536 shows a pre-recorded pig study correlating really the joint positions while walking with the neuralink signals
}

= Technology bibliography
{parent=Technology}

= Robert X. Cringely
{c}
{parent=technology-bibliography}
{wiki}

= Mark Stephens
{c}
{title2}
{synonym}

= Triumph of the Nerds
{c}
{parent=Robert X. Cringely}
{tag=Documentary film}
{title2=1995}
{wiki}

= Nerds 2.0.1
{c}
{parent=Robert X. Cringely}
{tag=Documentary film}
{tag=Good documentary film}
{title2=1998}
{wiki}

= Glory of the Geeks
{c}
{synonym}
{title2}

Very very good. Those nice pre-<Dot-com bubble> vibes.

Might be freely watchable? Wikipedia links to:
* https://archive.org/details/Nerds_2.0.1_-_A_Brief_History_of_the_Internet_-_Part1
* https://archive.org/details/Nerds_2.0.1_-_A_Brief_History_of_the_Internet_-_Part2
* https://archive.org/details/Nerds_2.0.1_-_A_Brief_History_of_the_Internet_-_Part3
But they do start with an <FBI> warning about copyright. So... erm.

Part 1 - Networking The Nerds talks about the <TCP IP> and early machines implementing it:
* 21:00: shows inside <The Pentagon>. The way the dude who works there opens a his locked office door with an electric switch is just amazing. Cringely also mentions that there's an actual official speed limit in the corridors as he rides a carrier bike slowly through them.
* 21:45: the universities weren't enthusiastic, because people from other locations would be able to use your precious computer time. But finally <ARPA> forced the universities' hands, and they joined.
* 24:24 mentions that some of the guys who created ARPANET were actually previously counting cards at Casinos in Las Vegas, just like in the https://en.wikipedia.org/wiki/21_(2008_film)[21 (2008) film]
* one of the centerpieces of development was at <UCLA>. The other was the https://en.wikipedia.org/wiki/Raytheon_BBN[BBN company]. 33:55 shows the first <router>, then called IMP ().
* the first message was from <UCLA> to <Stanford University>. He was trying to write "Login", and it crashed at the 'g'. Epic. They later debugged it.
* towards the end talks about https://en.wikipedia.org/wiki/ALOHAnet[ALOHAnet], the first wireless computer communication done

Part 2 - Serving the Suits
* Robert Metcalfe. He's nice. Xerox PARC. <Ethernet>.
* Explains what is a "Workstation", notably showing one by <Sun Microsystems>. This is now an obscure "passé" thing in 2020 that young people like <Ciro Santilli> have only heard of in legend (or in outdated university computer labs!). Funny to think that so many people have had this idea before, including e.g. the <Chromebook>
* 10:46 mentions that all of <Cisco>, <Silicon Graphics> and <Sun Microsystems> and where founded at Margaret Jacks Hall, Building 460, at <Stanford University>.
* he then talks a lot about Sun. Sun became dominant in <Wall Street>.
* 19:05: Novell, from <Utah>. How they almost went bust, but were saved at the last moment by https://en.wikipedia.org/wiki/Ray_Noorda[Ray Noorda], who refocused them to their NetWare product which was under recent development. It allowed file and printer sharing in <IBM PCs>. 22:55 shows how they had a live radio host for people waiting on customer support calls!
* 33:56 mentions how The Grateful Dead had in impact on the Internet, as people wanted computers to be able to access https://en.wikipedia.org/wiki/The_WELL[The WELL] online forum. They still own the domain as of 2022: https://www.well.com/[]. It is interesting how <Larry Page> also liked The Grateful Dead as mentioned at <The Google Story>, his dad would take him to shows. Larry is a bit younger of course than the people in this documentary.
* 37 show McAfee
* 43:56: fantastic portrait of <Cisco>

Part 3 - Wiring the World:
* Berners-Lee at <CERN> and the invention of the <URL>.
* 1992: <US Government> allow commerce on the <Internet>
* <Web browser> history, https://en.wikipedia.org/wiki/Mosaic_(web_browser)[Mosaic] and Marc Andresseeen.
* 20:45: America Online
* 23:29: <search engines> and Excite. <Google> was a bit too small to be on his radar!
* 25:50: <porn>
* 27: https://en.wikipedia.org/wiki/The_Motley_Fool[The Motley Fool] and advertising
* 30: Planet U grocery shopping
* 31:50: <Amazon>
* 33:00: immigrant workers, Indians playing cricket, outsourcing, Wipro Systems
* 41:25: <Java>
* 46:30: <Microsoft> joins the <Internet>. The Internet Tidal Wave Internet memo. Pearl Harbour day talk.
* 56:40: Excite Tour. If they had survived, they would have been <Google> with their quirky offices.

= The best technology YouTube channels
{parent=Technology bibliography}
{tag=The best YouTube channels}

= Applied Science
{disambiguate=YouTube channel}
{c}
{parent=The best technology YouTube channels}

https://www.youtube.com/channel/UCivA7_KLKWo43tFcCkFvydw

Host: Ben Krasnow.

Deals with materials, <chemistry>, <microscopy>, electronics.

Uber practical, well described setups deep science stuff, he is awesome and has been at <Google> since 2014: https://www.linkedin.com/in/ben-krasnow-6796a94/

Ben studied at <University of California, Santa Barbara>.

= EngineerGuy
{c}
{parent=The best technology YouTube channels}

https://www.youtube.com/c/engineerguyvideo

https://en.wikipedia.org/wiki/William_S._Hammack

Does deliver good concise ideas. Now we need something on the <the missing link between basic and advanced>[less concise side of it].

= NileRed
{c}
{parent=The best technology YouTube channels}

https://www.youtube.com/channel/UCFhXFikryT4aFcLkLw2LBLA

Great <chemistry> content. Well detailed setups, notably substance extraction from off-the-shelf products.

= Cody's lab
{c}
{parent=The best technology YouTube channels}

https://www.youtube.com/channel/UCu6mSoMNzHQiBIOCkHUa2Aw

This dude is <mind blowing>. Big respect.

Some of the most impressive videos are the ones in which he goes and extracts metals from minerals himself all the way.

\Video[https://www.youtube.com/watch?v=x1mv0vwb08Y]
{title=What's Been Going On With Cody'sLab? by <Cody's lab> (2019)}
{description=Cody opening up about some issues he's having life. Notably: <being naughty and creative are correlated>.}

= Asianometry
{c}
{parent=The best technology YouTube channels}

https://www.youtube.com/channel/UC1LpsuAUaKoMzzJSEt5WImw

Focuses mostly on the <semiconductor industry>.
