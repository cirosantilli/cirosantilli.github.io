= Ciro Santilli's Homepage
{splitDefault}
{title2=三西猴的首页}

\x[free-gifted-education]{c} and \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][freedom of speech] activist. \x[effortless-effort][Passion] for the \x[natural-science]{p}, \x[education] and \x[computer]{p}. \x[ciro-santilli-s-cycling][Recreational cyclist]. \x[tax-the-rich]{c}. Opinions are his own.

https://github.com/cirosantilli[GitHub] |
https://stackoverflow.com/users/895245[Stack Overflow] |
https://www.linkedin.com/in/cirosantilli[LinkedIn] |
https://www.youtube.com/c/CiroSantilli[YouTube] |
https://twitter.com/cirosantilli[Twitter] |
https://www.zhihu.com/people/cirosantilli/activities[Zhihu 知乎] |
https://www.weibo.com/p/1005055601627311[Weibo 微博] |
\x[accounts][Other accounts]

Working on: \x[write-free-books-to-get-famous-website]. \x[sponsor][Sponsor Ciro] at https://github.com/sponsors/cirosantilli[] starting from 1\x[dollar][\$]/month so he can work full time to bring hardcore \x[university]-level \x[stem] education to all ages.

\x[ciro-santilli-s-website][This website] is written in \x[cirodown], its \x[source-code] is located at: https://github.com/cirosantilli/cirosantilli.github.io[], and it is \x[licensed] under \x[cc-by-sa] 4.0 unless otherwise noted. To contact Ciro, see: \x[contact]{full}.

\image[ID_photo_of_Ciro_Santilli_taken_in_2013.jpg]{height=300}
\image[Ciro_Santilli's_learn_teach_apply_logo.png]{height=300}

= Ciro Santilli
{c}
{parent=ciro-santilli-s-homepage}
{title2=三西猴}

Ciro Santilli is a \x[male] \x[human] \x[software-engineer] and \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][activist] \x[ciro-santilli-s-biography][born] in \x[brazil], \x[earth] in 1989 AD.

Quick facts:
* Nationalities: \x[italian] and \x[brazilian]
* Grew up in: \x[brazil]
* Relationship status 2017-: \x[ciro-santilli-s-wife][married]
* \x[chinese-language][Chinese] name: 三西猴, means "three western monkeys". Phonetic approximation to SANtilli CIRO. Semi-unintentionally reminds \x[chinese] people of \x[image-19th-century-illustration-of-the-journey-to-the-west-protagonist-sun-wukong][Sun Wukong (孙悟空)]. Given by \x[ciro-santilli-s-wife], then girlfriend, as a semi-joke, and he took it up because the best way to take a joke is to go with the joker.
* Laptop: high end \x[thinkpad][Lenovo ThinkPad]
* \x[distro]: latest \x[ubuntu] release
* \x[vim] or Emacs: Vim. But for The Love, will someone please make an open source \x[c-plus-plus] \x[integrated-development-environment] that actually just works?
* Tabs or spaces: spaces
* \x[mailing-list]{c} or \x[git](\x[github][Hub]|\x[gitlab][Lab]): Git(Hub|Lab), with passion, see \x[mailing-list]{full}
* System or unit tests: system
* \x[programming-language]{p}: \x[python] and \x[c-plus-plus]. He'll learn Rust and \x[haskell] once he's rich.
* Musical instruments to listen: \x[the-best-chinese-traditional-instrumental-music-of-all-time][Chinese Guqin] and \x[the-best-modern-instrumental-western-music-of-all-time][electric Jazz-fusion guitar]
* Metric or imperial: metric, for The Love. \x[international-system-of-units][Science]? \x[having-more-than-one-natural-language-is-bad-for-the-world][Standardization]?
* QWERTY or Dvorak: QWERTY, alas

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Xiyou.PNG/337px-Xiyou.PNG]{height=400}
{title=19th century illustration of the \x[journey-to-the-west] protagonist \x[sun-wukong].}
{description=\x[sun-wukong] (孙悟空) is a playful and obscenely powerful monkey Journey to the West. He protects a \x[buddhist] monk, and likes \x[ciro-santilli-s-psychology-and-physiology][eating fruit, just like Ciro]. Oh, and https://en.wikipedia.org/wiki/Goku[Goku] from \x[children-cartoons-ciro-santilli-liked-to-watch][Dragon Ball] is based on him. His Japanese name \i[is] "Sun Wukong" (same Chinese characters with different Japanese pronunciation) for the love. His given name "Wukong" means literally "the one who mastered the void", which is \x[physics-and-the-illusion-of-life][fucking awesome].}

\Include[sponsor]

= The most important projects done by Ciro Santilli
{parent=ciro-santilli}

\x[ciro-santilli] has sometimes wasted time with low impact projects such as those listed at \x[ciro-santilli-s-minor-projects] instead of doing higher impact projects such as those mentioned at: \x[the-most-important-projects-ciro-santilli-wants-to-do]{full}.

But maybe "Everything you did brought you where you are now." applies, maybe it is during the "low impact activities" that one gets the inspiration and experience required for the "high impact ones".

= Linux Kernel Module Cheat
{c}
{splitSuffix}
{parent=the-most-important-projects-done-by-ciro-santilli}
{title2=LKMC}

https://github.com/cirosantilli/linux-kernel-module-cheat

This is the most important technical tutorial project that \x[ciro-santilli] has done in his life so far as of 2019.

The scope is insane and unprecedented, and goes beyond \x[linux-kernel]-land alone, which is where it started.

It ended up \x[eating] every system programming content Ciro had previously written! Including:
* \x[c-programming-language], \x[c-plus-plus], \x[posix]
* \x[x86] and arm userland assembly
* arm baremetal assembly. x86 baremetal is at: https://github.com/cirosantilli/x86-bare-metal-examples and would in theory be migrated, but he's lazy
* \x[qemu] and gem5 emulation
so that that repo would better be called "System Programming Cheat". But "Linux Kernel Module Cheat" sounds more hardcore ;-)

Other major things that could be added there as well in the future are:
* https://github.com/cirosantilli/algorithm-cheat
* https://en.wikipedia.org/wiki/Computer_architecture[computer architecture] tutorials with gem5

Due to this project, some have https://github.com/cirosantilli/linux-kernel-module-cheat/issues/105#issuecomment-553220982[considered Ciro to be] (https://web.archive.org/web/20191113151131/https://github.com/cirosantilli/linux-kernel-module-cheat/issues/105#issuecomment-553220982[archive]):
\Q[some kind of Linux kernel god.]
which made Ciro smile, although "Linux kernel documenter \x[god]" would have been more precise.

``
[    1.451857] input: AT Translated Set 2 keyboard as /devices/platform/i8042/s1│loading @0xffffffffc0000000: ../kernel_modules-1.0//timer.ko
[    1.454310] ledtrig-cpu: registered to indicate activity on CPUs             │(gdb) b lkmc_timer_callback
[    1.455621] usbcore: registered new interface driver usbhid                  │Breakpoint 1 at 0xffffffffc0000000: file /home/ciro/bak/git/linux-kernel-module
[    1.455811] usbhid: USB HID core driver                                      │-cheat/out/x86_64/buildroot/build/kernel_modules-1.0/./timer.c, line 28.
[    1.462044] NET: Registered protocol family 10                               │(gdb) c
[    1.467911] Segment Routing with IPv6                                        │Continuing.
[    1.468407] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver              │
[    1.470859] NET: Registered protocol family 17                               │Breakpoint 1, lkmc_timer_callback (data=0xffffffffc0002000 <mytimer>)
[    1.472017] 9pnet: Installing 9P2000 support                                 │    at /linux-kernel-module-cheat//out/x86_64/buildroot/build/
[    1.475461] sched_clock: Marking stable (1473574872, 0)->(1554017593, -80442)│kernel_modules-1.0/./timer.c:28
[    1.479419] ALSA device list:                                                │28      {
[    1.479567]   No soundcards found.                                           │(gdb) c
[    1.619187] ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100                 │Continuing.
[    1.622954] ata2.00: configured for MWDMA2                                   │
[    1.644048] scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ P5│Breakpoint 1, lkmc_timer_callback (data=0xffffffffc0002000 <mytimer>)
[    1.741966] tsc: Refined TSC clocksource calibration: 2904.010 MHz           │    at /linux-kernel-module-cheat//out/x86_64/buildroot/build/
[    1.742796] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29dc0f4s│kernel_modules-1.0/./timer.c:28
[    1.743648] clocksource: Switched to clocksource tsc                         │28      {
[    2.072945] input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8043│(gdb) bt
[    2.078641] EXT4-fs (vda): couldn't mount as ext3 due to feature incompatibis│#0  lkmc_timer_callback (data=0xffffffffc0002000 <mytimer>)
[    2.080350] EXT4-fs (vda): mounting ext2 file system using the ext4 subsystem│    at /linux-kernel-module-cheat//out/x86_64/buildroot/build/
[    2.088978] EXT4-fs (vda): mounted filesystem without journal. Opts: (null)  │kernel_modules-1.0/./timer.c:28
[    2.089872] VFS: Mounted root (ext2 filesystem) readonly on device 254:0.    │#1  0xffffffff810ab494 in call_timer_fn (timer=0xffffffffc0002000 <mytimer>,
[    2.097168] devtmpfs: mounted                                                │    fn=0xffffffffc0000000 <lkmc_timer_callback>) at kernel/time/timer.c:1326
[    2.126472] Freeing unused kernel memory: 1264K                              │#2  0xffffffff810ab71f in expire_timers (head=<optimized out>,
[    2.126706] Write protecting the kernel read-only data: 16384k               │    base=<optimized out>) at kernel/time/timer.c:1363
[    2.129388] Freeing unused kernel memory: 2024K                              │#3  __run_timers (base=<optimized out>) at kernel/time/timer.c:1666
[    2.139370] Freeing unused kernel memory: 1284K                              │#4  run_timer_softirq (h=<optimized out>) at kernel/time/timer.c:1692
[    2.246231] EXT4-fs (vda): warning: mounting unchecked fs, running e2fsck isd│#5  0xffffffff81a000cc in __do_softirq () at kernel/softirq.c:285
[    2.259574] EXT4-fs (vda): re-mounted. Opts: block_validity,barrier,user_xatr│#6  0xffffffff810577cc in invoke_softirq () at kernel/softirq.c:365
hello S98                                                                       │#7  irq_exit () at kernel/softirq.c:405
                                                                                │#8  0xffffffff818021ba in exiting_irq () at ./arch/x86/include/asm/apic.h:541
Apr 15 23:59:23 login[49]: root login on 'console'                              │#9  smp_apic_timer_interrupt (regs=<optimized out>)
hello /root/.profile                                                            │    at arch/x86/kernel/apic/apic.c:1052
# insmod /timer.ko                                                              │#10 0xffffffff8180190f in apic_timer_interrupt ()
[    6.791945] timer: loading out-of-tree module taints kernel.                 │    at arch/x86/entry/entry_64.S:857
# [    7.821621] 4294894248                                                     │#11 0xffffffff82003df8 in init_thread_union ()
[    8.851385] 4294894504                                                       │#12 0x0000000000000000 in ?? ()
                                                                                │(gdb)
``
{title=Terminal dump of a LKMC session with two \x[tmux] panes with \x[qemu] on left and \x[gdb] on right showing a backtrace of the Linux kernel code currently being under QEMU.}

= Ciro Santilli's Stack Overflow contributions
{parent=the-most-important-projects-done-by-ciro-santilli}
{c}

https://stackoverflow.com/users/895245

\Image[https://stackoverflow.com/users/flair/895245.png?theme=dark]
{title=Ciro Santilli's amazing \x[stack-overflow] profile.}
{height=58}

\x[ciro-santilli]'s \x[stack-overflow] contributions have, unsurprisingly, centered around the subjects he has worked with: \x[systems-programming] and \x[web-development], and necessary tooling to get those done, such as \x[git], \x[python], \x[bash] and \x[ubuntu].

His best answers are listed at: \x[articles]{full}.

Stack Overflow has been the initial centerpiece of \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china].

In Stack Overflow Ciro likes to:
* answer important questions found through \x[google] which he needs to solve an actual problem he has right now, and for which none of the existing answers satisfied him, and close duplicates.
* monitor less known tags which very few people know a lot about and where the knowledge sharing desperately lacking, but in which Ciro specializes and therefore has some uncommon knowledge to share

In practice it also happens that Ciro:
* Googles for his own answers to remember some detail he wrote down but with slightly different terms that were closer to mind at the time, and find other similar questions for which he has the perfect answer.
* learns something new by chance, e.g. https://stackoverflow.com/questions/39933567/deduce-stdarray-size/61371303#61371303[some new flashy feature of a new version of the C++ standard], thiks \x[the-machiavellian-stack-overflow-contributor]["this is awesome, there must be a Stack Overflow question for it"], and then there is a question and he answers it

When he gets an upvote on one of his more obscure answers, Ciro often re-reads it, and often finds improvements to be made and makes them.

He doesn't like to refresh the homepage looking for easy reputation on widely known subjects. See also: \x[online-forums-that-lock-threads-after-some-time-are-evil].

For this reason, https://stackoverflow.com/help/badges/17/necromancer[Necromancer] is Ciro's favorite badge (get 5 upvotes on a question older than 60 days), and as of July 2019, https://data.stackexchange.com/stackoverflow/query/300735/users-with-most-necromancer-badges-at-a-given-date?Date=2019-07-15[he became the #1 user with the most of this badge]. Announcement https://twitter.com/cirosantilli/status/1146157392343785474[on Twitter].

The number two at the time was https://stackoverflow.com/users/6309[VonC], who had about 16 times more answers than Ciro in total! From this query: https://data.stackexchange.com/stackoverflow/query/1072396?&Date=2019-07-01&UserId=895245 it can be seen that as of July 2019, 1216 out of his 1329 answers were answered 60 days after the questions and constitute potential necromancers! Compare that to VonC's 1643 potential necromancers out of 21767 answers!

In terms of per \x[year] reputation ranks, Ciro was in the top 100 in of the 2018 ranking with 38,710 reputation gained in that year: https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange&page=4 (http://web.archive.org/web/20191013085259/https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange&page=4[archive]). Note that daily reputation is mostly capped to \x[stack-overflow-maximum-200-daily-reputation-limit][200 per day], leading to a maximum 73000 per year. It is possible to overcome this limit either with bounties or accepts, and Ciro finds it amazing that some people actually break the 73k limit by far with accepts, e.g. \x[gordon-linoff] reached https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange[135k in 2018] (https://web.archive.org/web/20191013090451/https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange[archive])! However, this is something that Ciro will never do, because it implies answering thousands and thousands of useless semi duplicate questions as fast as possible to get the accept. Ciro's reputation comes purely from upvotes on important question, and is therefore sustainable without any extra effort once achieved. Interestingly, Ciro appeared on top of the quarter SE rankings around 2019-11: http://web.archive.org/web/20191112100606/https://stackexchange.com/leagues but it was https://meta.stackexchange.com/questions/337643/mismatch-between-the-top-users-in-the-stack-exchange-league-and-period-wise-repo[just a bug] ;-)

There is no joy like answering an old question, and watching your better answer go up little by little until it dominates all others.

Stack Overflow reputation is of course, in itself, meaningless. People who contribute to popular subjects like web development will always have infinitely more reputation than those that contribute to https://stackoverflow.com/questions/37879954/how-to-write-an-integer-to-stdout-as-hexadecimal-in-vhdl[low level subjects].

What happens on the specialized topics though is that you end up getting to know all the 5 users who contribute 95% of the content pretty soon as you study those subjects.

Like everything that man does, the majority of Ciro's answers are more or less superficial subjects that many people know but few have the patience to explain well, or they are updates to important questions \x[the-machiavellian-stack-overflow-contributor][reflecting upstream developments]. But as long as they save 15 minutes from someone's life, that's fine.

For example, Ciro's most upvoted answer as of July 2019 is https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies/22004559#22004559 was written when he spent his first week playing with NodeJS (he was having a look at \x[overleaf], later merged into https://www.overleaf.com/[Overleaf], for \x[write-free-books-to-get-famous-website][education]), which he didn't touch again for several years, and still hasn't "mastered" as of 2019! This did teach a concrete life lesson to Ciro however: it is impossible to know what is the most useful thing you can do right now very precisely. The best bet is to follow your instincts and do as much awesome stuff as you can, and then, with some luck, some of those attempts will cover an use case.

Ciro tends to take most pride on his systems programming answers, which is a subject that truly relatively few people know about.

Ciro also derives great joy from his "media related answers" (3D graphics, audio, video), which are immensely fun to write, and sometimes borderline \x[art], see answers such as those under "OpenGL" and "Media" under \x[articles] or even simpler answers such as:
* https://askubuntu.com/questions/648603/how-to-create-an-animated-gif-from-mp4-video-via-command-line/837574#837574[How to create an animated GIF from MP4 video via command line?]

  \Image[STS-132_Liftoff_Space_Shuttle_Atlantis_512x.gif]
  {title=\x[ciro-santilli][Ciro] knows https://askubuntu.com/questions/648603/how-to-create-an-animated-gif-from-mp4-video-via-command-line/837574#837574[how to convert videos to GIFs].}
* https://unix.stackexchange.com/questions/82112/stereo-tone-generator-for-linux/536860#536860[Stereo "tone-generator" for linux?]

Ciro's deep understanding of Stack Overflow mechanisms and its shortcomings also helped shape his ideas for: \x[write-free-books-to-get-famous-website]. So it is a bit funny to think that after all time Ciro spent on the \x[website], he actually wants to destroy it and replace it with something better. There can be no innovation without some damage. It also led to Ciro's creation of \x[stack-overflow-vote-fraud-script].

After answering so many questions, he ended up converging to a more or less consistent style, which he formalized at: https://meta.stackexchange.com/questions/18614/style-guide-for-questions-and-answers/326746#326746 Like any other style guide, this answer style guide, once fully incorporated and memorized, allows Ciro to write answers faster, without thinking about formatting issues.

Ciro also made a question title style guide: https://meta.stackexchange.com/questions/10647/how-do-i-write-a-good-title/311903#311903 but for some reason the Stack Overflow community prefers their semi-defined title meta-language to proper English. Go figure.

Ciro started contributing to Stack Overflow in 2012 when he was at \x[ecole-polytechnique].

Like all things that end up shaping the course of one's life, Ciro started contributing without thinking too much about it.

His first answer was to the LaTeX question: https://stackoverflow.com/questions/2701902/standalone-diagrams-with-tikz/9177804#9177804[Standalone diagrams with TikZ?], which reflects the fact that this happened while Ciro was reaching his \x[write-free-books-to-get-famous-website/motivation][open source Enlightenment].

Ciro's first upvote was for his 2012 question: https://stackoverflow.com/questions/10002291/how-to-run-a-python-script-portably-without-specifying-its-full-path[How to run a Python script portably without specifying its full path?]

When he started contributing, Ciro was still a newbie. One early event he will never forget was when someone mentioned a "man page", and Ciro commented saying that there was a typo!

When Ciro reached 15 points and gained the ability to upvote, it felt like a major milestone, he even took a screenshot of the browser! 1k, 10k and 100k were also particularly exciting. When the https://meta.stackoverflow.com/questions/291791/what-do-i-get-with-100k-reputation[100k cup] (https://web.archive.org/web/20160528230715/https://meta.stackoverflow.com/questions/291791/what-do-i-get-with-100k-reputation[archive]) arrived in 2018, Ciro made a https://www.facebook.com/photo.php?fbid=1879889632030375[show-off Facebook post] (https://web.archive.org/web/20191020194239/https://www.facebook.com/photo.php?fbid=1879889632030375[archive]). At some point though, your brain stops caring, and automatically filters out any upvotes you get except on the answers that you are really proud of and which don't yet have lots of upvotes. The last remaining useless gamed achievement that Ciro looked forward to was https://stackoverflow.com/help/badges/146/legendary[legendary] (https://web.archive.org/web/20191014113759/https://stackoverflow.com/help/badges/146/legendary[archive]), and which he https://stackoverflow.com/help/badges/146/legendary?userid=895245[achieved on 2021-02-16].

\Image[Ciro_Santilli_with_his_Stack_Overflow_100k_reputation_cup.jpg]
{title=\x[ciro-santilli] with his \x[stack-overflow] 100k reputation cup.}

From the start, Ciro's motivations for contributing to Stack Overflow have been a virtuous circle of:
* save the world through \x[write-free-books-to-get-famous-website/motivation][free education]
* \x[ciro-santilli-s-selfish-desires][become famous]

  It feels especially amazing when people in the real world start taking note of you, and either close friends tell you straight out that you're a Stack Overflow God, or as you slowly and indirectly find out that less close know or came to you due to your amazing contributions.

It is also amazing when you start having a repertoire of answers, and as you are writing a new answer, you remember: "hey, the knowledge of that answer would be so welcome here", and so you link to the other answer as well at the perfect point. This somewhat achieves does what \x[write-free-books-to-get-famous-website] aims to do: for each small section of a tutorial, gather the best answers by multiple people.

Ciro feels that his Stack Overflow \x[ciro-santilli-s-e-soulmates][alter ego] is the user https://stackoverflow.com/users/55075/kenorb[kenorb], which has a surprisingly similar contribution pattern (one of the top necromancers) and subjects (Python, Bash). Ciro tried to contact him to say hi, but it was hard to find a contact. kenorb, feel free to send Ciro a hi one of those days.

Another one is https://stackoverflow.com/users/541136/aaron-hall[Aaron Hall], who is also very high on the necromancer list, answers in Python which is a topic Ciro cares about, and https://web.archive.org/web/20200120043703/https://stackoverflow.com/users/541136/aaron-hall[states on his profile]:
\Q[Follow me on Twitter and tell me what canonical questions you would like me to respond to!]
so another necromancer.

Way to go.

Ciro also https://stackoverflow.com/users/895245/?tab=questions[asks some questions] on a ratio of about 1 question per 10 answers. But Ciro's questions tend to be about extremely niche that no one knows/cares about, and a high percentage of them ends up getting self answered either at asking time or after later research.

= Ciro Santilli's campaign for freedom of speech in China
{c}
{parent=the-most-important-projects-done-by-ciro-santilli}

= github.com/cirosantilli/china-dictatorship
{c}
{id=cirosantilli-china-dictatorship}
{synonym}
{title2}

https://github.com/cirosantilli/china-dictatorship

Since 2015 \x[ciro-santilli] has carried out a campaign to promote \x[freedom-of-speech] in \x[china].

The campaign has centered around https://github.com/cirosantilli/china-dictatorship/tree/714d8104549ea19714787f148ff93c7403fd120c#why-keyword-attack[publishing censored keywords] on his \x[stack-overflow] username, thus using his \x[ciro-santilli-s-stack-overflow-contributions][considerable Stack Overflow presence] to sabotage the website in China. Here is an early http://web.archive.org/web/20150602004401/https://stackoverflow.com/users/895245/ciro-santilli-%e5%85%ad%e5%9b%9b%e4%ba%8b%e4%bb%b6-%e6%b3%95%e8%bd%ae%e5%8a%9f-%e7%ba%b3%e7%b1%b3%e6%af%94%e4%ba%9a%e8%83%a1%e6%b5%b7%e5%b3%b0[web archive].

\Image[Chrysanthemum_Xi_Jinping_with_black_red_liusi_added_by_Ciro_Santilli.jpg]
{title=https://www.independent.co.uk/news/world/asia/chinese-artist-who-posted-funny-image-of-president-xi-jinping-facing-five-years-in-prison-as-10282630.html[Chrysanthemum Xi Jinping] with https://en.wikipedia.org/wiki/1989_Tiananmen_Square_protests[六四] spice added by \x[ciro-santilli].}
{description=This was one of the profile pictures that \x[ciro-santilli] used as part of his campaign.}
{height=230}
{id=image-xi-jinping-chrysanthemum-230-liusi}

Like most people in the West, Ciro has always been for political freedom of speech, and therefore against the \x[chinese-government]'s policies.

However, the seriousness of the matter only fully dawned on him in 2015 when, his mother-in-law, a then a 63-year-old lady, https://github.com/cirosantilli/china-dictatorship/https://github.com/cirosantilli/china-dictatorship/tree/f2ba65accdfb51c8028aa9d4e37e9fe26400f0dc#jail-post[was put into jail for 15 days for doing Falun Gong].

And all of this was made 100 times worse because Ciro deeply loves several aspects of China, such as food, language, art and culture, and saw it all being destroyed by the Communists: https://cirosantilli.com/china-dictatorship/does-ciro-santilli-hate-china

The rationale of this is to force the Chinese Government to either:
* leave things as they are, and let censored keywords appear on Stack Overflow (most likely scenario)
* block Stack Overflow, and lose billions of dollars with worse IT technology
* disable the Great Firewall

In the beginning, this https://github.com/cirosantilli/china-dictatorship/tree/236407528ab6424504e442e070d632496c110087#backlinks-to-this-repository[generated some commotion], but activity reduced as novelty wore off, and as he collected the reply to all possible comments at: https://github.com/cirosantilli/china-dictatorship.

This campaign has led him to have an insane profile view/reputation ratio, since many people pause to look at his profile. He is point "A" at the top right corner of \x[image-scatter-plot-of-stack-overflow-user-reputation-vs-profile-views-in-march-2019-with-ciro-santilli-marked-as-a]{full}:
\Image[Scatter_plot_of_Stack_Overflow_user_reputation_vs_profile_views_in_March_2019_with_Ciro_Santilli_marked_as_A.png]
{title=Scatter plot of \x[stack-overflow] user reputation vs profile views in March 2019 with \x[ciro-santilli] marked as A.}
{description=The A is towards the top right corner.}
{height=500}

Ciro feels that the view count started increasing more slowly since 2020 compared to his reputation, likely every single Chinese user has already viewed the profile.

Further analysis has been done at: https://stats.stackexchange.com/questions/376361/how-to-find-the-sample-points-that-have-statistically-meaningful-large-outlier-r

\Image[Ciro_Santilli_with_a_stone_carved_Budai_in_the_Feilai_Feng_caves_near_the_Lingyin_Temple_in_Hangzhou_in_2012.jpg]
{title=\x[ciro-santilli] with a stone carved https://en.wikipedia.org/wiki/Budai[Budai] in the https://en.wikipedia.org/wiki/File:Maitreya_and_disciples_carving_in_Feilai_Feng_Caves.jpg[Feilai Feng caves] near the https://en.wikipedia.org/wiki/Lingyin_Temple[Lingyin Temple] in Hangzhou taken during his legendary 2012 touristic trip to China.}
{description=Will he ever be able to go to China again to re-experience such marvelous locations?}

= Ciro Santilli's minor projects
{parent=the-most-important-projects-done-by-ciro-santilli}
{c}

Major projects can be seen at: \x[the-most-important-projects-done-by-ciro-santilli]{full}.

These are some smaller projects that \x[ciro-santilli] carried out. They are all either for fun, or misguided use of his time done by an younger self:
* Naughty stuff. Ciro likes \x[ciro-santilli-s-self-perceived-creative-personality][being naughty]:
  * \x[stack-overflow-vote-fraud-script]
  * \x[github] makes Ciro feel especially naughty:
    * \x[all-github-commit-emails]: he extracted (almost) all Git commit emails from \x[github] with \x[google] BigQuery
    * \x[facebook-profile-face-dump]
    * https://github.com/cirosantilli/test-many-commits-1m/[A repository with 1 million commits]: likely the https://www.quora.com/Which-GitHub-repo-has-the-most-commits/answer/Ciro-SantilliI[live repo with the most commits as of 1017]
    * https://stackoverflow.com/questions/20099235/who-is-the-user-with-the-longest-streak-on-github/27742165#27742165[An 100 year GitHub streak], likely longest ever when that existed. It was consuming too much server resources however, which led to GitHub admins manually https://web.archive.org/web/20151021135921/https://github.com/cirosantilli/[turning off his contribution history].
    * https://github.com/cirosantilli/test-octopus-100k[A repository with a 100k commit Git octopus merge]. Now that is a true https://softwareengineering.stackexchange.com/questions/314215/can-a-git-commit-have-more-than-2-parents/377903#377903[Cthulhu merge].
    * https://github.com/isaacs/github/issues/1718[500 on adoc infinite header xref recursion]: that was fun while it lasted
* Because Ciro \x[write-free-books-to-get-famous-website][cares about education], around 2014 he looked into markup languages and version control for books, before he noticed that this approach was useless and that ranking algorithms are all that matter:
  * \x[gitlab]: very important to Ciro because he wanted to base https://github.com/booktree/booktree[Booktree] on it.

    He was https://github.com/gitlabhq/gitlabhq/graphs/contributors?from=2013-01-01&to=2015-01-01&type=a[the number 2 contributor from 2013 to 2015].

    He implemented some large features and several smaller improvements.

    For this reason, Ciro was made a moderator of https://www.reddit.com/r/gitlab[/r/gitlab] in https://web.archive.org/web/20160524164714/https://www.reddit.com/r/gitlab/about/moderators[2016-05].

    GitLab sent Ciro a free swag bottle later after they got funding on to thank him for his contributions: \x[image-ciro-santilli-in-a-dune-lake-in-jericoacoara-brazil-with-his-gitlab-bottle]{full}. He had to pay for the beach trip though.

    \Image[Ciro_Santilli_in_a_dune_lake_in_Jericoacoara,_Brazil_with_his_GitLab_bottle.jpg]
    {height=300}
  * \a[markdown-style-guide][Markdown Style Guide]{check=0}
  * \x[karlcow-markdown-testsuite] improvements: Ciro has implemented the test runner a few months before CommonMark left stealth mode and killed it instantaneously.

    At least MacFarlane was able to https://github.com/jgm/CommonMark/blob/2528c87c0cf08e02eb3e201c149cb3acf521e0c8/test/normalize.py#L8[reuse] part of the \x[html] normalizer https://github.com/karlcow/markdown-testsuite/blame/639cd234d71ca81956b61ff7876f37c3cdc5c043/run-tests.py[he wrote], and he extracted the multi-engine comparison to: https://github.com/cirosantilli/commonmark-implementation-compare[CommonMark Implementation Compare].

    Playing with this project has led Ciro to find and report many Markdown bugs/bad behavior on other software, e.g. https://github.com/isaacs/github/issues/297[GitHub] and https://github.com/fletcher/MultiMarkdown-4/issues/68[MultiMarkdown-4].
  * https://github.com/isaacs/github[isaacs/github public unofficial GitHub issue tracker]: he has commented there so often that he https://github.com/isaacs/github/issues/430#issuecomment-123851480[was made a collaborator]
* \x[vim][Vim]: sometimes Ciro want crazy and wasted his time with Vimscript:
  * https://github.com/plasticboy/vim-markdown[Vim Markdown]: the owner `plasticboy` was really nice and made Ciro a collaborator for his contributions, notably a live ToC outline and the header mappings
  * https://github.com/cirosantilli/vundle-plugin-tester[Vundle Plugin Tester], which he used to start the testing system of Vim Markdown
* https://github.com/cirosantilli/breakthrough-message[Breakthrough Message]: \x[alien]{p}!!! Creative/media project, powered by some \x[python] scripts.
* making \x[google-maps] reviews of places he's visited to help other people. Ciro's photos reached 1 million views in 2019: https://www.google.com/maps/contrib/106598607405640635523/photos (http://web.archive.org/web/20190905081800/https://www.google.com/maps/contrib/106598607405640635523/photos[archive])

= The most important projects Ciro Santilli wants to do
{parent=ciro-santilli}

These are projects which Ciro seriously considering doing, and which he believe could have a considerable impact in the world, given a few months of work.

They are sorted in order of "most likely to get done first".

Top one: \x[write-free-books-to-get-famous-website]{child}

= Write free books to get famous website is number one
{c}
{parent=the-most-important-projects-ciro-santilli-wants-to-do}

Actual section at: \x[write-free-books-to-get-famous-website]{full}

= Large cohesive game world for robotic-like artificial intelligence development
{parent=the-most-important-projects-ciro-santilli-wants-to-do}

Prototype: https://github.com/cirosantilli/Urho3D-cheat

Prior art research: https://github.com/cirosantilli/awesome-reinforcement-learning-games

\Video[https://youtube.com/watch?v=j_fl4xoGTKU]
{title="Top Down 2D Continuous Game with \x[urho3d] \x[c-plus-plus] \x[simple-directmedia-layer][SDL] and Box2D for Reinforcement Learning" by \x[ciro-santilli] (2018)}

\Image[Basketball_stage_of_Ciro_Santilli's_2D_continuous_AI_game.png]
{title=Screenshot of the basketball stage of Ciro's 2D continuous game.}
{description=Big kudos to \x[game-icons-net] for the sprites.}

Less good \x[discrete] prototype: https://github.com/cirosantilli/rl-game-2d-grid \x[youtube] demo: \x[video-top-down-2d-continuous-game-with-urho3d-c-plus-plus-sdl-and-box2d-for-reinforcement-learning-by-ciro-santilli-2018].

\Video[https://youtube.com/watch?v=TQ5k2u25eI8]
{title="Top Down 2D \x[discrete]{c} Tile Based Game with \x[c-plus-plus] \x[simple-directmedia-layer][SDL] and Boost R-Tree for Reinforcement Learning" by \x[ciro-santilli] (2017)}

The goal of this project is to reach \x[artificial-general-intelligence].

A few initiatives have created reasonable sets of robotics-like games for the purposes of AI development, most notably: \x[openai] and https://en.wikipedia.org/wiki/DeepMind[Google DeepMind].

However, all projects so far have only created sets of unrelated games, or worse: focused on closed games designed for humans!

What is really needed is to create a single cohesive game world, designed specifically for this purpose, and with a very large number of game mechanics.

Notably, by "game mechanic" is meant "a magic aspect of the game world, which cannot be explained by object's location and inertia alone". For example:
* when you press a button here, a door opens somewhere far away
* when you touch certain types of objects, a chemical reaction may happen, but not other types of objects

Much in the spirit of http://www.gvgai.net/[], we have to do the following loop:
* create an initial game
* find an AI that beats it well
* study the AI, and add a new mechanic that breaks the AI, but does not break a human!

The question then becomes: do we have enough computational power to simulation a game worlds that is analogous enough to the real world, so that our AI algorithms will also apply to the real world?

To reduce computation requirements, it is better to focus on a 2D world at first. Such world with the right mechanics can break any AI, while still being faster to simulate than a 3D world.

The initial prototype uses the Urho3D open source \x[game-engine], and that is a reasonable project, but a raw \x[simple-directmedia-layer] + Box2D + \x[opengl] solution from scratch would be faster to develop for this use case, since Urho3D has a lot of human-gaming features that are not needed, and because 2019 Urho3D lead developers https://github.com/cirosantilli/china-dictatorship/blob/23c5bd936361f78a8dd6bd1f412286808714d2da/communities-that-censor-politics.md[disagree with the China censored keyword attack].

Simulations such as these can be viewed as a form of https://en.wikipedia.org/wiki/Synthetic_data#Synthetic_data_in_machine_learning[synthetic data generation procedure], where the goal is to use computer worlds to reduce the costs of experiments and to improve reproducibility.

Related projects:
* https://github.com/deepmind/lab2d[]: 2D gridworld games, C++ with Lua bindings
* https://www.youtube.com/watch?v=MHFrhIAj0ME?t=4183 \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021] Part 1: Bloodshed on Wolf Mountain :)
* https://www.youtube.com/watch?v=EUjc1WuyPT8 AI Alignment: Why It's Hard, and Where to Start by \x[eliezer-yudkowsky] (2016). Alignment means aligning the \x[utility-function] of x 

\Video[https://youtube.com/watch?v=MvFABFWPBrw]
{title="DeepMind Has A Superhuman Level Quake 3 AI Team" ublished by Two Minute Papers (2018)}
{description=Commentary of https://en.wikipedia.org/wiki/DeepMind[Google DeepMind]'s 2019 https://deepmind.com/blog/article/capture-the-flag-science[Capture the Flag paper]. DeepMind does some similar simulations to what Ciro wants, but TODO do they publish source code for all of them? If not Ciro calls \x[bullshit] on non-reproducible research. Does https://github.com/deepmind/lab[this repo] contain everything?}

\Video[https://youtube.com/watch?v=Lu56xVlZ40M]
{title="OpenAI Plays Hide and Seek... and Breaks The Game!" by Two Minute Papers (2019)}
{description=Commentary of \x[openai][OpenAi]'s 2019 https://openai.com/blog/emergent-tool-use/[hide and seek] paper. OpenAI does some similar simulations to what Ciro wants, but TODO do they publish source code for all of them? If not Ciro calls bullshit on non-reproducible research, and even worse due to the fake "Open" in the name. Does https://github.com/openai/multi-agent-emergence-environments[this repo] contain everything?}

\Video[https://youtube.com/watch?v=nsVD8VPh96w]
{title="Simulating Foraging Decisions" by https://www.youtube.com/watch?v=YNMkADpvO4w[Primer YouTube channel] (2020)}
{description=This channel contains several 2D continuous simulations and explains AI techniques used. Notably, they have several interesting multiagent game ideas. TODO once again, are https://github.com/Helpsypoo/primer[all sources published]? Claims Unity based, so another downside, relying on non-\x[foss] engine. Ciro became mildly jealous of this channel when he found out about it, because at 800k subscribers at the time, the creator is likely able to make a living off of it, something which Ciro thought impossible. It hinges a large part of the amazing 3D game presentation, well done.}

= Videos of all key physics experiments
{parent=the-most-important-projects-ciro-santilli-wants-to-do}

It is unbelievable that you can't find easily on YouTube recreations of many of the key \x[physics]/\x[chemistry] experiments and of common laboratory techniques.

Experiments, the techniques required to to them, and the history of how they were first achieved, are the heart of the natural sciences. Without them, there is no motivation, no beauty, no nothing.

\x[school]{c} gives too much emphasis on the formulas. This is bad. Much more important is to understand how the experiments are done in greater detail.

The videos must be completely reproducible, indicating the exact model of every experimental element used, and how the experiment is setup.

A bit like what \x[ciro-santilli] does in his \x[ciro-santilli-s-stack-overflow-contributions][Stack Overflow contributions] but with computers, by indicating precise versions of his operating system, software stack, and hardware whenever they may matter.

It is understandable that some experiments are just to complex and expensive to re-create. As an extreme example, say, a precise description of the https://en.wikipedia.org/wiki/Large_Hadron_Collider[LHC] anyone? But experiments up to the mid-20th century before "https://en.wikipedia.org/wiki/Big_Science[big science]"? We should have all of those nailed down.

We should strive to achieve the cheapest most reproducible setup possible with currently available materials: recreating the original historic setup is \x[art][cute], but not a priority.

Furthermore, it is also desirable to reproduce the original setups whenever possible in addition to having the most convenient modern setup.

Lists of good experiments to cover be found at: \x[the-most-important-physics-experiments].

This project is to a large extent a political endeavour.

Someone with enough access to labs has to step up and make a name for themselves through the huge effort of creating a baseline of amazing content without yet being famous.

Until it reaches a point that this person is actively sought to create new material for others, and things snowball out of control. Maybe, if the Gods allow it, that person could be Ciro.

Tutorials with a gazillion photos and short videos are also equally good or even better than videos, see for example Ciro's \x[oxford-nanopore-river-bacteria]{c} for an example that goes toward that level of perfection.

The \x[applied-science-youtube-channel] does well in that direction.

This project is one step that could be taken towards improving the \x[replication-crisis] of \x[science]. It's a bit what \x[hackster-io] wants to do really. But that website is useless, just write \x[cirodown] and create videos instead :-)

TODO experiments to find videos for:
* \x[quantum-hall-effect]{child}

= Website front-end for a mathematical formal proof system
{parent=the-most-important-projects-ciro-santilli-wants-to-do}

When \x[ciro-santilli] first learnt the old \x[zermelo-fraenkel-set-theory] and the idea of \x[formal-proof]{p}, his teenager \x[mind-blown][mind was completely blown].

Finally, there it was: a proper and precise definition of \x[mathematics], including https://en.wikipedia.org/wiki/Set-theoretic_definition_of_natural_numbers[a definition of integers], reals and limits!

Theorems are strings, proofs are string manipulations, and axioms are the initial strings that you can use.

Once proved, press a button on your computer, and the proof is automatically verified. No messy complicated "group of savants" reading it for 4 years and looking for flaws!

There are a few formal proof systems with several theorems in their Git tracked standard library. The hottest ones are:
* https://github.com/HOL-Theorem-Prover/HOL[]
* https://github.com/seL4/isabelle[]. Rumours have it that this is "uncompilable" from source without \x[evil][blobs]. It does however offer a very rich \x[ide].
* https://github.com/coq/coq[]
* \x[metamath] this one is likely an older and less powerful system, but the web presentation and tutorial are very good! Source: https://github.com/metamath/metamath-exe Here is a proof that 2 + 2 equals 4: http://us.metamath.org/mpeuni/2p2e4.html
* https://en.wikipedia.org/wiki/Lean_(proof_assistant) | https://github.com/leanprover/lean | https://github.com/leanprover/lean4

And here are some more interesting links:
* https://github.com/awesomo4000/awesome-provable an awesome list of formal stuff
* https://devel.isa-afp.org/ Isabelle Archive of Formal Proofs. A curated list of Isabelle proofs, with minimal web UI. This is almost what we need, but without the manual curation, and with a better web UI.
* http://www.cs.ru.nl/~freek/100/ list of how many of the http://web.archive.org/web/20080105074243/http://personal.stevens.edu/~nkahl/Top100Theorems.html["Top 100 theorems"] had been proved in several formal systems.

However, as expressed by the \x[qed-manifesto], is unbelievable that there isn't one awesome and dominating website, that hosts all those proofs, possibly an on the browser editor, and which all mathematicians in the world use as the one golden reference of mathematics to rule them all!

Just imagine the impact.

Standard library maintainers don't have to deal with the impossible question of what is "beautiful" or "useful" enough mathematics to deserve merged: users just push content to the online database, and star what they like!

Interested in a conjecture? No problem: just subscribe to its formal statement + all known equivalents, and get an email on your inbox when it gets proved!

Are you a garage mathematician and have managed to prove a hard theorem, but no will will read your proof? \x[fuck]{c} that, just publish it on the system and let it get auto verified. Overnight fame awaits.

Notation incompatibility hell? A thing of the past, just automatically convert to your preferred representation.

Such a system would be the perfect companion to \x[write-free-books-to-get-famous-website]. Just like computer code offers the backbone of \x[linux-kernel-module-cheat] Linux kernel tutorials, a formal proof system website would be the backbone of mathematics tutorials! You know what, if \x[write-free-books-to-get-famous-website] becomes insanely sucessful, Ciro is going to add this to it later on.

Furthermore, it would not be too hard to achieve this system!

All we would need would be something analogous to a package registry like \x[pypi] or https://www.npmjs.com/[NodeJS' registry].

Then, each person can publish packages containing proofs.

Packages can rely on other packages that contain pre-requisites definition or theorem.

Packages are just regular git repos, with some metadata. One notable metadata would be a human readable description of the theorems the package provides.

The package registry would then in addition to most package registries have a CI server in it, that checks the correctness of all proofs, generates a web-page showing each theorem.

All proofs can be conditional: the package registry simply shows clearly what axiom set a theorem is based on.

This is a close as we can get to https://en.wikipedia.org/wiki/Proofs_from_THE_BOOK[Erdős' book].

Maybe Ciro will just stuff this into \x[write-free-books-to-get-famous-website] once that takes over the world.

Bibliography:
* https://math.stackexchange.com/questions/1767070/what-is-the-current-state-of-formalized-mathematics/3297536#3297536
* https://stackoverflow.com/questions/19421234/how-do-i-generate-latex-from-isabelle-hol
* https://stackoverflow.com/questions/30152139/what-are-the-strengths-and-weaknesses-of-the-isabelle-proof-assistant-compared-t

= The next big thing
{parent=ciro-santilli}

If you are going to live, you might as well chase one of them.

You might not achieve them in your lifetime, but you never know. At some point, the pieces just "fall into place", and they happen.

And they will all come from \x[deep-tech].

\x[ciro-santilli] would like to contribute to them. but this is a bit less realistic \x[the-most-important-projects-ciro-santilli-wants-to-do][than software projects].

But who knows? Maybe he can code some stuff in those areas.

And one can at least have some fun by learning deeply about those subjects.

= Molecular biology technologies
{parent=the-next-big-thing}

See also: https://github.com/cirosantilli/awesome-whole-cell-simulation

As of 2019, \x[moore-s-law][the silicon industry is ending], and \x[molecular-biology] technology is one of the most promising and growing \x[deep-tech][field of engineering].

\Image[https://web.archive.org/web/20191008120152im_/https://www.karlrupp.net/wp-content/uploads/2018/02/42-years-processor-trend-625x396.png]
{title=42 years of \x[microprocessor] trend data by Karl Rupp.}
{description=Only transistor count increases, which also pushes core counts up. But what you gonna do when atomic limits are reached? The separation between two silicon atoms is https://www1.columbia.edu/sec/itc/ee/test2/pdf%20files/silicon%20basics.pdf[0.23nm] and 2019 technology https://en.wikipedia.org/wiki/5_nanometer[is at 5nm] scale.}
{source=https://www.karlrupp.net/2018/02/42-years-of-microprocessor-trend-data/}

Such advances could one day lead to both \x[unconditional-basic-income][biological super-AGI and immortality].

\x[ciro-santilli] is especially excited about \x[dna]-related technologies, because DNA is the centerpiece of biology, and it is programmable.

First, during the 2000's, the cost of \x[dna-sequencing] fell to about 1000 USD per genome in the end of the 2010's: \x[image-cost-per-genome-vs-moore-s-law-from-2000-to-2019]{full}, largely due to \x[illumina]["Illumina's" technology].

The medical consequences of this revolution are still trickling down towards medical applications of 2019, inevitably, but somewhat slowly due to tight privacy control of medical records.

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/Cost_per_Genome.png/1024px-Cost_per_Genome.png]
{title=Cost per genome vs Moore's law from 2000 to 2019.}

\x[ciro-santilli] predicts that when the 100 dollar mark is reached, \i[every] person of the https://en.wikipedia.org/wiki/First_World[First world] will have their genome sequenced, and then medical applications will be closer at hand than ever.

But even 100 dollars is not enough. Sequencing power is like computing power: humankind can \i[never] have enough. Sequencing is not a one per person thing. For example, as of 2019 tumors are already being sequenced to help understand and treat them, and scientists/doctors will sequence as many tumor cells as budget allows.

Then, in the 2010's, https://en.wikipedia.org/wiki/CRISPR_gene_editing[CRISPR/Cas9 gene editing] started opening up the way to actually modifying the genome that we could now see through sequencing.

What's next?

Ciro believes that the next step in the revolution could be could be: \x[de-novo-dna-synthesis].

This technology could be the key to the one of the ultimate dream of biologists: cheap https://pubs.acs.org/doi/pdfplus/10.1021/acssynbio.6b00213[programmable biology] with push-button \x[species-bootstrapping-from-dna][organism bootstrap]!

Just imagine this: at the comfort of your own garage, you take some \x[model-organism] of interest, maybe start humble with \x[escherichia-coli]. Then you modify its DNA to your liking, and upload it to a 3D printer sized machine on your workbench, which automatically synthesizes the DNA, and injects into a bootstrapped cell.

You then make experiments to check if the modified cell achieves your desired new properties, e.g. production of some protein, and if not reiterate, just like a \x[software-engineer].

Of course, even if we were able to do the bootstrap, the \x[debugging] process then becomes key, as visibility is the key limitation of \x[biology], maybe we need other cheap technologies to come in at that point.

This a place point we see the beauty of evolution the brightest: evolution does not require observability. But it also implies that if your changes to the organism make it less fit, then your mutation will also likely be lost. This has to be one of the considerations done when designing your organism.

Other cool topic include:
* \x[computational-biology]: simulations of cell \x[metabolism], \x[protein] and small molecule, including \x[computational-protein-folding] and \x[chemical-reaction]{p}. This is basically the simulation part of \x[omics].

  If we could only simulate those, we would basically "solve molecular biology". Just imagine, instead of experimenting for a hole year, the \x[2021-nobel-prizes-in-physiology-and-medicine] could have been won from a few hours on a supercomputer to determine which protein had the desired properties, using just \x[dna-sequencing] as a starting point!
* \x[microscopy]: crystallography, \x[cryoem]
* analytical chemistry: mass spectroscopy, \x[single-cell-analysis] (Single-cell RNA sequencing)

It's weird, cells feel a lot like \x[linux-kernel-module-cheat][embedded systems]: small, complex, hard to observe, and profound.

Ciro is sad that by the time he dies, humanity won't have understood the \x[human-brain], maybe not even a measly \x[escherichia-coli]... Heck, even key molecular biology events are not yet fully understood, see e.g. https://en.wikipedia.org/wiki/Transcription_(biology)[transcription regulation].

One of the most exciting aspects of \x[molecular-biology-technologies] is their relatively low entry cost, compared for example to other areas such as \x[fusion-energy] and \x[quantum-computing].

= Quantum computing could be the next big thing
{parent=the-next-big-thing}

As of 2020, \x[ciro-santilli] is getting excited about \x[quantum-computing], which is a \x[deep-tech] field.

He's a bit lazy to explain why here, but Googling will be more than enough.

There is a risk it will fizzle and the bubble pop, like any revolution.

But recent developments are making it too exciting to ignore.

= Brain-computer interfaces could be the next big thing
{parent=the-next-big-thing}

Main article: \x[brain-computer-interface]{parent}.

This is one of the \x[deep-tech] bets that \x[ciro-santilli] would put his money in as of 2020.

How hard could it be? You just have to learn the encoding of the neural spine/eyes/ear, add an invasive device that multiplexes it, and then \x[the-matrix-1999][the benefits could be mind blowing].

\x[neuralink][Musk approves].

Interestingly and obviously, the initial advances in the area are happening for people that have hearing or vision difficulties. Since they already have a deficient sense, you don't lose that much by a failed attempt.

Hearing is likely to be the first since it feels the simplest. Ciro heard there are even already clinical applications there. TODO source.

= Fusion power could be the next big thing
{parent=the-next-big-thing}

Main section: \x[fusion-power].

This is a long haul. But we have to give it a shot.

= The best articles by Ciro Santilli
{id=articles}
{parent=ciro-santilli}

These are the best articles ever authored by \x[ciro-santilli], most of them in the format of \x[stack-overflow] answers.

Ciro posts update about new articles \x[ciro-santilli-s-twitter-accounts][on his Twitter accounts].

Some random generally less technical in-tree essays will be present at: \x[essays-by-ciro-santilli]{full}.

* Trended on \x[hacker-news]:
  * https://github.com/cirosantilli/x86-bare-metal-examples[x86 Bare Metal Examples] on https://news.ycombinator.com/item?id=19428700[2019-03-19]. The third time something related to that repo trends. Hacker news people really like that repo!
    * again https://news.ycombinator.com/item?id=27654257[2020-06-27] (https://web.archive.org/web/20210627201918/https://news.ycombinator.com/[archive]). 200 points, repository traffic jumped from 25 daily unique visitors to 4.6k unique visitors on the day
  * https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545[How to run a program without an operating system?] on https://news.ycombinator.com/item?id=18531393[2018-11-26] (https://web.archive.org/web/20181126123625/https://news.ycombinator.com[archive]). Covers x86 and ARM
  * \x[elf-hello-world]{child} on https://news.ycombinator.com/item?id=14359159[2017-05-17] (https://web.archive.org/web/20170517174951/https://news.ycombinator.com/news[archive])
  * \x[x86-paging]{child} on https://news.ycombinator.com/item?id=13773219[2017-03-02]. Number 1 \x[google] search result for "x86 Paging" https://archive.is/VUSNt[in 2017-08].

    \Image[BIOS_bare_metal_hello_world_running_on_a_Lenovo_ThinkPad_T430.jpg]
    {title=BIOS bare metal hello world running on a \x[lenovo] \x[thinkpad] T430.}
    {source=https://stackoverflow.com/questions/22054578/how-to-run-a-program-without-an-operating-system/32483545#32483545}
* \x[x86] \x[assembly-language][assembly]
  * https://stackoverflow.com/questions/980999/what-does-multicore-assembly-language-look-like/33651438#33651438[What does “multicore” assembly language look like?]
  * https://stackoverflow.com/questions/4584089/what-is-the-function-of-the-push-pop-instructions-used-on-registers-in-x86-ass/33583134#33583134[What is the function of the push / pop instructions used on registers in x86 assembly?] Going down to memory spills, register allocation and graph coloring.
* \x[linux-kernel]
  * https://unix.stackexchange.com/a/219674/32558[What do the flags in /proc/cpuinfo mean?]
  * https://stackoverflow.com/a/31394861/895245[How does kernel get an executable binary file running under linux?]
  * https://stackoverflow.com/questions/11408041/how-to-debug-the-linux-kernel-with-gdb-and-qemu/33203642#33203642[How to debug the Linux kernel with GDB and QEMU?]
  * https://stackoverflow.com/questions/33852690/can-the-sys-execve-system-call-in-the-linux-kernel-receive-both-absolute-or-re/42290593#42290593[Can the sys_execve() system call in the Linux kernel receive both absolute or relative paths?]
  * https://stackoverflow.com/questions/5957570/what-is-the-difference-between-the-kernel-space-and-the-user-space/44285809#44285809[What is the difference between the kernel space and the user space?]
  * https://stackoverflow.com/questions/5748492/is-there-any-api-for-determining-the-physical-address-from-virtual-address-in-li/45128487#45128487[Is there any API for determining the physical address from virtual address in Linux?]
  * https://stackoverflow.com/questions/2429511/why-do-people-write-the-usr-bin-env-python-shebang-on-the-first-line-of-a-pyt/40938801#40938801[Why do people write the `#!/usr/bin/env` python shebang on the first line of a Python script?]
  * https://askubuntu.com/questions/41930/kernel-panic-not-syncing-vfs-unable-to-mount-root-fs-on-unknown-block0-0/1048477#1048477[How to solve "Kernel Panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)"?]
  * https://unix.stackexchange.com/questions/5518/what-is-the-difference-between-the-following-kernel-makefile-terms-vmlinux-vml/482978#482978[What is the difference between the following kernel Makefile terms: vmLinux, vmlinuz, vmlinux.bin, zimage & bzimage?]

    \Image[Path_from_init_main.c_until_bzImage_in_the_Linux_kernel_4.19.jpg]
    {title=Path from init/main.c until bzImage in the Linux kernel 4.19.}
    {source=https://unix.stackexchange.com/questions/5518/what-is-the-difference-between-the-following-kernel-makefile-terms-vmlinux-vml/482978#482978}
    {height=600}
  * Single program Linux distro
    * https://unix.stackexchange.com/questions/17122/is-it-possible-to-install-the-linux-kernel-alone/200572#200572[Is it possible to install the linux kernel alone?]
    * https://unix.stackexchange.com/questions/122717/how-to-create-a-custom-linux-distro-that-runs-just-one-program-and-nothing-else/238579#238579[How to create a custom Linux distro that runs just one program and nothing else?]

      \Image[End_of_Linux_boot_log_with_minimal_init_that_prints_FOOBAR.png]
      {source=https://unix.stackexchange.com/questions/122717/how-to-create-a-custom-linux-distro-that-runs-just-one-program-and-nothing-else/238579#238579}
* \x[qemu]
  * https://stackoverflow.com/questions/28315265/how-to-add-a-new-device-in-qemu-source-code/44612957#44612957[How to add a new device in QEMU source code?]
  * https://askubuntu.com/questions/281763/is-there-any-prebuilt-qemu-ubuntu-image32bit-online/1081171#1081171[How to generate Ubuntu `debootstrap` disk images for QEMU?]
  * https://stackoverflow.com/questions/10949169/how-to-create-a-multi-partition-sd-image-without-root-privileges/52850819#52850819[How to create a multi partition SD disk image without root privileges?]
  * https://askubuntu.com/questions/884534/how-to-run-ubuntu-desktop-on-qemu/1046792#1046792[How to run Ubuntu desktop on QEMU?]

    \Image[https://i.stack.imgur.com/IPUkA.png]{height=400}
    {title=Ubuntu running inside QEMU.}
    {source=https://askubuntu.com/questions/884534/how-to-run-ubuntu-desktop-on-qemu/1046792#1046792}
* GCC
  * https://stackoverflow.com/questions/3322911/what-do-linkers-do/33690144#33690144[How do linkers and address relocation works?]
  * https://stackoverflow.com/questions/29391965/what-is-partial-linking-in-gnu-linker/53959624#53959624[What is incremental linking or partial linking?]
  * https://stackoverflow.com/questions/3476093/replacing-ld-with-gold-any-experience/53921263#53921263[GOLD (`-fuse-ld=gold`) linker vs the traditional GNU ld]
  * https://stackoverflow.com/questions/2463150/what-is-the-fpie-option-for-position-independent-executables-in-gcc-and-ld/51308031#51308031[What is the -fPIE option for position-independent executables in GCC and ld?] Concrete examples by running program through \x[gdb] twice, and an assembly hello world with absolute vs PC relative load.
  * https://stackoverflow.com/a/30308151/895245[How many GCC optimization levels are there?]
  * https://stackoverflow.com/questions/34519521/why-does-gcc-create-a-shared-object-instead-of-an-executable-binary-according-to/55704865#55704865[Why does GCC create a shared object instead of an executable binary according to file?]
* C/C++: almost all of those fall into "disassemble https://knowyourmeme.com/memes/all-the-things[all the things]" category. Ciro also does "standards dissection" and "a new version of the standard is out" answers, but those are boring:
  * https://stackoverflow.com/questions/572547/what-does-static-mean-in-a-c-program/14339047#14339047[What does "static" mean in a C program?]
  * https://stackoverflow.com/questions/1041866/in-c-source-what-is-the-effect-of-extern-c/30526795#30526795[In C++ source, what is the effect of `extern "C"`?]
  * https://stackoverflow.com/questions/10186765/char-array-vs-char-pointer-in-c/30661089#30661089[Char array vs Char Pointer in C]
  * https://stackoverflow.com/questions/847179/multiple-glibc-libraries-on-a-single-host/52454603#52454603[How to compile glibc from source and use it?]
  * https://stackoverflow.com/questions/332030/when-should-static-cast-dynamic-cast-const-cast-and-reinterpret-cast-be-used/60414256#60414256[When should `static_cast`, `dynamic_cast`, `const_cast` and `reinterpret_cast` be used?]
  * https://stackoverflow.com/questions/31978324/what-exactly-is-stdatomic/58904448#58904448[What exactly is `std::atomic` in C++?]. This answer was originally more appropriately entitled "Let's disassemble some stuff", and got three downvotes, so Ciro changed it to a more professional title, and it started getting upvotes. People judge books by their covers.
  * https://stackoverflow.com/questions/2351148/explicit-template-instantiation-when-is-it-used/59614755#59614755[What is explicit template instantiation in C++ and when to use it?]

    ``
    notmain.o
    0000000000000000 0000000000000017 W MyTemplate<int>::f(int)
    main.o
    0000000000000000 0000000000000017 W MyTemplate<int>::f(int)
    ``
    {title=`nm` outputs showing that objects are redefined multiple times across files if you don't use template instantiation properly.}

* IEEE 754
  * https://stackoverflow.com/questions/18118408/what-is-difference-between-quiet-nan-and-signaling-nan/55648118#55648118[What is difference between quiet NaN and signaling NaN?]
  * https://stackoverflow.com/questions/2618059/in-java-what-does-nan-mean/55673220#55673220[In Java, what does NaN mean?]
  * https://stackoverflow.com/questions/8341395/what-is-a-subnormal-floating-point-number/53203428#53203428[What is a subnormal floating point number?]

    ``
              +---+---+-------+---------------+-------------------------------+
    exponent  | ? | 0 |   1   |       2       |               3               |
              +---+---+-------+---------------+-------------------------------+
              |   |   |       |               |                               |
              v   v   v       v               v                               v
              -----------------------------------------------------------------
    floats    *    **** * * * *   *   *   *   *       *       *       *       *
              -----------------------------------------------------------------
              ^   ^   ^       ^               ^                               ^
              |   |   |       |               |                               |
              0   |   2^-126  2^-125          2^-124                          2^-123
                  |
                  2^-127


              +-------+-------+---------------+-------------------------------+
    exponent  |   0   |   1   |       2       |               3               |
              +-------+-------+---------------+-------------------------------+
              |       |       |               |                               |
              v       v       v               v                               v
              -----------------------------------------------------------------
    floats    * * * * * * * * *   *   *   *   *       *       *       *       *
              -----------------------------------------------------------------
              ^   ^   ^       ^               ^                               ^
              |   |   |       |               |                               |
              0   |   2^-126  2^-125          2^-124                          2^-123
                  |
                  2^-127
    ``
    {title=Visualization of subnormal floating point numbers vs what IEEE 754 would look like without them.}
* \x[computer-science]{c}
  * \x[algorithm]{c}{p}
    * https://stackoverflow.com/questions/6147242/heap-vs-binary-search-tree-bst/29548834#29548834[Heap vs Binary Search Tree (BST)]. Compared Heap vs BST vs Hash Maps.

      \Image[C++_Heap_vs_BST_vs_hash_map_insert_time.png]
      {source=https://stackoverflow.com/questions/6147242/heap-vs-binary-search-tree-bst/29548834#29548834}
      {height=800}
  * https://cs.stackexchange.com/questions/9664/is-it-necessary-for-np-problems-to-be-decision-problems/128702#128702[Is it necessary for NP problems to be decision problems?]
  * https://stackoverflow.com/questions/4317414/polynomial-time-and-exponential-time/68005934#68005934[Polynomial time and exponential time]. Answered focusing on the definition of "exponential time".
* \x[git]
  * https://stackoverflow.com/a/25806452/895245[What does the git index contain EXACTLY?]

    ``
      | 0           | 4            | 8           | C              |
      |-------------|--------------|-------------|----------------|
    0 | DIRC        | Version      | File count  | ctime       ...| 0
      | ...         | mtime                      | device         |
    2 | inode       | mode         | UID         | GID            | 2
      | File size   | Entry SHA-1                              ...|
    4 | ...                        | Flags       | Index SHA-1 ...| 4
      | ...                                                       |
    ``
  * https://stackoverflow.com/questions/22968856/what-is-the-file-format-of-a-git-commit-object-data-structure/37438460#37438460[What is the file format of a git commit object data structure?]

    ``
    tree {tree_sha}
    {parents}
    author {author_name} <{author_email}> {author_date_seconds} {author_date_timezone}
    committer {committer_name} <{committer_email}> {committer_date_seconds} {committer_date_timezone}

    {commit message}
    ``
  * https://stackoverflow.com/questions/600079/how-do-i-clone-a-subdirectory-only-of-a-git-repository/52269934#52269934[How do I clone a subdirectory only of a Git repository?]
* \x[python]
  * https://stackoverflow.com/a/19950198/895245[What is the difference between old style and new style classes in Python?]
  * https://stackoverflow.com/a/20022860/895245[What is a mixin in Python, and why are they useful?]
  * https://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python/55319297#55319297[What are the differences between threads and processes in Python?]

    \Image[https://web.archive.org/web/20190607051221if_/https://i.stack.imgur.com/2x04m.png]
    {title=Python Threads vs Processes with 8 hyperthreads.}
    {source=https://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python/55319297#55319297}
    {height=600}
* Web
  * https://stackoverflow.com/a/28380690/895245[What does enctype='multipart/form-data' mean?]
  * \x[javascript]
    * https://stackoverflow.com/a/23877420/895245[How does JavaScript .prototype work?]
    * https://stackoverflow.com/a/24595458/895245[.prop() vs .attr()]
* \x[opengl]
  * https://stackoverflow.com/questions/3191978/how-to-use-glut-opengl-to-render-to-a-file/14324292#14324292[How to use GLUT/OpenGL to render to a file?]

    \Image[opengl-rotating-triangle-image-magick.gif]
    {title=OpenGL image dumped to a file.}
    {source=https://stackoverflow.com/questions/3191978/how-to-use-glut-opengl-to-render-to-a-file/14324292#14324292}
  * https://stackoverflow.com/questions/8847899/opengl-how-to-draw-text-using-only-opengl-methods/36065835#36065835[How to draw text using only OpenGL methods?]

    \Image[https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Texture_Atlas.png/600px-Texture_Atlas.png]
    {title=Example of a texture atlas containing glyphs.}

  * https://stackoverflow.com/questions/2571402/how-to-use-glortho-in-opengl/36046924#36046924[How to use `glOrtho()` in OpenGL?]

    \Image[OpenGL_glFrustrum_on_left_vs_glOrtho_on_right.png]
    {source=https://stackoverflow.com/questions/2571402/how-to-use-glortho-in-opengl/36046924#36046924}
  * https://stackoverflow.com/questions/17789575/what-are-shaders-in-opengl-and-what-do-we-need-them-for/36211337#36211337[What are shaders in OpenGL?]
  * https://gamedev.stackexchange.com/questions/72044/why-do-we-use-4x4-matrices-to-transform-things-in-3d/118848#118848[Why do we use 4x4 matrices to transform things in 3D?]
  * https://stackoverflow.com/questions/30864752/is-it-possible-to-build-a-heatmap-from-point-data-at-60-times-per-second/39839788#39839788[Is it possible to build a heatmap from point data at 60 times per second?] Compared \x[cpu] vs GPU shaders.

    \Image[Sinusoidal_circular_wave_heatmap_generated_with_OpenGL_shader_at_60fps.gif]
    {source=https://stackoverflow.com/questions/30864752/is-it-possible-to-build-a-heatmap-from-point-data-at-60-times-per-second/39839788#39839788}
  * https://stackoverflow.com/questions/13693946/image-processing-with-glsl-shaders/40641014#40641014[Image Processing with GLSL shaders?] Compared the \x[cpu] and GPU for a simple blur algorithm.

    \Image[Visualization_of_OpenGL_blur_algorithm_from_webcam_with_Ciro_Santilli_waving.gif]
    {source=https://stackoverflow.com/questions/13693946/image-processing-with-glsl-shaders/40641014#40641014}

    \Video[http://youtube.com/watch?v=MRhAljmHq-o]
    {title=OpenGL GPU GLSL fragment shader real time v4l2 Linux webcam computer vision box blur vs \x[cpu].}
* \x[node-js]
  * https://stackoverflow.com/a/22004559/895245[What's the difference between dependencies, devDependencies and peerDependencies in npm package.json file?]
* \x[ruby-on-rails]
  * https://stackoverflow.com/a/25626629/895245[What is the difference between +<%+, +<%=+, +<%#+ and +-%>+ in ERB in Rails?]
* \x[posix]
  * https://stackoverflow.com/questions/1780599/what-is-the-meaning-of-posix/31865755#31865755[What is POSIX?] Huge classified overview of the most important things that POSIX specifies.
* \x[systems-programming]{c}
  * https://stackoverflow.com/questions/868568/what-do-the-terms-cpu-bound-and-i-o-bound-mean/33510470#33510470[What do the terms "CPU bound" and "I/O bound" mean?]
  * https://stackoverflow.com/questions/556405/what-do-real-user-and-sys-mean-in-the-output-of-time1/53937376#53937376[What do 'real', 'user' and 'sys' mean in the output of time?]

    \Image[wall,_user,_and_sys_for_CPU-bound_work_with_8_hyperthreads.png]
    {source=https://stackoverflow.com/questions/556405/what-do-real-user-and-sys-mean-in-the-output-of-time1/53937376#53937376}
    {height=600}
  * https://stackoverflow.com/questions/7880784/what-is-rss-and-vsz-in-linux-memory-management/57453334#57453334[What are RSS and VSZ in Linux memory management?]
* \x[computer-security]{c}
  * https://security.stackexchange.com/a/72569/53321[Why is the same origin policy so important?]
* Media
  * https://stackoverflow.com/questions/732699/how-is-audio-represented-with-numbers-in-computers/36510894#36510894[How is audio represented with numbers in computers?]. Original \x[stack-overflow-content-deletion][question deleted, lol]...: https://stackoverflow.com/questions/2205070/programmatically-synthesizing-programming-music/52126471#52126471[How to programmatically synthesize music?]

    \Video[http://youtube.com/watch?v=JISozfHATms]
    {title=Canon in D in C}
  * https://stackoverflow.com/questions/12831761/how-to-resize-a-picture-using-ffmpegs-sws-scale/36487785#36487785[How to resize a picture using ffmpeg's sws_scale()?]
  * https://unix.stackexchange.com/questions/256138/is-there-any-decent-speech-recognition-software-for-linux/613392#613392[Is there any decent speech recognition software for Linux?] ran a few examples manually on `vosk-api` and compared to ground truth.
* Eclipse
  * https://stackoverflow.com/questions/4038760/how-to-set-up-the-eclipse-for-remote-c-debugging-with-gdbserver/45608937#45608937[How to set up the Eclipse for remote C debugging with gdbserver?]
* \x[computer-hardware]{c}
  * https://www.quora.com/Are-there-good-open-source-standard-cell-libraries-to-learn-IC-synthesis-with-EDA-tools/answer/Ciro-Santilli[Are there good open source standard cell libraries to learn IC synthesis with EDA tools?]
* \x[scientific-visualization-software]{c}
  * \x[survey-of-open-source-interactive-plotting-software-with-a-10-million-point-scatter-plot-benchmark-by-ciro-santilli]{child}

    \Image[VisIt_zoom_in_10_million_straight_line_plot_with_some_marked_points.png]
    {disambiguate=best-articles}
    {source=https://stackoverflow.com/questions/5854515/large-plot-20-million-samples-gigabytes-of-data/55967461#55967461}
* \x[numerical-analysis]{c}
  * \Video[http://youtube.com/watch?v=FOwYDlay8rI]
    {title="Real-time \x[heat-equation] \x[opengl] visualization with interactive mouse cursor using relaxation method" by \x[ciro-santilli] (2016)}
* \x[computational-physics]{c}
  * https://stackoverflow.com/questions/11175694/bullet-physics-simplest-collision-example/36987063#36987063[What is the simplest collision example possible in a Bullet Physics simulation?]

    \Image[https://i.stack.imgur.com/9eVe9.png]
    {title=gnuplot plot of the y position of a sphere bouncing on a plane simulated in Bullet Physics.}
    {source=https://stackoverflow.com/questions/11175694/bullet-physics-simplest-collision-example/36987063#36987063}
* \x[register-transfer-level]{c} languages like \x[verilog] and \x[vhdl]
  * https://stackoverflow.com/questions/38108243/is-it-possible-to-do-interactive-user-input-and-output-simulation-in-vhdl-or-ver/38174654#38174654[Is it possible to do interactive user input and output simulation in VHDL or Verilog?]
* \x[android]
  * https://stackoverflow.com/questions/1809774/how-to-compile-the-android-aosp-kernel-and-test-it-with-the-android-emulator/48310014#48310014[How to compile the Android AOSP kernel and test it with the Android Emulator?]

    \Image[Android_AOSP_8.1.0_built_from_source_running_in_QEMU.png]
    {source=https://stackoverflow.com/questions/1809774/how-to-compile-the-android-aosp-kernel-and-test-it-with-the-android-emulator/48310014#48310014}
  * https://android.stackexchange.com/questions/7686/is-there-a-way-to-see-the-devices-screen-live-on-pc-through-adb/154328#154328[How to see the Android screen live on an Ubuntu desktop through ADB?]

    \Video[https://www.youtube.com/watch?v=fVgeoMYm61Q]
* \x[debugging]{c}
  * https://stackoverflow.com/questions/1345670/stack-smashing-detected/51897264#51897264[What is the "Stack smashing detected" error in GCC and how to solve it?]
  * https://stackoverflow.com/questions/7880784/what-is-rss-and-vsz-in-linux-memory-management/57453334#57453334[What is RSS and VSZ in Linux memory management?]
  * https://stackoverflow.com/questions/3899870/print-call-stack-in-c-or-c/54365144#54365144[How to print the call stack in C or C++?]
  * https://stackoverflow.com/questions/6261201/how-to-find-memory-leak-in-a-c-code-project/57877190#57877190[How to find memory leaks in C++ code?]
* Software optimization
  * https://stackoverflow.com/questions/310974/what-is-tail-call-optimization/55230417#55230417[What is tail call optimization?]
  * https://stackoverflow.com/questions/375913/how-can-i-profile-c-code-running-on-linux/60265409#60265409[How can I profile C++ code running on Linux?] Compares gprof, valgrind callgrind, perf and gperftools on a simple executable.

    \Image[https://web.archive.org/web/20200229164327if_/https://i.stack.imgur.com/mM8NQ.png]
    {title=gprof2dot image generated from the gprof data of a simple test program.}
    {source=https://stackoverflow.com/questions/375913/how-can-i-profile-c-code-running-on-linux/60265409#60265409}
* \x[mathematics]{c}
  * https://math.stackexchange.com/questions/776039/intuition-behind-normal-subgroups/3732426#3732426[What is the intuition behind normal subgroups?]

    \Image[Diagram_of_the_fundamental_theorem_on_homomorphisms.svg]
    {title=Diagram of the \x[fundamental-theorem-on-homomorphisms] by \x[ciro-santilli], showing the relationship between \x[group-homomorphism]{p} and \x[normal-subgroup]{p}.}
  * \x[formalization-of-mathematics]
* \x[computer-network][Network] programming
  * https://stackoverflow.com/questions/11208299/how-to-make-an-http-get-request-in-c-without-libcurl/35680609#35680609[How to make an HTTP get request in C without libcurl?]
* \x[physics]{c}
  * \x[uranium-vs-plutonium-quora-answer-by-ciro-santilli][What is the difference between plutonium and uranium?]{child}
  * https://physics.stackexchange.com/questions/13001/does-superluminal-travel-imply-travelling-back-in-time/615079#615079[Does faster than light travel imply travelling back in time?]

    \Image[Faster_than_light_implies_time_travel_diagram.svg]
    {disambiguate=articles}
    {title=\x[spacetime-diagram]{c} illustrating how \x[faster-than-light] travel implies time travel.}
* \x[biology]{c}
  * \x[oxford-nanopore-river-bacteria]{c}{child}

    \Image[https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Oxford_Nanopore_MinION_top_cropped.jpg/392px-Oxford_Nanopore_MinION_top_cropped.jpg]
    {disambiguate=articles}
    {title=Top view of an open Oxford Nanopore MinION.}
* \x[quantum-computing]{c}
  * \x[programmer-s-model-of-quantum-computers]{child}
  * https://physics.stackexchange.com/questions/204090/understanding-the-bloch-sphere/598254#598254[Understanding the Bloch sphere], see also: \x[bloch-sphere]

    \Image[matplotlib/bloch_sphere_walk.svg]
    {title=Visualization of the continuous deformation of states as we walk around the \x[bloch-sphere] represented as \x[photon-polarization] arrows.}
* \x[bitcoin]
  * \x[cool-data-embedded-in-the-bitcoin-blockchain]{child}
* \x[gimp]
  * https://graphicdesign.stackexchange.com/questions/83446/gimp-how-to-combine-two-images-side-by-side/145543#145543[How to combine two images side-by-side in GIMP?]

    \Image[https://web.archive.org/web/20210321083826/https://i.stack.imgur.com/r89lU.png]
    {title=Step in the demonstration of https://graphicdesign.stackexchange.com/questions/83446/gimp-how-to-combine-two-images-side-by-side/145543#145543[how to combine two images side-by-side in GIMP?]}
* Home DIY
  * \x[window-blackout]{c}{child}

    \Image[https://upload.wikimedia.org/wikipedia/commons/a/a6/Total_Blackout_Cassette_Roller_Blind_With_Curtains.jpg]
* \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][China]{child}
  * https://www.quora.com/What-would-happen-if-I-walked-around-Beijing-with-a-t-shirt-that-said-freedom-of-speech-is-pretty-great[What would happen if I walked around Beijing with a t-shirt that said "freedom of speech is pretty great"?]

= How to contact Ciro Santilli
{id=contact}
{parent=ciro-santilli}

= How to contact Ciro Santilli
{synonym}

If you feel you might have shared interests with \x[ciro-santilli], Ciro is very glad to hear from you, even if you don't have something a specific goal in mind for the contact.

To contact Ciro publicly about any general subject that is not covered in a more specific \x[github] repository, including saying hi or suggestions about his website either:
* create a \x[github] issue at: https://github.com/cirosantilli/cirosantilli.github.io/issues/new
* at mention \x[ciro-santilli-s-twitter-accounts][Ciro's main Twitter account]

For \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][comments about China], first read:
* https://github.com/cirosantilli/china-dictatorship/faq
* https://github.com/cirosantilli/china-dictatorship/blob/master/CONTRIBUTING.md
and then create a \x[github] issue at: https://github.com/cirosantilli/china-dictatorship/issues/new

Publicly viewable contact is preferred if possible to more effectively share \x[cirism][Ciro's wisdom with the world].

But if you feel more comfortable with private contact, no problem, either:
* extract Ciro's \x[email] from one of his GitHub repositories. It might be of the form lower case first name, followed by a dot (which \x[google] actually ignores), followed by his lower case last name, and under a popular email domain from \x[google]
* use \x[telegram-software]: https://telegram.me/cirosantilli for the \x[end-to-end-encryption]. Secret chats only with a 1 week self-destruct timer.

  Please treat this as \x[email], Ciro might not reply immediately, but he will reply. So write longer complete messages each time.

  Ciro is trying to move more and more to \x[end-to-end-encrypted] methods as a basic \x[computer-security] hygiene exercise.

  Telegram is the best such mechanism that Ciro could find for now that \x[messaging-software-that-force-you-to-share-your-mobile-phone-with-contacts][does not require sharing cell phone numbers with all contacts].

  The closed sourcedness of the server is however a major point of concern. \x[signal-software] would be a better choice, but it does not have usernames and so requires users to share cell phone numbers.

  Another major pain point of Telegram is the lack of message sync across devices, which Signal also already solves.
* use \x[linkedin] or any other public profile linked to from: \x[accounts]

If you are a \x[internet-privacy][privacy] freak or are going to tell Ciro \x[government][state] secrets Ciro has:
* this \x[gnu-privacy-guard] public key: \a[pubkey.gpg]
* a \x[protonmail] account which is of form: "Ciro's GitHub username + protonmail.com". Ciro aims to maintain very high \x[operations-security] standards on that account, making it the most secure way to contact Ciro, and the only one with a reasonable chance of \x[plausible-deniability] :
  * \x[multi-factor-authentication]
  * unique password not-reused anywhere else, and not saved on any computer or disk (and therefore entered manually on every new session)
  * immediate deletion of received messages after reading. This is further strengthened by \x[ciro-santilli-s-bad-old-event-memory]
  * one week https://protonmail.com/support/knowledge-base/expiration/[message expiration] on every message sent
  * only opened from trusted devices and when in a private location
  * only accessed through \x[tor-browser]
  * concession: notifications that messages were received in the ProtonMail mailbox are sent an unencrypted mailbox which Ciro views more regularly and which has more free storage. But the message content itself is not. It does not seem that the \x[android] app has a mode where it only notifies you of new messages but requires a password every time to see any messages. Also Android appears to request to remember passwords every time, so you risk clicking yes at some point.

If you have Ciro's phone number (available to closer acquaintances), Ciro's preferred \x[messaging-software] is \x[signal-software]. But he basically also runs all other major apps as well. Ciro sets a 1 week disappearing messages timer to all conversations. This is slightly less secure than protonmail as Ciro does not use \x[multi-factor-authentication] to open the messages every time, but it should be pretty damn good already.

\x[disqus] comments were removed from his website in 2019-05-04, a manual dump is \a[disqus-archive/][available here]{check=0}, removal rationale at: \x[why-ciro-santilli-removed-disqus-comments-from-his-website-in-2019-05-04].

= Accounts controlled by Ciro Santilli
{id=accounts}
{parent=ciro-santilli}

= Accounts controlled by Ciro Santilli
{synonym}

\x[ciro-santilli] controls the following accounts.

With non-trivial activity:
* https://github.com/cirosantilli
* https://stackoverflow.com/users/895245
* https://www.linkedin.com/in/cirosantilli
* https://www.youtube.com/c/CiroSantilli
* \x[twitter]: see \x[ciro-santilli-s-twitter-accounts]{full}
* https://archive.org/details/@cirosantilli Ciro uses \x[web-archiving] mostly for \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china], but also to backup random university lecture notes before \x[write-free-books-to-get-famous-website] has dominated the world
* https://commons.wikimedia.org/wiki/User:Cirosantilli2 Ciro tries to upload all educational CC content he creates to \x[wikimedia-commons] as an extra backup and sometimes to use in \x[wikipedia] pages
* https://www.facebook.com/cirosantilli/ Ciro accepts all friend requests there, but expect a few non-technical posts. Unless you look like a https://en.wikipedia.org/wiki/Honeypot_(computing)[massive honeypot account], please send context in advance in that case.
* https://www.quora.com/profile/Ciro-Santilli
* https://www.reddit.com/user/cirosantilli/ is Ciro's \x[reddit] account, mostly \x[computer] and \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][China] topics

Other accounts:
* http://seqanswers.com/forums/member.php?u=90053
* http://answers.gazebosim.org/users/2289/cirosantilli/
* https://4programmers.net/Profile/86786
* https://500px.com/p/cirosantilli
* https://9gag.com/u/cirosantilli
* https://addons.mozilla.org/en-US/firefox/user/cirosantilli/
* https://androidforums.com/members/ciro-santilli.1918307
* https://ask.libreoffice.org/en/users/2352/cirosantilli/
* https://bbs.archlinux.org/profile.php?id=116270
* https://brilliant.org/profile/ciro-il1uxz/
* https://bugzilla.gnome.org/page.cgi?id=describeuser.html&login=ciro.santilli@gmail.com
* https://cirosantilli.blogspot.com/
* https://cirosantilli.livejournal.com/profile
* https://cirosantilli.medium.com/ on \x[medium-website]
* https://cirosantilli.substack.com/
* https://cirosantilli.wordpress.com/ on \x[wordpress]
* https://coderwall.com/Ciro%20Santilli Note that space on the username. Beauty.
* https://community.arm.com/people/cirosantilli
* https://community.atlassian.com/t5/user/viewprofilepage/user-id/680821
* https://community.plos.org/people/cirosantilli
* https://community.skype.com/t5/user/viewprofilepage/user-id/2646858
* https://community.zimbra.com/members/cirosantilli
* https://del.icio.us/cirosantilli
* https://dev.to/cirosantilli
* https://developer.mbed.org/users/cirosantilli/
* https://devtalk.nvidia.com/member/2118846/
* https://droit-finances.commentcamarche.net/profile/user/cirosantilli
* https://en.gravatar.com/cirosantilli
* https://en.wikipedia.org/wiki/User:Ciro.santilli also belongs to Ciro, but he lost the password
* https://en.wikipedia.org/wiki/User:Cirosantilli2
* https://eternagame.org/web/player/260828/
* https://figshare.com/authors/Ciro_Santilli/656781
* https://forum.osdev.org/memberlist.php?mode=viewprofile&u=16372
* https://forum.pine64.org/member.php?action=profile&uid=17386
* https://forum.videolan.org/memberlist.php?mode=viewprofile&u=173503
* https://forum.xda-developers.com/member.php?u=7116837
* https://forums.androidcentral.com/members/cirosantilli-2734491
* https://forums.lenovo.com/user/viewprofilepage/user-id/1561639
* https://framasphere.org/people/78a975c0b6c40133a3032a0000053625 https://framasphere.org/posts/1519871
* https://gitlab.com/u/cirosantilli
* https://hackaday.io/cirosantilli
* https://hinative.com/en-US/profiles/5276462
* https://home.gamer.com.tw/homeindex.php?owner=cirosantilli but can't post anything publicly because cannot verify phone in many countries
* https://identity.kde.org/index.php?r=people/view&uid=cirosantilli
* https://imgur.com/user/cirosantilli/about[]: Proof: https://imgur.com/gallery/mexv1Bk/comment/1734086983
* https://jsfiddle.net/user/cirosantilli/
* https://kiwifarms.net/members/cirosantilli.82011/
* https://launchpad.net/~cirosantilli
* https://leetcode.com/cirosantilli/
* https://makandracards.com/ciro-santilli
* https://nanohub.org/members/146301/
* https://next-episode.net/user/cirosantilli/
* https://opencollective.com/ciro-santilli
* https://orcid.org/0000-0003-2895-7763
* https://parler.com/profile/cirosantilli/posts
* https://peerj.com/cirosantilli/
* https://profile.edx.org/u/ciro_santilli
* https://profiles.3dgames.com.ar/profiles/1002278
* https://pypi.org/user/cirosantilli/
* https://raidforums.com/User-cirosantilli
* https://rubygems.org/profiles/cirosantilli
* https://software.intel.com/en-us/user/1090688
* https://soundcloud.com/cirosantilli
* https://sourceforge.net/u/cirosantilli/profile/
* https://steamcommunity.com/id/cirosantilli/
* https://subreply.com/cirosantilli
* https://support.discord.com/hc/en-us/profiles/427813342894
* https://support.mozilla.org/en-US/user/cirosantilli
* https://tabmixplus.org/forum/memberlist.php?mode=viewprofile&u=59846
* https://talk.commonmark.org/users/cirosantilli
* https://talk.jekyllrb.com/users/cirosantilli
* https://talks.cam.ac.uk/user/show/81142
* https://tatoeba.org/eng/user/profile/cirosantilli
* https://telegram.me/cirosantilli on \x[telegram-software]
* https://trac.ffmpeg.org/wiki/Waveform?action=history username `cirosantilli`
* https://tuleap.net/users/cirosantilli
* https://tuleap.ring.cx/users/cirosantilli
* https://twittercommunity.com/users/cirosantilli/activity
* https://wefunder.com/cirosantilli
* https://wiki.qemu.org/User:Cirosantilli
* https://www.airbnb.com/users/show/45794827
* https://www.behance.net/cirosantilli
* https://www.bibsonomy.org/user/cirosantilli
* https://www.biostars.org/u/50170/
* https://www.bountysource.com/people/25676-ciro-santilli
* https://www.bulletphysics.org/Bullet/phpBB3/memberlist.php?mode=viewprofile&u=11704
* https://www.codingame.com/profile/cddd0a711c22d97e8264361f7c8205567563841
* https://www.coursera.org/user/f65b08c191d792eb809fe2808d771ee7
* https://www.dailymotion.com/ciro-santilli
* https://www.deviantart.com/cirosantilli
* https://www.digitalocean.com/community/users/cirosantilli
* https://www.ebay.com/usr/cirosantilli
* https://www.edaboard.com/member587087.html
* https://www.flickr.com/people/cirosantilli/
* https://www.freecodecamp.org/fcc8f660b91-167c-4b04-a8da-5d50cdb46def
* https://www.f6s.com/cirosantilli
* https://www.f6s.com/cirosantilli1
* https://www.gitbook.com/@cirosantilli
* https://www.hackerrank.com/cirosantilli
* https://www.hackster.io/cirosantilli
* https://www.html5gamedevs.com/profile/30103-cirosantilli/
* https://www.imdb.com/user/ur59802249 on \x[imdb]
* https://www.instagram.com/cirosantilli/ Impossible to disable their notifications without removing your email. So all their notifications go to trash.
* https://www.kaggle.com/cirosantilli
* https://www.lesswrong.com/users/ciro-santilli on \x[lesswrong]
* https://www.linux.org/members/ciro-santilli.62540/
* https://www.linuxquestions.org/questions/user/cirosantilli-688439/
* https://www.meetup.com/members/252568305/
* https://www.mentebinaria.com.br/profile/1987-ciro-santilli/
* https://www.metacritic.com/user/cirosantilli
* https://www.mohu.rocks/people/cirosantilli
* https://www.mudhut.com/user/1995000
* https://www.myopportunity.com/en/profile/ciro-santilli
* https://www.npmjs.com/~cirosantilli
* https://www.opengl.org/discussion_boards/member.php/40269-cirosantilli
* https://www.patreon.com/cirosantilli
* https://www.pixiv.net/en/users/64347194
* https://www.plurk.com/cirosantilli
* https://www.raspberrypi.org/forums/memberlist.php?mode=viewprofile&u=273389
* https://www.shadertoy.com/user/cirosantilli
* https://www.strava.com/athletes/47913768
* https://www.tastekid.com/ciro.santilli
* https://www.ted.com/profiles/5822760
* https://www.tiktok.com/@cirosantilli2
* https://www.transifex.com/user/profile/cirosantilli
* https://www.tripadvisor.com/members/cirosantilli

Accounts in \x[china][Chinese] websites. These accounts might be banned or altered or offer other limitations, so Ciro only communicates briefly through them. All communication through those channels should obviously be assumed to be compromised:
* http://bbs.nibaedu.com/index.php?m=space&uid=70
* http://www.renren.com/338003848/profile
* http://www.tianya.cn/109285544 (can't post, no cell phone)
* https://hacpai.com/member/cirosantilli unable to login as of 2019-10-12, reason unclear, either ban or website too crappy.
* https://pincong.rocks/people/cirosantilli
* https://tieba.baidu.com/home/main?id=5cd56369726f73616e74696c6c69c944
* https://v2ex.com/member/cirosantilli[]: Ciro was blocked or account deleted on 2020-07-23: https://cirosantilli.com/china-dictatorship/v2ex 
* https://www.zhihu.com/people/cirosantilli[]. Ciro was https://github.com/cirosantilli/china-dictatorship/tree/746d7e851097bfacfb03149138f0e16c8da9d8db#zhihu-ban[prevented from posting in 2018-06-25], and https://github.com/cirosantilli/china-dictatorship/tree/55e0ab569884e261119fd7683d677644df5c7ca1#zhihu-purge[the account and all content mentioning him were taken down in 2019-11-03].
* https://www.weibo.com/p/1005055601627311[]: started requiring a cell phone to login in 2020, and Ciro didn't want to give his cell phone number to the CCP and didn't have the patience to manage a secondary phone number, so he is not logging in for now. The account was blocked in 2021: https://cirosantilli.com/china-dictatorship/ciro-santillis-weibo-block

Accounts in Russian websites:
* https://vk.com/id595305194

Dead websites:
* http://www.citeulike.org/user/cirosantilli (2019-05)

= Ciro Santilli's Twitter accounts
{c}
{parent=accounts}
{wiki}

Accounts controlled by \x[ciro-santilli] on \x[twitter]{parent}:
* https://twitter.com/cirosantilli[] primary channel, contains only updates on Ciro's best technical content. Low volume.
* https://twitter.com/cirosantilli2[] secondary channel, contains smaller technical updates that didn't make it to the primary channel, and some \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][China fun]. Higher volume.

= Cirism
{c}
{parent=ciro-santilli}

= Cirist
{c}
{synonym}

= Ciro Santilli's ideology
{c}
{synonym}
{title2}

Welcome to the wonderful world of Cirism!

Followers of Cirism call themselves \x[cirist]{p}.

Cirism has been officially verified to compatible with all major world \x[religion]{p}.

Related:
* \x[physics-and-the-illusion-of-life]

\Image[Ciro_Santilli's_learn_teach_apply_logo.png]
{title=\x[ciro-santilli]'s "Learn, Teach, Apply" logo is the Sacred symbol of Cirism.}

= Unconditional basic income
{parent=cirism}
{wiki}

Unconditional basic income is \x[ciro-santilli]'s ultimate non-\x[transhumanist] technological dream: to reach a state of technological advancement and distribution of resources so high that everyone gets money for doing nothing, enough for:
* basic survival needs: food, housing, clothes, hygiene, etc.
* two children to keep the world going. Or immortality tech, but is harder and borderline transhumanist :-)
* high speed computer and Internet

Once a person has that, they can \x[write-free-books-to-get-famous-website]["learn, teach"] and create whatever they want. Or play \x[video-game]{p} all day long if they wish.

https://en.wikipedia.org/wiki/Basic_income_pilots[Ciro santilli will not live to see this], and is content with helping it happen faster by increasing the efficiency of the world as. And having at least two well educated kids to carry on the project after he dies :-)

Technologies which would help a lot towards unconditional basic income, and might be strictly required required are:
* \x[artificial-general-intelligence]
* affordable https://en.wikipedia.org/wiki/Humanoid_robot[humanoid robots] with human-like energy efficiency and https://en.wikipedia.org/wiki/Power-to-weight_ratio[power-to-weight ratio].

  This is even less likely than AGI due to the \x[moore-s-law][end of silicon Moore's Law] and at the start of the Genome's Moore's law: information doubles, small sizes halve, but macroscopic mechanical artifacts stay the same.

  \x[brain-computer-interface]{p} are pretty certain to happen however after \x[ciro-santilli] dies.

So in the worst case we can just grow brainless bodies and replace the cavity hole with a computer that controls the body, possibly with high level decisions coming from a remote building-sized genetically engineered biological AGI brain.

Of course, it is all about costs. A human costs about http://content.time.com/time/health/article/0,8599,1808049,00.html[130k 2010 USD/year]. So how cheap can we make the AGI / robot human equivalent / year for a given task?

AGI + humanoid robots likely implies https://en.wikipedia.org/wiki/AI_takeover[AI takeover] though. It would then come down to human loving bots vs human hating bots fighting it out. It will be both terrifying and fun to watch.

AGI alone would be very dangerous, in case it can get control of our nuclear arsenals through software zero days or https://en.wikipedia.org/wiki/Social_engineering_%28security%29[social engineering]. Although some https://www.quora.com/Could-a-group-of-hackers-break-into-military-networks-and-launch-or-detonate-nuclear-missiles[claim that is unlikely].

Humanity's best bet to achieve silicon AGI today is to work on: \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development].

= Having more than one natural language is bad for the world
{parent=cirism}

\x[natural-language]{c} diversity is \x[art][beautiful, but useless].

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/5/50/Pieter_Bruegel_the_Elder_-_The_Tower_of_Babel_%28Vienna%29_-_Google_Art_Project.jpg/800px-Pieter_Bruegel_the_Elder_-_The_Tower_of_Babel_%28Vienna%29_-_Google_Art_Project.jpg]
{title=Even the Bible writers already know that multiple languages suck as seen from the https://en.wikipedia.org/wiki/Tower_of_Babel[Tower of Babel] parable.}

The fact that in poor countries a huge number of people do not speak the economically dominating language of the world (currently \x[english-language][English]), is a major obstacle to the development of those countries.

Despite us being in the information age, the people in those countries cannot fully benefit from it at all!

Teaching its people English should be the number one priority of any country. Without that, there can be no technological development. Everything else is secondary and can be learnt off the Internet once you know English.

And the most efficient way to do that, is that every country should create amazing free open source English learning material for their own language.

Also consider the \x[europe][European] countries.

What big \x[company]{p} have been created in Europe in the past 50 years, that have not been bought out by \x[american] or \x[japanese] companies? \x[solexa] (600M USD in 2007)? https://en.wikipedia.org/wiki/CSR_(company)[CSR] (2.5B USD in 2015)? https://en.wikipedia.org/wiki/Arm_Holdings[Arm Holdings] (32B USD in 2016)? So much so that https://www.forbes.com/sites/oliviergarret/2020/07/02/the-next-netflix-has-finally-revealed-itself/#5ceae87832db[much fanfare was made] as Spotify reached a 50B market capitalization in 2020. An \x[art] company, so cute!

The key problem is that there are so many small countries in Europe, that any \x[startup] has to deal with too many incompatible legislation and cannot easily sell to the hole of Europe.

So then a larger company from a more uniform country comes and \x[eats] it up!

So why can't Europe unify its laws?

Because the countries are still essentially walled off by languages.

There isn't true mobility of people between countries.

You just can't go study or work in any other country (except for the UK, when it was still in the EU) without putting a huge effort into learning its language first.

Without this, there isn't enough mixing to truly make cultures more uniform, and therefore allow the laws to be more uniform.

Europe can't even unify basic things like a marriage registry, or the posting of parcels, which often get lost and require you to contact people who may not speak English.

Equally so, it can't force little fiscal paradises who effectively benefit from being in Europe like Ireland, Luxembourg, https://www.youtube.com/watch?v=5l37Ng61gJc[Monaco], Switzerland ("not European", but should that be allowed?) and https://en.wikipedia.org/wiki/Cyprus[Cyprus] (the EU can't even maintain its territorial integrity, let alone fiscal) to not offer ridiculously low taxes and incentives which make them entry points for foreign companies to rape Europe.

For this reason, Europe will only continue to go downhill with the years, and the \x[united-kingdom] will continue to try and https://en.wikipedia.org/wiki/Mitochondrion[endosymbiose] into a state of the \x[united-states] (although https://github.com/cirosantilli/china-dictatorship/tree/1d69f2605e7c2602867344a70c6eed838b930105#the-west-must-ban-the-import-telecommunications-devices-from-china[at times it seems that it would rather endosymbiose with China instead]).

Historically, this disunion is partly due to the \x[european-balance-of-power], whereby countries would form alliances with old enemies to prevent another country from taking over. Also linked are failed military unification attempts by \x[napoleon] and \x[hitler], though we are likely better off without the latter succeeding!!! Though those also partly failed due to wider balance of power issues involving the \x[united-kingdom], the \x[soviet-union] and \x[usa], not only due to internal balance. Of course, none of that matters anymore after \x[world-war-ii], where other \x[europe]-sized potencies rose, first the \x[usa] and the \x[soviet-union], and then \x[china], and now European disunion is nothing but a burden.

The https://en.wikipedia.org/wiki/Linguistic_relativity[Sapir–Whorf hypothesis] is \x[bullshit] outside of poetry, and the ending of https://en.wikipedia.org/wiki/Arrival_(film)[Arrival (2016)] makes one want to puke, where learning a language changes not only your brain, but also Ciro's precious \x[physics]["laws" of Physics]!

Much more likely are https://en.wikipedia.org/wiki/To_Serve_Man_(The_Twilight_Zone)[To Serve Man]/\x[a-small-talent-for-war] events!

Remember that those ideas come from a person who \x[ciro-santilli-s-natural-languages-skills][speaks 3.5 languages in 2019], and see absolutely no practical difference between them.

Of course, like all https://en.wikipedia.org/wiki/Constructed_language[non-constructed languages], English is not fully optimal in terms of regularity and information density. It could be argued that other languages are better in those aspects.

For example, Ciro does however believe that spoken Chinese is a better language than English overall from a purely "ease of learning from scratch point of view" as mentioned at: https://github.com/cirosantilli/china-dictatorship/tree/6fdeb5aa3826c69f7c058de4e6f652a6924bc08a#does-ciro-santilli-speak-chinese[]. https://github.com/cirosantilli/china-dictatorship/tree/c0c41e7c55a7641fd00aad06beefa824e6f5b9c8#does-ciro-santilli-speak-chinese[Chinese writing is completely insane of course], completely out of the question.

However, Ciro just doesn't think that the difference is that great to justify replacing English which is already dominant. How much more efficient can a perfect constructed language be than English? 1.01? 1.001? Such margins don't matter. Once you have learnt it young, it's done, for good.

English-based https://en.wikipedia.org/wiki/Constructed_language#A_posteriori_language[a posteriori constructed languages] that regularize English further are perhaps the only reasonable alternative, like how \x[c-plus-plus] evolved from \x[c-programming-language] by creating a low cost upgrade path. Although in practice they will never take off unless a https://en.wikipedia.org/wiki/Simplified_Chinese_characters[dictatorship rules the world]:
* https://en.wikipedia.org/wiki/List_of_places_in_the_United_Kingdom_with_counterintuitive_pronunciations 
* https://en.wikipedia.org/wiki/Globish_(Gogate)

One interesting anecdote is that Ciro met his \x[ciro-santilli-s-wife][wife] in French, and talking to her primarily in English feels really weird, so language does matter in love.

Different languages might also good at producing interesting diverse touristic locations, with different diverse and interesting foods. Because that's what tourism is all about. The exotic. The unique. And therefore, also necessarily the inefficient.

People with similar ideas:
* \x[english-as-a-universal-language-by-dan-dascalescu-2008]
* http://harmful.cat-v.org/society/cultural_protectionism from \x[cat-v-org]
* https://blog.codinghorror.com/the-ugly-american-programmer/ highlights that the situation is even more critical for software development. But he's a moderate ideology. Newbie.
* \x[charles-kay-ogden], creator of \x[basic-english], according to the https://en.wikipedia.org/wiki/Basic_English[Basic English Wikipedia page]:
  \Q[Ogden's Basic, and the concept of a simplified English, gained its greatest publicity just after the Allied victory in World War II as a means for world peace. Ogden was convinced that the world needed to gradually eradicate minority languages and use as much as possible only one, English in either a simple or complete form.]

\Video[https://www.youtube.com/watch?v=GiVs05yq9-o]
{title="English spelling - a bit mad, but perhaps the best system around" by Lindybeige (2015)}
{description=To be taken as a semi-joke, but he does mention the interesting point that English insane spelling helps disambiguate reading, like an intermediate between \x[chinese-character]{p} and more regular spelled languages.}
i

= Don't be a pussy
{parent=cirism}

https://quoteinvestigator.com/2018/05/07/overcome/

\Q[If you want to do something, but you are afraid to do it, then that is likely what you should do.]
{id=quote-afraid-to-do}

https://quoteinvestigator.com/2013/11/08/not-bend/

\Q[Don't bend; don't water it down; don't try to make it logical; don't edit your own soul according to the fashion. Rather, follow your most intense obsessions mercilessly.]

For example, when \x[ciro-santilli] was deciding what to do in university, he wanted mostly to do pure \x[physics].

But because he was afraid he was going to die poor and unemployed because of that, he picked engineering instead.

That was a mistake.

His family was not even poor. He was young and did not have a family to support. His father even told him: "do whatever the \x[fuck] you want, we support your decision".

But he was a coward.

It was also in part because a \x[physicist] uncle which he respected suggested that as an engineer Ciro might be able to make useful contributions to tooling required by physics. When https://en.wikipedia.org/wiki/Roberto_Salmeron[Roberto Salmeron] died in 2020, Ciro's friends shared https://www.youtube.com/watch?v=DtqDLN3qT2w[this 2013 video interview] with the late professor, where he explains he first went to the \x[university-of-sao-paulo] to study engineering (like Ciro), but then fell for his passion for physics (like Ciro?), his first task being to build a \x[geiger-counter], thus explaining the likely origin of the uncle's theory. But who knows, maybe he was right. Maybe Ciro's \x[write-free-books-to-get-famous-website] will become huge and help a lot of people, and it might not have had Ciro not done engineering and learnt programming. Destiny operates in weird ways sometimes.

Furthermore, while in University, Ciro learnt about the \x[molecular-sciences-course-of-the-university-of-sao-paulo], a fantastic sounding full time course that any student could transfer to called that teaches various \x[write-free-books-to-get-famous-website/motivation][natural sciences topics which Ciro loves (Mathematics, Physics, Chemistry, Biology)] and which students from the entire university can apply to transfer to only after joining the university, with the guarantee that they can go back to their original courses if they didn't adapt to the new course.

But did Ciro do it? Nope, he remained an even larger coward.

Had he studied more sciences, he might have been happier, and might have had greater achievements later in life, in particular when he went to \x[ecole-polytechnique].

Maybe not, but now this doubt will never leave his mind until the final day.

Similar thoughts crossed his mind when he started his \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][campaign for freedom of speech in China], but this time he had learnt the lesson, and went for it, and it felt very good.

If you have a day job, but also have a dream, and want to keep the day job for a reason, try to reserve the time of the day that your brain works best before or after work for your dream.

Work a little less well for you boss, and a little better for yourself. \x[ross-ulbricht]:
\Q[I hated working for someone else and trading my time for money with no investment in myself]
Selling \x[drug]{p} online is not advisable however.

Even better, try to reach an official agreement with your employer to work 20% less than the standard work week. For example, you could work one day less every week, and do whatever you want on that day. It is not possible to push your passion to weekends, because your brain is too tired. "You keep all non-company-related IP you develop on that time" is a key clause obviously.

On a related note, good employers must allow employees to do whichever the \x[fuck] "crazy projects", "needed refactorings or other efficiency gains" and "learn things deeply" at least 20% of their time if employees want that: https://en.wikipedia.org/wiki/20%25_Project[]. Employees must choose if they want to do it one day a week or two hours per day. One day per month initiatives are \x[bullshit]. Another related name: https://en.wikipedia.org/wiki/Genius_hour[genius hour].

Highly relevant on this topic: \x[video-what-predicts-academic-ability-by-jordan-b-peterson-2017].

Pursuing a dream part time can make you feel afraid and tired. But at least, you will feel alive. https://www.youtube.com/watch?v=FQlAfI91cZ8[I did it for me, Skyler].

Maybe you will be fired, but long term, having tried, or even succeeded your dream, or a \x[the-side-effects-of-ambitious-goals-are-often-the-most-valuable-thing-achieved][one of its side effects], will be infinitely more satisfying.

The same goes for \x[school], and maybe even more so because your parents can still support you there. Some \x[god]{p} who actually followed this advice and didn't end up living under a bridge:
* \x[george-m-church] "\[We\] hope that whatever problems... contributed to your lack of success... at Duke will not keep you from a successful pursuit of a productive career." Lol, as of 2019 the dude is the most famous biotechnologist in the world, those "problems" certainly didn't keep him back.
* \x[freeman-dyson] proved the equivalence of the three existing versions of \x[quantum-electrodynamics] theories that were around at his time, and he has always been proud of not having a PhD!

  \Video[http://youtube.com/watch?v=DzC1IRYN_Ps]
  {title=\x[freeman-dyson] - Why I don't like the PhD system (95/157) by \x[web-of-stories] (2016)}
* Person that Ciro met personally and shall remain anonymous for now for his privacy: once Ciro was at a bar with work colleagues casually, it was cramped, and an older dude sat next to his group.

  The dude then started a conversation with Ciro, and soon he explained that he was a mathematician and software engineer.

  As a Mathematician, he had contributed to the \x[classification-of-finite-simple-groups], and had a short Wiki page because of that.

  He never did a PhD, and said that \x[academia] was a waste of time, and that you can get as much done by working part time a decent job and doing your research part time, since you skip all the \x[bullshit] of academia like this.

  Yet, he was still invited by collaborating professors to give classes on his research subject in one of the most prestigious universities in the world. Students would call him Doctor X., and he would correct them: Mister X.

  As a software engineer, he had done a lot of hardcore assembly level optimizations for x86 for some mathematical libraries related to his mathematics interests. He started talking microarchitecture with Ciro's colleagues.

  And he currently worked on an awesome open source project backed by a \x[company].

  At last but not least, he said he also fathered 17 children by donating his sperm to \x[lesbian] mothers found on a local \x[gay] magazine, and that he had met most/all of those children after they were born.

  A God. Possibly the most remarkable person Ciro ever met, and his jaw was truly dropped.

Companies can help you grow because you see real problems from within them, but their end goal is to consume you as much as possible. Don't let that happen. Invest part of what you gain, in yourself.

Don't be a pussy. Be a http://archive.is/W1ocv[based God].

\Image[https://web.archive.org/web/20190619194434im_/http://assets.amuniversal.com/d871a9c06d6401301d80001dd8b71c47]
{title=\x[dilbert] "A small brain irrationally puts more weight on a small loss than on a huge opportunity" cartoon (2000)}
{id=image-dilbert-small-loss}
{height=300}
{source=https://dilbert.com/strip/2000-02-03}

\Image[https://web.archive.org/web/20200303102830/https://pbs.twimg.com/media/DXtGN6tU0AAGnHk?format=jpg&name=large]
{title=Jake Likes Onions "Slowly" cartoon.}
{description=This is what trying to reach a dream part time feels like. The cartoon reads: "The tiger pursues its prey. Slowly. The human pursues its life goals. Slowly. Very slowly.".}
{height=500}
{source=https://twitter.com/jakelikesonions/status/971447358771941376}

\Video[http://youtube.com/watch?v=kYfNvmF0Bqw]
{title=Excerpt from the documentary film "\x[steve-jobs]: Secrets of Life" (1994).}

\Q[When you grow up you tend to get told that the world is the way it is and your life is just to live your life inside the world. Try not to bash into the walls too much. Try to have a nice family life, have fun, save a little money. That's a very limited life. Life can be much broader once you discover one simple fact: Everything around you that you call life was made up by people that were no smarter than you. And you can change it, you can influence it... Once you learn that, you'll never be the same again.]

Of course, https://en.wikipedia.org/wiki/Survivorship_bias[survivorship bias] applies.

\Video[http://youtube.com/watch?v=XTv50ELCBr4]
{title=\x[alan-watts] "If Money Were No Object What Would You Do" talk.}

= Being naughty and creative are correlated
{parent=don-t-be-a-pussy}

\x[ciro-santilli] believes that there is a close link between the ability to create disruptive technology, and the desire to find bugs/exploits in systems.

Both of them destabilize society and enterprises.

Some examples:
* \x[jobs-and-wozniak-s-blue-box]{child}
* \x[robert-noyce]'s stealing a pig for a university party somewhat as a joke. This was actually a felony, but he got away with a compromise by paying the owner and being suspended for 6 months. The law is not blind, and thanks for that sometimes.

  Oh, and apparently he also got a university girlfriend pregnant, and she had an abortion.

And yes, this sometimes leads into a fine line between \x[legality] and illegality:
* \x[ross-ulbricht]{child} from \x[silk-road-marketplace]
* \x[aaron-swartz]{child}

= Steve Jobs' 2005 Stanford Commencement Address
{parent=don-t-be-a-pussy}
{c}

Ciro feels that this resonates a lot with his \x[write-free-books-to-get-famous-website].

Supercut:
\Q[
The minute I dropped out I could stop taking the required classes that didn't interest me, and begin dropping in on the ones that looked far more interesting.

And much of what I stumbled into by following my curiosity and intuition turned out to be priceless later on.

Because I had dropped out and didn't have to take the normal classes, I decided to take a calligraphy class to learn how to do this.

None of this had even a hope of any practical application in my life.

If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts.

Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backward 10 years later.

Again, you can't connect the dots looking forward; you can only connect them looking backward. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life.
]

Then:
\Q[
You've got to find what you love.

And that is as true for your work as it is for your lovers.

Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work.

And the only way to do great work is to love what you do. If you haven't found it yet, keep looking.

Don't settle. As with all matters of the heart, you'll know when you find it.

And, like any great relationship, it just gets better and better as the years roll on.

So keep looking until you find it.

Don't settle.
]

And:
\Q[
When I was 17, I read a quote that went something like: "If you live each day as if it was your last, someday you'll most certainly be right."

It made an impression on me, and since then, for the past 33 years, I have looked in the mirror every morning and asked myself: "If today were the last day of my life, would I want to do what I am about to do today?"

And whenever the answer has been "No" for too many days in a row, I know I need to change something.
]

And then he quotes form the https://en.wikipedia.org/wiki/Whole_Earth_Catalog[Whole Earth Catalog], a paper Atlas from the '70s he admired:
\Q[Stay Hungry. Stay Foolish]

\Video[http://youtube.com/watch?v=UF8uR6Z6KLc]

= Backward design
{parent=cirism}
{wiki}

This is one of \x[ciro-santilli][Ciro Santilli's] most important principles.

\x[steve-jobs][Steve Jobs] has a great quote about this. He's totally right on this one!

\Q[You've got to start with the customer experience and work backwards to the technology. You can't start with the technology and try to figure out where you're going to sell it.]

\Video[http://youtube.com/watch?v=FF-tKLISfPE]
{title="Steve Jobs Insult Response" excerpt from the https://en.wikipedia.org/wiki/Apple_Worldwide_Developers_Conference[1997 WWDC].}

Decide your goal first, and then do whatever is needed to how to reach it.

Don't start randomly learning tech, because that means you \x[how-to-teach/help-students-achieve-their-goal][will waste a lot of time learning useless stuff].

There is of course some level chicken-and-egg paradox in this, as \x[image-dilbert-nuclear-power-user-requirements][highlighted by Dilbert], since choosing an achievable goal in the first place requires some level of technical understanding.

\Image[https://web.archive.org/web/20200331090146im_/https://assets.amuniversal.com/1af002106d5c01301d80001dd8b71c47]
{title=\x[dilbert] cartoon about designing a nuclear power plant from user requirements (2002)}
{description=This cartoon illustrates well how when doing \x[deep-tech] and fighting against the \x[laws-of-physics], you can't just start from user requirements, but you also have to also think "what can we actually get done at all with this new technique".}
{height=300}
{id=image-dilbert-nuclear-power-user-requirements}
{source=https://dilbert.com/strip/2002-02-20}

However, it is much more common that people will get way too involved in learning useless stuff and lose sight of the \x[art][useful end goals].

Rather, take an iterative approach:
* start with an ambitious end goal
* learn a bit of tech to try and reach it
* realize that you can't reach your end goal and pivot a bit to a related end goal that seems more realistic: \x[the-side-effects-of-ambitious-goals-are-often-the-most-valuable-thing-achieved]
* loop

There is some truth to the counter argument that "but if you don't spend a lot of time learning the basics, you can never find solutions".

However, these people underestimate your \x[brain]. The brain is beautiful, and human intuition is capable of generating interest towards the things that are actually useful to reach your goal. When you feel like learning something related to your goal, by all means, give yourself the time to do so. But this still be \x[write-free-books-to-get-famous-website/motivation][much more efficient than just learning random things that other people tell you to learn].

A Coding Horror \x[software-engineer][software specific] take on this issue: https://blog.codinghorror.com/please-dont-learn-to-code/

https://www.cartalk.com/content/rant-and-rave-36 "The New Theory of Learning" by Thomas L. Magliozzi section "Premise III: THE BACKWARDS LEARNING THEORY" says the exact same thing. Ciro actually found this when writing \x[cool-data-embedded-in-the-bitcoin-blockchain].

= How to become a good programmer?
{parent=backward-design}

Or: how to learn X.

This pops up on \x[reddit] every week.

That is the wrong question.

The right question is: what is the most awesome project I can do to improve the world?

Then, once you decide to try one, if that involves programming, learn to program to achieve that goal.

And if doesn't involve programming, then don't learn to program, and learn whatever you actually need to reach that goal instead.

Having that goal is the only way to be motivated to do something.

= Free gifted education
{parent=cirism}

This term was invented by \x[ciro-santilli], and similar ideas certainly already exists with different names by other people. As the name suggests, it basically involves combining \x[free-education]  and \x[gifted-education], but with other more specific aspects crammed in that would make a precise name too long to read, as descried below.

\x[government]{c} must create selective, \x[k-12] and \x[university]-level teaching institutions that are completely free.

As mentioned at \x[what-poor-countries-have-to-do-to-get-richer/pick-few-good-bets], these do not need to be given to all students: what we have to do is to ensure that the top N-percent of the best students will get in, and that none of them will pay. Where N is as large as the budget society decides to put into this project, the larger the better. Therefore, perhaps "gifted education" is not the ideal name for this idea, as it generally implies very small N (1%?), while this project hopes for larger N, maybe 10%. But a minimal level of quality must be attained, it is pointless to dissolve the resources too much, if we only have enough for 1%, then so be it, start with 1%.

Since all information will be available online on \x[write-free-books-to-get-famous-website], or through 1-to-1 chats with mentors, it might be cheaper for students to work from their parent's homes if their home has reasonable work conditions (a silent room with reasonable \x[internet] access and no \x[drug-addict]{p} in the house). Then the state only needs to pay transportation and temporary accommodation to attend concentrated month-long \x[laboratory] courses and week-long conferences. In cases where the home conditions are not good enough, the state can either pay for on-demand WeWork-like offices near the student's home, of for a full on-campus accommodation as in a \x[boarding-school]. What is indispensable is that all students who pass the entry criteria must have such working conditions. Students who stay home can also earn a scholarship to help pay for their rent, food and Internet access.

These institutions must start from the very first school year, and go all the way up through \x[k-12] to the end of university. It is useless to start at university-level only otherwise only the rich students will have a chance of getting in, like \x[ciro-santilli] saw in \x[brazil] at the \x[polytechnic-school-of-the-university-of-sao-paulo] in the late 2000's: one day all students were gathered in the amphitheater, and they asked the students who had only gone through free government \x[k-12] schools to raise their hands. Those were notably worse than the corresponding private schools, and the situation is inverted in \x[university], where the best schools are the government ones. Out of about 500 people, at most 10 raised their hands!

These institutions should not have \x[affirmative-action] entry quotas, including most importantly at the \x[university-entry-quotas][university level]. Both rich and poor should be able to apply. Passing the selection criteria is all that matters. We just must ensure that the schools are widely advertised amongst disadvantaged communities, so that they will at least get their children to try to apply from an early age. This way, even if the rich always have an advantage due to better overall conditions, the poor are so many more numerous that the majority of students accepted will still be poor.

The school should follow the basic principles of \x[how-to-teach], notably:
* \x[students-must-have-a-flexible-choice-of-what-to-learn]. There will be no classes, all learning will happen either \x[write-free-books-to-get-famous-website] or on 1-to-1 meeting with tutors, or in discussions with fellow students.
* \x[backward-design].

  Through it, students will be helped to directly achieve their greater life goals.

  There will be no teachers: each student will be assigned senior advisors, and together they will come with an individualized research proposal or business plan.

  There will be no useless mandatory institutional \x[exam]{p}. Exams only need to be taken if a given advisor requires it to filter candidate students. But if you manage to impress them through other means, they can just accept you without the exam.

  A fundamental part of this is to fill the \x[the-missing-link-between-basic-and-advanced]. We want to help students to reach the \x[state-of-the-art] of their field of interest as fast as possile.

These schools must pay mentors as much as the average good non-free schools so you actually get comparably good teachers. Mentor selection would also be highly competitive, just as that of the students.

Once admitted, students will have guaranteed access to the school resources for a few years. This way, they won't need to worry about passing useless exams every three months.

All that matters is that they are progressing in their development plan. Rather than exams, students will do regular progress report sessions with their advisors, and will get periodic reviews from other advisors with similar interests.

Such projects could be funded by much needed \x[wealth-tax] or other measures to \x[tax-the-rich], which the people should claim through \x[referendum]{c}, that would be come more common with the adoption of \x[electronic-voting]. Because the politicians are simply not being able to do it.

Related:
* \x[teach-for-all]
* \x[charity-school]

\Image[https://web.archive.org/web/20201015033442im_/https://static.boredpanda.com/blog/wp-content/uploads/2017/01/privilege-explanation-comic-strip-on-a-plate-toby-morris-1.gif]
{height=977}
{title=On a plate by https://twitter.com/XTOTL[Toby Morris] (2015)}
{source=https://www.rnz.co.nz/news/the-wireless/373065/the-pencilsword-on-a-plate}

\Image[https://web.archive.org/web/20201022035551im_/https://static.boredpanda.com/blog/wp-content/uploads/2017/01/privilege-explanation-comic-strip-on-a-plate-toby-morris-2.gif]
{height=983}
{title=On a plate by Toby Morris (2016) - 2}

\Image[https://web.archive.org/web/20201028142539im_/https://static.boredpanda.com/blog/wp-content/uploads/2017/01/privilege-explanation-comic-strip-on-a-plate-toby-morris-3.gif]
{height=982}
{title=On a plate by Toby Morris (2016) - 3}

\Image[https://web.archive.org/web/20201027223316im_/https://static.boredpanda.com/blog/wp-content/uploads/2017/01/privilege-explanation-comic-strip-on-a-plate-toby-morris-4.gif]
{height=1014}
{title=On a plate by Toby Morris (2016) - 4}

= The side effects of ambitious goals are often the most valuable thing achieved
{parent=cirism}

A quote by \x[university-of-sao-paulo][Ciro's Teacher R.]:
\Q[Sometimes, even if our end goals are too far from reality, the side effects of trying to reach them can have meaningful impact.]

If the goals are not ambitious enough, you risk not even having useful side effects so show in the end!

By doing the prerequisites of the impossible goal you desire, maybe the next generation will be able to achieve it.

This is basically why \x[ciro-santilli-s-stack-overflow-contributions][Ciro Santilli has contributed to Stack Overflow], which has happened while was doing his overly ambitious projects and notice that all kinds of basic pre-requisites were not well explained anywhere.

This is especially effective when you use \x[backward-design], because then you will go "down the dependency \x[graph] of prerequisites" and smoothen out any particularly inefficient points that you come across.

Going into such productive \x[procrastination] is also known informally as \x[yak-shaving].

There are of course countless examples of such events:
* https://youtu.be/qrDZhAxpKrQ?t=174 Blitzscaling 11: Patrick Collison on Hiring at Stripe and the Role of a Product-Focused CEO by Greylock (2015)

The danger of this approach is of course spending too much time on stuff that will not be done enough times to be worth it, as highlighted by several \x[xkcd]{p}:
* \x[image-xkcd-974-the-general-problem]
* \x[image-xkcd-1205-is-it-worth-the-time]
* \x[image-xkcd-1319-automation]

\Image[https://web.archive.org/web/20210323181809if_/https://imgs.xkcd.com/comics/the_general_problem.png]
{title=\x[xkcd] 974: The general problem.}
{source=https://xkcd.com/974/}

\Image[https://web.archive.org/web/20210323005145if_/https://imgs.xkcd.com/comics/is_it_worth_the_time.png]
{title=\x[xkcd] 1205: Is it worth the time.}
{source=https://xkcd.com/1205/}

\Image[https://web.archive.org/web/20210323223420if_/https://imgs.xkcd.com/comics/automation.png]
{title=\x[xkcd] 1319: Automation.}
{source=https://xkcd.com/1319/}

= Ciro Santilli's best random thoughts
{parent=cirism}
{c}

These are "original" thoughts that Ciro had which at some point in the past amused him. Some would call them pieces of wisdom, others self delusion. All have likely been thought by others in the past, and some of them Ciro thinks to himself after a few years: "why did I like this back then??".

After Ciro's colleague was doing that in a project:
\Q[https://en.wikipedia.org/wiki/Chuck_Norris_facts[Chuck Norris] can parse pseudocode.]

On the theory vs practice of computer science:
\Q[Whereas \x[turing-complete][Turing completeness] is enough for \x[mathematician]{p}, humans need "run-on-Debian-complete".]

On how human perception of media is completely unrelated to the computer's transmission mechanism:
\Q[Media for humans is not byte streams. It is magic.]

This is of course just another version of https://en.wikipedia.org/wiki/A_picture_is_worth_a_thousand_words[one picture is worth a thousand words].

Others:
* \x[science-is-the-reverse-engineering-of-nature]

= Animal rights
{parent=cirism}

\x[ciro-santilli] has mixed feelings about animal rights.

On one hand, his irrational side wants of course all animals to be happy.

On the other, he does not care about this enough to not kill and \x[eat] them, even though he believes that you could live off \x[plant]{p} relatively well.

His more rational side says: humans are sacred. Either because you believe in the \x[religion][soul], or because your \x[brain][built-in empathy behaviours]. If it is not a human, do whatever you want to it. Killing is already undoubtedly the greatest \x[sin]. It is not OK to kill a human painlessly is it? So if torturing it brings humans good, then do it.

Of course, this does get use close and closer to "the what is a human" question, which is more relevant than ever in the \x[molecular-biology-technologies][awakening of genetics]: all species are after all a continuum right?

And Ciro does not have a simple solution to this problem, besides that in 99.9999% the answer is obvious to 99.9999% of the people, and for the others cases, we have to do it like the law and make flawed rules to cover the remaining 0.000099999% cases and let juries decide the rest.

The only other sensible sacredness barrier is the common vegetarian "nervous systems are sacred" one. But how can you believe that if you also follow the religion of \x[physics], where \x[physics-and-the-illusion-of-life][everything is just made of atoms]?

Is it evil to take one neuron and torture it? What does that even mean? It will be fun when \x[brain][pain and pleasure] are fully understood.

And you are going to have a really hard time when https://en.wikipedia.org/wiki/Ahimsa_in_Jainism[mosquitoes start transmitting deadly diseases that kill your family].

Laws in most 2020 Western modern societies have converged to a hypocritical balance between not offending people too much by hiding the killing and minimizing the pain when possible at low cost. Killing animals painlessly is basically always fine if it brings any "non sadistic" pleasure to humans. And torturing animals is fine with approval e.g. to make medicines.

This has the downside of increasing costs for society. Maybe there are practical benefits besides people feeling bad about animals? Maybe we would have more serial killers if people were free to torture animals? Maybe people in butcher shops would become depressive if their bosses weren't forced to use more expensive painless killing methods? Neither of those seems like huge arguments though.

It eventually comes down to: "how much more is a human life worth than that of an animal" which brings \x[jesus]'s https://www.biblegateway.com/passage/?search=Matthew+6%3A25-34&version=NIV[Matthew 6:25-34 "Do Not Worry"] (https://web.archive.org/web/20190801221835/https://www.biblegateway.com/passage/?search=Matthew+6%3A25-34&version=NIV[archive]) quote to mind:
\Q[Therefore I tell you, do not worry about your life, what you will eat or drink; or about your body, what you will wear. Is not life more than food, and the body more than clothes? Look at the birds of the air; they do not sow or reap or store away in barns, and yet your heavenly Father feeds them. Are you not much more valuable than they?]

Non-vegetarian pets owners also baffle Ciro, as most of them basically extend the sacred human line further arbitrarily to certain other cute looking animals like dogs, cats or rabbits, but will gladly kill a cow indirectly by paying someone to pay someone to pay someone to cut it into small pieces. Or they believe that certain specific individuals are sacred. Admittedly, the latter is more rational, and looks a lot of how we treat our own families well, and can accept that other families are not doing so well.

Ciro's even more rational evil side says: the real reason why humans are sacred is a practical one: people have families that love them, and they come to kill you if you kill them, and https://en.wikipedia.org/wiki/Characters_in_Romeo_and_Juliet#Prince_Escalus[this starts endless chains of violence] that make society unbearable.

While animals feel pain when their children are killed, their memory and logic is just not good enough to fully understand that humans in general have an evil plot to it, and they don't have a method to communicate between themselves and fight back.

For similar reasons, Ciro is pro-abortion.

Futurama's S02E15 \x[the-best-television-series]["The Problem With Popplers" episode] blew Ciro's mind so much.

Ciro should stop discussing topics in which infinite argument has already been had. Sometimes he writes things down so he can stop caring the next time the subject comes up, as there's no need to say it again once it is written.

= University entry quotas
{parent=cirism}

\x[ciro-santilli] is against \x[affirmative-action] university entry quotas that reserve spaces e.g. for students from discriminated races or poor families. Instead, he believes that affirmative action should take place on earlier stages of education as described at: \x[free-gifted-education].

Notably, \x[brazil] has implemented a very heavy university entry quota system \x[ciro-santilli-s-formal-education][after Ciro had left university there]: https://www.bbc.co.uk/news/business-23862676

This is of course easy for a white male from a privileged background to say, and infinite debate has already been had on this matter, but here goes again.

First, in defense to the personal attack, Ciro raises the fact that he has dedicated large chunks (all?) of his life to open source \x[open-source-software][software] and knowledge in general, which Ciro believes is the only way to actually make the world fairer to poor countries. His money (time) is where his mouth is.

One good argument in favor of the \x[brazilian] quota system, is that the kids who enter university because of quotas http://www.scielo.br/scielo.php?script=sci_arttext&pid=S0100-15742009000200014[do just as well as those who don't].

Ciro has actually believes that this is possible, and offers the following possible explanation: \x[write-free-books-to-get-famous-website/motivation][most of pre-university knowledge is useless, and university selection system is crap, and Ciro wants to destroy it with a system in which anyone can learn university stuff from home].

Both the top end of the quota and non-quota kids are basically equally capable of doing useful stuff therefore.

Only a tiny fraction of what you learn in high school is useful for university or your career.

And possibly more importantly than knowledge, Ciro saw many of his colleagues (basically all of which were from relatively privileged backgrounds) "do badly" in university, because of lack of motivation, because they had chosen a course only to find that they were not interested in it because the existing \x[how-to-teach/help-students-achieve-their-goal][high school educational system is crap and does not help them find what they love] and because it costs you \x[students-must-have-a-flexible-choice-of-what-to-learn][several years of your life to change your choice in most universities] (long live \x[ecole-polytechnique]).

Maybe the fact that poor kids know that they are \x[fucked] if they fail, and so they have to succeed at any cost, might also help with motivation. Which is a terrible terrible thing, because only those who have to leeway to take risks end up taking them and making the \x[the-next-big-thing].

Ciro believes instead that only once kids have learnt university level stuff in their area of interest \x[write-free-books-to-get-famous-website/motivation][for free on the Internet] should they go through selection based on that specific and much more concentrated useful knowledge.

And this competition must only be used to distribute resources which you can't learn from \x[fucking] computers:
* laboratories. Actually, one of Ciro's most important advices to kids nowadays is that if you are in doubt about what course to choose, \x[deep-tech][make the choice that includes laboratories], because you can learn already learn \x[computer][computer] stuff for free whenever you want, but if you don't take it now, that will likely be your last opportunity to set foot on a laboratory
* \x[how-to-teach/talk-with-individuals-not-to-groups][one to one mentorship] on advanced master thesis/PhD level projects

Once this point knowledge is reached however, it starts to become unclear if a single "everyone takes the same test to avoid discrimination" test is feasible anymore, and we start entering the much more relevant (and potentially discriminatory) "I am a teacher trying to advance the \x[state-of-the-art], and I need https://en.wikipedia.org/wiki/Person_having_ordinary_skill_in_the_art[a person mildly skilled in the art] to do some slave labor for me", which is PhDs selection work.

If quota are in place, what will happen is that parents of the rich kids will start investing less in education, and possibly just put their kids in high schools, and do home schooling instead. This would therefore reduce the total investments the country makes in education!

Outside of the obvious technical evolution proposed, Ciro is a huge proponent of \x[free-gifted-education].

Then let those kids pass exactly the same university entry exams, and watch them crush the average privileged kids.

This advice is similar to what is mentioned at: \x[what-poor-countries-have-to-do-to-get-richer]. When you don't have money to do everything, you must select a few good bets and focus on them. You can't pay a lot to every public school teacher, so you must select a few select places that need it the most. As those smart bets pay off, you start to have more and more money to expand the system further.

= Students must have a flexible choice of what to learn
{parent=cirism}

This is one of the main reasons why \x[ciro-santilli] invested in \x[write-free-books-to-get-famous-website].

Ciro believes that the only thing students must be forced to learn \x[having-more-than-one-natural-language-is-bad-for-the-world][is to speak read and write English] and that \x[how-to-teach/help-students-achieve-their-goal][a teacher's main job after that is to help students find their next big goals] and also ties into the \x[backward-design][backward design philosophy].

Everything else, the student must choose.

This idea is generally known as \x[self-directed-learning].

This is most notable in \x[university-entry-quotas][University entry examinations of poor countries], where students often have to waste one extra year of their lives to go through preparation for the useless university entry exams. And then, surprise surprise, if they actually get in, they find that this is not what they really wanted to do, and they just go through to the end miserably because they understandably they don't want to risk another year of their lives.

Ciro saw this first hand \x[ecole-polytechnique] which was way freer than his \x[university-of-sao-paulo][university in Brazil].

\x[steve-jobs]'s university dropout stories from \x[steve-jobs-2005-stanford-commencement-address] also come to mind.

Interesting projects:

* \x[brown-university]'s Open Curriculum concept sounds exemplary:
  * https://www.youtube.com/watch?v=Cq_6qBnjZTA
  * https://www.brown.edu/academics/undergraduate/open-curriculum
* \x[advanced-placement]

= How to diagnose a genius by Wilhelm Ostwald (1909)
{c}
{parent=students-must-have-a-flexible-choice-of-what-to-learn}
{title2=Grosse Männer}

https://www.nature.com/articles/081121a0 \x[academic-publishing][paywall] after mores than 100 years.

From the abstract:
\Q[Much money, his student went on to say, is spent by various Governments in attempting to discover those people whose thorough education may be expected to bring in a return of value to the State, and the question how best to discover latent genius is an eminently practical one. After cogitation, Prof. Ostwald came to the conclusion that it is those students who cannot be kept on the rails - that is, who are not contented with methodical teaching - who have within them the seeds of genius]
\x[ciro-santilli] couldn't agree more... notably \x[students-must-have-a-flexible-choice-of-what-to-learn].

= Magnet  school
{parent=students-must-have-a-flexible-choice-of-what-to-learn}

= Advanced Placement
{c}
{parent=students-must-have-a-flexible-choice-of-what-to-learn}

This is a good initiative. It doesn't go nearly as deep as it needs to go to fix \x[students-must-have-a-flexible-choice-of-what-to-learn], but it is a start!

= Rooting for sport teams
{parent=cirism}

Since \x[ciro-santilli] is \x[brazilian], this is understandably a common conversation opener.

And rightly so, since \x[soccer] in particular is truly ridiculously popular in \x[brazil], where "what is your local soccer team?" is just as valid a conversation starter as "Which city are you from?".

So here goes Ciro's 2020 cynic answer:
\Q[I currently root actively against Brazil.]

The ironic reason is simple: maybe is Brazil loses more on this \x[art][useless art], then maybe people will get tired of it, and instead \x[physics][invest on more useful and beautiful arts].

Notably, what Ciro really wants people to root for are:
* the number of \x[brazilian] \x[nobel-prize]{p}, which is zero, yes, zero, as of 2020, despite a population of 210 million people. But thank \x[god] for our one https://en.wikipedia.org/wiki/Artur_Avila[Field Medal], what an epic start, even though \x[art][Mathematics is useless].
* the number of high tech companies that have a global impact, which is likely extremelly low as of 2020, and must contain only a few mammoths that dominate some local \x[commodity] market and therefore got enough money from that to expand a bit of technology worldwide. But they were mostly not classic tech \x[startup]{p} that did world innovation from the start.
* how low your country's https://en.wikipedia.org/wiki/Gini_coefficient[Gini coefficient is]

Don't get Ciro wrong.

\x[ciro-santilli-s-sport-practice][Playing sports yourself is amazing].

Observing professionals who do it amazingly can be beautiful.

But why the F do you have to root for a team unless your wife or children are playing in it (and even then..., how will that help?)?

What will you get from that?

Even if it is your national team, why does it matter if they win or lose?

https://en.wikipedia.org/wiki/Football_hooliganism[Hooliganism] just takes that uselessness to a hole new level.

Now some confessions.

A five year old Ciro will never forget when the feeling of Brazil won the https://en.wikipedia.org/wiki/1994_FIFA_World_Cup[1994 World Cup] on the penalties and everyone went mad.

A nine year old Ciro stopped watching the https://en.wikipedia.org/wiki/1998_FIFA_World_Cup[1998 World Cup Final] of Brazil vs France half way during the 3-0 massacre and went to his front garden to kick his \x[soccer] ball on the metallic fence gate which represented a goal.

After that, Ciro went through puberty he guesses, and noticed that the \x[natural-science]{p} are just cooler.

= Governments should provide basic Internet infrastructure
{parent=cirism}

\x[company]{p} are getting too much power to distort regulations and destroy privacy.

Taxes pay for the physical car roads, so why shouldn't they also pay for the "online roads" of today?

The following services are obvious picks because they are so simple:
* \x[electronic-money]
* \x[email]
* \x[messaging-software]
* \x[calendar]
* \x[oauth], e.g.: https://franceconnect.gouv.fr/
* \x[domain-name]

Other less simple ones that might also be feasible:
* \x[geographic-information-system]. Notable anti-example: \x[united-kingdom]'s \x[ordnance-survey]'s apparently non-free-data 
* App stores

All of them should have strong privacy enabled by default: \x[end-to-end-encryption], logless, etc. \x[government]{c}{p} are not going to like this part.

And then if you ever forget a password or lose a \x[multi-factor-authentication] token, you can just go to an ID center with your ID to recover it.

= Social media as a public utility
{parent=governments-should-provide-basic-internet-infrastructure}

\x[ciro-santilli] thinks that maybe the government does not need to provide those, but it needs to \x[governments-have-lost-all-power-to-companies][regulate the fuck out of them], notably control over censorship in those platforms: \x[the-deplatforming-of-donald-trump].

More info at: https://cirosantilli.com/china-dictatorship/unjust-social-media-censorship-in-the-west

= There is value in tutorials written by beginners
{parent=cirism}
{wiki}

\x[ciro-santilli] is a big believer that there is value in tutorials written by beginners, because beginners are more likely to explain things in a way that other beginners can understand.

Even though they make more mistakes, this more approachable point of view can be very valuable.

And mistakes/omissions can be corrected on comments by people with more knowledge, so that the writer also ends up learning something new.

Related: \x[how-to-teach/publish-your-material-even-if-it-is-not-perfect].

By other people:

* https://jakobschwichtenberg.com/about/ from \x[jakob-schwichtenberg] mentions quotes C. S. Lewis book "Reflections on the Psalms"https://www.cslewisinstitute.org/webfm_send/1139{ref}:
  \Q[It often happens that two schoolboys can solve difficulties in their work for one another better than the master can. \[...\] The fellow-pupil can help more than the master because he knows less. The difficulty we want him to explain is one he has recently met. The expert met it so long ago he has forgotten. He sees the whole subject, by now, in a different light that he cannot conceive what is really troubling the pupil; he sees a dozen other difficulties which ought to be troubling him but aren't.]

= There is value of tutorials written by early pioneers of the field
{parent=there-is-value-in-tutorials-written-by-beginners}
{wiki}

Everyone is beginner when the field is new, and \x[there-is-value-in-tutorials-written-by-beginners].

For example, \x[ciro-santilli] felt it shocking how direct and satisfying \x[richard-feynman]'s \x[scientific-vulgarization] of \x[quantum-electrodynamics] were, e.g. at: \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979], and that if he had just assumed minimal knowledge of \x[mathematics], he was about to give a full satisfactory picture in just a few hours.

The same also applies to early original papers of the field, as notably put forward by \x[ron-maimon].

= Cirocoin
{c}
{parent=cirism}
{wiki}

\x[good]{c} pious \x[cirist]{p} earn Cirocoins.

Cirocoins are the most valuable form of currency that exists at any point.

Cirocoins can only be issued by \x[ciro-santilli].

Cirocoins are strictly nominal, and cannot be traded by recipients with anyone but Ciro, i.e. they are extremely \x[illiquid].

Cirocoins can be removed from recipients at any point if they commit non-Cirist acts.

It is not possible to give a precise number to how many Cirocoins anyone owns. This is decided on a transaction by transaction basis. Ciro can therefore only inform you if your Cirocoin balance increased or decreased, but any attached number has no value, and thus are equivalent to expressions of type "you gained/lost a Cirocoin".

The following inferior currencies come to mind:
* \x[knuth-reward-check]
* \x[erdos-number]

= Good and evil
{parent=cirism}
{wiki}

Notable lists:
* http://harmful.cat-v.org/ from \x[cat-v-org]

= Evil
{parent=good-and-evil}

Things that are not nice such as:
* \x[taboola], Outbrain, and other \x[chumbox]
* \x[blob]{child}{p}
* \x[europe-cookie-law]{child}
* adhesive inside mobile phones and more generally, \x[planned-obsolescence]{child}
* \x[jupyter-notebook]{child}
* typographical characters that look like ASCII ones, but are not the ASCII ones, e.g. https://en.wikipedia.org/wiki/Quotation_mark[typographical quotes], https://en.wikipedia.org/wiki/Dash[em-dash]. The https://en.wikipedia.org/wiki/Hyphen#Non-breaking_hyphens[non-breaking hyphen] is not even whitespace, and by def Why not stick to ASCII when ASCII is good enough?
* \x[excessive-encapsulation-is-the-root-of-much-evil][excessive encapsulation]
* \x[replacement-of-master-and-slave-terminology-from-technology]
* \x[mailing-list]{child}{p}. And to add insult to injury, HTML on \x[mailing-list] messages instead of plaintext.
* blank lines in code added by people trying to increase clarity, especially when there is already indentation for that. Every blank line must be preceded by a line comment explaining what the following block is about, or removed.
* \x[messaging-software-that-force-you-to-have-a-mobile-phone]{child}
* ads by telephone/SMS
* "state" such as global variables and object members, long live \x[programming-language][functional programming]?
* mosquitoes, the only intrinsically bad thing about \x[brazil][tropical countries]
* projects with slow compilation times
* \x[microsoft-windows]
* the 2019 \x[chinese-government]
* e-learning websites that only allows verified teachers to write content. \x[write-free-books-to-get-famous-website][Cowards who can't handle ranking algorithms].
* \x[domain-specific-language]{child}
* a build system without an out-of-tree option
* non-linear \x[git] history: https://stackoverflow.com/questions/20348629/what-are-advantages-of-keeping-linear-history-in-git
* visual programming languages like https://en.wikipedia.org/wiki/Scratch_(programming_language)[Scratch]. Waste of time. Text programming languages are already equally as visual due to indentation:
  ``
  if x == 0:
      x = 1
  ``
  Just make good serious gamedev libraries and \x[integrated-development-environment]{p} for those real languages instead.
* software that prevents you from running as root. Let me \x[fucking] shoot myself in the foot if I want to. It is better than having to deal with your hand holding \x[bullshit], which is done in a different way for every project. E.g.: https://stackoverflow.com/questions/17466017/how-to-solve-you-must-not-be-root-to-run-crosstool-ng-when-using-ct-ng/53099177#53099177
* \x[medium-website]{child}
* \x[luxury-goods]{child}
* \x[euphemism]{child}
* \x[academic-publishing] companies without full free access, e.g. https://en.wikipedia.org/wiki/Elsevier[Elsevier], https://en.wikipedia.org/wiki/Springer_Publishing[Springer], and the like. Research paid with taxpayer money must be made available for free. Researchers and reviewers all work for peanuts, while academic publishers get money for doing the work that an algorithm could do. \x[write-free-books-to-get-famous-website].
* websites without \x[oauth]
* shower room without a window to the exterior (mould!!!)
* single programs with their interface split across multiple windows, e.g. \x[gimp], \x[zynaddsubfx]
* \x[graphical-user-interface]{child}{p}
* \x[logogram]{child}{p}
* \x[infinitesimal]{child}{p}. Just use \x[limit-mathematics] instead, please
* \x[country]{child}
* \x[mailing-list]{child}
* \x[knowledge-olympiads]{child}
* \x[programming-languages-without-a-decent-dominating-package-system]{child}
* \x[closed-source-offline-software-used-by-millions]{child}
* \x[exam]{p}
* \x[security-through-obscurity]{child}{p}
* \x[dots-in-gmail-address]{child}
* things in \x[website]{p} that look like links, and behave like links, but don't let you middle click to open them on a separate tab
* \x[k-pop]{child}
* \x[numerical-computing-language]{child}
* \x[fiscal-paradise]{child}{p}
* when the front-end of an website changes an important permanent state, but the URL does not change
* \x[splash-screen]{child}{p}: you should show boot messages so that people will know what to \x[google] for when things fail. Do you think computer newbies will be afraid and have \x[nightmare]{p}?
* \x[milk-chocolate]{child}: why would you \x[eat] that instead of \x[dark-chocolate] if you are older than 10?
* \x[to-talk-about-something-without-giving-the-real-name-to-not-scare-off-the-audience]{child}
* \x[mathematical-symbol-that-looks-like-a-greek-letter-but-isn-t]
* when more than two people gather to play a \x[board-game] or \x[video-game], and two or more prople start chatting on and on about random subjects rather than concentrating on the game
* watching \x[television] while \x[eating]. Same for reading, or doing basically anything else but eat. The only acceptable activity is talking relaxedly, not about work.
* noises coming out of your \x[bicycle]. It is so hard to find where they come to fix them!!!

= Online forums that lock threads after some time are evil
{parent=evil}

Like \x[reddit]{child} and https://support.google.com/[].

And of course, \x[4chan] just takes that to a whole new level, usually closing on the same day, and then getting deleted within a week. Why would anyone contribute non-\x[illegal] content to that king of system?!

Ridiculous, so when new information comes out, we just duplicate all the old comments on a new thread again?

Remember, \x[ciro-santilli] is the \x[ciro-santilli-s-stack-overflow-contributions][Necromancer God].

\x[dan-dascalescu] agrees for \x[reddit] specifically: https://www.reddit.com/r/TheoryOfReddit/comments/9oujwf/why_archiving_old_threads_is_a_bigger_problem/

= Planned obsolescence
{parent=evil}
{wiki}

Related:
* https://en.wikipedia.org/wiki/Electronics_right_to_repair
* https://en.wikipedia.org/wiki/Phoebus_cartel

The first time \x[ciro-santilli] \x[googled] this was when trying to repair his cell phone.

2019 cell phones are glued together with adhesive, which makes them impossible to repair them unless you have a heat gun, spend hours and hours learning and planning, and accept the risk of breaking the screen

Repairability scores: https://www.ifixit.com/smartphone-repairability

If you take a phone less than 300 dollars to a repair shop in the first world, they will say: I've never repaired this crap, and likely for the price of the repair you should just buy a new one, and so to the trash goes the old one, polluting the planet, and in comes a new one, enriching the manufacturer further.

European Union, \x[europe-cookie-law][I need you now].

Oh, there is some 2017 EU action actually: (https://web.archive.org/web/20190521082737/https://www.europarl.europa.eu/news/en/press-room/20170629IPR78633/making-consumer-products-more-durable-and-easier-to-repair[archive]) https://www.europarl.europa.eu/news/en/press-room/20170629IPR78633/making-consumer-products-more-durable-and-easier-to-repair

Good article: https://www.androidauthority.com/device-repairability-807585/ (https://web.archive.org/web/20191201135434/https://www.androidauthority.com/device-repairability-807585/[archive]).

= Discounts that happen more often than not
{parent=evil}

These are obviously just a manipulative lie sales practice to make you want to buy at regular price.

Shame on you.

Similarly, recurrent Internet payments that give you one year's discount, and make you put up on your calendar to call them one year later threatening to give more discounts to be as cheap as competitors or I'm out.

= Good
{parent=good-and-evil}

* \x[kimchi]{child}
* \x[reverse-debugging]{child}
* \x[e-ink]{child}
* \x[web-archiving]{child}
* \x[buildroot]{child}
* https://stackoverflow.com/questions/1019116/using-ls-to-list-directories-and-their-total-sizes/55519414#55519414[ncdu]
* \x[integrated-development-environment]{child}{p}
* \x[ciro-santilli-s-sport-practice][degreaser]
* https://en.wikipedia.org/wiki/Unified_Modeling_Language[UML]: while it might seem like a over-thought thing and likely is, the basic idea that understanding "one to one vs one to many vs many to many" relationships between objects and which object can see which object, is a fantastic approach towards understanding complex object oriented code
* \x[open-source-software]{child}, including \x[open-source-scientific-computing-consultancies]
* \x[computer]{child}
* https://en.wikipedia.org/wiki/FOSDEM[FOSDEM]. \x[ciro-santilli] attended in 2016, and felt extremely good together with all those amazingly smart open source hackers: https://www.quora.com/What-are-the-best-open-source-conferences/answer/Ciro-Santilli
* https://sass-lang.com/[Sass]
* \x[vimium]{child}
* \x[bisection-software-engineering]{child}
* \x[vector-graphics]{child}, notably \x[scalable-vector-graphics]{child}
* \x[ascii-art]{child}
* \x[oauth]{child}
* \x[command-line-interface]{child}
* \x[virtualization]{child}
* https://en.wikipedia.org/wiki/Anusol[Anusol]
* \x[autodidacticism]{child} and \x[self-directed-learning]{child}
* \x[end-to-end-encryption]{child}
* \x[the-criterion-collection]{child}
* \x[version-control]{child}
* \x[sqlite]{child}
* \x[guerrilla-mail]{child}
* \x[posix]{child}
* \x[static-website]{child}
* \x[freeman-dyson]{child}
* \x[open-access-academic-publisher]{child}{p}
* \x[unconditional-basic-income]{child}
* \x[transhumanism]{child}
* \x[2fa]{child}, and notably \x[2fa-app]{child}{p}
* \x[human-readable-format]{child}{p}
* \x[wealth-tax]{child}
* \x[reproducible-builds]{child}
* \x[f-droid]{child}
* \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021]{child}
* \x[drug-liberalization]{child}
* \x[wiki-binge]{child}
* \x[molecular-sciences-course-of-the-university-of-sao-paulo]{child}
* \x[meal-deal]{child}

= Ciro Santilli's website
{c}
{parent=ciro-santilli}
{title2=cirosantilli.com}

\x[ciro-santilli]'s \x[website]{parent} is a dump of his \x[brain]. Ciro's still looking for the restore that backup on a new body though.

However it won't remain like that for long, because it will be migrated to \x[write-free-books-to-get-famous-website], and therefore become a brain dump of society itself.

\Video[https://www.youtube.com/watch?v=_Jtpf8N5IDE]
{title=Who Wants To Live Forever by Queen (1986)}

= Unmigrated sections of the old version of Ciro Santilli's website
{parent=ciro-santilli-s-website}

It is interesting to see how your own ideas shift with time, and \x[ciro-santilli] doesn't think the following are very important anymore, so he was lazy to migrate them.

When he did the original website Ciro was in a "I must show off my skills to get a job mindset", but then after he landed a few jobs he moved to a "CV websites are useless, just do amazing projects and showcase them on your website to help them succeed" mindset.

\Include[interests]
\Include[projects]
\Include[skills]

= Why Ciro Santilli removed Disqus comments from his website in 2019-05-04
{parent=ciro-santilli-s-website}

Commit: https://github.com/cirosantilli/cirosantilli.github.io/commit/794705a201a79b5128934e69df85e3511655c03f

As Ciro started getting a lot of comments on his home page \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][about China], he decided that \x[disqus] does not scale, and that it would be more productive long term to remove it and point people to \x[github] issues instead.

Upsides of removal:
* Disqus discoverability is bad:
  * there is no decent way to search existing issues, you have to do \x[javascript] infinite loading + Ctrl + F. So every reply that he wrote is a waste of time, as it will never be seen again.
  * comments don't have: decent URLs, titles, metadata like tags or open / close
* Disqus archival is bad: http://web.archive.org/ does not work, and no one knows how to export the issues: https://www.archiveteam.org/index.php?title=Disqus
* before, there were two places where people could comment, Disqus and \x[github] issues. Now there is just one.
* Disqus has ads if you ever reach enough traffic, which unacceptable, especially if the website owner don't get paid for them! It also makes page loads slower, although that likely does not matter much.

Downsides:
* people are more likely to comment on Disqus than to create an issue on GitHub, especially because most people use GitHub professionally. But this has the upside that there will be less shitposts as well.
* with Disqus you can see all issues attached to a page automatically, which is nice. But for as long as Ciro is alive, he intends to just solve the issues, cross link between content and issues and tag things appropriately.

Ciro's stance towards China hasn't changed, and China comments and corrections about his website are still welcome as always.

Related issue: https://github.com/cirosantilli/cirosantilli.github.io/issues/37

= DNS configuration of Ciro Santilli's website
{c}
{parent=ciro-santilli-s-website}

AKA how this https://github.com/cirosantilli/cirosantilli.github.io[GitHub page] gets served under the domain: https://cirosantilli.com

Ciro only touches this very rarely, and always forgets and go into great pain whenever a change needs to done, so it is important to document it.

The last change was of 2019-07-07, when Ciro moved from the www subdomain https://www.cirosantilli.com to the APEX https://cirosantilli.com[]. A redirect is setup from the www subdomain to APEX.

https://en.wikipedia.org/wiki/GoDaddy[GoDaddy] DNS entries:

``
Type    Name    Value                   TTL
A       @       185.199.108.153         1 Hour
A       @       185.199.109.153         1 Hour
A       @       185.199.110.153         1 Hour
A       @       185.199.111.153         1 Hour
CNAME   www     cirosantilli.github.io  1 Hour
``

where the IPs are obtained from: https://help.github.com/en/articles/setting-up-an-apex-domain#configuring-a-records-with-your-dns-provider (http://web.archive.org/web/20190707085154/https://help.github.com/en/articles/setting-up-an-apex-domain#configuring-a-records-with-your-dns-provider[archive]).

Under https://github.com/cirosantilli/cirosantilli.github.io/settings

* Custom domain: `cirosantilli.com`
* Enforce HTTPS: checked

And the CNAME file is tracked in this repository: \a[CNAME].

= The CSS of Ciro Santilli's website looks broken
{parent=ciro-santilli-s-website}

That which does not exist, cannot be broken.

And of course:
* \x[one-page-to-rule-them-all]
* https://motherfuckingwebsite.com

= Ciro Santilli's website is not mobile friendly
{parent=ciro-santilli-s-website}
{c}

True \x[art] cannot be consumed in mobile format.

= Mathematics typesetting setup of Ciro Santilli's website
{parent=ciro-santilli-s-website}

\x[katex] is automatically used in \x[cirodown].

= Media rationale of Ciro Santilli's website
{parent=ciro-santilli-s-website}

= One page to rule them all
{parent=media-rationale-of-ciro-santilli-s-website}

It is true that one image is worth a thousand words, but unfortunately it is also true that one image takes up at least as much bytes as a thousand words!

Having one single page to rule them all is of course the \x[ideal] setup for a website, as you can Ctrl + F one ToC and quickly find what you want.

And, with \x[linux-kernel-module-cheat] Ciro noticed that it is very hard to write so much intelligent prose that becomes larger than reasonable to load on a single webpage.

He then started using this technique for everything he writes, including this page and \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][Chinese government].

However, if there are too many images on the page, the loading of the last images would take forever in case users want to view the last sections.

There are two solutions to that:
* be traditional and create separate web pages
* be bold and load images as they appear on the viewport: https://stackoverflow.com/questions/2321907/how-do-you-make-images-load-only-when-they-are-in-the-viewport/57389607#57389607

  Edit: OK, it was standardized with `loading=lazy`, without need \x[javascript]!

  Now the last awesome thing would be a method that loads first images in viewport, then those below, and then those above, that would be the ultimate solution.

  This question comes close: https://stackoverflow.com/questions/7906348/change-loading-order-of-images-already-on-page

Ciro is still deciding between those two. The traditional approach works for sure but loses the one page to rule them all benefits.

The innovative approach will work for interactive viewing, but archive.org will fail to load the images for example, and there may be other unforseen consequences.

Wikimedia Commons is awesome and automatically converts and serves smaller versions of images, so always choose the smallest images size needed by the output document. Readers can then find the higher resolution versions by following the page source.

This also comes to mind: https://motherfuckingwebsite.com

= Where to store images
{parent=media-rationale-of-ciro-santilli-s-website}
{id=media-rationale-of-ciro-santilli-s-website/where-to-store-images}

Since images are large, they bring the following challenges:
* keeping images in the main Git repository with text content makes the repository huge and slow to clone, and should not be done
* storing and serving images could cost us, which we want to avoid

To solve those problems, the following alternatives appear to be stable enough and should be used decreasing preference:
* for all images, use the separate GitHub repository: https://github.com/cirosantilli/media

  This way, the entire website is relies on a single third party: GitHub, so we have a simple https://en.wikipedia.org/wiki/Single_point_of_failure[single point of failure].

  We are at the mercy of GitHub's 1GB size policy: https://help.github.com/en/articles/what-is-my-disk-quota[], but it will take a while to hit that.

  GitLab however has a 10Gb maximum size: https://about.gitlab.com/2015/04/08/gitlab-dot-com-storage-limit-raised-to-10gb-per-repo/ so we could move there is we ever blow up 1Gb on GitHub.

  Both GitLab and GitHub allow uploading files through the web UI, so downloading a large repo is never needed to contribute.

  GitHub does not serve videos like it does images however as of 2019.
* https://commons.wikimedia.org/wiki/Main_Page[Wikimedia Commons] for videos if the following conditions are met:

  * https://commons.wikimedia.org/wiki/Commons:Project_scope[in scope]: "educational material in a broad sense", but not e.g. "Private image collections, e.g. private party photos, photos of yourself and your friends, your collection of holiday snaps and so on.". I don't think they will be too picky even with low quality photos.
  * allowed format, e.g. images or videos, but not ZIPs
  * allowed license: CC BY SA, but no fair use

  Since Wikimedia Commons has a higher level of curation and is an educational not-for-profit, it is the method most likely to remain available for the longest time.

  For this reason, we highly recommend uploading any acceptable files there as well as an additional backup.

  The downside is that its tooling is not as good, e.g. https://webapps.stackexchange.com/questions/135251/how-to-download-all-files-from-an-uploader-on-wikimedia-commons[there are a bunch of messy unofficial tools for batch operations], and upload takes more effort.

  Another downside of Wikimedia Commons is that while we can choose the basename of files, it also adds some extra SHA crap to the beginning of URLs, making them harder to predict.

  Another serious downside is that they randomly rename images without redirects... e.g. they renamed https://upload.wikimedia.org/wikipedia/en/0/03/STJ_SVG_file.svg to https://upload.wikimedia.org/wikipedia/commons/8/81/Superconducting_tunnel_junction.svg

  Another "downside" is that they are extremely strict about copyright compliance. This is good because you can be pretty sure that they are correct in general, but it also means that they are very conservative, and delete things where fair use would be OK. And if those fair uses have no Wikipedia page, they won't show up anywhere.
* https://archive.org for anything else, e.g. videos that Wikimedia commons does not accept.

  All content will be tracked under the `cirosantilli` collection: https://archive.org/details/cirosantilli

  archive.org has a very convenient upload and lax requirements. The generated URLs are predictable (single SHA prefix for the entire collection).

  Never trust a website that is not on \x[github-pages], for-profit companies will take down everything immediately as soon as it stops making them money.

  Every external link to non-GitHub pages must be archived. And GitHub links must be forked.

  We should also backup images that Wikimedia Commons does not accept here in addition to the https://github.com/cirosantilli/media repository.

The following alternatives seem impossible because Ciro could not find if they expose direct links to the images:
* \x[google-photos] https://webapps.stackexchange.com/questions/92777/how-to-get-the-direct-link-to-an-image-in-my-google-photos
* Imgur https://webapps.stackexchange.com/questions/84535/has-imgur-stopped-giving-direct-links

The following do have direct links:
* https://www.flickr.com e.g. https://live.staticflickr.com/7437/27402357162_7d91b73cd5_z.jpg documented at https://help.flickr.com/en_us/get-the-url-of-a-flickr-photo-S1Hnnmjym Also does automatic image size conversion. But only provides ugly autogenerated URLs.
* \x[instagram] does not support upload from computer? Lol?

For videos, \x[youtube] does not allow download, even of Creative Commons videos so uploading only there is not acceptable as it prevents reuse:
* https://law.stackexchange.com/questions/8033/is-it-legal-to-download-and-modify-videos-from-youtube-licensed-under-creative-c
* https://www.quora.com/Can-I-download-Creative-Commons-licensed-YouTube-videos-to-edit-them-and-use-them

= Download Ciro's website for offline viewing
{parent=ciro-santilli-s-website}

First install \x[nvm]/NPM as shown at and then:
``
git clone https://github.com/cirosantilli/cirosantilli.github.io
cd cirosantilli.github.io
npm install
cirodown .
xdg-open index.html
``

= Why Ciro Santilli refers to himself in the third person
{parent=ciro-santilli-s-website}

Because when this gets converted to a \x[write-free-books-to-get-famous-website] page, it will be easier for people to copy paragraphs/fork and write a canonical page about Ciro.

What do you do when creating a pull request? Do you say "I", which is not true because Ciro did not say that, or do you say "John Doe thinks" bla bla?

And because \x[ciro-santilli-s-selfish-desires][his name is awesome]! :-) Just kidding.

This became a micro-\x[meme] in \x[4chan]:
* 2020-09-21 https://archive.vn/wip/Zz7fx (https://boards.4channel.org/g//thread/77842524/itt-weird-sites-you-found-by-accident[original]) "ITT: weird sites you found by accident" a comment reads:
  \Q[https://cirosantilli.com/ this is some guys resume who repeats his own name well over 1,000 times.]
* 2020-04-30 http://archive.is/LgDbK (https://boards.4channel.org/g/thread/75687327/interesting-website-thread[original]) "Interesting Website thread" a comment reads:
  \Q[https://cirosantilli.com/ What is even this?

  "a guy who says his name over 500 times in his resume."
  ]
Correction: cirosantilli.com is not Ciro Santili's resume. It is \x[cirism][your life].

= How to develop Ciro Santilli's website before the Cirodown migration
{parent=ciro-santilli-s-website}

The website moved from Asciidoctor to \x[cirodown] in 2020, making this section mostly useless. But hey, history!

Ciro's website is powered by \x[github-pages] and https://github.com/asciidoctor/jekyll-asciidoc[Jekyll Asciidoc].

The source code is located at: https://github.com/cirosantilli/cirosantilli.github.io

Build locally, watch for changes and rebuild automatically, and start a local server with:

``
git clone --recursive https://github.com/cirosantilli/cirosantilli.github.io
cd cirosantilli.github.io
bundle install
npm install
./run
``

Source: `./run`.

The website will be visible at: http://localhost:4000[].

Tested on the latest Ubuntu.

Publish changes to \x[github-pages]:

``
git add -u
git commit -m 'make yourself look sillier'
./publish
``

Source: `./publish`.

GitHub forces us to use the master branch for the build output... so the actual source is in the branch `dev`.

Update the gems with:

``
bundle update
git add Gemfile.lock
git commit -m 'update gems'
``

His website was originally written in Markdown, however those were deprecated in favour of Asciidoctor when Ciro saw the light, rationale shown at: \a[markdown-style-guide#use-asciidoc]{check=0}

GitHub pages is chosen instead of a single page GitHub README.adoc for the following reasons:
* Ciro will want some unsupported extensions, notably mathematics, likely with \x[mathematics-typesetting-setup-of-ciro-santilli-s-website][KaTeX server side]:
  * https://github.com/asciidoctor/asciidoctor/pull/3338
  * https://stackoverflow.com/questions/11256433/how-to-show-math-equations-in-general-githubs-markdownnot-githubs-blog
  * https://g14n.info/2014/09/math-on-github-pages/
  * https://stackoverflow.com/questions/11256433/how-to-show-math-equations-in-general-githubs-markdownnot-githubs-blog
  * https://www.quora.com/How-can-I-combine-latex-and-markdown-in-GitHub
* when GitHub dies, Ciro's website URL still lives and retains the \x[pagerank]!

= Why Ciro Santilli uses excessive ammounts of links even to things everyone knows what they are
{parent=ciro-santilli-s-website}

This website is written for \x[alien]{p}, not \x[human]{p}.

= Ciro Santilli's skills
{c}
{parent=ciro-santilli}

= Ciro Santilli's documentation superpowers
{parent=ciro-santilli-s-skills}
{c}

\x[ciro-santilli] has the power to document stuff in a way that makes using them awesome, as evidenced by his his \x[ciro-santilli-s-stack-overflow-contributions][Stack Overflow contributions] (notably those in \x[articles]), and other online contributions.

If your project does something awesome, hiring Ciro means that more people will be able to notice that it is actually awesome, and use it.

He likes to do this in parallel to contributing new features, quickly switching between his "developer" and "technical documentor" hats.

This means of course that he will develop new features a bit slower than others, but he feel it is more valuable if end users can actually use your project in the first place.

His technique is to provide upfront extremely interactive and reproducible getting started setups that immediately show the key value of the project to users.

He backs those setups with:
* scripts that automate the setup much as possible to make things enjoyable and reproducible
* a detailed description of the environment in which he tested: which OS, version of key software, etc.
* a detailed description of what is expected to happen when you take an action, including known bugs with links to bug reports
* theory and rationale on the sections after the initial getting started, but always finely interspersed with concrete examples
* all docs contained in a Git-tracked repo, with the ability to render to a single HTML with one TOC
* short sentences and paragraphs, interspersed with many headers, lists and code blocks
A prime example of kind of setup is Ciro's \x[linux-kernel-module-cheat].

While he create this setup, he inevitably start to notice and fix:
* bugs
* annoyances on the public interface of the project
* the devs were using 50 different local scripts to do similar things, all of them semi-broken and limited. Every new hire was copying one of those local scripts, and hacking it up further.
* your crappy build / test / version control setup

Exploiting this skill, however, requires you to trust him.

When he tells to managers that he's good at documenting, they always say: great, we need better documentation! But then, one of the following may happen:
* managers forget that they wanted good documentation and just tell him to code new features as fast as possible
* they don't let him own the getting started page, but rather and expect him to try and fix the existing crappy unfixable existing getting started, without stepping on anyone's pride in the process >:-)

  This makes him tired, and less likely to do a good job.

  Good documentation requires a large number of small iterative reviews, and detailed review of every line is not always feasible.

  Too many cooks.

Ciro's passion for documentation and tooling has the effect that if you have crappy documentation and tooling and don't want them to be fixed, Ciro will end up trying to fix those tools instead of doing what you tell him to do anyways, which might lead to him quitting because he can't stand the tools, or you firing him because he's not doing the job you think I should be doing. So please, don't bother hiring Ciro if you have crappy documentation and tooling.

Psychological analysis of why Ciro has this gift: \x[how-ciro-santilli-manages-to-write-so-much].

Ciro often has the following metaphor in his mind:
\Q[
New discoveries are like very rough trails where you have to cut through heavy bushes (an original research paper).

After a brave explorer goes through this rough path for the first time and charts it, it does become much easier for others to follow it later on, but it still requires a lot of effort to go through them, because there are still a lot of rush bushes and some parts of the map are not very clear (reading and reproducing the research paper to further advance the art).

As enough people start going through, the probability that \x[ciro-santilli-s-bad-old-event-memory][someone with a bad memory] ends up walking it increases, and that person ends up pounding the earth into a https://dictionary.cambridge.org/dictionary/english/off-the-beaten-track[beaten track] and increasing the trail clearance of the beginning of the trail at least (\x[review-paper]).

There finally comes a point when even the local government starts to notice this trail is important, and pays someone to add some stone pavement and rails on the most exposed parts of the trail (\x[postgraduate][post] and \x[undergrad] education).

And at last, Ciro Santilli \x[ciro-santilli-s-stack-overflow-contributions][comes with a bulldozer] and creates \x[write-free-books-to-get-famous-website/motivation][an autoroute that thousands of people can cruise at high speed without any effort] (Q&A, \x[open-knowledge] HTML websites).
]

= Ciro Santilli's natural languages skills
{parent=ciro-santilli-s-skills}
{c}

* \x[english-language][English]: Cambridge CPE grade B in 2004. Proficient, with minor defects in collocation/pronunciation. Learned from formal courses and from \x[ciro-santilli-s-biography][living in the UK for a few months when he was 10].
* French: TCF grade C2 in 2011. Proficient, with a bit more defects than English. \x[ciro-santilli-s-formal-education][Studied and lived in France].
* \x[brazilian] Portuguese: \x[ciro-santilli-s-biography][Native speaker]
* \x[chinese-language]: see https://github.com/cirosantilli/china-dictatorship/tree/df0852b22e585785d734ec69719eddf63f9676a5#do-you-speak-chinese

When asked, Ciro likes to say that he speaks something between 1.5 and 3.5 languages in total, depending on how you count, because Portuguese, French and English are 99.99% the same, and Chinese is completely different but Ciro only knows about 50% of it if counted optimistically.

= Ciro Santilli's psychology and physiology
{c}
{parent=ciro-santilli}

Ciro Santilli's energy throughout the day varies as follows:
* morning: highest
* 11AM: peak exercise performance
* after lunch: brain death. Possibly due to Ciro's partial https://en.wikipedia.org/wiki/Siesta[Spanish descent]?
* late afternoon and evening: can do some stuff

Ciro has low tolerance to https://en.wikipedia.org/wiki/Sleep_deprivation[sleep deprivation] which makes him very irritable, and \x[window-blackout][low ability to sleep if there is any light]. It must have to do with those damned https://en.wikipedia.org/wiki/Photoreceptor_cell#Ganglion_cell_(non-rod_non-cone)_photoreceptors[ganglion cell photoreceptors].

Ciro has mild https://en.wikipedia.org/wiki/Synesthesia[olfactory synesthesia] for https://en.wikipedia.org/wiki/Illicium_verum[star anise (八角, bajiao)], which is widely used in \x[chinese-cuisine] and makes Ciro think uncontrollably of the color blue. Ciro does not have any other known synesthesias.

Ciro is a reptilian-like being with cold hands and feet and low blood pressure. For this reason he believes that he will die of \x[cancer] or some respiratory problem. If the \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][Chinese government] doesn't get him first that is. This also partly explains why Ciro is not a big fan of swimming.

Besides \x[chinese-cuisine][Chinese food], Ciro really likes \x[eating] fruits and \x[ciro-santilli-s-cooking/roasted-nuts], maybe partly because he was \x[ciro-santilli-s-biography][born in Brazil], and partly because of monkey nature, see \x[ciro-santilli][his Chinese name]. At home he is known as "水果大王" (the big king of the fruits). Ciro is also a sucker for yoghurt (natural without added sugars and full fat, fat-tree yoghurt is terrible, often eaten with fruits). Ciro's "favorite drink" could be tonic water with freshly squeezed lemon. Tied with fresh fruit juices. \x[chocolate]{c}-wise, although not a huge fanatic, a Lindt \x[dark-chocolate] with https://www.amazon.com/dp/B00OLP0E9W[whole hazelnut pieces bar] will do the job.

Ciro does not like receiving or giving gifts on expected social situations like birthdays or Christmas. Ciro believes that every day is equally precious, and can be a day to give, be it through awesome \x[open-source-software] contributions, or if you find something that your friend will like

Ciro has some respiratory allergies. When he was around 5, he had relatively serious \x[asthma] crisis which scared parents were scared to death. Throughout his life, he appears to be allergic at an intermediate level to: mold or dust mites (or whatever it is that old books/pillows have), cats (itching on touch), hay fever (in May in the UK, likely grass pollen). Ciro believes however that this also gives him higher resistance to viral infections, since it has been many many years since he had a cold/flu, and when everyone in the office is going down with it, he's just fine. Ciro wonders if his active immune system will actually kill off cancers early, which he ranks as his most likely causes of death, along with respiratory and gastro-intestinal problems. Ciro has low blood pressure and cannot get fat, so cardio vascular problems seem much less likely.

Ciro is generally \x[democrat] due to his high \x[ciro-santilli-s-self-perceived-compassionate-personality][compassion level]. He believes that politics is highly genetically determined, and that just like you enter a room full of people and immediately like some and dislike others, the same goes for politics. People just vote for whoever they want to see more of because their way of speaking makes them feel good. There is not rationality involved in it at all.

= Ciro Santilli's self perceived creative personality
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

Ciro like to interpret this as him having "a creative \x[personality]" with the tradeoff of generally \x[don-t-be-a-pussy][not being amazing at his well defined jobs].

Ciro is a \x[high-flying-bird-vs-gophers][high flying bird scientist].

Ciro is obsessed by that which is "quirky". This also often \x[quote-afraid-to-do][has a parallel with "naughty"]. He often fantasizes about an imaginary parallel between that feeling and \x[jobs-and-wozniak-s-blue-box].

Ciro's natural fight-or-flight response is to hide in a little corner, and try to solve the problem out. Then get distracted and start \x[procrastinating]. And then he tries to solve the unsolvable. Someone Ciro barely new once told him quite correctly:
\Q[In the event of war, you would be the type that hides away and makes the bombs.]
This is also perhaps why Ciro likes https://mtg.fandom.com/wiki/Prison_deck[prison decks] in \x[magic-the-gathering]. You just sit on your corner, making yourself safer and safer, until the opponent can't do you any harm and concedes.

There are of course infinitely many videos on the "entrepreneurial mindset" online, and it is impossible to know if they are \x[bullshit], or if everyone just feels like that, but OK, just let Ciro feels that he is specially creative will you?

\Video[http://youtube.com/watch?v=3A0pMX2r2LE]
{title=What Predicts \x[academic]{c} Ability? by \x[jordan-b-peterson] (2017)}
{description=Good quotes:
\Q[Creative people continuously step outside of the domain of evaluation structures]
and:
\Q[
If you are creative and you go off on tangents all the time, there's some probability that one of those tangents is going to be exactly what is needed at the time, and you are going to become hyper-successful as a consequence

\[but the probability of that being the right time and place for the idea is extraordinarily low\]

The sensible thing to tell anybody is "you shouldn't do it, your probability of success is so low, that its better to just to something sensible".

But the problem with that, is that creative people can't do that, because they are creative. A creative person who isn't being creative, they just wither and die.
]
Which brings \x[here-s-to-the-crazy-ones] to mind.
}

Ciro also one heard a story, likely apocryphal, but still nonetheless resonated with him, that went something like this (TODO find source, Google wasn't helping, stuff that happened before website as usual):
\Q[
The newly hired manager of some subsection of DuPont (or some other gigantic chemical company) came into the office, and found a chemical engineer, completely drunk in the middle of the day.

Outraged, the manager searched for this colleagues who explained.

Ah, don't mind John (or some other name), the guy invented https://en.wikipedia.org/wiki/Polytetrafluoroethylene[Teflon] (or some other substance) which accounted for 20% of our revenue last year. Even if he does not do anything else in his entire career, his salary won't make any difference compared to those gains, and we take the chance that he might invent something else later.
]

Ciro likes this story because although he does not drink, he feels his work mind works in a related way. Often, when there is something really hard he knows needs doing he hides, and distracts himself with less important tasks, or by \x[the-best-youtube-channels][watching crap on YouTube], because he knows that the hard task will hurt his mind. Then one day he wakes up and says: OK, \x[fuck] it, let's do it, and does it.

Once Ciro got a performance review from a colleague that said:
\Q[If Ciro spent as much effort on his job as he does on side projects, he'd be the most amazing worker.]

Yes, low conscientiousness, give it to me.

= Ciro Santilli's self perceived compassionate personality
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

\x[ciro-santilli] fantasizes that he is more compassionate than average.

He feels that this manifests itself notably through his desire/ability to \x[ciro-santilli-s-documentation-superpowers][create amazing documentation content] and notably \x[write-free-books-to-get-famous-website/motivation][for free].

Also related is Ciro's worry about \x[social-inequality] and how to reduce it.

In \x[school], especially before \x[university], Ciro felt that he always treated "the ugly/unpopular" (it is horrifying that such perception of a person exists! but true) girls really well, which led some of them to like him romantically. In part this was de to \x[ciro-santilli-s-self-perceived-compassionate-personality] and \x[enter-through-the-narrow-gate] approach to life. But was also partly Ciro's fault, he should have been clearer that he was not truly interested, but he was also lonely, curious about how it was like having girlfriend, and it feels good to have someone like you. This was a \x[sin].

He also feels like he treated working class employees (and don't forget, this is \x[brazil], e.g. his \x[sao-remo-the-favela-next-to-usp][building janitors in São Paulo lived in the nearby favela]!) with extreme equality, sometimes even better, than other richer people.

One thing Ciro does not do however is give money to beggars on the street. Those beggars do make Ciro feel extremely bad for not giving, but he feels that they must be \x[drug-addict]{p} to be out on the street like that, and that this money would be better invested in \x[write-free-books-to-get-famous-website]. But maybe this is just wrong. How fucked up the world is, how far away are we from \x[unconditional-basic-income]???

Once Ciro was hanging out with one of his father's on a group tourist, and she was a lesbian borderline/actually activist social reform person, and she promptly gave to a beggar without batting an eye, and that made a big impression on Ciro, making him feel even worse about himself. 

It must be said that at times this compassion can be a weakness see Ciro's trip to the \x[municipal-market-of-sao-paulo].

= Effortless effort
{parent=ciro-santilli-s-psychology-and-physiology}
{title2=無爲, wuwei}
{wiki=Wu_wei}

https://zh.wikipedia.org/wiki/无为_(道家)

\x[ciro-santilli] feels that all really important and productive activities come spontaneously, without being internally forced upon people.

You may say that this is because Ciro is lazy and irresponsible, but \x[bill-gates][Bill] https://quoteinvestigator.com/2014/02/26/lazy-job/[says] (http://archive.is/kcXuQ[archive]) this isn't necessarily bad:
\Q[I will always choose a lazy person to do a difficult job because a lazy person will find an easy way to do it.]

As another way to put it, Ciro has very little "self-discipline", and acts very heavily based on small passions that take hold of him. Related: \x[high-flying-bird-vs-gophers].

You may also say that Ciro is an \x[idealist], because what to do when the food will run out and you have to hunt? To which \x[jesus] replies at https://www.biblegateway.com/passage/?search=Matthew+6%3A25-34&version=NIV[Matthew 6:25-34 "Do Not Worry"] (https://web.archive.org/web/20190801221835/https://www.biblegateway.com/passage/?search=Matthew+6%3A25-34&version=NIV[archive]):
\Q[
Therefore I tell you, do not worry about your life, what you will \x[eat] or drink; or about your body, what you will wear. Is not life more than food, and the body more than clothes? Look at the birds of the air; they do not sow or reap or store away in barns, and yet your heavenly Father feeds them. Are you not much more valuable than they? Can any one of you by worrying add a single hour to your life?

And why do you worry about clothes? See how the flowers of the field grow. They do not labor or spin. Yet I tell you that not even Solomon in all his splendor was dressed like one of these. If that is how God clothes the grass of the field, which is here today and tomorrow is thrown into the fire, will he not much more clothe you - you of little faith? So do not worry, saying, "What shall we eat?" or "What shall we drink?" or "What shall we wear?" For the pagans run after all these things, and your heavenly Father knows that you need them. But seek first his kingdom and his righteousness, and all these things will be given to you as well. Therefore do not worry about tomorrow, for tomorrow will worry about itself. Each day has enough trouble of its own.
]
Also closely related: \x[man-shall-not-live-by-bread-alone].

Ciro is also fond of the description of the work method of some writer that his father told him about, possibly https://en.wikipedia.org/wiki/Haruki_Murakami[Haruki Murakami 村上 春樹]. Could not find sources, to treat as apocryphal for now. Basically something like:
\Q[Don't rush the work. Just let it happen. Every day at midnight, I would boil a teapot of tea. I would watch the steam rise, and with it feel my consciousness deepen. Everything was pure silence. When the hand was ready, it would, by itself, pick up the brush, and writing would start.]

Another good one is Hemingway's work method:
\Q[Always stop while you are going good and don't think about it or worry about it until you start to write the next day. That way your subconscious will work on it all the time. But if you think about it consciously or worry about it you will kill it and your brain will be tired before you start.]

Ciro generally feels that many major developments in his life happened "by miracle", beyond his control. So when he saw the quote by \x[carl-jung]:
\Q[Until you make the unconscious conscious, it will direct your life and you will call it fate.]
Ciro tends to do major decisions in his life due to uncontrollable passion rather than logic.

Ciro believes that this is linked to his \x[ciro-santilli-s-self-perceived-creative-personality][self perceived creative personality], Because Ciro gives in to such uncontrollable passions, this leads him to do things which are \x[effortless-effort][more unusual/creative], because other more logical people would write such options off as weird.

\Video[http://youtube.com/watch?v=ZzaUGhhnlQ8]
{title=\x[alan-watts]' wuwei talk.}
{description=During this talk, Alan quotes \x[jesus]: https://biblehub.com/matthew/18-3.htm[Matthew 18:3] "Truly I tell you, unless you change and become like little children, you will never enter the kingdom of heaven.".}

\Video[http://youtube.com/watch?v=2yWx7cqiSJI]
{title=\x[alan-watts]' "How to turn work into play" talk.}

Related:
* \x[procrastination]
* \x[weekend]

= Ciro Santilli's bad old event memory
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

\x[ciro-santilli] has a bad memory for events that happened a medium time ago, for example in order of months/years. Especially if they are one-off things that have no relation to anything else.

For example, Ciro never remembers which places he travelled to just once, and who was in each trip! He has images of several places he travelled to in his head, and would recognize them, but he just doesn't know where they were!

The same goes for scenes from movies and passages from music, which explains why Ciro's \x[art] consumption focuses on innovative \x[discrete] "what happened" and "general gist" ideas, rather than, analog details such as colors and shapes.

Going back even further in time, Ciro starts to forget the less close friends he had, because the events start to fade away.

Paradoxically however, Ciro believes that this bad memory is one of his greatest strengths and key defining characteristics, because it leads Ciro to want to write down every interesting thing he learns, which motivated \x[write-free-books-to-get-famous-website] and his \x[ciro-santilli-s-stack-overflow-contributions][Stack Overflow contributions] and his related \x[ciro-santilli-s-documentation-superpowers].

It also somewhat leads Ciro to like \x[physics] and \x[mathematics], because in these fields you \x[formalization-of-mathematics]["can deduce everything"] from very few base principles, so if you forget them, it does not matter that much as you can re-deduce stuff over and over.

Ciro believes that there are two types of people, and most notably \x[software-engineer][software engineers], which are basically data wranglers: those with bad memory and those with good memory.

Those with bad memory, tend to focus on automating and improving their processes a lot. They take much longer to do one-off specific deep knowledge tasks however.

The downside of the good memory ones is that sooner or later they will find tasks that no matter how much memory they have, they cannot solve without automation, and they will fail at those.

Also, good memory people don't enable others to join the project efficiently as much.

This dichotomy also explains why Ciro sucks at code reviews, but is rather the person who runs the interesting patches by himself and finds some critical problems that the more theoretical code reviewers missed.

If Ciro \x[write-free-books-to-get-famous-website/motivation][had become a scientist], he would without doubt be an experimentalist, just like in this reality he is a \x[gdb]/runtime person rather than a "static source analysis" person. Those who have bad memory prefer to just run experiments over and over and observe system state at runtime.

Other effects of having a bad memory include:
* code duplication, or a constant fear of it at least, because Ciro forgets that some functionality exists already
* meeting aversion, because everything that is not recorded will fade away
* passion for \x[backward-design], because by the time a piece of knowledge learnt in school might be useful (and 99.99% won't), it will have been long forgotten

A \x[quora] answer! https://www.quora.com/Are-there-any-benefits-of-having-a-poor-memory/answer/Ciro-Santilli

Related: https://jakobschwichtenberg.com/about/ from \x[jakob-schwichtenberg]:
\Q[
I'm a physicist and I try to write down things during my own learning process.

In some sense, one of the biggest benefits I have over other people in physics is that I'm certainly not the smartest guy! I usually can't grasp complex issues very easily. So I have to break down complex ideas into smaller chunks to understand it myself. This means, whenever I describe something to others, everyone understands, because it's broken down into such simple terms.
]

= Ciro Santilli's selfish desires
{parent=ciro-santilli-s-psychology-and-physiology}
{c}

Just enough money to raise 3 kids in a rich country without having to work (so he can focus on whatever project he wants) and no more. Then maximize fame.

Fame is slightly convertible into money with generally little liquidity, but is more valuable if money becomes useless in a https://en.wiktionary.org/wiki/TEOTWAWKI[TEOTWAWKI].

Of course, in the end, one just does whatever seems cool and useful, and the Gods decide what proportion of fame/money/power they will get. Due to Ciro's love of \x[open-source-software] however, a higher fame percentage seems more likely than money.

Ciro Santilli's \x[ciro-santilli-s-homonyms][full name is quite unique] and already dominated by this \x[ciro-santilli].

Searching just for just https://www.google.com/search?q=%22santilli%22["Santilli"] on Google does not give any Ciro Santilli hits. The name appears to be a minor variation of the much more common "Santini". Since the name is not that common, it is possible to go over all noteworthy hits. Some relevant ones are shown at: \x[interesting-members-of-the-santilli-family].

Searching just for just https://www.google.com/search?q=%22ciro%22["Ciro"] on Google does not give any Ciro Santilli hits, mostly some smaller brands that could be beaten, this is Ciro's main initial fame metric goal. Reaching it would require doing things known much beyond the programming community however, as Ciro has done until of 2019. http://ciro.com is from an electromechanics consultancy https://web.archive.org/web/20190610202635/http://ciro.com/[as of 2019], so it's not bad, let them be.

At the next useless gamified level, an honorary https://en.wikipedia.org/wiki/Order_of_the_British_Empire[OBE] and more ambitiously https://en.wikipedia.org/wiki/Fellow_of_the_Royal_Society[ForMemRS] from the \x[royal-society] post nominal letters would be nice.

The ultimate dream however would be to beat https://en.wikipedia.org/wiki/Cyrus_the_Great[Cyrus the Great] himself on Google searches ("Ciro" == "Cyrus" in Portuguese), maybe becoming "Cyrus the Greater"? That one will be a bit harder though. Maybe if https://github.com/cirosantilli/china-dictatorship/tree/4e5ad752ffe70c26fa0ff6a78e6eb64913153e33#falun-gong[Falung Gong] becomes the dominant religion in 2000 years like Christianism did, catapulting the Judaism benefactor Cyrus into greater fame, then there is some hope for Ciro as well.

= Ciro Santilli's ideal city to live in
{parent=ciro-santilli-s-psychology-and-physiology}
{c}

Ciro's \x[ideal] city to live in contains the following in order of decreasing importance:
* high tech
* beach and warm weather, influenced by Ciro's love for the \x[ciro-santilli-s-biography][City of Santos where he once lived]
* enough recent Chinese immigrants to sustain \x[chinese-cuisine]

Could https://en.wikipedia.org/wiki/California[California] be Ciro's https://en.wikipedia.org/wiki/Mecca[Mecca]?

= Cirodance
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

During his teenage years, Ciro created an innovative new dance style combining elements of the various corporal practices that he studied a bit of across the years:
* Kung Fu/Taichi
* https://en.wikipedia.org/wiki/Samba_(Brazilian_dance)#Samba_Ax%C3%A9[Brazilian Axé] and Capoeira
* Breakdance
* Yoga
* Modern dance

Ciro later called this style Cirodance.

Ciro's legendary dance style was famous during his university years, when Ciro would go to parties and dance like made while mostly unsuccessfully trying to woo girls.

Ciro has always been critical of dancing conditions in University parties, where people would \x[enter-through-the-narrow-gate][always be cramped up doing boring non-creative moves]. Rather, Ciro would go to to the edges of the dance floor to have enough space for his amazing moves. There is a perhaps a parallel between such tendencies and Ciro's \x[high-flying-bird-vs-gophers][highly innovative personality]. Also perhaps being cramped would have helped wooing said girls.

Ciro later quit dancing, to a large extent because it is too hard to find suitable dancing locations outside: Europe is too cold, also ground conditions have to be perfect, and no patience to book a dance room somewhere. Kid's playgrounds are \x[ideal], but Ciro is afraid of dancing there because kids parent's would freak out.

Therefore, all evidence of Cirodance seems to have disappeared into the depths of the Internet. There used to be a notorious video on YouTube from around June 2010 entitled "A Piriguete da Poli !!" ("\x[university-of-sao-paulo][Poli's] bitch" in Portuguese) with comment "Sem comentarios... foi a atraçao da cervejada" (No comments... was the main attraction of the beer party) dancing the https://www.youtube.com/watch?v=Tfrdu7i56Mg[Piriguete by MC Papo] Brazilian https://en.wikipedia.org/wiki/Funk_carioca[Funk carioca] song. But the video was removed at some point, they were likely afraid of getting sued, the URL was https://www.youtube.com/watch?v=T969azGjIeE[] as shown at https://www.facebook.com/cirosantilli/posts/133333123357495[], but this was before Ciro noticed that every good thing on the web goes down and became an obsessive \x[web-archiving][web archiver]. But in any case, the title gives an idea of the amazing style of Ciro's https://en.wikipedia.org/wiki/Artistic_inspiration[furor poeticus] Axé performance on that day. If the video owner ever reads this message, please please restore the video, or send Ciro a copy. TODO: which channel was it on? Knowing that Ciro would be able to try and contact them.

One legendary episode linked to Cirodance was when Ciro was living in \x[paris] and jobless around 2014 (but not destitute as he leached from his girlfriend). Cirodance was his main physical activity at the time, and \x[place-de-la-republique], where the skateboarders hung out due to the perfect wide concrete floor and relatively close to https://en.wikipedia.org/wiki/Place_de_la_Bastille[Bastille] where Ciro lived, was the perfect place for it. One cold dark winter evening, Ciro was practicing Cirodance with his headphones and crappy clothes (dirty public square floor, remember), when someone took him for a homeless person and offered him a bowl of soup! It must be said that Place de la République had many events of giving food to the poor. Ciro was a bit stunned, declined, and continued dancing. And so that was the day when a prestigious \x[ecole-polytechnique][Polytechnicien] was mistaken for a homeless person. And Ciro \x[ciro-santilli-s-psychology-and-physiology][liked that].

As of 2021, \x[googling] "cirodance" leads to https://www.youtube.com/watch?v=tyvv4ddL2so "Ciro Dance" in which comedian "Ciro Priello" (no \x[wikipedia] page at the time) participates in a comedy show with a "silly dance" (TODO this likely has a name) described in the comments as:
\Q[
It's a brand new Italian format. Some comedians are grouped into a room where they have full access to different kind of items and tools. Laughing means losing. Each of them can try to make the other laugh. The winner gets some money but all of them would have give that to charity.

The dancing guy, Ciro, after only 10 minutes from the start did this nonsense dance. It's silly bit fun nonetheless I guess
]

= Ciro Santilli's body
{parent=ciro-santilli-s-psychology-and-physiology}

Hand great span https://en.wikipedia.org/wiki/Span_(unit): 0.22m

UK shirt size: L.

UNIQLO leggings size: L.

Shoe size 30 year old, as in \x[ciro-santilli-s-hardware/2017-04-nike-flex-experience-rn-6-grey-running-shoes]:
* US: 11
* UK: 10
* EUR: 45
* cm: 29

31 year old:
* Height:
* Weight:
* Chest: 94cm
* Waist: 81.5cm
* Hip: 85.5cm
* Inner leg: 92.0cm
* Length of back: 71cm (from base of neck to knuckle height)
* Collar: 38cm
* Sitbone distance (https://en.wikipedia.org/wiki/Ischial_tuberosity[ischial tuberosity]):
  * sitting on cardboard: 110mm, this method felt accurate
  * https://www.youtube.com/watch?v=xSWlwzqGKik water method: 90mm/100mm. Small butt!?
* Arm sleeve length: 61.5 cm
* Erect \x[penis] length: just kidding, just kidding. \x[ciro-santilli-s-wife] would kill him.
* rest heart rate: 60 BPM

= Ciro Santilli's knee
{c}
{parent=ciro-santilli-s-body}

If https://en.wikipedia.org/wiki/Achilles%27_heel[Achilles' had his heel], Ciro had his knee.

First \x[ciro-santilli-s-formal-education][during University in Brazil] while trying https://www.youtube.com/watch?v=HWXD0JbwT-w[a kick up] during the development of \x[cirodance] his knee went a bit weird for a few weeks.

Then, just after arriving in France for \x[ecole-polytechnique], the boys were playing indoor \x[soccer], and to impress the girls Ciro was playing really hard, even took off his shirt, and suddenly when he was running by himself his knee snapped, he fell and it hurt like hell.

Ciro was on crutches for a few weeks, but the \x[inflammation] went away, but then he tried to play more soccer, but the knee was not as stable as before, and once he tried to run full speed, it slipped and hurt him a bit more (less severely) and so he gave up. For some reason it was not visible on the tomography made at the hospital.

Maybe Ciro should have investigated more though, certainly an experienced doctor could have done a hand pressure exam to determine which joint was damaged manually even. That was a medical failure.

So from this day on Ciro gave up on all interesting sports, and confined himself to more repetitive stuff like gym weights and cycling: \x[ciro-santilli-s-sport-practice]{full}. At Polytechnique he was forced to take up swimming as his mandatory sport, that was unbearably boring.

This defect is likely genetic since a close relative had similar problems.

But oh well, his then not-even girlfriend was impressed enough by the soccer or sorry enough for the sucker to marry him, so it worked out.

= Ciro Santilli's legs sometimes itch when he runs
{c}
{parent=ciro-santilli-s-body}

\x[ciro-santilli] has an undiagnozed condition where his upper legs and lower torso often start to itch when he runs, to the point of being extremely annoying and removing all pleasure form the activity.

If some doctor knows why this could be, please tell him!!!

The problem is a bit hard to reproduce however, and Ciro hasn't been able to determine which exact condition triggers it: temperature, nutrition, something else?

Ciro believes that this is not chiefly due to transpiration, but rather to the impact motion that running does on the muscles, as he has felt something similar on his arms some times while cycling in very rough terrain, which made his arms shake in a similar fashion.

Interestingly, Ciro didn't feel that at all when he \x[ciro-santilli-s-sport-practice][played soccer enthusiastically as a child], and he was one of the fastest runners of the group for sure at that time. So he's not sure if it started when he got older, or if it is just because the difference in workloads between soccer and running.

= Ciro Santilli's sport practice
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

As a \x[brazil][Brazilian], \x[ciro-santilli] used to really love playing \x[soccer] (\x[rooting-for-sport-teams][but not watching it]), until \x[ciro-santilli-s-knee][he hurt his knee].

Playing soccer just feels amazing, because you are constantly running around, but with a more specific goal in mind: to get that ball into that goal!

Playing soccer was specially amazing in \x[santos-sao-paulo-brazil][the flat wet sand beach of Santos]. \x[weekend], the sea, feet touching the sand, the sun going down, and your school mates next to you. Nirvana.

It is also true that under those conditions, the skin of your feet will get ripped off due to running on the slightly wet and flat sand no matter how thick it has become. But it is worth it.

Ciro became however disillusioned with soccer after his injury. It is a shame.

And so after that, Ciro decided to dedicate himself to sports where you can't hurt your knee.

Ciro \x[ciro-santilli-s-psychology-and-physiology][hates water], so swimming is out of the question. What could be more boring than going back and forth on a fixed location a million times to gain some milliseconds?

And so Ciro has been left with the gym as the only main option for a while.

Running would have been a consideration, but \x[ciro-santilli-s-legs-sometimes-itch-when-he-runs].

This is until he ended up living in a place with decent roads for cycling in the late 2010's, which led to \x[ciro-santilli-s-cycling].

= Ciro Santilli's cycling
{c}
{parent=ciro-santilli-s-sport-practice}

At first, \x[ciro-santilli] was just cycling to work with an extremely shitty bike he bought on a second hand shop. He knew nothing about bicycles, and the seat was way, way too low, the seller should be prosecuted for selling that to him. Ciro later understood that this was even a woman's bicycle with a low top tube! That's what you get for \x[ciro-santilli-s-cheapness][being so cheap].

But then at some point he bought another \x[ciro-santilli-s-hardware/kross-bicycle-2017][slightly less cheap touring bicycle], but this time from a much more trustworthy source: a colleague who was leaving the company and moving out, and this one was actually reasonable. It was the right size to start with!!! And so at some point, out of boredom, Ciro started to adventure out of town on weekends to neighbouring villages, and it just felt so good.

Ciro had started by taking his laptop-\x[computer] on his backpack, and stopping at a cafe on some nearby town where he would do some coding over the weekends. Especially during winter, \x[ciro-santilli-s-drug-experiences][drinking tea with a cake] as a break during bicycle ride was the best thing ever. In one place, there was even an electric heater that you could sit in front of. But at some point, those rides start being too short, and you start doing longer real rides without your computer. And since those take more time, you generally don't feel like staying on a far place for a very long time. So you end up creating the "real ride" category and "a small ride to get somewhere nice to code" category clearly split.

He had had the "cyclists high" version of "runner's high". A light euphoria in your head, or a pulsating feeling of pleasure in your legs and lower torso. This reminded Ciro of:
* a video where a ex-\x[heroin] addict describes taking heroin as having an \x[orgasm] in your entire body, also known as "body high"https://www.quora.com/Whats-the-difference-between-a-head-high-and-a-body-high{ref}https://youtu.be/Fa-BktzJrWs?t=610{ref}. In cycling it is mostly a https://www.urbandictionary.com/define.php?term=Legasm[legasm] though.
* \x[trainspotting-1996]'s \x[orgasm] scene https://www.youtube.com/watch?v=zUaXbM_lZj0
except that it is not as intense, and does not destroy your life.

Like other \x[drug]{p}:
* it is addictive
* you will have some \x[bad-trip]{p}, e.g. went the wrong way on a highway and are afraid you are going to die crushed by fast cars, got flat tire on 1 hour ride and have no repair kit, destination cafe is closed and you are hungry, wind got so strong you can barely ride, half an hour in you find out that it is way colder than what you expected.

  But for every such experience you survive, you learn something to reduce the chances it will happen, and it later feels great to completely master a situation you had suffered previously with.

  Ciro has also come to crave the need to go back to every bad trip spot, with better planning and circumstances, and make it feel amazing, to get the feeling that he has mastered the spot.
* you will have hangover after a long amazing ride
* the high become less intense the more you ride, and turns into something you have to do to just to feel normal. And that keeps you fit forever :)

Cycling just gives you an amazing sense of freedom! Ciro likes to imagine himself as a migratory duck when he is riding his bike on cold or wet days.

The prospect of being able to reach nice new places keeps the experience fresh for a very long time.

Ciro likes to decide location on a whim on the day prior. He checks the wind to try and ride parallel to it, and then let's his mind wonder, until an image comes up, some some nice place Ciro was to once. And so the next day, he goes in that general direction again.

Each time you try to find a new cool location, and sometimes you just stumble into amazing stuff without knowing about it. Ciro likes to keep open to new experiences. Keep your eyes open, and if something looks curious, just check it out! Talking to locals for tips is also a great way to find new stuff.

One thing that Ciro often feels is rather excited on the way out, and lightly afraid of going futher at each step because of the return. And during the return, there is a greater feeling of worry and resignation, as you are more tired, you've seen what you wanted to, and you just have to get yourself homehow, often going back through paths that you know better. This reminds Ciro of the ending of the film \x[in-the-realm-of-the-senses-1976], in which the sex obsessed couple plays a strangling sex game, and the man says that it hurts too much when she stops strangling him, and so she strangles him to death. She also cut his \x[penis] and carried it around in a bag afterwards, but that not relevant to the cycling analogy.

It is funny, but sometimes this gives Ciro the same feeling that he had as a child playing 2D exploration RPGs such \x[pokemon] and \x[final-fantasy-vi] as you explore the wild: Ciro can often hear the FF VI overworld soundtrack, or imagine that a Charmeleon is hidden just around the corner of this new towns he's never been to before. Because in the places you live and have walked a million times, you know there is no magic. But in a new place that you're visiting for the first time? Anything is possible there.

The main difference from video games is that the real world is much much more detailed and diverse, and the freedom is much more real. Also you can't just walk into any house or field like in the games, and there are more empty or repetitive areas that can sometimes get boring since they weren't hand designed. And if you die on a car crash there are no continues.

It also gives Ciro the magic feeling of awe that he had as a child when walking around his beloved hometown of \x[santos-sao-paulo-brazil] in the sunshine. And sometimes the feeling of excitement that he had as a child before getting gifts for Christmas. Ciro then once watched a \x[youtube] video where ex-\x[heroin] addicts describe the feeling of taking heroin (orally, TODO can't find the video anymore, I think https://www.youtube.com/watch?v=Fa-BktzJrWs[it was this guy]) exactly like that: the anticipation of getting Christmas gifts, and he instantly understood.

Ciro also likes to pick random gravel from time to time. He believes that his style of route choice reflects \x[ciro-santilli-s-self-perceived-creative-personality]: Ciro likes to go where few other people go. And he only needs to go there once to be satisfied, not master and speedrun it afterwards.

As you start cycling, you can feel the endorphins levels rise little by little, and your mind go deeper and deeper into slumber, getting close and closer to the ground, until you reach a point where you feel like you are part of the road. \x[trainspotting-1996]'s overdose scene comes to mind: https://www.youtube.com/watch?t=66&v=_IDJpB9de3E

It is amazing how you feel much less cold and hunger when cycling, to the point of being dangerous: always carry some chocolate bars in case https://www.youtube.com/watch?v=zFZ0aYz71Tw[you hit the wall]! This is especially true at the beginning of the addiction, but with increased \x[drug-tolerance] and knowledge/awareness/preparation, this starts to feel more normal.

As a friend of Ciro once said: you start to become like a wolf, who knows every cyclable little road in a 30km radius around your home.

As of 2020, Ciro is at that "should I buy a more reasonable road bike" moment. Let's see how it goes. If he does, cycling trips with the bike on a plane are likely.

As a \x[software-engineer], trying to repair a mechanical system like his bike reminds Ciro very strongly of how the \x[deep-tech][physical engineering is brutal]. Millimetric changes can make huge differences, it is \x[mind-blowing]! Good lesson to have in mind.

Another thought that often comes to Ciro's mind is that bicycles are not regular possessions because they break a lot. Rather, they must be seen as a kind of transportation tax that you have to pay to feel amazing riding them rather than feel crappy riding a bus or train.

One interesting feeling that Ciro gets from cycling is that it is an intermediate between walking and riding a car. Ciro felt this especially strongly when he lived near work, at a distance that you could either walk or cycle. When you walk, you can just see so much more of the surroundings, it is astonishing. When you cycle, you just go much faster, and you attention is much more towards the front, so you feel surroundings much less. On the other side, cycling allows you to feel different things. E.g. in wider open areas, there isn't much detail to see anyway, so you can better feel those areas on the faster speed of the bike. A similar feeling applies to how pedestrians feel like flies when you are on a bike, just like you must feel like a fly to car drivers. Ciro later learnt that a person of similar literary ability to his, Ernest Hemingway, https://en.wikiquote.org/wiki/Cycling[had a famous related similar quote]:
\Q[
It is by riding a bicycle that you learn the contours of a country best, since you have to sweat up the hills and can coast down them.... Thus you remember them as they actually are, while in a motorcar only a high hill impresses you, and you have no such accurate remembrance of country you have driven through as you gain by riding a bicycle.
]

Although Ciro does not run because of his \x[ciro-santilli-s-legs-sometimes-itch-when-he-runs][itchy legs issue], he finds it interest to contrast cycling with running, notably:
* cycling has a much higher setup time or wearing appropriate clothes, unlocking your bike, and of course, \x[ciro-santilli-s-bicycle-wisdom][bike maintenance]
* running allows you to go into many more small paths that are not accessible by bike, thus offering a different sense of freedom. You can't go as far however.
So maybe the ultimate sport would be to cycle to a good cross-country running location and then run over there?

\Video[http://youtube.com/watch?v=fWYaClbNPYw]
{title="Running Vs. Cycling | Who Is Faster - GCN Or GTN?" by GCN (2017)}
{description=Talks about the interesting http://www.bingleyharriers.co.uk/events/harriers-vs-cyclists/[Bingley Harriers & AC "harriers vs cyclists"] race held annually in the UK, in which you can either run or cycle! The course attempts to balance rough uphill terrain where runners get an advantage, with less rough downhill where cyclists have an advantage.}

\Video[https://www.youtube.com/watch?v=cUg8rC9yu6U]
{title=\x[final-fantasy-vi] (SNES) Overworld theme.}
{description=This is what cycling feels like!!! The song is known in the West as "Terra's Theme" and it was composed by https://en.wikipedia.org/wiki/Nobuo_Uematsu[Nobuo Uematsu], who composed the entire game, and other entries of the Final Fantasy series.}

= Ciro Santilli's bicycle wisdom
{c}
{parent=ciro-santilli-s-cycling}

Sometimes, these are more than just mechanics, but also have deeper life analogues. The title of https://en.wikipedia.org/wiki/Zen_and_the_Art_of_Motorcycle_Maintenance[Zen and the Art of Motorcycle Maintenance] comes to mind. Sometimes they are just mechanics.

With more philosophical metaphors:
* when your bike breaks, that provides an unique opportunity to learn how to fix it: \x[try-to-fix-your-own-bike-before-taking-it-to-the-shop]
* if the wind is blowing against you on the way out, it will likely blow behind you on the way back. But remember that the other way around also applies.
* always take one extra clothing layer than what you think you will need in your back pocket or sport bag, especially when time is changing fast in Sprint and Autumn. The weather on the road outside of town can change very quickly!
* if you took a turn, and it feels wrong, stop to check the map, and possibly backtrack to safety. When it feels wrong, it usually is a bad idea, e.g. roads where cars are too fast/too many. But if you take a wrong turn and it feels right, then follow it without fear and see what it leads to!
* don't carry a speedometer on your bike. Analysis can be done afterwards on \x[strava]. The only measurement that matters is "how awesome am I feeling right now?". \x[buddhism][Live in the moment] instead of checking your speedometer every 10 seconds.
* cycle when you body calls it out of addiction, not out a goal that you've made up that must be reached

With less philosophical metaphors:
* learn how much water and food you need to take for a trip. Otherwise, you \i[will] bonk at some time, when you least expect, it happens very suddenly.

  And then you better hope to God that you can find a food shop nearby. Luckily this was the case for Ciro's first and only bonk so far.

  You will also learn that, surprise surprise, \x[carbohydrate]{p} that you ate one or two days before a ride stay stored in your liver and muscles, and also greatly affect how quickly you will bonk, thus the concept of \x[carbohydrate-loading].

  \Video[https://www.youtube.com/watch?v=zFZ0aYz71Tw]
  {title="How Not To 'Hit The Wall' Or 'Bonk' – GCN's Guide To Fuelling While Cycling" by Global Cycling Network (2016)}

  And surprise surprise: heat can also make you bonk! Who would have thought!
* correct saddle hight is fundamental, your legs must be almost fully stretched at the bottom position
* it is impossible to reach the correct tire pressure with (cheap?) hand pumps, their only purpose is to fill up a flat tire so you can get home after a long ride. But a track pump.
* clean and lube your chain. The speed benefit is instantaneous and \x[mind-blowing]. It also greatly improves gear shifting.

  This also prevents the chain from rusting, because the lube takes up the place where water would stay, and the muck makes it harder for water to evaporate.

  This is the most common bike maintenance mistake you see on the streets: people with that high pitched overly dry chain noise.

  \Video[http://youtube.com/watch?v=KM6mzE5lQ0w]
  {title="How To Get A Perfectly Clean Chain - GCN's Top Tips For Cleaning Your Drivetrain".}
* when a piece on your bike breaks and has no clear name written on it, you can try to identify it Google images
* the more you watch \x[youtube] maintenance videos without haste, the more you end up learn random new stuff that unexpectedly saves you later
* if you took a turn, and it feels wrong, stop to check the map, and possibly backtrack to safety. When it feels wrong, it usually is a bad idea, e.g. roads where cars are too fast/too many
* public place with lots of people are bicycle parking \x[hell], because due to \x[anonymity] and the large number of distractions, it becomes exponentially more likely that someone will \x[fuck] you bike somehow, e.g. by dropping it on the ground. Always search a bit for a reasonable place to park, and avoid overcrowded parking spaces at all costs.
* gear change matters
  * when you get on your bike to start riding, start riding slowly and gradually switch up pedal forces and gears. Things may have shifted in a weird position as it gets kicked around in parking. Ciro managed to bend his derailleur like that!
  * https://www.youtube.com/watch?v=43ci68I23hA[spin to win], AKA learn to user your gears
  * it is not shameful to ride on your lower gears on a hill. You can actually go surprisingly fast with them, and conserve energy for later. Learn when to use each gear ratio.
* learn to identify your suppliers:
  * https://www.wiggle.co.uk/[]: in Europe, this is best place to buy clothing from, and also good for some bike parts. It is the most organized website, and contains non-generic \x[shit] which \x[amazon-company] is full of.

    For bike parts Amazon is also worth looking into however. Bike parts a bit different from clothing because you have to make sure that stuff fits, so you hopefully know exactly the part name before before buying it, and therefore website organization is not as crucial.

    Wiggle is however guilty of shameless: \x[discounts-that-happen-more-often-than-not]
* always take your lights off the bike into your bag when you park, anywhere, and for any amount of time, even if a quick stop. \x[drug-addict]{c}{p} are everywhere, always ready love to steal and resell them.
* sometimes you do something stupid like going into a really muddy path, and it is really fun, because you've never been there in your life. But then your bike gets really dirty, and your feet are wet and freezing, and you promis yourself you will never do something that stupid again. But then you do it again in a different location, because it was too much fun. \x[once-more-unto-the-breach]{c} just comes to Ciro's mind every such time. Embrace this.

= Try to fix your own bike before taking it to the shop
{parent=ciro-santilli-s-bicycle-wisdom}

Sometimes you get annoyed to death with your bike not breaking or changing gears perfectly as you would like, and the people at the bike shop never do the job well enough.

The problem with bike shops is that the employees are already swamped with work, and they don't get paid any extra for doing more work.

As a result, paradoxically, they are often happier, and respect you more if you are trying to get them to help you to fix your own bike!

Also, for the same reason, they don't have the time to go for a quick test ride after a fix to ensure that the \x[software-engineer][bug] was actually fixed.

So they ignore things that would obviously be huge ridability benefits (although they might not be obvious to newbie customers), for which customers would gladly pay more money for.

But you start to learn how to do stuff yourself and it feel amazing when you finally get there (after infinite trial and error).

Ciro dreams of a bike shop that actually calls you for the appointment and then teaches you how to fix the thing.

So the best strategy is to have a backup bicycle, and when your main one breaks, you just try to to the fix yourself. That means:
* identifying the broken piece
* watching YouTube videos of how to do the job
* buying a replacement and any missing tools on \x[amazon-company]
* giving it a shot

Then, if you fail to do the fix, that is OK, just take it to the bike shop, with the piece you've bought, and ask them to do it for you. At least this way you did not waste a golden opportunity to learn!

= In which roads is it OK to ride your bike based on car speed limits
{parent=ciro-santilli-s-cycling}

https://bicycles.stackexchange.com/questions/45204/at-what-point-does-a-road-become-too-busy-fast-to-ride-on-safely/71911#71911

= Ciro Santilli's e-soulmates
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

These are people which Ciro never met personally, and who might not know that Ciro exists, or might never had any direct 1-2-1 online contact with Ciro, but Ciro \x[religion][is convinced are his brothers in some other dimension] due to how many opinions or behaviours he feels they share:
* \x[dan-dascalescu]{child} due to articles such as:
  * \x[english-as-a-universal-language-by-dan-dascalescu-2008]
  * https://www.reddit.com/r/TheoryOfReddit/comments/9oujwf/why_archiving_old_threads_is_a_bigger_problem/ see also \x[online-forums-that-lock-threads-after-some-time-are-evil]
  * https://web.archive.org/web/20130922192354/http://wiki.dandascalescu.com/reviews/online_services/web_page_archiving see also \x[web-archiving]
  * random posts on \x[openstreetmaps], and about \x[china]: https://help.openstreetmap.org/questions/29300/legality-status-of-mapping-activity-in-china?page=1&focusedAnswerId=42167#42167
* https://stackoverflow.com/users/55075/kenorb see also \x[ciro-santilli-s-stack-overflow-contributions]
* \x[sylvain-poirier]{child}

= How Ciro Santilli manages to write so much
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

* Suck at your job:
  * \x[ciro-santilli-s-documentation-superpowers]
  * \x[don-t-be-a-pussy]
* Have bad memory: \x[ciro-santilli-s-bad-old-event-memory]
* Seek glory over \x[money]: \x[ciro-santilli-s-selfish-desires]
* Try to make a carrer out of it: \x[write-free-books-to-get-famous-website]
* Be born compassionate: \x[ciro-santilli-s-self-perceived-compassionate-personality]
* He doesn't actually write that much, but when he does he focuses on higher impact stuff, see remarks about "He doesn't like to refresh the homepage looking for easy reputation" on \x[ciro-santilli-s-stack-overflow-contributions]{full}
* Contribute in a place where it is super easy for people to give you upvotes if they like your stuff. This way, you will see the uploads, and that will motivate you to re-read your content and make it more perfect with additions and corrections.

= Ciro Santilli personality type test results
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

= Ciro Santilli Myers-Briggs Type Indicator
{c}
{parent=ciro-santilli-personality-type-test-results}

\x[ciro-santilli] feels that \x[ciro-santilli-myers-briggs-type-indicator]{parent} is much more random/hard to determine than the \x[big-five-personality-traits]

Upon a quick look \x[ciro-santilli] evaluates himself as https://www.16personalities.com/intj-personality[INTJ].

= Ciro Santilli Big Five Personality traits
{c}
{parent=ciro-santilli-personality-type-test-results}

This is how \x[ciro-santilli] evaluates himself on the \x[big-five-personality-traits]{parent}:
* Openness to experience; very high, see: \x[ciro-santilli-s-self-perceived-creative-personality]
* Conscientiousness: low, Ciro is driven very strongly by \x[effortless-effort][internal passion] rather than external expectations
* Extraversion: high online, e.g. \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china], but much lower in the real world, no patience for something he's not \x[googled] for in the last 5 seconds
* Agreeableness: high, see e.g. \x[ciro-santilli-s-self-perceived-compassionate-personality]. But Ciro has built some tolerance disagreement online for it online during \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china], you've got to fight for what is right.
* Neuroticism: medium high, Ciro does have some anxiety. It does help get things done sometimes, but it also sometimes gets in the way.

= Ciro Santilli's dreams
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

\x[ciro-santilli]'s dreams almost all include the following aspect: Ciro is trying to do something mundane, like climbing a hill, walking across town, etc. but doing so it extremely difficult. The hill is too steep, he gets lost, and things which are easy to use in real life are impossibly hard to use in the dream.

So they are a bit like \x[nightmare]{p}, but not that bad. Just really annoying and tiresome. Still, Ciro does enjoy o visiting the semi-real places those dreams bring him to, much for the same reasons he \x[ciro-santilli-s-cycling][enjoys cycling].

Ciro attributes this type of dream to his occupation as a \x[software-engineer], because that's basically the feeling you get all day from it: why isn't this working!!! It is so basic!!!

= Ciro Santilli's cheapness
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

When Ciro was a teenager, he was extremely cheap e.g. for clothes, food and \x[video-game]{p} even tough his family didn't have bad financial conditions.

This was mostly to save the world by not wasting resources that other people in need could use, and to save money so he could have more money to do \x[unconditional-basic-income][more of whatever he wanted without the obligation to work].

But Ciro admits that shocking people with the incredible level of low quality goods was also fun.

Ciro changed \x[ciro-santilli-s-formal-education][after he came to Europe], especially in regards to food, perhaps corrupted by the fact that now the best chocolates, cheeses and breads in the world were not much more expensive than the cheapest brand you could buy. He still \x[luxury-goods][hates clothes that are just to look good like costumes though].

Living close to a small \x[favela], \x[sao-remo-the-favela-next-to-usp], helped Ciro get frighteningly cheap goods on the shop frequented by the favela neighbours.

One legendary story is that of when his flatmate dropped some past on the kitchen floor, and the bowl broke, but Ciro prevented the flatmate from throwing it away and ate some of it nevertheless. What spooked them out the most was Ciro's statement that the pasta now had a crunchy glass shard texture to it.

= Ciro Santilli's love advice
{c}
{parent=ciro-santilli-s-psychology-and-physiology}

In the field of Love and Friendship, Ciro is a big believer in the merciless application of \x[tit-for-tat]. Never desire someone's love if you give and what comes back is not proportional. Cut your attempts to reach out immediately in such cases.

Never tell a woman you like her before she is in your bed.

If someone likes you and you don't like them as much, make that clear to them. Don't put this off, be it for \x[ciro-santilli-s-self-perceived-compassionate-personality][compassion], curiosity, loneliness, or \x[narcissism].

= Ciro Santilli's drug experiences
{c}
{parent=ciro-santilli}

\x[ciro-santilli] never did any \x[illegal] drugs, because he:
* doesn't want to help fund \x[organized-crime]. Notably, Ciro is for complete \x[legalization-of-drugs] of all drugs
* already has better more sustainable drugs like \x[ciro-santilli-s-wife][love], \x[ciro-santilli-s-cycling][cycling], learning the \x[natural-science]{p} and \x[ciro-santilli-s-selfish-desires][fame]. He (or more realistically, the world) \x[trainspotting-1996][chose life for him].
so don't expect any amazing stories here.

Like https://en.wikipedia.org/wiki/Word_of_Wisdom[LDS believers], Ciro never drinks coffee nor smokes, and only drinks alcohol and tea sparingly, because they are all addictive \x[drug]{p} and bring no net increase of energy and concentration.

Ciro prefers to only enjoy a glass of tea \x[ciro-santilli-s-sport-practice][when going out cycling on a cold day] (https://en.wikipedia.org/wiki/Earl_Grey_tea[Earl gray], with milk, no sugar), or get a half pint of beer when going out with friends to a pub.

Ciro only got reasonably drunk twice on his life:
* once when he was quite young, likely pre-10 years old, while visiting an uncle's home, and adults were having a very nice sweet and thick type of alcoholic cocktail, and Ciro drank a bit too much and that made him really really stupid
* once while studying at \x[university-of-sao-paulo], somehow someone was giving free beers at one of the parties (at which Ciro practiced \x[cirodance]). And since Ciro had always been a \x[ciro-santilli-s-cheapness][cheap-ass], he thought, hey, this is a good chance to try it out. Ciro remembers that this made him a bit euphoric, active, very stupid, and a bit \x[horny] (though of course, he got no pussy as usual).

Later in life, around the time of \x[ciro-santilli-s-wedding][his wedding], there were guests around all the time, and he was drinking beer with them all the time. Then one day, during lunch, Ciro felt a weirdly strong desire to drink one more pint. It was at this point that Ciro realised first-hand what mild, but real, alcohol addiction felt like, and he didn't get that drink, and swore from then on to never drink more than one glass a week, and only with friends at a bar after work.

\x[richard-feynman] tells a very similar story on his \x[surely-you-re-joking-mr-feynman] chapter :
\Q[
The people from the airlines were somewhat bored with their lives, strangely enough, and at night they would often go to bars to drink. I liked them all, and in order to be sociable, I would go with them to the bar to have a few drinks, several nights a week.

One day, about 3:30 in the afternoon, I was walking along the sidewalk opposite the beach at Copacabana past a bar. I suddenly got this treMENdous, strong feeling: "That's just what I want; that'll fit just right. I'd just love to have a drink right now!"

I started to walk into the bar, and I suddenly thought to myself, "Wait a minute! It's the middle of the afternoon. There's nobody here, There's no social reason to drink. Why do you have such a terribly strong feeling that you have to have a drink?" - and I got scared.

I never drank ever again, since then. I suppose I really wasn't in any danger, because I found it very easy to stop. But that strong feeling that I didn't understand frightened me. You see, I get such fun out of thinking that I don't want to destroy this most pleasant machine that makes life such a big kick. It's the same reason that, later on, I was reluctant to try experiments with LSD in spite of my curiosity about hallucinations.
]

One notable drug early teens Ciro consumed was \x[magic-the-gathering], see: \x[magic-the-gathering-is-addictive]{full}.

= Ciro Santilli's biography
{c}
{parent=ciro-santilli}

Maybe \x[ciro-santilli] should do something useful and remarkable so that someone might actually want to read his biography in the first place. But hey, \x[effortless-effort][procrastination].

\x[ciro-santilli] was born in \x[brazil] in a small/medium city in the https://en.wikipedia.org/wiki/São_Paulo_(state)[State of São Paulo] in https://en.wikipedia.org/wiki/Anno_Domini[1989 AD].

References:
* https://openlettersreview.com/posts/rise-and-kill-first-by-ronen-bergman
* https://www.sefaria.org/Sanhedrin.72a.4?lang=bi&with=all&lang2=en

The Sikh knife https://en.wikipedia.org/wiki/Kirpan[Kirpan] also comes to mind.

Non-violence only works when you have https://en.wikipedia.org/wiki/Nonviolence[bodies to spare from your followers].

In the year 2000, Ciro lived with his parents for 10 months in the \x[coventry] because his father took some courses at the \x[university-of-warwick]. This was Ciro's most important educational experience, because it taught him the Holy Language of \x[english-language][English], which infinitely expanded Ciro's Internet horizons, and shaped Ciro's \x[having-more-than-one-natural-language-is-bad-for-the-world] philosophy. When he came back to Brazil, Ciro skipped dozens of levels in his English school, and was put to study with much older teenagers who marveled at Ciro's incredibly cute, but since lost, British accent.

Another huge advantage of Coventry is that the https://hearsallacademy.org/[Hearsall Community Primary School] had two classes dedicated to foreign students to learn English before integrating with the British students. There were a several kids from Kosovo there due to the \x[kosovo-war] which was just ending, and it was there that Ciro made his first \x[chinese] friend, yet unaware of course of the \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][role the country would later play in his life]. One particularly fun memory was that of playing \x[soccer] on the school playground with a sponge ball to avoid breaking the windows. Then one day it was raining, but Ciro still went for a https://en.wikipedia.org/wiki/Header_(association_football)[header], and the soaked sponge ball was soaked and splashed Ciro with dirty water. Good days.

Some other good memories are of reading the first two \x[harry-potter]{p}, \x[games-young-ciro-santilli-played][playing and mostly watching other kids play Pokemon on their Game Boys and Pokemon trading cards], and going to a nearby commons playing field and woods, as it typical throughout the UK. Ciro also played some rugby with a local boys team TODO name? but for some reason his team was always crushed when they went to nearby towns to play against other teams. And Ciro also went with his family or with school to some nearby attractions, like Stratford-Upon-Avon (Shakespeare's hometown), and some castles.

After Coventry, Ciro's family lived in the city of \x[santos-sao-paulo-brazil][Santos, São Paulo, Brazil, which made a deep impression on Ciro], until he left to go to the \x[university-of-sao-paulo] in 2007.

\Video[http://youtube.com/watch?v=jIic9_ZhyC8]
{title="When https://en.wikipedia.org/wiki/Ali_G[Ali G] met the Beckhams | Comic Relief" (2001)}
{description=Ciro's father really liked Ali G. when they were in the UK in the year 2000, and Ciro would watch along, not fully getting all jokes, but still amuzed by his irreverence. This interview with https://en.wikipedia.org/wiki/David_Beckham[David] and https://en.wikipedia.org/wiki/Victoria_Beckham[Victoria] Beckham is perhaps one of Ali's best performances.}

\Video[https://www.youtube.com/watch?v=efgIm9YPZvE]
{title=Wicked wicked jungle is massive song from Ali G Indahouse (2002)}
{description=OK, the last Ali G video, I promise. Maybe.}

= The bullying of young Ciro Santilli
{c}
{parent=ciro-santilli-s-biography}

When \x[ciro-santilli] was very young, about 6, he was a \x[fatty], and other \x[evil] boys picked on him.

Ciro was mor stupid than now, and continued to try and hang out with those evil kids to show them he was cool too or that he was strong, and so continued to get hurt.

Advice to his children: stay away from evil people.

If you come across evil people, smile a fake smile to them, and walk away, but never give your back to them, and always be ready to fight.

If they laugh at you, know that you https://en.wikipedia.org/wiki/Ecclesiastes_3#Verse_20[are shit] like everyone else, pretend to laugh with them, take their post and repost it on your public profile, and silently stay away from those idiots.

Never show any weakness.

If a fight is likely, always be ready, always have your friends nearby, be as well armed as the enemy, and never be outnumbered.

On the \x[internet], never care about e-bully posts, either block them immediately, and anyone that likes their posts, or follow https://github.com/cirosantilli/china-dictatorship/tree/56f678e776fabf738142bbc3d8e10c6f1c49bd5e#reply-policy[Ciro's reply policy].

Call parents or other authorities as soon as there is risk of physical harm. Better a living free \x[don-t-be-a-pussy][pussy] than dead or in youth detention for murder. Similar advice applies if you are going to jail I guess.

If a physical fight is inevitable however, https://biblehub.com/luke/6-29.htm[ignore Jesus this once and don't give the other face], but rather follow the Talmud and https://en.wikipedia.org/wiki/We_shall_fight_on_the_beaches[fight all out on the beaches]:
\Q[If someone comes to kill you, rise and kill first.]

Perhaps it was good to learn those lessons early, before the stakes were too high. Adults fake it much better, and therefore it is harder to learn those lessons from them, but they are still just as evil on the inside. It might also have contributed to \x[ciro-santilli-s-self-perceived-compassionate-personality].

= Ciro Santilli's formal education
{c}
{parent=ciro-santilli-s-biography}

\x[ciro-santilli] participated in a double degree program, so he obtained have engineering degrees in both:
* 2010 - 2014: \x[ecole-polytechnique]

  Master 2 degree in \x[applied-mathematics].

  Best French engineering schools in https://www.timeshighereducation.co.uk/world-university-rankings/2013-14/subject-ranking/subject/engineering-and-IT[the Times Ranking 2013] (http://web.archive.org/web/20190828083945/https://www.timeshighereducation.com/world-university-rankings/2014/subject-ranking/engineering-and-IT#!/page/2/length/25/sort_by/rank/sort_order/asc/cols/undefined[archive])
* 2007 - 2010: \x[university-of-sao-paulo]

  Automation and Control Engineer at the \x[polytechnic-school-of-the-university-of-sao-paulo].

  The best South American university https://www.timeshighereducation.co.uk/world-university-rankings/2013-14/world-ranking/region/south-america[in the Times Ranking 2013] (http://web.archive.org/web/20190828083945/https://www.timeshighereducation.com/world-university-rankings/2014/subject-ranking/engineering-and-IT#!/page/2/length/25/sort_by/rank/sort_order/asc/cols/undefined[archive]) in all subjects.

  Ciro finished the course with honors of "The Best Student in Automation and Control of the year 2013".

See also further remarks on Ciro Santilli's \x[linkedin]: https://www.linkedin.com/in/cirosantilli/

Despite studying in great institutions with great teachers, Ciro feels that:
* \x[ciro-santilli-s-skills][most of what he knows] came from the Internet, man pages, books and his parents
* \x[the-most-important-projects-done-by-ciro-santilli][actual projects] matter much more than those pieces of paper called Diplomas. You should not do like Ciro who basically did nothing but school mandated work, but \x[don-t-be-a-pussy][instead grow some balls and focus much more or entirely on your projects]

This motivated Ciro to work on \x[write-free-books-to-get-famous-website].

= Ciro Santilli's musical education
{c}
{parent=ciro-santilli-s-biography}

Ciro's parents put him to play the piano. This is partly influenced by Ciro's paternal grandfather, an energetic Italian descendant who liked music

\Image[Six_year_old_Ciro_Santilli_when_his_grandfather_offered_him_an_electronic_keyboard.jpg]

The piano was fine, but a bit boring due to how it was taught.

The teachers were nice old ladies who followed a very traditional and methodic approach which was just like \x[write-free-books-to-get-famous-website/motivation][regular school], instead of doing what actually needed to be done: inspire kids into becoming creative musical geniuses that can compose their own stuff.

While in \x[santos-sao-paulo-brazil][Santos], before going to university, Ciro somehow got into acoustic and \x[electric-guitar].

The \x[electric-guitar] environment was much less formalized in general, and he took courses with http://www.maurohector.com.br/[an awesome teacher] (https://web.archive.org/web/20190107231749/http://www.maurohector.com.br/[archive]), who actually tried to inspire his students to create their own music and improvisation.

And so a young teenage Ciro once seriously considered becoming a professional \x[the-best-modern-instrumental-western-music-of-all-time][guitar player].

In his early teens, Ciro listened to the usual canned music his friends listened to: \x[music-teenager-ciro-santilli-liked-to-listen-to], until he started to stumble upon \x[jazz].

Ciro remembers clearly rainy \x[weekend][weekend] days where he would go to a run down second hand shop near his home in someone's garage (Sebo do Alfaiate, R. Frei Francisco de Sampaio, 183 - Embaré, Santos - SP, 11040-220, Brazil :-)), and buy amazing second hand Jazz CDs. It was just a matter of time until he would start scouring the web for "the best jazz albums of all time" and start listening to all of them, see e.g. \x[the-best-modern-instrumental-western-music-of-all-time]. https://digitaldreamdoor.com/index.html was a good resource from those times!

Ciro ultimately decided \x[ciro-santilli-s-bad-old-event-memory][his bad memory] and overwhelming \x[write-free-books-to-get-famous-website/motivation][passion for the natural sciences] would better suit a scientific carrier.

He also learnt that the \x[computer] is also an extremely satisfying artistic instrument.

Also, with a computer, boring dexterity limitations are no more: you can just record perfect played segments or program things note by note to achieve whatever music or action you want!

Although Ciro quit playing musical instruments, his \x[music][passion for the music has remained], and who knows how it has influenced his life.

= Ciro Santilli's family
{c}
{parent=ciro-santilli-s-biography}

= Ciro Santilli's mother
{c}
{parent=ciro-santilli-s-family}

= Ciro Santilli's wife
{c}
{parent=ciro-santilli-s-family}

See: https://cirosantilli.com/china-dictatorship/wife

= Ciro Santilli's wedding
{c}
{parent=ciro-santilli-s-wife}

= Ciro Santilli's children
{c}
{parent=ciro-santilli-s-wife}

Count: 0.

= Interesting members of the Santilli family
{parent=ciro-santilli}

Found through Google with no direct relation known to \x[ciro-santilli]:
* https://en.wikipedia.org/wiki/Santilli[]: \x[wikipedia] page of the glorious family, Santillis with a wikipedia page:
  * https://en.wikipedia.org/wiki/Ruggero_Santilli[Ruggero Santilli]: "fringe science guy", by far dominates Google as of 2019. Created the respectable http://www.santilli-galilei.com/[R.M. Santilli Foundation]
  * https://en.wikipedia.org/wiki/Ray_Santilli[Ray Santilli] made a fake https://en.wikipedia.org/wiki/Alien_autopsy[1995 alien autopsy movie], YouTube sample: https://www.youtube.com/watch?v=sVcaT2QnoDs
  * http://en.wikipedia.org/wiki/Ivana_Santilli[Ivana Santilli]: Canadian singer, pop-electric-chill: https://www.youtube.com/watch?v=hQRuVN0H8dM
* accounts on important websites
  * https://github.com/santilli \x[anonymous] \x[github] https://web.archive.org/web/20191220222515/https://github.com/santilli[as of 2019]
  * http://santilli.com/ for rent by https://realnames.com/ (https://en.wikipedia.org/wiki/RealNames[wiki page]) as https://web.archive.org/web/20190526003433/http://santilli.com/[of 2019]
  * https://twitter.com/santilli is Marcel Santilli the guy who took the Twitter handle of the family

    https://www.linkedin.com/in/marcelsantilli

    Also Brazilian and tech related like Ciro Santilli.
  * https://www.youtube.com/user/TheOverthrowShow https://thepetesantillishow.com/ Pete Santilli, American Conservative news commentator show, makes Ciro cringe of boredom. At least he has a passion.

Possibly related variants:
* Santillo:
 * http://en.wikipedia.org/wiki/Will_Santillo[Will Santillo] who makes erotic artistic photos
 * https://www.linkedin.com/in/ciro-santillo-2025a6ba/ a "Ciro Santillo", https://github.com/Ciruxx[], also a \x[programmer]
* Santilly, a town in Saône-et-Loire, France: https://en.wikipedia.org/wiki/Santilly,_Saône-et-Loire
  * http://santilly.com/ redirects to https://www.pompes-funebres-santilly.com/fr/[], a French funerary service

= Ciro Santilli's homonyms
{parent=interesting-members-of-the-santilli-family}
{c}

If any of you ever read this, do send me an email to \x[ciro-santilli] saying hi and we can agree on a clear separation of usernames.

Although if you are just starting out, maybe you should just go from scratch with a unique Internet alias.

A younger unrelated Argentinian homonym who likes \x[soccer] that can be found through \x[google]:
* https://twitter.com/ciro_santilli
* https://www.facebook.com/profile.php?id=100009065024069
* https://www.instagram.com/ciro.santilli/
Ciro used to \x[ciro-santilli-s-sport-practice][like playing soccer too]! :-)

Unknown:
* https://twitter.com/cirosantilli7
* https://www.youtube.com/channel/UCY44wYp2nEuhMRBU1kHkdCA

= Ciro Santilli's projects
{parent=ciro-santilli}

Major projects can be seen at: \x[the-most-important-projects-done-by-ciro-santilli]{full}.

A summary of minor projects is given at: \x[ciro-santilli-s-minor-projects].

This section is a dump for anything else, to keep those sacred first sections clean.

\Include[write-free-books-to-get-famous-website]

= All GitHub Commit Emails
{c}
{parent=ciro-santilli-s-projects}

https://github.com/cirosantilli/all-github-commit-emails

= Facebook profile face dump
{parent=ciro-santilli-s-projects}

In 2016 Ciro made a script downloaded \x[facebook] profile pictures.

This was possible at the time without any login by using a 2010 profile ID dump from originally announced at: https://blog.skullsecurity.org/2010/return-of-the-facebook-snatchers since profile picture access was not authenticated.

The profile ID dump was downloadable through a \x[bittorrent] named `fbdata.torrent` of about 2.8GB, mostly compressed. Doing:
``
find . -type f | xargs sha256sum | sha256sum
``
on Ubuntu 20.04 gives:
``
2c9a739c9c5495e38ebab81fc67411b7c6562f139dcb8619901a3f01230efdd5
``
This dump widely reported e.g. on \x[hacker-news] at: https://news.ycombinator.com/item?id=1554558[].

At some point however, Facebook finally started to require tokens to view public profile pictures, thus making such further collection impossible, e.g. as of 2021: https://developers.facebook.com/docs/graph-api/reference/v9.0/user/picture[] mentions:
\Q[Querying a User ID (UID) now requires an access token.]
This is also mentioned e.g. at: https://stackoverflow.com/questions/11442442/get-user-profile-picture-by-id[]. This major privacy flaw was therefore finally addressed at some point, making it impossible to reproduce this project.

Ciro downloaded 10 thousand of those pictures, and did facial extraction with: https://stackoverflow.com/questions/13211745/detect-face-then-autocrop-pictures/37501314#37501314

He then created single a video by joining 10 thousand of those cropped faces which can be uploaded e.g. to \x[youtube]. Ciro later decided it was better to make those videos private however, as sooner later he'd lose his account for it.

\x[company]{c}{p} like \x[youtube] blocking this kind of content is the type of thing that makes companies take longer to fix such gaping privacy issues, and is a bit like \x[security-through-obscurity]. A video makes it clear to everyone that there is a privacy issue very effectively. But people prefer to hide and look away, and then 99% of people who know nothing about tech get their privacy busted by actual criminals/government spies and never learn about it.

But now that Facebook finally fixed it, it's fine, no need for the video anymore.

= Always out-of-date and rarely update list of open source contributions by Ciro Santilli
{parent=ciro-santilli-s-projects}
{scope}

This is mostly stuff from before 2016 when Ciro was anxious to document his contributions to \x[ciro-santilli-s-biography][get a job].

Most of the projects here are also minor contributions, or Ciro later noticed that the projects were not useful enough to work on and that he was actually wasting his time.

= Size scale
{parent=always-out-of-date-and-rarely-update-list-of-open-source-contributions-by-ciro-santilli}

Some of the contributions are subjectively self evaluated based on:
* How many significant lines changed (no indentation changes, moves, mass refactoring, trivial tests, etc.):

  | 0
  | only trivial changes

  | 1
  | < 20

  | 2
  | < 150

  | 3
  | > 150
* How hard it was to make it. 4 algorithmic lines are harder than 100 \x[web-development]/documentation lines.

= Patches
{parent=always-out-of-date-and-rarely-update-list-of-open-source-contributions-by-ciro-santilli}

= Merged by others
{parent=patches}

Only patches which were reviewed by at least one person with push permission will be listed here.

This may also include patches which were rejected in favor of another patch, but strongly influenced the merged patch.

|| Date
|| Project
|| Size
|| Description

| 2019-09
| \x[katex]
| 1
| https://github.com/KaTeX/KaTeX/pull/2091[Create globalGroup option to place definitions in global scope]

| 2018-06
| raspi3-tutorial
| 0
| https://github.com/bztsrc/raspi3-tutorial/pull/34[Explain how to see UART1]

| 2018-05
| \x[buildroot]
| 1
| https://github.com/buildroot/buildroot/commit/45719594d08024df97db55333f8ab3ba2b4fc23e[ltp-testsuite: add --with-open-posix-testsuite]

| 2018-03
| \x[buildroot]
| 1
| https://github.com/buildroot/buildroot/commit/8a6e30efdeb9f31d51a92ed465373f4128f55e8a[qemu_x86_64_defconfig: fix kernel header version after bump to 4.15]

| 2017-11
| \x[cocos2d]
| 1
| https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/pull/304[Recreate libfmod.so.6 symlinks]

| 2017-10
| \x[cocos2d]
| 1
| https://github.com/cocos2d/cocos2d-x-3rd-party-libs-src/pull/155#issuecomment-336760545[Make bullet use -fPIC]

| 2017-07
| https://github.com/KhronosGroup/OpenCL-Headers[OPenCL Headers]
| 0
| https://github.com/KhronosGroup/OpenCL-Headers/issues/18[C11 anonymous structs / unions should allow xyz notation for vector types]

| 2017-06
| \x[linux-insides]
| 0
| https://github.com/0xAX/linux-insides/pull/489[Mention Buildroot in addition to ivandaviov/minimal]

| 2017-06
| \x[opengl-tutorial-org]
| 0
| https://github.com/opengl-tutorials/ogl/pull/17[Use existing empty layout on feed.xml]

| 2017-04
| https://github.com/ssloy/tinyrenderer[Tiny Renderer]
| 0
| https://github.com/ssloy/tinyrenderer/pull/10[Add gitignore]

| 2017-02
| https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers[Vulkan Loader]
| 0
| https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers/pull/1536[Use nproc instead of ncpu]

| 2017-01
| https://github.com/boostorg/geometry[Boost Geometry]
| 1
| https://github.com/boostorg/geometry/issues/376[What is "QPoint::double" in doc/example_adapting_a_legacy_geometry_object_model.qbk ?]

| 2016-12
| \x[freetype-gl]
| 1
| https://github.com/rougier/freetype-gl/pull/144#event-905730810[GLFW Ubuntu package works on 16.10]

| 2016-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/816[Add C variable printf debug snippets]

| 2016-09
| https://bitbucket.org/osrf/gazebo[Gazebo]
| 1
| https://bitbucket.org/osrf/gazebo/pull-requests/2460/add-a-world-to-the-gui_overlay_plugin_time/diff[Add a world to the gui_overlay_plugin_time example]

| 2016-07
| https://github.com/googlesamples/android-vulkan-tutorials[Android Vulkan Tutorials]
| 1
| https://github.com/googlesamples/android-vulkan-tutorials/pull/12[Use android API 24]

| 2016-07
| https://github.com/ivandavidov/minimal[minimal linux live]
| 0
| https://github.com/ivandavidov/minimal/pull/30[Fix time sh instead of sh time]

| 2016-06
| \x[ghdl]
| 0
| https://github.com/tgingold/ghdl/pull/81[Typo severals -> several in Invoking doc]

| 2016-06
| \x[ghdl]
| 1
| https://github.com/tgingold/ghdl/pull/80[Document GCC backend needed to generate executables]

| 2016-06
| \x[ghdl]
| 0
| https://github.com/tgingold/ghdl/pull/79[Typo debugger -> debugged in BUILD.txt]

| 2016-06
| \x[ghdl]
| 0
| https://github.com/tgingold/ghdl/pull/77[Typo carray -> carry in full adder example]

| 2016-05
| https://github.com/wavexx/facedetect[facedetect]
| 1
| https://github.com/wavexx/facedetect/pull/7#event-675223551[Add example to extract faces with imagemagick]

| 2016-05
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1940[Create data science section and add Kaggle to it]

| 2016-05
| \x[opengl-tutorial-org]
| 0
| https://github.com/opengl-tutorials/ogl/pull/18[Add empty line before triple quotes]

| 2016-05
| https://github.com/bulletphysics/bullet3[Bullet Physics]
| 1
| https://github.com/bulletphysics/bullet3/pull/612[Improve HelloWorld]

| 2016-04
| \x[freetype-gl]
| 1
| https://github.com/rougier/freetype-gl/pull/114[Find out how to compile on Ubuntu and document it]

| 2016-03
| \x[ranger-file-manager]
| 0
| https://github.com/hut/ranger/pull/506[gitignore install_log.txt generated by make install]

| 2016-03
| \x[ranger-file-manager]
| 1
| https://github.com/hut/ranger/pull/511[Add %confdir macro]

| 2016-03
| \x[ranger-file-manager]
| 1
| https://github.com/hut/ranger/pull/507[set_bookmark for directories other than the current]

| 2016-02
| \x[jami-software]
| 2
| https://tuleap.ring.cx/plugins/tracker/?aid=446[Create working Android video hardware decoding prototype]

| 2016-02
| \x[jami-software]
| 1
| https://github.com/savoirfairelinux/ring-project[Started the one command build which was later made official]

| 2016-01
| https://github.com/haoel/leetcode[leetcode]
| 1
| https://github.com/haoel/leetcode/pull/90[Java LRUCache with LinkedHashMap]

| 2015-12
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1727[Add InterviewBit to problem sets]

| 2015-10
| \x[linux-insides]
| 0
| https://github.com/0xAX/linux-insides/pull/227[Recommend ivandaviov/minimal to generate initrd]

| 2015-08
| https://github.com/programble/bare-metal-tetris[bare-metal-tetris]
| 0
| https://github.com/programble/bare-metal-tetris/pull/2[make clean also removes tetris.iso]

| 2015-08
| https://github.com/RWTH-OS/eduOS[eduOS]
| 0
| https://github.com/RWTH-OS/eduOS/pull/7[README typos Binutils and NASM]

| 2015-08
| \x[gdb]
| 0
| https://sourceware.org/ml/gdb-patches/2015-07/msg00744.html[python: fix Linetable case to LineTable in docstrings and comments]

| 2015-07
| \x[gdb]
| 0
| https://sourceware.org/ml/gdb-patches/2015-08/msg00013.html[Remove outdated comment from call-rt-st.exp]

| 2015-07
| \x[gdb]
| 0
| https://sourceware.org/ml/gdb-patches/2015-08/msg00015.html[Fix broken CONTRIBUTE link to GNU insignificant changes]

| 2015-07
| \x[gdb]
| 1
| https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=commit;h=7b849db4f213d6734b4121ca5e5cab3341a5140c[py-linetable.c: Fix doc of LineTable.source_lines' return type]

| 2015-07
| https://en.wikipedia.org/wiki/GNU_Binutils[Binutils]
| 1
| https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=commit;h=7e3023528162de7760a0e7e487aa81bbf44cb6a9[Clarify case requirements for gas pseudo-ops]

| 2015-07
| https://github.com/aquynh/capstone[Capstone]
| 0
| https://github.com/aquynh/capstone/issues/419[Website typos at beyond_llvm]

| 2015-07
| https://github.com/xolox/vim-session[Vim Session]
| 1
| https://github.com/xolox/vim-session/pull/81[auto_save_to option added]

| 2015-05
| https://en.wikipedia.org/wiki/Netwide_Assembler[NASM]
| 0
| https://bugzilla.nasm.us/show_bug.cgi?id=3392310[doc: typo occationally]

| 2015-05
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1468[Computer Science from the Bottom Up]

| 2015-05
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1461[problem-sets: leetcode]

| 2015-05
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1459[Papers we love]

| 2015-04
| https://en.wikipedia.org/wiki/AlternativeTo[alternativeTo]
| 0
| https://alternativeto.net/user/cirosantilli/added/[icanprove.com]

| 2015-04
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1443[Knapsack Problems]

| 2015-04
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1442[LSB]

| 2015-04
| \x[honza-vim-snippets]
| 0
| https://github.com/honza/vim-snippets/pull/561[java: prinlna to print array]

| 2015-04
| \x[ebookfoundation-free-programming-books]
| 0
| https://wcipeg.com[PEG Judge]

| 2015-03
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7912[Convert many JavaScript # links to buttons]

| 2015-03
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8092[Factor permission check in issuable finder]

| 2015-03
| https://github.com/spring-projects/spring-integration-samples[Spring]
| 0
| https://github.com/spring-projects/spring-integration-samples/pull/130[Typo Gardle -> Gradle]

| 2015-02
| \x[linux-insides]
| 0
| https://github.com/0xAX/linux-insides[Make x86 paging reference title clearer]

| 2015-02
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlab-shell/pull/184[Ignore .bundle]

| 2015-02
| \x[ebookfoundation-free-programming-books]
| 0
| https://github.com/vhf/free-programming-books/pull/1329[Problem sets: CareerCup]

| 2015-01
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/511[Fix false positive hyphen list item expansion]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7999[Append in place for strings and arrays]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7878[Remove unneeded password_confirmation from seed]

| 2015-01
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8307[Typo in project API events comment]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7987[Replace match via get with get on routes]

| 2015-01
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7925[Remove or prepend underscore _ to unused method arguments]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7905[Change always passing visible false tests]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7951[Make blob new and edit file editors more uniform]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8096[Replace regex methods by string ones]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8430[Simplify SSH fingerprint regexp extraction]

| 2015-01
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8520[Add tests for disabled blob edit button cases v2]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8504[permission.md align table, rm double empty line]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8324[Remove commit indicator from path on Commits tab]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8230[Make protected branch perms explicit in doc]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8497[doc workflow markdown style]

| 2014-12
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7989[Disallow POST to compare as it does not create objects]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7782[Sort .gitignore]

| 2014-12
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7957[Remove unused Project#code function]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8256[Remove unused has_gitlab_shell3? method]

| 2014-12
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7978[Add tests for tree edit routes]

| 2014-12
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7886[Disable / hide MR edit blob button if cannot edit]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7882[Use blob local instead of instance]

| 2014-12
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7894[Fix dev user seed: ID was used twice]

| 2014-12
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8466[Fix Rake tasks doc README: add top level h1]

| 2014-12
| https://github.com/ruby/ruby[Ruby]
| 0
| https://github.com/ruby/ruby/commit/512705e62d4929753845e449397cedeff0433f05[Typo close -> closes.]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/246[Add tests for normalize outer whitespace removal]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/249[spec_tests make --pattern affect --dump-tests]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/247[Add --number option to run a single test by its id]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/250[Don't raise exception on invalid UTF-8 output]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/248[spec_tests add short options for common parameters]

| 2014-12
| \x[commonmark]
| 0
| https://github.com/jgm/CommonMark/pull/240[Ignore pyc files]

| 2014-12
| \x[commonmark]
| 1
| https://github.com/jgm/CommonMark/pull/240[Expose failure to normalize whitespaces]

| 2014-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/488[Markdown bold and italic]

| 2014-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/484[Markdown links URLs from the clipboard]

| 2014-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/483[Markdown autolinks]

| 2014-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/486[Let the short version of links not have title.]

| 2014-11
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/487[Fix markdown fenced code blocks.]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlab-shell/pull/193[Delete tags and branches that start with hyphen]

| 2014-11
| \x[gitlab]
| 3
| https://github.com/gitlabhq/gitlab-shell/pull/186[Restore hooks PATH before calling ruby]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8251[Factor regex error messages with spec API tests]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7944[Move new blob commit message textarea below editor]

| 2014-11
| https://github.com/bradfitz/gitbrute[gitbrute]
| 0
| https://github.com/bradfitz/gitbrute/pull/4[Usage]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8254[Factor GITLAB_SHELL_VERSION get method]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8168[Create dev fixture projects with fixed visibility]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8258[Factor using Repository#path_to_repo]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8094[Remove unused authenticate_user from project#show]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8233[Remove dead Event#new_branch? method]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8236[Don't output to stdout from lib non-interactive methods]

| 2014-11
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/7903[Fix version of test seed branches to specific revisions]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8234[Factor '0' * 40 blank ref constants]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7863[Transform remove blob link into button]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7516[Update default regex message to match regex]

| 2014-11
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8222[Continue strings with backslash instead of append]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8182[Factor behaviors.scss constants]

| 2014-11
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8241[Remove unneeded backslash: "/" == "/"]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8231[Fix push not allowed to protected branch if commit starts with 7 zeros]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8223[Use require spec_helper instead of relative path]

| 2014-11
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8211[Fix doc rake import md style]

| 2014-11
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8213[Factor lib backend gitlab shell path]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8127[Run user select Js only where needed]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7866[Use button type=submit instead of input]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8120[Only run profile js on pages that need it]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8123[Better js -> URL projects map to reduce unneeded execution]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8005[Use Gitlab.config instead of Settings everywhere]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8155[Show nothing instead of unassigned on issues]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8125[Only run namespace select js when needed]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8158[Merge File basename and dirname into split]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8159[Fix import.rake failed import if project name is also an existing namespace]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8150[Remove unused variable user at lib/gitlab/markdown]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8088[Use argument list for sh instead of string]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8114[Only run avatar chooser Js on pages that need it]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8118[Remove whitespace link between user group avatars]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8139[Fix doc raketasts import md style]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7994[Remove unneeded app/finders config.autoload path]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/8117[Improve grack auth hooks comment.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8093[Remove unused admin/projects#repository method]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7961[Factor admin logs]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8029[Remove unused filter from ProjectsController]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8028[Remove unused dev_tools helper.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8030[Factor authorize_push! and authorize_code_access!]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8087[Replace match with end_with: more readable, faster]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8102[Use @project on controllers, don't call method]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8101[Remove `param[:project_id]` at admin controller]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8097[DRY mentioned in magic note constant]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8113[Factor group forms]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8109[State on CONTRIBUTING that people should fix line style of touched lines]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/8110[Export all coffee classes with @]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7856[Fix missing flash on file edit error from web UI.]

| 2014-10
| https://github.com/jnicklas/capybara[Capybara]
| 0
| https://github.com/jnicklas/capybara/pull/1424[Fix History typo.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7942[Make new and edit file submit more uniform]

| 2014-10
| \x[libgit2]
| 1
| https://github.com/libgit2/libgit2[Join typedef and struct definitions in single file]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7938[Factor dashboard helper methods]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7983[Factor issue and merge request services]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7981[Replace www.gitlab.com with about.gitlab.com]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7991[Improve formatting of app/finders/README.md]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7985[Remove outdated comment from commits_controller]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7963[Factor markup? gitlab_markdown? into new method]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7379[Remove unused title parameter]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7940[Make Spinach test names consistent]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab-shell/pull/184[Ignore .bundle]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab-shell/pull/183[Ignore tags file]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab-shell/pull/182[Split one instance variable per line]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7919[Factor commit message textareas]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7948[Remove outdated comment on the project test seed]

| 2014-10
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7947[Remove assignment without effect.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7858[Add parenthesis to function def with arguments.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7834[Remove test line without effect because no should.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7922[Improve remove file commit message textarea placeholder]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7880[Replace :erb filter with plain HAML]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7881[Remove blame lines added leading whitespace]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7921[Improve new file commit message textarea placeholder.]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7920[Simplify custom MR good commit message hint]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7930[Move group feature step to match test location]

| 2014-10
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7904[Titleize blob action buttons.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7914[Remove statement without effect.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7913[Fix dev merge seed: update testme to gitlab-test.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7911[Remove trailing whitespace from views.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7889[Remove def project from tests that inherit it.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7873[Replace testme with gitlab-test.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7897[Add predictable merge requests on dev seed.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7895[Prevent email sending on admin dev seed.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7898[Only show text wrap and diff notes for text in merge requests.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7862[Add web UI file CRUD tests.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7864[Remove type submit from button_tag since default.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7877[Replace empty? nil? with blank?.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7875[Typo indiciated -> indicated.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7835[Remove unnecessary page. from tests.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7803[Remove ununsed CONTRIBUTING link on edit MR form.]

| 2014-09
| \x[gitlab]
| 1
| https://gitlab.com/gitlab-org/gitlab-development-kit/merge_requests/22[Add g++ dependency to ubuntu install.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab_git/pull/44[Hound prefer single quotes.]

| 2014-09
| \x[libgit2]
| 0
| https://github.com/libgit2/libgit2/pull/2570[Remove unused buf variable from path/core test.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7823[Only clone GitLab Shell on tests if necessary.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7816[Factor fork button view.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7838[evaluate -> execute_script when return not needed.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7837[evaluate_script history -> go_back and go_forward.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7833[Factor current_url + URI.path into current_path.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7793[Replace javascript:; links with buttons.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7795[Factor .add-diff-note active state.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7792[Fix link_to_reply_diff.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7804[Factor issue and MR edit form error list.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7807[Factor error and success methods from services.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7772[Set textarea resize:vertical by default.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7657[Factor out commit list from compare and new MR.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7821[Prefix Spinach features with Spinach::Features::.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7814[Typo it -> its.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7801[Factor zen mode.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7771[Ignore tags file.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7797[Improve zen mode internals.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7791[CONTRIBUTING typos.]

| 2014-09
| https://github.com/chjj/marked[Marked]
| 1
| https://github.com/chjj/marked/pull/414[Add browser usage to README]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab_git/pull/43[Typo herlper -> helper.]

| 2014-09
| \x[libgit2]
| 1
| https://github.com/libgit2/libgit2/pull/2567[Factor 40 and 41 constants from source.]

| 2014-09
| \x[libgit2]
| 1
| https://github.com/libgit2/libgit2/pull/2572[Replace void casts with GIT_UNUSED.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/419[Typo "di ff" -> diff.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/417[Remove trailing whitespace.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/416[Gitignore rdoc/.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/415[Factor File.join in test sandbox_init.]

| 2014-09
| \x[ruby-on-rails]
| 1
| https://github.com/rails/rails/pull/16790[Explain ERB space removal.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab_git/pull/39[Update README to match Md style in CONTRIBUTING.]

| 2014-09
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7726[Typo localy -> locally]

| 2014-09
| \x[vader-vim]
| 1
| https://github.com/junegunn/vader.vim/pull/16[Add run-tests script.]

| 2014-09
| \x[vader-vim]
| 2
| https://github.com/junegunn/vader.vim/pull/22[Add SyntaxAt and SyntaxOf helpers.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/417[Remove trailing whitespace.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/416[Gitignore rdoc/.]

| 2014-09
| \x[libgit2-rugged]
| 0
| https://github.com/libgit2/rugged/pull/415[Factor File.join in test sandbox_init.]

| 2014-09
| \x[pro-git-book]
| 1
| https://github.com/progit/progit/pull/878[Mention packed-refs.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7472[Add link to fixed SHA version on blob.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7678[Factor new issue and edit MR forms.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7677[Fix missing to on reassign Merge Request text email to unassigned.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7661[Fix missing to on reassign Merge Request email to unassigned.]

| 2014-09
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/60[Run multimarkdown in compatibility mode.]

| 2014-09
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/69[Link to stmd.]

| 2014-09
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7211[Add users with deterministic username and password to development seed.]

| 2014-09
| \x[ruby-on-rails]
| 0
| https://github.com/rails/rails/pull/16774[Shorten ActionView::Base doc summary line.]

| 2014-09
| \x[ruby-on-rails]
| 1
| https://github.com/rails/rails/pull/16773[Clarify Rails uses erubis not stdlin ERB.]

| 2014-08
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/432[Rename node p to pipe]

| 2014-08
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7641[Typo.]

| 2014-08
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/431[README improvements: md style, typos, fix links.]

| 2014-08
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/429[Add tex hyperlink snippets.]

| 2014-08
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7609[Remove HAML eval for const strings.]

| 2014-08
| \x[softcover-latex]
| 1
| https://github.com/softcover/softcover/pull/116[Ignore template top level tex file.]

| 2014-08
| \x[softcover-latex]
| 1
| https://github.com/softcover/softcover/pull/103[Fix failing PDF fontsize verbatim test.]

| 2014-08
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/422[Add tex listings snippets.]

| 2014-08
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7509[Fix Md style for API docs.]

| 2014-08
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7508[Fix Md style for projects API doc.]

| 2014-08
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7483[Restrict commit area resize to vertical.]

| 2014-08
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlab-shell/pull/169[Update README Markdown style to match CONTRIBUTING]

| 2014-07
| \x[pro-git-book]
| 1
| https://github.com/progit/progit/pull/751[Set dummy merge driver merge ours .gitattributes.]

| 2014-07
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/7233[Add project stars.]

| 2014-07
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7340[Increase diff byte highlight contrast.]

| 2014-07
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7257[Clarify squash comes after review.]

| 2014-07
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7196[Enforce Markdown style.]

| 2014-07
| \x[octokat-js]
| 1
| https://github.com/philschatz/octokat.js/pull/7/files[Gitignore fixtures and dist/commonjs.]

| 2014-07
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7204[Fix username validation message to match regexp.]

| 2014-06
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7170[Add trailing newline to all text files.]

| 2014-06
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/7195[Typo.]

| 2014-06
| \x[markdownlint-markdownlint]
| 0
| https://github.com/mivok/markdownlint/pull/1[Typo.]

| 2014-06
| \x[ruby-on-rails]
| 0
| https://github.com/rails/rails/pull/15997[Typo.]

| 2014-06
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7169[Replace HTML5 obsolete center element with CSS.]

| 2014-06
| https://github.com/github/developer.github.com[developer.github.com]
| 1
| https://github.com/github/developer.github.com/pull/543[Explain :user is username not ID.]

| 2014-06
| https://github.com/prose/prose[Prose]
| 0
| https://github.com/prose/prose/pull/724[Correct CONTRIBUTING typos.]

| 2014-06
| \x[octokat-js]
| 1
| https://github.com/philschatz/octokat.js/pull/5[Fix `repo` to `repos` in README examples.]

| 2014-06
| \x[octokat-js]
| 1
| https://github.com/philschatz/octokat.js/pull/6[Fix typos and style on README.]

| 2014-06
| \x[octokit-js]
| 0
| https://github.com/philschatz/octokit.js/pull/57[Remove trailing whitespace.]

| 2014-06
| \x[octokit-js]
| 1
| https://github.com/philschatz/octokit.js/pull/56[Add grunt watch.]

| 2014-06
| \x[octokat-js]
| 0
| https://github.com/philschatz/octokat.js/pull/3[Remove unneeded semicolon.]

| 2014-06
| \x[octokat-js]
| 1
| https://github.com/philschatz/octokat.js/pull/2[Add grunt watch.]

| 2014-06
| \x[karlcow-markdown-testsuite]
| 2
| https://github.com/karlcow/markdown-testsuite/pull/55[Add Vagrantfile.]

| 2014-06
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/54[Remove hoedown options.]

| 2014-06
| \x[honza-vim-snippets]
| 1
| https://github.com/honza/vim-snippets/pull/386[Add HTML `ac` Anchor from Clipboard.]

| 2014-06
| https://github.com/wayneeseguin/rvm[RVM]
| 0
| https://github.com/wayneeseguin/rvm/pull/2900[Correct some doc typos.]

| 2014-06
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/7107[Clarify that bbastov is the style of Hound CI.]

| 2014-06
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/6863[Update docs to match new markdown style guide.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/51[Add blackfriday, lunamark, maruku and rdiscount.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/44[Add autolink-no-bracket extension test.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/45[Add showdown engine.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/47[Title attribute is significant at normalization.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/48[Add design goals.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/49[Add Python Markdown 2 engine.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/50[Add peg-markdown engine.]

| 2014-05
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6385[Commit message textareas have 72 char mark line.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/44[Add autolink-no-bracket extension test.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/43[Add link-idref-implicit-no-bracket test.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/42[Minor fixes to addition of hoedown.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/41[Remove no-auto-id argument for kramdown.]

| 2014-05
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/36[Add markdown_pl Markdown.pl engine.]

| 2014-04
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/6892[Remove redundant signin link from signin page.]

| 2014-04
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6897[Add help link to header.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/31[Improve output normalization with custom parser.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/40[Add ordered-list-inner-par-list test.]

| 2014-04
| \x[gitlab-ci]
| 1
| https://github.com/gitlabhq/gitlab-ci/pull/422[Add application.yml.example.development.]

| 2014-04
| https://github.com/boostorg/graph[Boost Graph]
| 1
| https://github.com/boostorg/graph/pull/8[Explicitly use vertex type on quick tour example.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/34[Add list-code-1-space test.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/33[Add md2html engine.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/32[Remove email tests because output is random.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 2
| https://github.com/karlcow/markdown-testsuite/pull/30[Run only tests that contain string in title.]

| 2014-04
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/29[Add marked engine.]

| 2014-04
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6795[Add markdown styleguide.]

| 2014-04
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6775[Include SASS in subdirectories with glob.]

| 2014-04
| \x[tig-git-ui]
| 1
| https://github.com/jonas/tig/pull/270[Add refs bind `!` to delete branch.]

| 2014-04
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6774[Rename issue form tags to match MR and params.]

| 2014-04
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6749[Say issues are accepted at both GitLab and GitHub.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/23[Document config_local.py on README.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/24[Factor out engines that are commands on PATH.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/25[Add sample run-tests.py output to README.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/26[Check if are no engines enabled to avoid exception.]

| 2014-03
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/71[Add Toc commands.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/21[One disable per line commented out on conf.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/20[Add multimarkdown support.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/18[Typo conten -> content.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 2
| https://github.com/karlcow/markdown-testsuite/pull/15[Automated tests.]

| 2014-03
| \x[gitlab-ci]
| 0
| https://github.com/gitlabhq/gitlab-ci/pull/405[Remove config/puma.rb from gitignore.]

| 2014-03
| \x[gitlab-ci]
| 0
| https://github.com/gitlabhq/gitlab-ci/pull/404[Ignore config/unicorn.rb.]

| 2014-03
| \x[gitlab-ci]
| 0
| https://github.com/gitlabhq/gitlab-ci-runner/pull/79[Tell users to install bundle locally without sudo.]

| 2014-03
| \x[gitlab-ci]
| 0
| https://github.com/gitlabhq/gitlab-ci-runner/pull/78[Document where to find the registration token.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/14[Remove space from simple list, specify asterisk.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/13[Add script to cat all input files.]

| 2014-03
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/12[Remove newline from empty files.]

| 2014-03
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6601[Start development Key seed id from 1.]

| 2014-03
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6544[Show link to public projects for new users.]

| 2014-03
| \x[gitlab-cookbook]
| 1
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/57/diffs[Correct bindfs metal dev init script.]

| 2014-03
| \x[gitlab-ci]
| 0
| https://github.com/gitlabhq/gitlab-ci/pull/391[Organize gitignore.]

| 2014-03
| \x[gitlab-cookbook]
| 1
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/55[Correct metal install home share technique.]

| 2014-03
| \x[gitlab-cookbook]
| 0
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/53[Uniform markdown headers]

| 2014-03
| \x[gitlab-cookbook]
| 0
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/54[Typo ommited -> omitted.]

| 2014-03
| \x[gitlab]
| 0
| https://github.com/gitlabhq/gitlabhq/pull/6489[Documentation Typos]

| 2014-02
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/60[Add contributing guidelines and started tests as required by them.]

| 2014-02
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/61[Add Vundle install to README, updated pathogen URL to GitHub.]

| 2014-02
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/62[Create credits section, remove link to old homepage.]

| 2014-02
| \x[gitlab]
| 1
| https://github.com/gitlabhq/gitlabhq/pull/6386[Remove dir prefix from filename of tests under dir.]

| 2014-02
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/10[Make title more readable.]

| 2014-02
| \x[karlcow-markdown-testsuite]
| 0
| https://github.com/karlcow/markdown-testsuite/pull/9[Make readme intro more direct.]

| 2014-02
| \x[karlcow-markdown-testsuite]
| 1
| https://github.com/karlcow/markdown-testsuite/pull/8[Add extensions.]

| 2014-02
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/6375[Blob and tree markdown links to anchors work.]

| 2014-02
| https://github.com/motemen/git-browse-remote[git-browse-remote]
| 0
| https://github.com/motemen/git-browse-remote/pull/10[Add install instructions.]

| 2014-02
| \x[overleaf]
| 1
| https://github.com/sharelatex/sharelatex/pull/57[Remove latexmk install instructions from README.]

| 2014-02
| \x[overleaf]
| 1
| https://github.com/sharelatex/sharelatex/pull/56[Remove dollars from readme bash code.]

| 2014-02
| \x[overleaf]
| 1
| https://github.com/sharelatex/sharelatex/pull/53[Add dummy version to package.json to fix install.]

| 2014-02
| \x[overleaf]
| 1
| https://github.com/sharelatex/sharelatex/pull/52[Add .nvmrc]

| 2014-02
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/6274[User can leave group from group page.]

| 2014-02
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/6219[Add anchors to markdown rendered headers.]

| 2014-02
| \x[gitlab]
| 2
| https://github.com/gitlabhq/gitlabhq/pull/6177[User profile pages are publicly visible.]

| 2014-01
| \x[gitlab-cookbook]
| 1
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/33[Development install documentation correction.]

| 2014-01
| \x[gitlab-cookbook]
| 2
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/29[Create metal development install documentation.]

| 2014-01
| \x[gitlab-cookbook]
| 0
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/30[Improve docs.]

| 2014-01
| \x[gitlab-cookbook]
| 1
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/23[Add option to control the SSH port used.]

| 2013-12
| \x[gitlab-cookbook]
| 1
| https://gitlab.com/gitlab-org/cookbook-gitlab/merge_requests/11[Improve production install docs.]

| 2013-11
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/52[Header navigation mappings work for Setext headers.]

| 2013-10
| \x[okular]
| 1
| https://git.reviewboard.kde.org/r/113434/[Add shortcut to Change Colors on a page.]

| 2013-09
| \x[plasticboy-vim-markdown]
| 2
| https://github.com/plasticboy/vim-markdown/pull/37[Add mappings to navigate across headers.]

| 2013-02
| https://github.com/scipy/scipy[SciPy]
| 1
| https://github.com/scipy/scipy/pull/365[Improve documentation.]

| 2013-01
| https://github.com/bread-and-pepper/django-userena[Django Userena]
| 1
| https://github.com/bread-and-pepper/django-userena/commit/6a0bc1575a1816a130644efde411fbed131720be[Add new configuration option.]

| 2012-11
| https://github.com/DataTables/DataTables[DataTables]
| 1
| https://github.com/DataTables/DataTables/commits?author=cirosantilli[Improved a doc example.]

= Merged by Ciro
{parent=patches}

Patches which were merged by Ciro himself on repositories which eh feels have large public visibility, e.g. those to which he has been given push permission.

Repositories to which Ciro gained push permission because of his contributions:
* https://github.com/plasticboy/vim-markdown

|| Date
|| Project
|| Size
|| Description

| 2017-07
| \x[busybox]
| 1
| https://bugs.busybox.net/show_bug.cgi?id=10066[dd status=none does nothing and still prints status]

| 2016-04
| \x[ranger-file-manager]
| 0
| https://github.com/hut/ranger/issues/510[Make the :source command from actions.py part of the public API and document it in the man pages]

| 2015-05
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/205[Document `<Plug>Markdown_OpenUrlUnderCursor`]

| 2015-05
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/193[Add TOC to README]

| 2015-05
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/207[Allow users to disable individual maps with hasmapto checks]

| 2015-04
| \x[plasticboy-vim-markdown]
| 2
| https://github.com/plasticboy/vim-markdown/pull/183[gx works from anywhere inside Markdown links]

| 2015-04
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/177[Change the README h1 to "Vim Markdown"]

| 2015-04
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/178[Improve README formatting]

| 2014-10
| \x[plasticboy-vim-markdown]
| 2
| https://github.com/plasticboy/vim-markdown/pull/121[Highlight angle braced hyperlinks]

| 2014-10
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/134[Use a single code block style on README]

| 2014-10
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/133[Improve bold and italic tests]

| 2014-10
| \x[plasticboy-vim-markdown]
| 0
| https://github.com/plasticboy/vim-markdown/pull/132[Remove outdated fields from syntax header]

| 2014-09
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/124[Support YAML frontmatter headers v2.]

| 2014-09
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/123[Add LaTeX `$` and `$$` math support.]

| 2014-09
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/128[Add unit tests and travis support.]

| 2014-09
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/122[Fix parenthesis and square brackets that were rendered as links when not in link.]

| 2014-06
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/88[Add commands to increase and decrease header levels.]

| 2014-03
| \x[plasticboy-vim-markdown]
| 1
| https://github.com/plasticboy/vim-markdown/pull/69[Use Markdown Test Suite for the tests wherever possible.]

= Bug reports and feature requests
{parent=always-out-of-date-and-rarely-update-list-of-open-source-contributions-by-ciro-santilli}

* I opened and was confirmed or generated considerable interest
* I wrote comments pointing out a non obvious cause/fix/duplicate.
* I reviewed the patch

This shall not list bugs solved by my accepted pull requests.

= Closed source
{parent=bug-reports-and-feature-requests}

Disclaimer: closed source vendors tend to be highly secretive, solving small issues without any reply, so I use my best judgement given the lack of feedback.

|| Date
|| Project
|| Type
|| Description

| 2019-07
| https://zenodo.org/
| Security bug
| http://web.archive.org/web/20190715192018/http://blog.zenodo.org/2019/07/15/2019-07-15-xss-vulnerability/[Cross-Site Scripting vulnerability]. Also mentioned at: https://invenio-software.org/blog/security-advisor-20190715/

| 2015-09
| \x[github]
| Support
| https://github.com/isaacs/github/issues/460[Add ability to fork and edit files from external URL]

| 2015-05
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/398[500 when listing GCC mirror branches]

| 2015-04
| https://www.fsf.org[Free Software Foundation]
| Bug
| https://github.com/cirosantilli/issues/issues/3[Duplicated paragraph at Octave at description of high priority projects]

| 2015-03
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/375[@about and @pricing generate at mentions even though they are reserved]

| 2015-03
| http://tutorials.jenkov.com[Jenkov tutorials]
| Typo
| http://tutorials.jenkov.com/java-util-concurrent/atomiclong.html[typo boolean -> long]

| 2015-03
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/370[502 on homepage on long streak]

| 2015-02
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/348[If a CONTRIBUTING.md that is a symlink is present, the link to it should not show on new issue forms]

| 2015-02
| \x[github]
| Feature
| https://github.com/isaacs/github/issues/361[Allow to reopen pull requests after a force push]

| 2015-02
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/348[If a CONTRIBUTING.md that is a symlink is present, the link to it should not show on new issue forms]

| 2014-12
| https://www.mysciencework.com[My Science Work]
| Typo
| Typos on settings page

| 2014-12
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/321[Merge pull request window appears after rebase even if I don't have permission]

| 2014-12
| \x[github]
| Feature
| https://github.com/isaacs/github/issues/320[Repository Traffic Analytics API]

| 2014-12
| \x[github]
| Support
| https://github.com/isaacs/github/issues/315[Pin issues or add header text to issues page]

| 2014-12
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/319[Tree show links blobs to the last commit that contained the blob instead of commit that introduced the file]

| 2014-12
| \x[github]
| Duplicate
| https://github.com/isaacs/github/issues/318[Deal properly with uppercase .GIT file basenames on web editor like for lowercase .git]

| 2014-12
| \x[github]
| Duplicate
| https://github.com/isaacs/github/issues/314[Add a "I have this issue too" button]

| 2014-11
| \x[gitbook]
| Bug
| https://support.gitbook.com/hc/communities/public/questions/200628582-500-on-edit-without-access[500 on /edit without access]

| 2014-11
| \x[github]
| Feature
| https://github.com/isaacs/github/issues/297[View non-rendered markdown source with line numbers on blob show]

| 2014-11
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/303[500 on branch index for long branch name pushed together with other branch]

| 2014-11
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/181#issuecomment-43488854[GFM ordered list with inner unordered paragraph list generates two ordered lists]

| 2014-11
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/286[Glitches for filenames that contain only spaces]

| 2014-11
| \x[github]
| Bug
| https://github.com/isaacs/github/issues/290[500 on raw and 414 on blob show of long file name with 1024 characters]

| 2014-11
| \x[github]
| Feature
| https://github.com/isaacs/github/issues/235[Highlight bytes / words in diffs on adjacent multi-line modifications]

| 2014-11
| \x[github]
| Duplicate
| https://github.com/isaacs/github/issues/218#issuecomment-47030350[Allow following of groups similar to following users]

= Open source
{parent=bug-reports-and-feature-requests}

|| Date
|| Project
|| Size
|| Description

| 2019-04
| \x[gnuplot]
|
| https://groups.google.com/forum/#!topic/comp.graphics.apps.gnuplot/qpL8aJIi9ZE[Why does plotting with point labels make plot generation extremely slow?]

| 2019-04
| \x[gdb-dashboard]
|
| https://github.com/cyrus-and/gdb-dashboard/issues/142[Limit the size of shown arguments in the Stack display]

| 2018-03
| \x[qemu]
| 2
| https://lists.nongnu.org/archive/html/qemu-devel/2018-02/msg01681.html[Test record and replay feature]. Also https://bugs.launchpad.net/qemu/+bug/1762179[here]

| 2018-02
| \x[pandoc]
|
| https://github.com/jgm/pandoc/issues/4363[Add option to produce asciidoc output without explicit heading ids]

| 2017-10
| \x[android]
|
| https://issuetracker.google.com/issues/68496715[GLES3 content gles3jni from ndk examples fails with "java.lang.RuntimeException: createContext failed: EGL_BAD_CONFIG"]

| 2017-09
| \x[mozilla-rr]
|
| https://github.com/mozilla/rr/issues/2098[How to automatically start replay and go directly to main instead of `_start`?]

| 2017-09
| \x[mozilla-rr]
|
| https://github.com/mozilla/rr/issues/2088[Reverse step over time(NULL) enters rr/src/preload/syscall_hook.S and leads to "Cannot find bounds of current function"]

| 2017-08
| https://github.com/kfish/xsel[xsel]
|
| https://github.com/kfish/xsel/issues/13[Why maximum 4000 characters output with xsel -b ?]

| 2017-06
| \x[buildroot]
|
| https://github.com/cyrus-and/gdb-dashboard/issues/65[Don't print mutiline struct function arguments on stack when set pretty print on]

| 2017-04
| \x[gdb-dashboard]
|
| https://github.com/cyrus-and/gdb-dashboard/issues/60[Add style option to print stack arguments on a single line]

| 2017-05
| \x[buildroot]
|
| https://bugs.busybox.net/show_bug.cgi?id=9886[Build fails with "unexpected EOF while looking for matching "'" if PATH contains a newline]

| 2017-04
| \x[gdb-dashboard]
|
| https://github.com/cyrus-and/gdb-dashboard/issues/60[Add style option to print stack arguments on a single line]

| 2017-03
| https://github.com/clMathLibraries/clBLAS[clBLAS]
|
| https://github.com/clMathLibraries/clBLAS/pull/313[`.s[0]` + CL_DEVICE_TYPE_ALL]

| 2017-01
| \x[game-icons-net]
|
| https://github.com/game-icons/icons/issues/301[Use multiple separate paths, allow customizing the color of each component, and give a default color]

| 2017-01
| \x[game-icons-net]
|
| https://github.com/game-icons/icons/issues/302[delapouite/originals/svg/brick-wall.svg has some whitespace on top]

| 2017-01
| \x[openai-gym]
|
| https://github.com/openai/gym/issues/483[examples/agents/keyboard_agent.py fails with "AttributeError: 'TimeLimit' object has no attribute 'viewer'"]

| 2016-12
| \x[simple-directmedia-layer]
|
| https://hg.libsdl.org/SDL/rev/a458fc3377dc[Add C variable printf debug snippets]

| 2015-03
| \x[tig-git-ui]
|
| https://github.com/jonas/tig/issues/273[Accepted feature.]

| 2014-11
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8293#issuecomment-62858344[Duplicate]

| 2014-11
| \x[gitlab]
|
| https://gitlab.com/gitlab-com/www-gitlab-com/issues/180[Bug.]

| 2014-11
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8384[Support.]

| 2014-11
| https://github.com/CWSpear/bootstrap-hover-dropdown[Bootstrap Hover Dropdown]
|
| https://github.com/CWSpear/bootstrap-hover-dropdown/issues/92[Bug confirmed.]

| 2014-11
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8267[Bug confirmed.]

| 2014-11
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8357[Triaging.]

| 2014-11
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8302[Problem with the display icons in the left block]

| 2014-11
| \x[sass-stylesheet-language]
|
| https://github.com/sass/sass/issues/1493[Bug confirmed.]

| 2014-10
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8206[Point duplicate.]

| 2014-10
| \x[gitlab]
|
| https://gitlab.com/gitlab-com/www-gitlab-com/issues/170[Bug confirmed.]

| 2014-10
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8090[Bug confirmed.]

| 2014-10
| https://github.com/gitlabhq/gitlabhq[Semaphore CI]
|
| https://github.com/gitlabhq/gitlabhq/pull/8081[Bug confirmed.]

| 2014-10
| \x[libgit2]
|
| https://github.com/libgit2/libgit2/issues/2562[Bug confirmed.]

| 2014-10
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/8038[Support.]

| 2014-10
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/3922228-opt-into-and-out-of-notifications-for-specific-iss[Point duplicate.]

| 2014-09
| \x[vader-vim]
|
| https://github.com/junegunn/vader.vim/issues/15[Accepted feature.]

| 2014-09
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5004385-wrap-lines-option-in-the-merge-request[Point already fixed.]

| 2014-09
| \x[vader-vim]
|
| https://github.com/junegunn/vader.vim/issues/14[Accepted feature.]

| 2014-09
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/pull/7242[Bug confirmed.]

| 2014-09
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/6351[Bug confirmed.]

| 2014-09
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/4077791-login-gitlab-as-another-user-impersonate-functio[Point duplicate.]

| 2014-09
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5567051-delete-branch-after-accepting-or-closing-a-merge-r[Point already fixed.]

| 2014-08
| \x[markdownlint-markdownlint]
|
| https://github.com/mivok/markdownlint/issues/47[Accepted feature.]

| 2014-08
| \x[softcover-latex]
|
| https://groups.google.com/forum/?hl=en#!topic/softcover-publishing/zFrDngqlYbY[Accepted feature.]

| 2014-08
| \x[markdownlint-markdownlint]
|
| https://github.com/mivok/markdownlint/issues/49[Accepted feature.]

| 2014-07
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/pull/7257[Bug confirmed.]

| 2014-07
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5863024-ability-to-dismiss-a-broadcast-messages[Accepted feature.]

| 2014-07
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5590496-resolve-any-merge-request-conflict-from-the-web-in[Accepted feature.]

| 2014-06
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5578188-use-something-more-meaningful-than-www-to-differen[Accepted feature.]

| 2014-06
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/issues/6655#issuecomment-47034956[Point duplicate.]

| 2014-06
| \x[karlcow-markdown-testsuite]
|
| https://github.com/karlcow/markdown-testsuite/issues/37[Bug confirmed.]

| 2014-06
| \x[plasticboy-vim-markdown]
|
| https://github.com/plasticboy/vim-markdown/issues/74#issuecomment-46292801[Close issue.]

| 2014-06
| \x[plasticboy-vim-markdown]
|
| https://github.com/plasticboy/vim-markdown/pull/92[Review patch.]

| 2014-06
| \x[plasticboy-vim-markdown]
|
| https://github.com/plasticboy/vim-markdown/pull/80[Review and patch patch.]

| 2014-05
| \x[softcover-latex]
|
| https://github.com/softcover/softcover/pull/94[Accepted feature.]

| 2014-04
| \x[karlcow-markdown-testsuite]
|
| https://github.com/karlcow/markdown-testsuite/issues/3[Close issue with better issues.]

| 2014-03
| \x[tig-git-ui]
|
| https://github.com/jonas/tig/issues/275[Accepted feature.]

| 2014-03
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5518180-smarter-merge-request-target-repo-and-branch-form-[Accepted feature.]

| 2014-03
| \x[softcover-latex]
|
| https://github.com/softcover/polytexnic/issues/100#issuecomment-37228903[Accepted feature.]

| 2014-03
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5603753-gitlab-markdown-should-display-username-s-correct[Add useful information.]

| 2014-03
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5628857-administratively-create-issues-on-behalf-of-other[Point duplicate.]

| 2014-03
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/3957367-allowing-the-build-pages-to-be-viewed-publicly[Point duplicate.]

| 2014-03
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/5607934-view-diff-on-submit-merge-request-form[Accepted feature.]

| 2014-02
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/4255282-task-lists-like-github-done-or-some-other-implemen[Point duplicate.]

| 2014-02
| \x[gitlab]
|
| https://github.com/gitlabhq/gitlabhq/pull/6389[Accepted feature.]

| 2014-02
| \x[overleaf]
|
| https://github.com/sharelatex/sharelatex/issues/51[Feature generated considerable interest.]

| 2014-02
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/3941049-allow-public-read-only-wikis[Point already fixed.]

| 2014-02
| \x[gitlab]
|
| https://feedback.gitlab.com/forums/176466-general/suggestions/4000912-add-a-diff-view-when-editing-a-file-via-the-web-in[Link feature request to patch.]

| 2013-10
| \x[yakuake]
|
| https://bugs.kde.org/show_bug.cgi?id=319172#c2[Bug confirmed.]

| 2013-10
| \x[okular]
|
| https://bugs.kde.org/show_bug.cgi?id=327641[Bug confirmed.]

| 2013-06
| \x[krusader]
|
| https://bugs.launchpad.net/ubuntu/+source/krusader/+bug/1197679[Bug confirmed.]

| 2013-05
| \x[numpy]
|
| https://github.com/matplotlib/matplotlib/pull/1967[Bug confirmed + inner cause.]

| 2012-05
| \x[krusader]
|
| https://bugs.kde.org/show_bug.cgi?id=300068[Accepted feature.]

| 2012-05
| \x[krusader]
|
| https://bugs.launchpad.net/ubuntu/+source/krusader/+bug/999695[Bug confirmed.]

| 2012-05
| https://code.google.com/p/autokey[AutoKey]
|
| https://code.google.com/p/autokey/issues/detail?id=197[Bug confirmed.]

= Not verified
{parent=bug-reports-and-feature-requests}

The following contributions where not immediately verified by others, but they were not reverted either and I think they are good.

|| Date
|| Project
|| Type
|| Description

| 2014-12
| \x[plasticboy-vim-markdown]
| Review patch
| https://github.com/plasticboy/vim-markdown/pull/158[Add tilde-fenced code blocks]

= Security
{parent=always-out-of-date-and-rarely-update-list-of-open-source-contributions-by-ciro-santilli}

|| Date
|| Project
|| Size
|| Description

| 2016-05
| \x[all-github-commit-emails]
| 1
| Password disclosure `grep password` on email data. Gmail password worked and user confirmed.

= Essays by Ciro Santilli
{parent=ciro-santilli}

In other sections:
* \x[ciro-santilli-s-software-engineering-wisdom]{child}
* \x[how-computers-work]{c}{child}
* \x[stuff-school-should-actually-teach]{c}{child}
* \x[high-flying-bird-vs-gophers]{c}{child}
* \x[how-to-teach-and-learn-physics]{child}
* \x[mailing-list]{c}{child}
* \x[physics-and-the-illusion-of-life]{child}

\Include[window-blackout]
\Include[how-to-teach]
\Include[what-poor-countries-have-to-do-to-get-richer]

= The missing link between basic and advanced
{parent=essays-by-ciro-santilli}

One of \x[ciro-santilli]'s strongest feeling in \x[education] is that material often falls in either of the two categories:
* hundreds of too basic \x[popular-science], e.g.:
  * a 5 minute \x[popular-science] video trying to explain \x[quantum-electrodynamics] (an advanced subject) for someone who doesn't know what a \x[riemann-integral] is (a basic subject)
* a few full university courses that takes 20 hours to deliver the first punchline of the course

Ciro believes that there is often an important missing link between them, e.g.:
* a 15 minute video that delivers the main end results and motivations for people who already know the very basic stuff

If we as a society are unable to provide this sweet \x[middle-way] sweet-spot, it is unreasonable to expect that learners will ever have the motivation to advance, because it is just too boring! They are just more likely to go play video games instead.

It is Ciro's hope that \x[write-free-books-to-get-famous-website] will help to fill exactly that gap.

In Ciro's view, as of the 2020's this critical gap generally lies somewhere between the end of \x[undergraduate] studies, and at the start of \x[postgraduate] studies. What we have to do is to bring it all the way down to high school and earlier.

Related:
* https://universityphysicstutorials.com/[] by Adam Beatty mentions:
  \Q[
  There are myriad resources for physics and maths. The Kahn Academy and Patrick JMT were the best for me. They really helped me out. The question is, what resources are there for the advanced \x[undergraduate] courses?
  ]

= How to write technical help requests and bug reports
{parent=essays-by-ciro-santilli}

\x[ciro-santilli] often sees all those genius who are much smarter than him making \x[shitty] forum/mailing list posts, they need to learn this:
* The apparently most important one liner error message must appear in the title, and fuller apparently relevant logs must appear on the body
* You must always give the version of the software that you are using as either a tag or git SHA

  These are an important part of the \x[minimal-working-example].
* For build errors, you must give your OS and compiler version and version of any relevant external library

= Questions for Ciro Santilli's future self
{parent=essays-by-ciro-santilli}

Future self, answer these.

10 years:
* 2017-2027: did self-driving cars become big?
* 2017-2027: did virtual reality become big?

20 years
* 2018-2038: are \x[molecular-biology-technologies][companies offering free full genome decoding] just to get your genomic data and sell it to pharma companies?

  Someone like Ciro then creates an open source genomic database funded by health organizations that publishes genomes + phenotypes \x[anonymously]. Genome to phenotype analytics go crazy big.

40 years:
* 2017-2057: was \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development][human level AI reached] (by non-bio devices :-)), even if very slow?
* 2017-2057: \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][did China become democratic]?
* 2018-2058: did impressive \x[brain-computer-interface]{p} show up?

= Ciro Santilli's hardware
{c}
{parent=ciro-santilli}
{scope}

One day, someone will invent a way to take the \x[hash-function][hash] of a piece of hardware and see its history log, like \x[software-engineer]{p} do with \x[version-control]. Until then, this is as close as you can get.

= Mechanical and electrical tools
{parent=ciro-santilli-s-hardware}

2020-01 https://www.amazon.co.uk/dp/B07D318N7Z

2020-01 "Heat Gun, SEEKONE Professional 2000W 50℃- 600℃ Variable Temperature Control Hot Air Gun Kit with 2 Temperature Modes 7 Accessories for D" https://www.amazon.com/dp/B078S5QMFG Initially for for cell phone repair, but later learnt they are also useful for heat shrink.

2020-11 BOA 13-2612 Strap Wrench, 6-Inch Capacity 8-Inch Long Lever https://www.amazon.com/dp/B00096JDKS Official: https://www.boatoolcorp.com/our-products/boa-constrictor-range/boa-constrictor/

2019-09 "AstroAI Digital Multimeter, TRMS 6000 Counts Multimeters Manual and Auto Ranging; Measures Voltage, Current, Resistance, Continuity, Capacitance, Frequency; Tests Diodes, Transistors, Temperature, Red" https://www.amazon.co.uk/dp/B071JL6LLL (http://web.archive.org/web/20190903191215/https://www.amazon.co.uk/dp/B071JL6LLL[archive]). Manual: http://web.archive.org/web/20190904200759/https://static.astroai.com/manual/Astroai-Digital-Multimeter,-Trms-6000-Counts-User-Manual-en.pdf
+
https://www.youtube.com/watch?v=uDGCs1G0Tx8 AstroAI WH5000A Digital Multimeter some basic features

2019-09 "Draper Redline 68001 160 mm Heavy Duty Pliers Set with Soft Grip Handles (3-Piece)" http://web.archive.org/web/20190903191215/https://www.amazon.co.uk/dp/B071JL6LLL (https://web.archive.org/web/20190903191341/https://www.amazon.co.uk/dp/B010NCYT6U[archive])

2019-08: https://www.amazon.co.uk/dp/B000LFRYG2 (http://web.archive.org/web/20190831105230/https://www.amazon.co.uk/dp/B000LFRYG2[archive]) "Silverline SP1236 Combination Spanner, 8-19 mm - 12 Pieces" 8.48 pounds. Because I needed the 15mm for bike pedal, and the price of 1 and the full set were very close.

6 10/11/12/13/14/17 mm Combination Wrench Set WRENCH SET COMBINATION Open-Ended Spanner/Ring Spanner Set https://www.amazon.co.uk/dp/B07BZLVGX8 (https://web.archive.org/web/20190831104804/https://www.amazon.co.uk/dp/B07BZLVGX8[archive]) But they sent one wrong, 8 instead of 11. Chrome Vanadium \x[steel]{c}. Markings: "DROP FORGED A". Quality feels crappy, not very smooth.

2017: Teng 621011 Double Open Ended Spanner 10x11mm https://www.amazon.co.uk/dp/B0001P0VP8 (http://web.archive.org/web/20190831111729/https://www.amazon.co.uk/dp/B007TSP8CQ[archive])

2017: Magnusson AMS49 5M TAPE MEASURE 5m retractable flexible rule. https://www.screwfix.com/p/magnusson-ams49-5m-tape-measure/5315v (http://web.archive.org/web/20190831112100/https://www.screwfix.com/p/magnusson-ams49-5m-tape-measure/5315v[archive])

= Yamaha P-45B digital piano
{c}
{parent=mechanical-and-electrical-tools}

Likely came in a bundle: https://www.gak.co.uk/en/yamaha-p45-digital-piano-bundle/908294

= Cleaning products
{parent=ciro-santilli-s-hardware}

2019-11 https://www.amazon.co.uk/B00I8JC4WC Mr Muscle 5 in 1 Shower Shine, 500 ml 

2019-11 https://www.amazon.co.uk/dp/B00FGOY51A Lakeland Moth Stop Moth Killer Carpet & Fabric Spray, 500ml 

2019-10 Mykal Sticky Stuff Remover 250ml. Helped remove sticky tape adhesive from surfaces. Still required a lot of elbow grease, but worked. https://www.amazon.co.uk/dp/B000TAT4GM (https://web.archive.org/web/20191110141846/https://www.amazon.co.uk/dp/B000TAT4GM[archive]).

= Ronseal mould killer
{parent=cleaning-products}

Bought: 2018, 2021.

Seems to work OK. But you're fighting the symptom, and it will eventually come back.

= Vacuum cleaner
{parent=ciro-santilli-s-hardware}

= Miele C2 Complete PowerLine vacuum cleaner
{parent=vacuum-cleaner}

Similar to: https://www.miele.co.uk/e/cylinder-vacuum-cleaner-compact-c2-powerline-sdrf4-10931670-p but slightly different from image. Indistinguishable from: https://www.currys.co.uk/gbuk/home-appliances/floorcare/vacuum-cleaners/miele-complete-c2-pure-power-powerline-cylinder-vacuum-cleaner-graphite-grey-10208570-pdt.html

Power symbol meanings: https://images-eu.ssl-images-amazon.com/images/I/A14OZ5TuwGS.pdf

2020-12: buying Miele SF AP 50 AirClean Plus filter https://www.miele.co.uk/e/airclean-plus-filter-sf-ap-50-10107860-p[]. Once it arrived, changed the filter, which fit comes with plastic casing and accordion shaped filter. Also changed bag. But the bag full meter still goes to red on carpet even with everything new while vacuuming. Is it supposed to be checked while not vacuuming?

= Philips Dust Mite Hand Held Vacuum Cleaner
{parent=vacuum-cleaner}

https://www.philips.co.uk/c-p/FC6232_62/dust-mite-hand-held-vacuum-cleaner-anti-allergen

Bought circa 2017.

= Kitchen
{parent=ciro-santilli-s-hardware}

= Panasonic NN-SF464M microwave (2017)
{c}
{parent=kitchen}

https://www.panasonic.com/uk/consumer/home-appliances/microwaves/microwave-only/nn-sf464mbpq.html

Manual: https://images-eu.ssl-images-amazon.com/images/I/D1It8ZCrjLS.pdf

= Prestige 7.5L Stainless Stell Pressure Cooker (2020)
{c}
{parent=kitchen}

https://www.amazon.co.uk/gp/product/B07GX1ZLLG

Primarily bought to make \x[borlotti-beans]!!!

= KitchenAid Artisan toaster (2017)
{c}
{parent=kitchen}

ARTISAN 2-SLOT TOASTER 5KMT2204 Onyx Black

Bought: 2017-09

https://www.kitchenaid.co.uk/small-appliances/toaster/artisan-2-slot-toaster-5kmt2204/859730315020

https://www.amazon.co.uk/dp/B00J9PQW5E

Impossible to open to properly clean.

= Tefal rice cooker (2017)
{c}
{parent=kitchen}

Bought around: 2017-09.

TEFAL Multicook 8in1 RK302E15 MultiCooker - 4 Portions / 5L.

https://www.tefal.co.uk/Cooking-appliances/Rice-%26-Multi-Cookers/Multicook-8in1-RK302E15-MultiCooker---4-Portions-5L/p/7211000750

Likely bought from: https://www.johnlewis.com/tefal-rk302e15-8-in-1-multi-cooker/p231378165

Markings say: "SERIE R13-B REF: RK302E15 / 79 A - 1017"

How to open videos: can't find any, but the hard part (remove top lid) was the same as the video for \x[joyoung-rice-cooker-2014], can be done by inserting a thin metal and going around it.

Bottom opens by taking off a single screw on the bottom and pulling it out (not obvious, a little bit of force).

2021-01: while making \x[congee] it overflowed without us noticing it, and next time we were going to cook something, it started to burn bits of congee that stuck to the heat plate. Opened it up and tried to clean everything.

2020-03: E01 error, looked up on manual and it is a top wire broken, opened up and confirmed one of the three wires going up broken, exactly like the previous one \x[joyoung-rice-cooker-2014]. Managed to fix easily with heat gun and Solder Seal Heat Shrink, no soldering iron, that thing is amazing: https://www.amazon.co.uk/dp/B085415G8N Let's see how long it lasts.

= Joyoung rice cooker (2014)
{parent=kitchen}

Similar to: https://www.amazon.co.uk/dp/B013AV45IS

2019: broke with sign number 6. \x[ciro-santilli] opened it up a bit destructively.

How to open: https://www.youtube.com/watch?v=8Lf68mAB0Vk

= Furniture
{parent=ciro-santilli-s-hardware}

Table: https://web.archive.org/web/20210718034540/https://www.westelm.com/weimgs/rk/images/i/201644/0004/images/pdf/assembly-instructions/english/mid_century_expandable_dining_table_medium_large.pdf

= Houses
{parent=ciro-santilli-s-hardware}

= House 2021
{parent=houses}
{scope}

= Fire alarm
{parent=house-2021}

2021-08 bedroom battery out, 7.29V out of 9V duracell duralock. Buying pack of 12 Energizer \x[nine-volt-battery]{p}. Measurement on new battery: 9.68V.

= House 2018-01
{parent=houses}
{scope}

2019-12-26: scraped off some of the likely https://en.wikipedia.org/wiki/Soap_scum[soap scum] from standing bathtub with hard plastic rice cooker spoon.

= Mould
{parent=house-2018-01}

2019-12-26: applied Ronseal mould killer on external north east living room walls, had widespread light brown mould spots, and more localized black mould spots. The water insulation here is bad, possibly due to being on the last floor. Also applied next to window sills on those walls.

= Kitchen
{parent=house-2018-01}

= Aluminium extractor filter
{parent=kitchen}

This is the exact model: https://shop.elica.com/en/accessori/filtro-grassi-in-alluminio-cod-gf03fc.html | http://web.archive.org/web/20190707053526/https://shop.elica.com/en/accessori/filtro-grassi-in-alluminio-cod-gf03fc.html

Searching by th epart name "GF03FC" leads to other sellers besides Elica however, which could reduce shipping costs: https://www.cookerhoodsupplies.co.uk/filters-and-lamps/188-metal-grease-filter-gf03fc.html

Brand on extractor glass: Elica: https://elica.com

Dimensions: 45.9cm x 17.6cm on the exterior. Too long to fit into any container that we have.

Brand on filter itself: "ARMA Filtre a.s." based on markings: http://www.armafiltre.com.tr/uygulamalar/7/3/en/Home-Appliances.html Cannot find any model on website however... looks like Elica's B2B supplier only.

Marker inside after removing filter: 12NC: 208298104403 Model: CIAK GR/A/56.

2018: noticed that it was unbearably greasy, tried to clean, but even boiling water didn't help.

July 2019 message:
\Q[
Aluminium extractor filter for 208298104403

Hi there,

I'm trying to buy a spare aluminium extractor filter for an Elica extractor, but I can't find the right size on the website.

My 12NC is : 208298104403

My filter looks a lot like this: https://shop.elica.com/en/accessori/filtro-grassi-in-alluminio-cod-GRI0077330A.html but the dimensions are different: I measured 45.9cm x 17.6cm on my old one.

Do you have that for sale?
]

= Fridge
{parent=kitchen}

Brand according to documents: SMEG.

Most similar models I an find: https://www.smeguk.com/products/UKC8173N1F[] and https://www.smeguk.com/products/UKC81721F[], the keyword are "built-in" and "integrated", other very similar ones: https://www.smeguk.com/refrigerators/built-in

Looks like this: https://www.youtube.com/watch?v=4c_LBVnU4ec and that's how to unclog the drain.

2020-11-28: defrost. Some small Styrofoam was broken lose from top, noticed small burn or rust marks on top grid nearby.

= Gas hob
{parent=kitchen}

SMEG, cannot determine exact model.

2020-11: started sparking by itself once every 5 minutes. Knob controls dirty in hole, but can't find out how to access. Seems slightly glued insulated around edges.

= Kitchen tap
{parent=kitchen}

Looks a lot like: Bristan Monza EF Sink Mixer Chrome https://www.bathroomsensations.co.uk/Bristan-Monza-EF-Sink-Mixer-Chrome.html

How to open: https://www.youtube.com/watch?v=oHTpOG1Uhzw

= Fire alarms
{parent=house-2018-01}

Kitchen: 2021-04: \x[nine-volt-battery] battery at 8.79V. Not sounding.

= Light bulbs
{parent=house-2018-01}

2021-01: kitchen extractor right lamp burnt. Replaced with another Eveready.

2021-01: left back bulb burnt, put in another LE GU10 LED Bulbs

2020-11: kitchen extractor left lamp burnt again. Did I forget to report a right side burn earlier, or is there something wrong with the left one? Also can't find the second bulb that was likely bought last time, so likely the right one burnt and the other bulb was used for it. Buying https://www.amazon.co.uk/dp/B00LOBUDSS "4 x Eveready 20 W 12 V G4 Dimmable Halogen Capsule Light Bulbs Pack of 4" for 3.66 pounds. Worked, felt a bit more yellow than the previous one. Packet documents 2000 hours, 2800K color, 8000+ switches.

2020-08: kitchen right back had been out for a while, bought: https://www.amazon.co.uk/dp/B00LN0RPA4 LE GU10 LED Bulbs, Warm White 2700K, 50W Halogen Lamp Equivalent, 4W 350lm, 120° Wide Beam Angle, Recessed or Track Light Bulb, Pack of 5 (Energy Class A++), 5 for 10 pounds.

2019-11: front right kitchen lamp burnt, Sylvania GU10 50W. 50W was likely some useless "incandescent equivalent" measure. Replaced: GE LED 5W 345 lumens 2700K Warm 15k hours, which looks exactly the same.

2019-05: kitchen extractor left lamp burnt. Was: DURA G4 12V20W: https://www.amazon.co.uk/Halogen-Light-Bulbs-Lamps-5watt/dp/B003IVP12A Replaced: Sainsbury's halogen G4 20W12V.

= Toilet mirror lamps
{parent=house-2018-01}

When I came, two Bell GU4 (MR11) 20W 12v.

One burnt. Put in an ASDA halogen one.

ASDA burnt, put in TopLux on right, old Bell left.

2019-01-24, right one burnt a few days ago, old Bell still works. Inner part black, and black dot on the wire. Putting new TopLux again, but this time on the left, old bell on right.

2019-01-24 toilet top lamp also burnt a few days ago, but not at the same time as mirror. Diall, 240V 40W, GU10. Putting in IKEA 240V 35W.

2019-02-02 toilet mirror lamp left (TopLux) burnt. Don't know what to do anymore. Only the magic Bell lamp works.

2019-03-06 toilet top lamp left burnt, IKEA 240V 35W GU10. Putting in another one.

2019-03-28 toilet top lamp right burnt, IKEA 240V 35W GU10. Waiting for people to come to look at transformer, there is definitely something wrong.

2019-04-03 top lamps: replaced with LED (LAP GU10 3W) since lower power, transformer not changed. Mirror lamps: transformer changed, left one replaced with Homebase Halogen 20W 12V. When I came back lamps flickering badly and sometimes not turning on, recalled technician.

2019-04-12 mirror lamp: it was just he connector that was bad, it was changed, also put LEDs there to make it less warm and hopefully have less tear on connector.

= Toilet sink
{parent=house-2018-01}

2021-04 clogged

= Cell phones
{parent=ciro-santilli-s-hardware}

= Google Pixel 3a (2020)
{c}
{parent=cell-phones}

Bought: January 2020 from https://store.google.com/ for 350 pounds.

Official specs: https://support.google.com/pixelphone/answer/7158570?hl=en&ref_topic=7530176

GMS Arena: https://www.gsmarena.com/google_pixel_3a-9408.php

Front camera video on \x[android] 11: about 100MiB / minute. The encoding is however super inefficient, a \x[ffmpeg] re-encode without any options reduces it by 1/3.

= Lenovo Yoga YT3-X50F
{c}
{parent=cell-phones}

This is crap, became slow very fast. The battery is IMPOSSIBLE to remove!!! https://youtu.be/kO-RwIQ_i1w?t=162 Battery was 4.163V when thing wouldn't turn on anymore. But https://topbattery.co.uk/product/original-battery-for-tablet-lenovo-yoga-tab-3-yt3-x50fyt3-x50m-sl20076-2/ says it is 3.6V. What?

= Computers
{parent=ciro-santilli-s-hardware}

Machines used extensively while developing the \x[linux-kernel-module-cheat] will be documented there for reference performance.

= Phillips D400 cordless phone
{c}
{parent=computers}

https://www.philips.co.uk/c-p/D4002W_22/cordless-phone

Takes two AAA rechargeable batteries.

2021-08: rechargeable battery charges were in, nominal marked 1.2V nickel metal hydride, measured as 1.38V and 1.42V.

= Lenovo ThinkPad P51 (2017)
{c}
{parent=computers}

Bought: 2017 for approximately 2400 \x[pound]{p} to be \x[ciro-santilli]'s main personal laptop.

https://cirosantilli.com/linux-kernel-module-cheat/#p51 (\a[https://raw.githubusercontent.com/cirosantilli/linux-kernel-module-cheat/a0d6fa15a207cb40cd8ce090c77aa9b55d7605a6/README.adoc][permalink])

* 2021-06-05 upgraded to \x[ubuntu] 21.04 with a clean install from an ISO. Selected
  * "Minimal installation"
  * "Erase disk and install Ubuntu". Notably, this erased the \x[microsoft-windows] that came with the computer and was never used not even once
  * "Erase disk ans use ZFS"
  * Encrypt the new Ubuntu installation for security
  After this, the GUI felt fast, who would have thought that erasing a bunch of stuff would make the system faster!

  `lsblk` contains:
  ``
  zd0               230:0    0   500M  0 disk
  └─keystore-rpool  253:0    0   484M  0 crypt /run/keystore/rpool
  nvme0n1           259:0    0 476.9G  0 disk
  ├─nvme0n1p1       259:1    0   512M  0 part  /boot/efi
  ├─nvme0n1p2       259:2    0     2G  0 part
  │ └─cryptoswap    253:1    0     2G  0 crypt
  ├─nvme0n1p3       259:3    0     2G  0 part
  └─nvme0n1p4       259:4    0 472.4G  0 part
  ``
  and `lsblk -f`:
  ``
  zd0               crypto_LUKS 2
  └─keystore-rpool  ext4        1.0   keystore-rpool
  nvme0n1
  ├─nvme0n1p1       vfat        FAT32
  ├─nvme0n1p2       crypto_LUKS 2
  │ └─cryptoswap
  ├─nvme0n1p3       zfs_member  5000  bpool
  └─nvme0n1p4       zfs_member  5000  rpoo
  ``

  Then:
  ``
  grep '[rb]pool' /proc/mounts
  ``
  contains:
  ``
  rpool/ROOT/ubuntu_uvs1fq / zfs rw,relatime,xattr,posixacl 0 0
  rpool/USERDATA/ciro_czngbg /home/ciro zfs rw,relatime,xattr,posixacl 0 0
  rpool/USERDATA/root_czngbg /root zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/srv /srv zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/usr/local /usr/local zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/games /var/games zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/log /var/log zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/lib /var/lib zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/mail /var/mail zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/snap /var/snap zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/www /var/www zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/spool /var/spool zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/lib/AccountsService /var/lib/AccountsService zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/lib/NetworkManager /var/lib/NetworkManager zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/lib/apt /var/lib/apt zfs rw,relatime,xattr,posixacl 0 0
  rpool/ROOT/ubuntu_uvs1fq/var/lib/dpkg /var/lib/dpkg zfs rw,relatime,xattr,posixacl 0 0
  bpool/BOOT/ubuntu_uvs1fq /boot zfs rw,nodev,relatime,xattr,posixacl 0 0
  ``
  which gives an idea of how the above map to mountpoints.

  Had two GUI freezes since installation, a fixed images shows no matter what I do, possibly graphics only, but impossible to tell (next time I'll try SSH access). No \x[nvidia] drivers installed yet.

2020-06-06: dropped some lemon juice on the bottom left of touchpad. Bottom left button not working anymore... I'm an idiot. There are many other alternatives, but very aggravating, I'll replace it for sure. Can't find the exact replacement part or any videos showing its replacement online easliy, dang. For the T430: https://www.youtube.com/watch?v=F3lzV9uXRjU Asked at: https://forums.lenovo.com/t5/ThinkPad-P-and-W-Series-Mobile-Workstations/P51-left-bottom-button-below-trackpad-mouse-left-click-stopped-working-possible-to-replace/m-p/5019903 Also I could not access it because you need to remove the HDD first: https://www.youtube.com/watch?v=5Klawxc7T_Y and I can't pull it out even with considerable force, unlike in the video... And OMG, those button caps are impossible to re-install once removed!!! Then when I put the whole thing back together, the upper buttons were not working anymore. FUUUUUUUUCK. When first opening I pulled on it without properly removing the cap and it came off, but it didn't look broken in any way and I put it back in. Keyboard works thank God, so right black connector is fine, left white one oppears to be the one for upper keys and trackpoint, both of which stopped working. The hardware manual confirms that they are both part of the same device, so basically a mouse :-) TODO can it be bought separately from te keyboard? Doesn't look like it, photo of keyboard part includes those buttons. The manual also confirms that the bottom buttons are one device with the trackpad "trackpad with buttons", thus forming the second entire mouse.

2019-04-17: popup asking about "ThinkPad P51 Management Engine Update" from from 182.29.3287 to 184.60.3561, said yes.

\x[ubuntu] 17.10 setup after buying it:

* partition setup: https://askubuntu.com/questions/343268/how-to-use-manual-partitioning-during-installation/976430#976430
* BIOS:
  * for NVIDIA driver:
  * for KVM, required by Android Emulator: enable virtualization extensions
* TODO fix the brightness keys:
  * failed: https://askubuntu.com/questions/769006/brightness-key-not-working-ubuntu-16-04-lts/770100#770100

Battery life shown by Ubuntu battery app after installation:

* before NVIDIA driver setup: 8h
* after: 6.5h

= Orange Pi PC
{c}
{parent=computers}

http://www.orangepi.org/orangepipc/

Board LED does not turn on (turned on on first plug, Ethernet always turns on):

* http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=470
* https://www.youtube.com/watch?v=ZtUn-dnJFdU says only one specific supply worked..
* https://www.reddit.com/r/raspberry_pi/comments/3jamn1/any_orange_pi_owners_here_help_with_power_imput/ Comment https://www.reddit.com/r/raspberry_pi/comments/3jamn1/any_orange_pi_owners_here_help_with_power_imput/cy79a7w says it only worked with the official supply...

Now just HDMI does not work. Possibly a monitor vs television problem:

* http://www.orangepi.org/orangepibbsen/forum.php?mod=viewthread&tid=475

= Raspberry Pis
{c}
{parent=computers}

About the brand: \x[/raspberry-pi]

= Raspberry Pi 2
{parent=raspberry-pis}

Linux kernel logs don't show, but do show with the exact same components on the Pi 3 (SD card with `enable_uart=1` + image Raspbian Lite 2018-11-03 and UART cables).

Serial from `cat /proc/cpuinfo`: 00000000a50c1f69

Datasheets: \x[/raspberry-pi-2].

= Raspberry Pi 3
{parent=raspberry-pis}

As of 2018-12, I believe that I might have fried the UART on this board when I burnt my last UART to USB converter by connecting ground to 5V.

Linux on SSH and bare metal blinker both work on this board, so the rest of the board seems alive.

Serial from `cat /proc/cpuinfo`: 00000000c77ddb77

Datasheets: \x[/raspberry-pi-3].

= Computer accessories
{parent=computers}

= Internet speed
{parent=computer-accessories}

Home 2017 TalkTalk 38Mbps nominal, Google M-lab speed test:
* 36.4 Mbps download
* 9.15 Mbps up
* 58 ms latency over 80km of first world

= External storage
{parent=computer-accessories}

= Toshiba MK1059GSM
{parent=external-storage}

~1TB.

Internal hard drive likely removed from some old computer I lost track of, kept in a crappy case, incredible stuff.

* https://www.amazon.co.uk/dp/B00433AM8K
* https://www.cnet.com/products/toshiba-mk1059gsm-hard-drive-1-tb-sata-3gb-s-hdd2k11/

Ubuntu 20.04 `gnome-disks` benchmark, NTFS partition: 40MB/s.

= Western Digital WD10EADS-42P6B0
{parent=external-storage}

~1TB.

Has a separate power cord, not USB powered. Unbelievable.

Disk label: `wd1t`.

* https://www.amazon.co.uk/dp/B00R1TO072
* https://www.cpumedics.com/western-digital-wd10eads-42p6b0-1tb-7-2k-rpm-sata-3-5-hard-drive-hdd/

Ubuntu 20.04 `gnome-disks` benchmark, ext4 partition: 37MB/s.

= Polytechnique USB flash drives
{parent=external-storage}

~8GB, `lsblk` reports 7796176 * 1KB = 7983284224 bytes.

We got a handful of those from \x[ecole-polytechnique] at the end of studies I think.

They are shaped like https://en.wikipedia.org/wiki/Bicorne[bicornes], which is super cool, but also super impractical!

Markings: "AX ÉCOLE POLYTECHNIQUE PROMOTION X2009"

20.04 `gnome-disks` program reports it as: "SMI USB DISK".

From \x[ubuntu] 20.04 on an ext4 formatted one:
``
/dev/sdb:
 Timing cached reads:   28656 MB in  1.99 seconds = 14421.31 MB/sec
SG_IO: bad/missing sense data, sb[]:  70 00 05 00 00 00 00 0a 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 Timing buffered disk reads:  42 MB in  3.03 seconds =  13.88 MB/sec
``
With \x[linux-unified-key-setup] + ext4 the results are similar, maybe hdparam bypasses it?
``
/dev/sdb:
 Timing cached reads:   28326 MB in  1.99 seconds = 14251.55 MB/sec
SG_IO: bad/missing sense data, sb[]:  70 00 05 00 00 00 00 0a 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 Timing buffered disk reads:  38 MB in  3.11 seconds =  12.23 MB/sec
``
`gnome-disks` LUKS + ext4 benchmark with default params also gives about 14 MB/s.

= Skullcandy Smokin' Buds 2
{parent=computer-accessories}

Skullcandy earphones, first one circa. 2016 most likely. Used them a lot, these are good.

2021-07: wire half broke near connector, only works in some positions. The funny thing is: only voices seem to be blocked out! Rebuying.

2021-06: a small bottom piece of the left earpiece broke. Wire seems find, that is like a little extension to protect wire. Let's see for how long.

2020-20: wires at one of ears broke, not sure how.

Look they looked exactly like: https://www.skullcandy.com/shop/earbuds/smokin-buds-2["Skullcandy Smokin' Buds 2 In-Ear Audio Earbud Headphones with In-Line Microphone - Black"].

Re-buying that one 10 pounds:
* https://web.archive.org/web/20200307055608/https://www.skullcandy.com/shop/earbuds/smokin-buds-2
* https://archive.vn/zvtY1

Tech specs:

\Q[
Weight: 4g

Connection Type: 3.5mm AUX Cable

Impedence: 32 ohms

Driver Diameter: 9mm

THD: <0.1% (1mW/500Hz) (0.0234)

Sound Pressure Level: 95 dB (1mW/500Hz)

Frequency Response: 20kHz - 20Hz

Headphone Type: In-Ear
]

= Bicycle
{parent=ciro-santilli-s-hardware}

= Bicycles
{parent=bicycle}

= Kross bicycle (2017)
{parent=bicycles}

Trekking bike bought second hand in 2017. Seller confirmed it is this one https://www.kross.pl/en/2012/trans-alp (http://web.archive.org/web/20200426174741/https://www.kross.pl/en/2012/trans-alp[archive]) but male version (now shown clearly on website, but both exist).

2021-09-05: chain reached 0.75, rebuying HG40 8. Also buying second set of break pads, front is gone, and back almost, gonna swap both at once.

2021-08: back side of teeth of seat post wore off, and the seat is rotating vertically. Identification: markings: ELC (maybe middle letter worn off). 27.2 diameter / 350, 350 is the length from Googling. Has a simple shock absorber system and a single pin to attach the seat. OK, something very similar or the same: https://www.amazon.com/dp/B08N9ZTD22[]. BESNIN Suspension seatpost. Full markings are: HARD MDU INSIDE under seat clamp, these match exactly. Tube markings are a bit different.

2021-08: noticed that there was a stone stuck inside back tire. Luckily didn't puncture. TODO was it in the same place as the previous puncture? Not far from Schwalbe mark. Rebuying... and answering https://bicycles.stackexchange.com/questions/9827/when-should-you-replace-tires-after-getting-a-flat Going to buy Shoe Goo as well to see if it works: https://www.amazon.co.uk/Shoe-Goo-Crystal-Permanent-Adhesive/dp/B08P5V9GQV

2021-08-12: after putting new chain on, if I step hard on pedal on 6th gear, by far the most used, it skips. Seems to be the same symptom as 2020-12 when cassette was worn off, as the shifting itself seems fine. https://bicycles.stackexchange.com/questions/8378/difference-between-shimano-hg51-8-speed-cassette-and-shimano-hg50-8-speed-casset says hg51 is compatible, so getting that newer model. 11-34t was much more expensive/less common than 11-32, so getting 11-32. Managed to install it without any problems.

2021-08: bought Shimano HG40 8 speed chain and put it on bike

2021-07:
* rear shift cable snapped inside shifter during rid, same as 2020-10, same symptom that could never index higher tension gears well bought new cable
* chain reached 0.75+
* trie to put front mudgard on, but several problems on this one. The screws needed are wider than those that come. Could keep old ones. But then on top of that, the wires are too long and would need cutting, so keeping the old front mudgard for now, which is working perfectly.

2021-06: Castelli UPF 50+ Light Arm Sleeves (Skins) Large White, 29 \x[pound]{p} https://www.castelli-cycling.com/bg/upf-50-+-light-arm-sleeves/p/451603621P-001[]. Felt really good. Really does not trap much heat, and completely blocks off sun. It makes you develop a small layer of sweat that keeps you cool, cooler than without the sleeves.

2021-06-05: finally removed the old bottom bracket and installed installed the one I had bought a few months back. What triggered this was the clicking noise back again. It appears that the noise got louder with the heat. The clicking noise went away after changing the new bottom bracket. The old bracket seemed fine after inspecting it closely after removal. There was a bit of dirt/earth inside, and some small chippings came out of one side, not sure if from BB or from the frame itself. There are still some other much less loud noises left however, but they are likely a different source, and not a big issue. The clicking noise: https://www.youtube.com/watch?v=rXBdPg1LhQU

2021-05: got the first flat tire ever on the back wheel! A perfectly shaped pointed triangular rock slotted perfectly into the thread and managed to perforate the inner tube. Managed to patch it up perfectly on the road, 2 hours away from home! The inside of the tire is basically intact, so I'm going to keep using it. The next day I put back an old intact inner tube I had replaced preemptively earlier on with this new one that was punctured.

2021-04: put on the Bluemels mudgard on the back. It wasn't hard, and their system seems quite easy to adjust. Chain reached 1.0 stretch, gotta get a new one.

2021-03: clicking noise when pedalling strong driving me crazy. Likely bottom bracket: https://bicycles.stackexchange.com/questions/41149/something-clicks-while-pedaling or maybe pedal. Re-buying the exact same Shimano BB-UN55 Bottom Bracket - Silver, 68-118: https://www.ebay.co.uk/itm/224364037969

2021-03: buying mudgard replacement, going for: SKS Bluemels Shiny 45 mm 28" Mudguard Set Silver https://www.deporvillage.net/sks-bluemels-shiny-45-mm-28-mudguard-set-silver 28 pounds with delivery, which looks like the most similar to the old one. Partially choosing that seller because they are the only ones capable of using the precise product name as shown on the SKS website so I'm sure what I'm getting. It does not have flaps though. But flaps fall off and get lost, so fuck it. SKS range: https://www.sks-germany.com/en/products/bluemels-series/

2021-03-07:
* buying 2 pairs of Shimano Y8BM9803A Brake Shoe Set M70T4, only need one for front now, back has new M70T3: https://www.amazon.co.uk/dp/B01504E7LS[]. Documentation is the same as for M70T3: https://si.shimano.com/pdfs/ev/EV-BR-SHOE-ATB2-1414L.pdf[] and sounds strictly better:
\Q[Only for side wall machined rims. Performs especially well in wet conditions and may pass DIN standard. Tend to be low noise, low rim wear and fade.]
It appears that "non-machined rims" don't exist anymore: https://www.tetongravity.com/forums/showthread.php/183806-How-important-are-machine-sidewalls-vs-non-machined
* buying another Schwalbe Men's Marathon Plus Tour Hs404 Performance Line Rigid Tires Size: 700 x 40C for the front wheel which is completely worn off like the back one was: https://www.amazon.co.uk/dp/B001IHUC0W?th=1&psc=1 33 pounds.

2021-03-07: one of the wires of the rear mudguard broke due to vibrations! It still kind of works, but gotta get a new one.

2021-02-20: replaced new wheel. Worked fine. Also measured chain stretch between 0.5 and 0.75.

2021-02-14: in preparation for wheel switch, also getting https://www.wiggle.co.uk/shimano-m-system-m600-pair-of-brake-blocks Shimano M-System M600 Pair Of Brake Blocks. More precise markings: M70T3 Deore LX, AL (\x[aluminium]) https://si.shimano.com/pdfs/ev/EV-BR-SHOE-ATB2-1414L.pdf Reads: "Performs especially well in wet conditions and may pass DIN standards. Gives off less noise, but the pad is heavier, faster rim wear and tends to fade. "

2021-02-11: tried to put the new wheel in. Made a few discoveries:
* I can't take the cassette out anymore again, even though I put it on myself, and the day I put it on, I took it off once to check if I could, so rebuying Shimano Claris CS-HG50-8 11-34t https://www.ebay.co.uk/p/2252255352[], and if I ever have to take the old one off, I'll take it to the store again
* the tire on the old wheel was on the reverse direction, had been ridden for a very long time like that, and the threads are extremely worn
* after making insane efforts earlier to put the tire on the wheel, and knowing about directionality, when I actually took it down I noticed I had at some point of my suffering swapped sides and put it on the wrong way in......
* I weighted the wheel for fun, assembled with unfilled tire and without the cassette was about 2.5kg

2021-01: ETC Rim Tape 700 40C for the new wheel. No packaging, but possibly: https://www.amazon.co.uk/dp/B0063HIIOY

2021-01: moved the saddle forward a bit to 1.8cm was still feeling scapulas before, now seems perfect. Not much effort on hamstrings, but I don't know how to fix both, and not having pain is more important

2020-12: moved the saddle forward back to 2cm, was feeling too much pressure on lower back, and on previous ride, the most tired part of body was behind scapulas, so presumably due to overreach. Felt immediately better.

2020-12-22: felt like rear hub had a bit of friction, can't fix vibration, going to try the buying a new whole wheel:
* https://www.bikeparts.co.uk/products/m-part-shimano-deore-mavic-a319-silver-dt-swiss-p-g-36-hole-rear-wheel Found by Googling same rim as original "Mavic A319". Site markings: WLC503 M PART SHIMANO DEORE / MAVIC A319 SILVER / DT SWISS P/G 36 HOLE 700C HYBRID REAR WHEEL. Cannot find a single website that gives exact rear hub model, but hopefully Deore will match, looks the same. 70 pounds. Does not come with rim tape.
* Schwalbe Men's Marathon Plus Tour Hs404 Performance Line Rigid Tires Size: 700 x 40C. Just going to get the entire thing to have leave a backup wheel.

2020-12-21: put in the new cassette, chainring and chain. Shifting is amazing once again. When pedalling strong on the test run it felt like something on the back hub was vibrating... gotta debug that. Maybe not enough force on closing the cassette?

2020-12-20: tried to replace entire drive chain after over stretched chain destroyed teeth. Chainring and pedals came off nicely, but cassette was stuck, but I took it to the shop and they managed: https://bicycles.stackexchange.com/questions/18465/how-can-i-remove-a-stuck-rear-cassette/74041#74041

2020-12: moved saddle back to 2.5cm mark to try and get more hamstring action, but back started hurting. Moved to 2.2cm half way through ride, and it seemed perfect.

2020-12: moved seat post down after https://www.youtube.com/watch?v=FNGMRtJ5LIc mentioned that saddle too high causes greater asymmetries which I had felt. With \x[dhb-dorica-mtb-shoe-2020-12] with cleats straight on 2-mark. First down 15mm from max, but felt really too low. Then down only 7.5mm, and felt great, possibly better than before.

2020-12: moved \x[2020-04-giro-rumble-vr-off-road-shoe] cleats all the way back, and turned the left one a bit outward to better fit let. Got more tired on hamstrings than on quads now, gotta improve that later on maybe for better balance.

2020-12: put more WD-40 on front shifter. Let it dry, then "WD-40 Bike, All Conditions Lube Bicycle". After next four hour ride, shift to 3rd was still working perfectly. Found the culprit.

Put back the rear mudguard. Wheel not hitting it for now. Lost the extra appended protector thingy, was sure I saw it during installation, so maybe it just fell off during next ride? Can't find it at home. Does not make much different for me, might help others behind me though.

2020-12-05: 4 hour ride, very wet and dirty, on start could get into third perfectly, but at end couldn't anymore!!! So it must have been an issue with lubrication on the bottom shift mechanism.

2020-12-01:
* test rode 3rd gear shift, completely smooth now!
* put back the new saddle Selle Royal Scientia, and inspired by https://www.youtube.com/watch?v=ZX3fKolI25Q moved the saddle to 2cm position because I had never felt my hamstrings. It did feel much better! I felt my hamstrigs more, and butt took much longer to get soggy, maybe only around 2 hour mark! Started feeling lower back more though.

2020-11-30:
* fixed the can't get into 3rd gear problem. Did the following:
  * without cable tension, it changed easily
  * sprayed HD40 on shifter and hinges near bottom bracket
  * still didn't shift
  * reduced tension. This made me manage to change to the 3rd. It must be highlighted how sensitive this was to tension. 5 quarter screws on the shifter barrel were the difference between being able to shift or not
  * one more thing Ciro noticed, is that he had possibly previously held up the front gear before attaching the cable, therefore possibly overly tensioning it. It might be better to just instead pull the end of the cable with a pair of pliers to remove slack, but wihtout making the gear move up, that is enough. Then finish tuning on the shifter arrel adjuster
  * then since everyting was out and ready, also changed shift cable just in case. The new one had a bit less friction, but not a lot less, so it did not feel like it was what solved the problem
* also better inspected the chainrings. Middle one is visibly worn due to the century old chain, even more so than the teeth of the cassettes on the back.. so here we go again, more Shimano FC-M311: https://www.bikeparts.co.uk/products/shimano-fc-m311-altus-square-taper-chainset-48-38-28t-with-chainguard-175-mm Can't find how to buy just chainring itself.

2020-11-28: can't stand slippage anymore, going to change cassette too, rebuying Shimano Claris CS-HG50-8 11-34t: https://www.ebay.co.uk/p/2252255352 20 pounds

2020-11-26: left hand large gear almost impossibly hard to switch to largest gear. The gear switches on chainring, but it won't click and stay in place, related: https://bicycles.stackexchange.com/questions/46172/front-shifter-wont-shift-into-3rd

2020-11-22: put back old saddle, one inch from back, did 6 hour ride, it is more comfortable than new one. Butt was soggy at some points, but much less than new saddle.

2020-11-19: noticed that chain slips if I pedal very strongly, and especially if I try to stand up: https://bicycles.stackexchange.com/questions/7928/why-does-my-gear-slip-when-going-uphill-standing Does not happen on the largest chainring. Have to check the smallest one, as it is harder to check there. Took to shop, they said chain worn out with tool measurement, and cassette worn out.

Bought Shimano CN-HG71 8 speed chain 19 pounds, with quicklink: https://bike.shimano.com/en-EU/product/component/city---trekking-e-bike-e6100-series/CN-HG71.html | https://bike.shimano.com/en-EU/product/component/city---trekking-e-bike-e6100-series/CN-HG71.html[], it is from the \x[shimano-product-lines][Acera line]. The price in-store was good, on \x[amazon-company] Prime, would have been 27 pounds! https://www.amazon.co.uk/dp/B00JJWR12U There were two chain options, a cheaper 12 pound one, and the more expensive. TODO difference? Maybe the cheap one is https://bike.shimano.com/en-EU/product/component/tourney/CN-HG40.html[CN-HG40], which is from the Tourney line?

I inspected the cassette myself later on, but it did not appear significantly worn out in my newbie opinion.

2020-11-08: used \x[park-tool-paw-12-adjustable-wrench] and \x[park-tool-bbt-22] to remove bottom bracket to debug noise. After putting everything together, it seemed gone on a very short test ride. The bottom bracket itself seemed fine. There was a bit of dirt, but didn't seem critical. What felt more off was that the drive side cranck arm came off much more easily than the non-drive side one, suggesting it was not tight enough. https://www.youtube.com/watch?v=cPQyQnNdews "Crank Removal and Installation - Three Piece Crankset (Square Spindle, ISIS, Octalink)" by Park Tool (2015) suggests that this is a common cause of noise, so maybe removing the bottom bracket wasn't needed after all this time. But it's done at least.

2020-11-05
* moved saddle backwards a bit to 1 cm mark, was feeling like butt was falling off the back a bit at 0 cm. After this, it felt better, but still a bit mushy after 4 hour ride
* been hearing a clicking noise when pedalling, left foot at about 7 o'clock. Going to open it up.

2020-10-04 bought a new inner shift cable for the rear derailleur from bike shop, bulk without visible branding. The plastic shifter casing screw was stripped, could not get it off. OMG I had done that just yesterday on the road for the diagnosis! How is it possible? So soft!!!! I just proped the plastic open with a flat screw driver and managed to insert the cable. However, the previous problem still remains: I can't get smooth shift to faster gears on the rear.

2020-10-03 was having rear shifting issues for a while, and today it stopped working completely. Opened and noticed that the shift cable had ruptured inside the shifter!!! Related: https://bicycles.stackexchange.com/questions/40536/shifter-cable-broke-down-misuse-lack-of-maintenance-shifter-or-regular-occurr This has been only 11 months since last change.

2020-08: buying Selle Royal Scientia M2 saddle: https://www.selleroyal.com/en/scientia-m-2 based on 60 degree riding position and 110mm sitbone distance \x[ciro-santilli-s-body]. Had felt a little bit of pain on butt muscle but it passed. But also noticed that the UNICLO shorts ripped a bit, and it might be due to the terrible state of the saddle. Felt good on first ride around the block. Harder than previous, and narrower. Feels higher quality and better fitting.

2020-06-06: replaced front brake pads with the Jagire ones previously bought (one pair already been put on rear brakes)

2020-04-19: tried to remove left pedal again with \x[2020-04-decareta-pedal-spanner], put more force, and the tool itself actually got dented and started spinning freely around the pedal. I give up, will change crank arm. Can't find just the left crank arm, and not sure if 170/175, so just buying the entire thing: Shimano Altus FC-M311 Crank set 48T/38T/28T with chaingard: https://si.shimano.com/pdfs/si/SI-0094A-001-ENG.pdf | https://si.shimano.com/pdfs/ev/EV-FC-M311-2675A.pdf | https://www.deporvillage.net/shimano-altus-m311-175mm-78-speed-chain-set-483828-black at 175mm which is the correct one for my height as mentioned at: https://www.youtube.com/watch?v=vUygkHlcVMQ

2020-04: bought Shimano Deore PD-M324 pedals in preparation for flat to SPD switch: https://bike.shimano.com/en-EU/product/component/deore-t6000/PD-M324.html[] (https://web.archive.org/web/20200419105148/https://bike.shimano.com/en-EU/product/component/deore-t6000/PD-M324.html[archive]) | https://www.wiggle.co.uk/shimano-m324-combination-pedals[], since I'll remove the pedals at somepoint anyways, first learnt at: https://bicycles.stackexchange.com/questions/30662/can-i-use-normal-shoes-trainers-with-clipless-pedals/30720#30720 can be used with normal shoes too. SPD/plataform double side chosen to so I can both commute with on regular shoes and ride further for sport with SPD shoes. Cleat type: SM-SH56. Praying to God that the thread size is universal as mentioned at: https://bicycles.stackexchange.com/questions/10162/whats-difference-between-1-2-and-9-16-inch-pedals When they arrived noticed they felt quite heavy! 533g. Let's see. The non double sided is 455g though: https://www.wiggle.co.uk/shimano-m530-mtb-spd-trail-pedals/[]. And a full roadie one like PD-RS500 SPD-SL weights 320g.

2020-04: attempted to use \x[2020-04-decareta-pedal-spanner] to remove left pedal that would not come off with generic short wrench and has been ticking a bit for several months, and now sometimes appears to do false spins! The think must be completely destroyed. Failed, too hard.

2020-04: was trying to remove left pedal with short wrench I had, impossible. Later noticed that the kick up stand was a bit bent! Tried to turn it around, but did not manage to make it improve much. Later during a ride, the new position was too close to the spokes, and started to hit the spokes! When I got home, tried to remove the \x[fucking] kickstand, but it had a flat bolt in a deep place between the rear tubes, and I couldn't do it with my simple wrenches. Went to bike shop next day, and they removed it, likely with a deep wrench. The piece was thrown away.

2020-03: finally installed the new derailleur after long suffering, including new cables and casing on front and back derailleurs and on back brake. Took 3 1-2 hour sessions, but it became amazing.

2020-03: screw on left shifter (yes, the bloody screw) broke when trying to open it to take out cable. Buying left and right since the right one was broken from previous fall. https://www.amazon.co.uk/dp/B073XQ8J78 SHIMANO ST-EF65-8 EZI FIRE STI SHIFTERS 24 SPEED (3 x 8), 25 pounds https://si.shimano.com/pdfs/ev/EV-ST-EF65-9R4-3257B.pdf

2020-02: Bought unbranded bike bell sold in bulk from bike shop, 1.50 pound. Markings: SX. Old bell made louder sound. This type of simple mechanism: https://www.amazon.co.uk/dp/B00GZ3TFFM

2020-01-13: Parked on city center, shitty low diagonal place, crowded. When came back, bike on floor, had dropped hard since front wheel twisted on axis, untwisted with leg. When got home, noticed that right gear shifter was half coming off. Later found out that the piece broken on one of the screws, hanging only by the other screw. Next day morning, noticed that the bell had come off, and was lost, went back on evening but obviously could not find it.

2019-11: Jagire brake pads 2x V 11.50 pounds: https://jagwire.com/products/brake-pads/cross-rim-brake-pads (https://web.archive.org/web/20191123155242/https://jagwire.com/products/brake-pads/cross-rim-brake-pads[archive])

2019-11: Can't index rear derailleur, buying:
* Shimano Claris RD-2400-GS 8-speed rear derailleur long cage (RD == Rear Deralleur, GS == long cage) 25 pounds: https://www.amazon.co.uk/dp/B00D9ENDU8 https://bike.shimano.com/en-US/product/component/claris-2400/RD-2400-GS.html (https://web.archive.org/web/20191119110808/https://bike.shimano.com/en-US/product/component/claris-2400/RD-2400-GS.html[archive])
* Shimano Road Shift Cable Set Y60098022 manual: https://web.archive.org/web/20180219062741/https://si.shimano.com/pdfs/ev/EV-Cable-Set2-3128.pdf | 10 pounds: https://www.amazon.co.uk/dp/B00510WI72 (https://web.archive.org/web/20191119101106/http://web.archive.org/screenshot/https://www.amazon.co.uk/dp/B00510WI72[archive])
* shift cable front and back internal and external: 6 pounds internal 6 pounds external, Jagwire LEX bulk https://jagwire.com/guides/housing (https://web.archive.org/web/20191123100717/https://jagwire.com/guides/housing[archive])

TODO exact model. Polish brand. Hybrid style bike: https://en.wikipedia.org/wiki/Hybrid_bicycle

2019-08-29: rear derailleur fell off, later found it was bent: https://photos.app.goo.gl/yRgAc1FvKvcuCmcj7 Many bikes were parked together, I think other bikes put gear wires were a bit off, and I started pedalling very strong, and it immediately fell off. Went to repair shop, replaced it likely with: https://www.amazon.co.uk/dp/B01N51YIYZ (https://web.archive.org/web/20190904202236/https://www.amazon.co.uk/dp/B01N51YIYZ[archive]) "Shimano Cambio Post. 6/7v RD-TY300 Tourney TX Att. Dir.". Visible markings: "Shimano Tourney Paid 35 pounds, receipt said 25 for piece 10 for service, but piece actually cost 18 on Amazon, and with Prime / larger buys only 7 pounds. I'm also a bit worried because my back cassette is 8 speed, not 7... On official website RD-TY300-SGS: https://bike.shimano.com/en-EU/product/component/tourney/RD-TY300-SGS.html (https://web.archive.org/web/20190905062824/https://bike.shimano.com/en-EU/product/component/tourney/RD-TY300-SGS.html[archive])

2019-07-26: the front crank was sometimes making loud cracking noises when I pedalled hard. Then, after two weeks, it also started making very loud screeching noises, and then finally I couldn't pedal anymore, and I took it to the shop. They changed the bottom bracket, 45 pounds, 30 for the piece, a Shimano BB UN55 bottom bracket markings: SEALED CARTRIDGE UNIT, SHIMANAO BB-UN55, VIA INDONESIA, 68 QC BC1.37x24, L XL118 R:
* https://www.chainreactioncycles.com/shimano-un55-square-taper-bottom-bracket/rp-prod71369
* http://web.archive.org/web/20190726190947/https://www.chainreactioncycles.com/shimano-un55-square-taper-bottom-bracket/rp-prod71369
* https://bike.shimano.com/en-EU/product/component/shimano/BB-UN55.html
* https://si.shimano.com/pdfs/ev/EV-BB-UN55-3281.pdf
Photo of the piece that was taken out, notice some broken metal pieces and one of the ball bearing that were left: https://photos.app.goo.gl/6sqbM4kgDG5Pm7p58 Replacement/servicing:
* https://www.youtube.com/watch?v=Mvdajb1OSW8 "Shimano Square Taper Bottom Bracket Removal Guide" by Free To Cycle (2020)
* https://www.youtube.com/watch?v=FmMEi8ASKCo "Shimano UN55 Bottom Bracket Review" by Bikechanic (2019) says you need a \x[park-tool-bbt-22] to remove it

2019-08: front mudguards were making too much noise, cannot find brand. Removed them. Then in 2019-10 \x[rain] started, and I bought a new one.

2019-06-30: fill tires, using 90PSI, was TODO

2019-06-20: right gear wire broke, when opened for fixing was rusty near hand shifter

2019-04-07: fill tires, using 90PSI, was 40PSI. Also on Giant Flourish.

2019-03-30: repair bearings back wheel, true back wheel, remove rust from chain. Result: 50 pounds:
* cassette Shimano Claris CS-HG50-8, 8 speed: https://bike.shimano.com/en-NZ/product/component/claris-r2000/CS-HG50-8.html tooth counts: 11T-13T-15T-18T-21T-24T-28T-34T http://web.archive.org/web/20191119105727/https://bike.shimano.com/en-EU/product/component/claris-r2000/CS-HG50-8.html
* chain KMC Z51 7-8X Chain because 0.7 stretch reached (limit 0.5). Markings: Z, 9A, KMC, NARROW. Looks like this but fully silver: https://www.amazon.co.uk/KMC-Z-51-Z-8S-Speed-Silver/dp/B01I1GL49U (https://web.archive.org/web/20190830081223/https://www.amazon.co.uk/KMC-Z-51-Z-8S-Speed-Silver/dp/B01I1GL49U[archive]), image: https://web.archive.org/web/20190830081307/https://images-na.ssl-images-amazon.com/images/I/314Z3-1WxJL.jpg
* oil on back wheel bearings no replace

Tick on back wheel stopped. Back brake did not get better. Gears not improved. Rust remained, was told too hard to remove, and not on teeth, so should not matter.

2018-09-02: spoke https://www.dtswiss.com/en/products/spokes-nipples/spokes/dt-champion/ + minor brake work 41 pounds full work

2018: front tire blew up and was replaced by TODO.

2017: bought, specs:

Bottom bracket: TODO, have a picture after it broke later on and was removed by shop, but did not catch full markings, visible: JIS DIN EN-14777. JIS stands for Japanese Industry Standard (JIS), related: https://www.velodrome.shop/square-taper-jis/iso/

Saddle: completely destroyed when he decided to identify it for replacement in 2020. Website said "Selle Royal Freedom Royalgel". Markings (badly worn out): "yalgel", freeDom inscribed on saddle, so that's it.

Frame markings: Trekking (two stylized trees on left, one with two triangles and the other 3 triangles), Frame Size: M. Feels like the right size for me.

Gear shifters: don't know exact model since could not find markings (\x[fuck] you Shimano?) but from photos online, seems to be one of the ST-EF* family EZ FIRE, e.g. https://si.shimano.com/pdfs/dm/DM-ST0001-05-ENG.pdf[ST-EF65-8] or ST-EF500.

Back wheel: quick release.

Front wheel: no quick release, wrench size 15mm.

Back tire: Schwalbe Marathon Plus Tour 42-622 (28 x 1.60, 700x40C) https://www.schwalbe.com/en/unplattbar.html (https://web.archive.org/web/20191102213652/http://web.archive.org/screenshot/https://www.schwalbe.com/en/unplattbar[archive])) Puncture resistant.

Back hub: Shimano FH-RM30, so possibly FH-RM30-8-QR mentioned at https://productinfo.shimano.com/download?path=pdfs/archive/2010_SPECIFICATION.pdf

Rear rim markings: Mavic, A319, Made in France, inserted in 36 hole marking, therefore presumably https://shop.mavic.com/en-gb/a-319-j24500.html#1028=3283&1035=3501 \x[aluminium]{c} alloy 6106 

Back derailleur: markings: Shimano DEORE. Looks exactly like this "Shimano Deore RD-M591 9 Speed Rear Mech": https://www.chainreactioncycles.com/shimano-deore-m591-9-speed-rear-mech/rp-prod40543 (https://web.archive.org/web/20190830082012/https://www.chainreactioncycles.com/shimano-deore-m591-9-speed-rear-mech/rp-prod40543[archive]), manuals: https://web.archive.org/web/20191119094532/https://si.shimano.com/pdfs/ev/EV-RD-M591-2910.pdf and https://web.archive.org/web/20191119094534/https://si.shimano.com/pdfs/si/SI-6S90A-001-ENG.pdf[]. Similar product on Shimano website (not exactly the same, was not on sale anymore): https://bike.shimano.com/en-EU/product/component/deore-m6000/RD-M6000-GS.html (https://web.archive.org/web/20190905065426/https://bike.shimano.com/en-EU/product/component/deore-m6000/RD-M6000-GS.html[archive])

Back light: AXA Basta Ray LED Rear Light. Markings read: "basta X-Ray Steady STANDLICHT Z K 257 TP RBi 1017". Powered either by 2 AAA bareies in series or by the front hub dynamo: https://www.bike24.com/p213276.html | http://web.archive.org/web/20190821070347/https://www.bike24.com/p213276.html

Front tire: did not take note, was later changed.

Front hub: Shimano DH-3N20 dynamo front hub 6V 3.0W https://www.fawkes-cycles.co.uk/2912/products/shimano-nexus-dh-3n20-6v-30w-nutted-dynamo-front-hub-for-use-with-rim-brakes-36h.aspx | http://web.archive.org/web/20190821065910/https://www.fawkes-cycles.co.uk/2912/products/shimano-nexus-dh-3n20-6v-30w-nutted-dynamo-front-hub-for-use-with-rim-brakes-36h.aspx

Speed meter: Speedmaster 5000, CR2032 battery. https://26bikes.com/shop/accessories/computers/wire/prod/speedmaster-5000 | http://web.archive.org/web/20190418182410/https://26bikes.com/shop/accessories/computers/wire/prod/speedmaster-5000

Front light: AXA Sprint 10 Switch LED Front Light https://www.bike24.com/p213267.html Wire connector for back light: "Crimp Quick Disconnect Terminals". Tried 2.5mm but too large, size refers to each left/right wrinkle.

Grips: Herrmans Primergo, looks like this: https://www.amazon.co.uk/dp/B01LZSJ30Q

Pedal: flat/platform crap :-) Markings: "FP-910", exactly like the photo: https://www.ebay.co.uk/i/114124689225 (https://web.archive.org/web/20200419123333/https://www.ebay.co.uk/i/114124689225[archive]) but can't find the brand, very generic.

Crankset: markings "Shimano", "FC-M311", "Hyperdrive", "Dual SiS index", from Google part of Altus: https://si.shimano.com/pdfs/ev/EV-FC-M311-2675A.pdf (https://web.archive.org/web/20180219080226/https://si.shimano.com/pdfs/ev/EV-FC-M311-2675A.pdf[archive]). There are two possible tooth counts, I counted 48T on largest, so it is the 48/38/28 one. There are two arm sizes though, 170mm vs 175mm, not sure which one mine is, very hard to measure, I think it was 170mm. Installation at: https://si.shimano.com/pdfs/si/SI-0094A-001-ENG.pdf (https://web.archive.org/web/20200419132405/https://si.shimano.com/pdfs/si/SI-0094A-001-ENG.pdf[archive]) says to use "8 mm Allen key or a cotterless crank extractor (TL-FC10)". Identification: https://youtu.be/VMV-SOIhM2c?t=258 "Three Piece Crank of type Square Tapered Spin"

Front derailleur: markings Shimano Altus, 66-69 degrees, blue circle with two balls hyperdrive logo on top. Possibly Shimano Altus Front Derailleur FD-M310: https://si.shimano.com/pdfs/ev/EV-FD-M310-2676B.pdf

Mudguards: markings "Orion"

= Bicycle products
{parent=bicycle}

2021-09: COZYROOMY multitool stolen, even though it was completely in pieces already. 2021-09-21 12:30PM discovered, seat bag open, one tool on floor, and some leftovers inside, but black bag gone. Bicycle last seen 2021-09-20 6PM. Would likely have spotted it if it had happened before. Bicycle last used: 2021-09-19 6PM. Would almost for sure have seen it if it had happened by then. Rebought it. 

2021-07 Topeak MTS Trunkbag EX Strap Type https://www.topeak.com/global/en/products/192-Rear-Rack-Bags/859-MTX-TRUNKBAG-EX Fit nicely on the back of the \x[kross-bicycle-2017]. 8L. Originally to carry some extra food and water on a long summer trip. 36 pounds.

2020-11-30: Bought more "Finish Line DRY Teflon Bicycle Chain Lube" 8oz/240ml https://www.amazon.com/dp/B00Z779GMO/ after previous disaster with the bottle because lock is a bit hard to open.

2020-11-30 WD-40 Bike, All Conditions Lube Bicycle Lubricant, 250ml. Markings: "Contains PTFE". https://www.amazon.com/dp/B00O8QF3PY Sprays out of bottle, so very thin.

2020-11: Park Tool CC-2 Chain Checker Tool https://www.amazon.co.uk/dp/B000OZFILW 24 pounds https://www.parktool.com/product/chain-checker-cc-2

2020-04: https://www.amazon.co.uk/gp/product/B014LC7HS0 "Park Tool HPG-1 High Performance Grease", 113 g, blue. https://www.parktool.com/product/high-performance-grease-hpg-1#tabbed-section | https://www.parktool.com/assets/doc/product/HPG-1_SDS.pdf

2020-02: CatEye AMPP500 45 pounds https://www.cateye.com/intl/products/headlights/HL-EL085RC/ High mode 500 lumens： 1.5hrs, Daytime HyperConstant mode 500/250 lumens： 5hrs. 2020-11: noticed it was cracked on top front between button and light, I think I dropped it the other day from waist height.

2020-02: Karrimor REFLEKT Band 2 pounds from Sports Direct to replace old that I destroyed by playing with it with hands on work desk https://www.karrimor.com/karrimor-reflect-band-765007

2020-01: Muc-Off Drivetrain Cleaner - 500ml https://www.halfords.com/cycling/bike-maintenance/bike-cleaning/muc-off-drivetrain-cleaner-500ml

2020-01: Halfords Microfibre Heavy Duty Cloths https://www.halfords.com/motoring/car-cleaning/sponges-brushes-buckets/halfords-microfibre-heavy-duty-cloths (https://web.archive.org/web/20180529012539/https://www.halfords.com/motoring/car-cleaning/sponges-brushes-buckets/halfords-microfibre-heavy-duty-cloths[archive]) 87% polyester, 13% polyamide.

2019-12: https://www.amazon.co.uk/gp/product/B07GQSXN8B SENZEAL Bicycle Spoke Wrench Tool Spoke Key Spanner 6 in 1 for Bike Wheel Cycle Wrench 10-15 Gauge

2019-12: Halford's Bike Hut Chain Cleaning Kit: https://www.halfords.com/cycling/bike-maintenance/bike-cleaning/bikehut-chain-cleaning-kit 18 pounds. GCN video using it: https://www.youtube.com/watch?v=KM6mzE5lQ0w Review video saying it is useless: https://www.youtube.com/watch?v=rCo41pftAjU

2019-11: Multitool: https://www.amazon.co.uk/dp/B07MW3K2GK "COZYROOMY Bike Repair Kits - Bicycle tool kit with 10 in 1 Multi-Function Bike Tool, multi-purpose bone wrench And related spare tools, 1 Portable tool bag, 6 Month Warranty". No spoke wrench unfortunately. But does have 15mm bone wrench, which opens Kross front wheel. Some months later, the thing came apart, quality was a bit shit. But I kept it in the saddle bag anyways for a long time, and just used it by putting part of it manually together.

2019-11: "CatEye RAPID X2" real lights, 40 dollars. Hopefully to increase side visibility at night, and day visibility on fast roads when cycling further on weekends. https://www.cateye.com/intl/products/safety_lights/TL-LD710-R/ (https://web.archive.org/web/20180904083218/https://www.cateye.com/intl/products/safety_lights/TL-LD710-R/[archive]) USB rechargeable. 80 lumens in high mode lasting 1 hour, 5 hours in low mode, 30 hours flashing, 16 hours rapid/pulse.

2019-10 WD-40 Smart Straw 450ml https://www.amazon.com/dp/B01MEHN4VC (https://web.archive.org/web/20191005165231/https://www.amazon.com/dp/B01MEHN4VC[archive])

2019-10 Finish Line Dry Teflon Tube https://www.amazon.com/dp/B00B704LZW (https://web.archive.org/web/20191005165259/https://www.amazon.com/dp/B00B704LZW[archive]) Tube broke while opening the first day. I glued it with some superglue, but two months later found it leaked into my "oils bag", so I threw it away... it must have penetrated through the super glue.

2019-08: "CatEye CA475RAPMIN Rapid Mini Rear Lights and Reflectors, Black" stolen: https://www.amazon.co.uk/dp/B01I4193PY (https://web.archive.org/web/20190829232804/https://www.amazon.co.uk/dp/B01I4193PY[archive]). Very good quality. Those USB rechargeable lights you just have got to take off with you whenever parked in town or else \x[drug-addict]{p} will steal them because they are easy to remove for recharging. Tempted to just stick to dynamo ones that are screwed in. Re-bought original back light: AXA Basta, was a bit different from previous one, cannot take in lamps anymore, even though there is the plastic casing for them! Just not metal / wires.

= Cycling clothes
{parent=bicycle-products}

2021-02 Castelli PRO THERMAL SKULLY red https://www.wiggle.co.uk/castelli-pro-thermal-skully https://www.castelli-cycling.com/gb/pro-thermal-skully/p/452054220A to help with cold, the X Lite Run Black Headband is just not made for winter.

2021-01: Madison Cycle Everywear Sportive Toe covers. L/XL. https://www.madison.cc/shop/sportive-thermal-toe-covers/VARCLA121/CLA12104

2021-01: "Endura FS260-NEMO Glove II" Neoprene Winter Handwarmer Large. https://www.endurasport.com/Gants-Nemo-FS260-Pro-II/p/E1216-Black Let's see how neoprene feels like. Basically it becomes wet with your transpiration, but is still relatively warm, would take it well down to 5C. Likely would work well with heavy \x[rain]. Not bad. But does feel a bit cooler than the Extremities XDRY, especially after you walk for a bit, and your hand becomes cold, and it is very hard to warm it because it is also wet.

2020-12-21: "dhb Neoprene Nylon Overshoes" https://www.wiggle.co.uk/dhb-neoprene-nylon-overshoes large black. After 2 rides, noticed that the front lower part of left foot (the one I put on and off the most) had a hole in it, not sure where it was made. Edit: I later noticed that it is because I have the reflex of braking slightly with my shoes in certain conditions, e.g. at lower speeds in close proximity to pedestrians, the sounds of which also serve as a way to alert them without the need for a loud bell. But it destroys the overshoe, so I have to undo that reflex.

2020-11-06 https://www.alpinetrek.co.uk/castelli-perfetto-ros-long-sleeve-cycling-jersey/ "Castelli Perfetto RoS Long Sleeve - Cycling jersey". On Wiggle: https://www.wiggle.co.uk/castelli-perfetto-ros-long-sleeve-jersey Feels great. Together with the dhb Merino Long Sleeve Base Layer, I can gown down to 0 Celcius, no problem. Breathes great, blocks wind reasonably, and can holds mild rail out on a short 1.5h ride without problem.

2020-10-17:
* last ride top was a bit cold on shoulders where not covered by arm warmers, about 10C, so going to try: https://www.wiggle.co.uk/dhb-aeron-rain-defence-polartec-jacket-1 "dhb Aeron All Winter Softshell Jacket", 109.25 pounds, Fluro Yellow, small to match previous tops that worked, approx: 50 polyester, 40 polyamide, 10 elastane, recommended temperature: 2-12 degrees Celcius. Material felt OK, not amazing but OK. Returned because a bit too small.
* the "dhb Classic Thermal Bib Tights" is a bit too warm for lower tens, so going to try "dhb Aeron FLT Roubaix Bib Tight", 85.50 pounds, medium, navy color, recommended temperatures:  6-14 deg C, 84% polyamide, 16% elastane. Hopefully not being marked as "thermal" means it is less warm. Also hopefully being DHB Aeron it will be a bit less baggy behind knees. Returned later because felt indistinguishable from the "dhb Classic Thermal Bib Tights".

For sizing see also: \x[ciro-santilli-s-body].

2020-11: Castelli Thermoflex 2 Arm Warmers, Large, 28 pounds: https://www.wiggle.co.uk/castelli-thermoflex-2-arm-warmers | https://www.castelli-cycling.com/gb/men/accessories/cycling-leg-and-arm-warmers/p/451953020A-010 advertized 8°-20°C. Was going to buy the DHB ones for 10 pounds less, but always out of so Castelli it is.

2020-08: started getting getting cold, so let's do it:
* https://www.wiggle.co.uk/dhb-lightweight-mesh-long-sleeve-base-layer "dhb Lightweight Mesh Long Sleeve Base Layer", small, 93% polyester 7% Elastane. Felt a little bit tight on first try, but I think I'll keep it, it might be correct, it's hard to say, and it's not worth my time. If it is too bad I'll just get another one later.

  Extremely light and transparent. Holds down to lower 10's, but if it's windy a bit less so. Feels good.
* https://www.wiggle.co.uk/dhb-classic-thermal-bib-tights "dhb Classic Thermal Bib Tights", medium, 86% polyamide, 14% elastane, 56 pounds. Very slightly tight, but felt right on first try. Some similar URLs https://www.wiggle.co.uk/dhb-classic-thermal-bib-tights-1 | https://www.wiggle.co.uk/dhb-thermal-bib-tight

  Pretty warm, for lower 10's and under only. Mid 10's is too much. Slighly bulky behind the knees when you bend. But good quality otherwise.
* https://www.wiggle.co.uk/dhb-extreme-weather-neoprene-overshoe "dhb Extreme Weather Neoprene Overshoe", large, 81% polyamide, 18% polyurethane. Wanted to buy https://www.wiggle.co.uk/dhb-neoprene-nylon-overshoes which is lighter, but was out of stock. The material felt good, but it did not fit with \x[2020-04-giro-rumble-vr-off-road-shoe], I should have checked better, maybe it is only for road shoes.

  Incompatible with \x[2020-04-giro-rumble-vr-off-road-shoe], so returned it. That shoe is too large.

2020-05 https://www.wiggle.co.uk/dhb-aeron-short-sleeve-jersey-4/ dhb Aeron Short Sleeve Jersey 100% polyester, Red Large. This one fit OK. Length feels right. When on cycling position, a bit baggy under arms though, but guessing M would be too short? Still already feels less baggy than the cheap muddy fox jersey. Aeron is the second lowest level of DHB top, after the super basic 25 pound one. Material is thin polyester, could be better, but OK.

2020-05 https://www.wiggle.co.uk/castelli-perfetto-light-2-short-sleeve-jersey/ Castelli Perfetto Light 2 Short Sleeve Jersey 84% Nylon, 16% Lycra. When it arrived, was WAY too small, so returned. Material looked and felt amazing.

2019-12 https://www.wiggle.co.uk/dhb-merino-long-sleeve-base-layer-1/?sku=5360752872 "dhb Merino Long Sleeve Base Layer", black, small, was right size, wool is a bit itchy, but does feel like it dries off more quickly on long rides than the cheap Muddy Fox polyester cycling Jersey. Pretty warm, too much for 15C.

2019-12 https://www.wiggle.co.uk/dhb-aeron-winter-weight-merino-sock/?sku=100335580 dhb Aeron Winter Weight Merino Sock, blue, UK 9.5-12. Did not seem to make much of a difference, feet still cold, not wet.

2019-11 Nike academy hyperwarm gloves: https://www.nike.com/gb/t/hyperwarm-academy-football-gloves-s9Dd8D/GS0373-013 (https://web.archive.org/web/20200419133129/https://www.nike.com/gb/t/hyperwarm-academy-football-gloves-s9Dd8D/GS0373-013[archive]) for 17.99 Pounds from physical retailer. Good intermediate between the Extremities gloves when it gets a bit warmer. 60% polyester/27% nylon/5% rubber/4% elastane.

2019-10 XGC Men's Cycling Shorts/Bike Shorts And Cycling Underwear With High-Density High-Elasticity And Highly Breathable 4D Sponge Padded https://www.amazon.co.uk/dp/B07BDJP64W (http://archive.is/ltPSE[archive]). Grey color, red inner butt padding. 2020-08: after using it a lot, noticed that the padding stiches started to come off a bit.

2018 (?) Extremities XDRY gloves Looks like: https://www.sportsdirect.com/extremities-wp-p/line-glove-91-907293 (https://web.archive.org/web/20200419133931/https://www.sportsdirect.com/extremities-wp-p/line-glove-91-907293[archive]) Gets wet after a few minutes of medium \x[rain]. But does dry quickly. Baggy, multilayer. Says 40 pounds, but always at 20 pound discount, so it is just a marketing trick. On website: Outershell 96% Polyester/4% Lycra (Spandex)Palm 45% Polyester/55% PolyurethaneLining 100% Polyester

2017-09 Trespass Cruzado Male Gloves size S. https://www.trespass.com/cruzado-unisex-gloves (https://web.archive.org/web/20191106223639/https://www.trespass.com/cruzado-unisex-gloves#[archive]) Markings: crossover gloves. Technical Performance TP75: https://www.trespass.com/advice/trespass-tp-ratings-guide/ Lost right hand around 2018/2019.

2017 Muddy fox cycling Jersey, orange, polyester, Large, cheap. Works well enough I guess. Could be a bit more tight fitting.

2017 https://www.amazon.co.uk/Nevica-Unisex-Reversible-Skuff/dp/B07GSD4R7Y Nevica Skuff black

2017 https://www.ebay.co.uk/itm/254646634761 Karrimor X Lite Run Black Headband

2015 UNIQLO tights 53% cotton, 32% polyester, 15% elastane. 2020-08: after riding it a lot, it ripped a bit near upper inner tights.

2015 Odlo top and tights, polyester. Not sure exact model, not necessarily meant for cycling. Top does not fit tightly, did not feel like it was removing sweat effectively.

= Cycling clothes temperature guide
{parent=cycling-clothes}

In degrees Celsius:
* 25+
  * palm tree shade and coconut water. Seriously though, if there's some shade or earlier morning/later afternoon it's OK, but if it's on an open road at midday, be careful, and stop early if you start getting slightly dizzy, it only gets worse!
* 18-25
  * "dhb Aeron Short Sleeve Jersey"
  * XGC Men's Cycling Shorts
  * \x[2020-04-giro-rumble-vr-off-road-shoe]
* 15-18:
  * "dhb Aeron Short Sleeve Jersey"
  * "dhb Lightweight Mesh Long Sleeve Base Layer"
  * XGC Men's Cycling Shorts
  * \x[2020-04-giro-rumble-vr-off-road-shoe]
* 10-15:
  * dhb Classic Thermal Bib Tights 10 and under. TODO this is a bit too warm for the upper range, need something more intermediate
  * "dhb Lightweight Mesh Long Sleeve Base Layer"
  * Castelli Perfetto RoS Long Sleeve - Cycling jersey. TODO this is a bit too warm for the upper range, need something more intermediate
  * "Karrimor X Lite Run Black Headband"
  * "Nike academy hyperwarm gloves"
  * "Nevica Skuff". A bit too hot on upper range, but easy to take off.
* 0-10:
  * dhb Merino Long Sleeve Base Layer
  * Castelli Perfetto RoS Long Sleeve - Cycling jersey
  * dhb Classic Thermal Bib Tights 10 and under
  * \x[dhb-dorica-mtb-shoe-2020-12]
  * "Karrimor X Lite Run Black Headband". Head a bit cold on lower range.
  * "dhb Neoprene Nylon Overshoes". Feet a bit cold on lower range.
  * "Extremities XDRY gloves". Hands a bit cold on lower range.
  * "Nevica Skuff"

= dhb Dorica MTB Shoe (2020-12)
{parent=cycling-clothes}

https://www.wiggle.co.uk/dhb-dorica-mtb-shoe

Black EUR 44, 1 smaller than \x[ciro-santilli-s-body][normal size] as recommended by website.

Bought SM-SH56 cleat to accompany.

When it arrived, it felt a bit too long, around 2cm maybe free space after toe, and when I walk and the front part touches ground, heel comes off a bit, which is annoying. But I was too lazy to give it back and take the risk of a second try, also it felt correctly tight on sides. During first test ride it felt good.

It is slightly water proof. But if it rains a lot, it will get soaking wet. And once it does get wet, it feels like it is very very hard to dry, there don't seem to be any holes underneath.

= 2020-04 Giro Rumble VR Off Road Shoe
{parent=cycling-clothes}

2021-01-28: used this show for th first time after wearing \x[dhb-dorica-mtb-shoe-2020-12] exclusively for a while. It felt much much more comfortable, the Dorica is too narrow. Also this one is much more recessed, and walking with it is much easier. Also, I notice that the intentional asymmetry I had put on cleats is not necessary anymore now that my saddle height is not way too high

At 5C feet are too cold. Compatible overshoes are basically impossible to find: https://bicycles.stackexchange.com/questions/73589/what-kind-of-overshoes-can-i-use-with-a-large-touring-spd-cycling-shoe-such-as-t

It is not possible to do long walks with this, unlike some websites suggests, especially on hard surfaces like rock, that would be very dangerous because the cleat area will slip. But it is good for shorter walks on grass/mud, and that does open up some good short walk exploration possibilities compared to a road shoe.

Color "Black/Red 20" (but it's actually orange), size 46 https://www.wiggle.co.uk/giro-rumble-vr-off-road-shoe (https://web.archive.org/web/20180816224711/https://www.wiggle.co.uk/giro-rumble-vr-off-road-shoe[archive]). Manual says to use Loctite 243 medium strength, first 2.4 Nm bolt torque to test it out and find good position, and then final bolt torque 5-6 Nm unless cleat says less. Starting with Shimano SM-SH56 cleats (https://si.shimano.com/pdfs/si/SI-41R0G-003-ENG.pdf[archive]), which also says provisional torque 2.5 Nm, tightening torque 5-6 Nm.

= Park Tool BBT-22
{parent=bicycle-products}

To remove and install Shimano and ISIS Drive splined 20-tooth bottom bracket cups.

https://www.parktool.com/product/bottom-bracket-tool-bbt-22

https://www.amazon.co.uk/dp/B001A0AIAG

Bought: 2020-11-07. Also getting a \x[park-tool-paw-12-adjustable-wrench] to use with it.

= Park Tool FR-5.2 Cassette Lockring Tool
{parent=bicycle-products}

https://www.parktool.com/product/cassette-lockring-tool-fr-5-2

Bought: 2020-10.

= Park Tool SR-12.2 chain whip
{parent=bicycle-products}

https://www.parktool.com/product/sprocket-remover-chain-whip-sr-12-2

Bought: 2020-10.

= Park Tool PAW-12 adjustable wrench
{parent=bicycle-products}

12-inch adjustable wrench.

https://www.parktool.com/product/adjustable-wrench-paw-12

https://www.amazon.co.uk/dp/B000OZDH6K

Bought: 2020-11-07 initially for using with \x[park-tool-bbt-22].

= 2020-04 Park Tool CCP-2.2 Cotterless Crank Puller Tool
{parent=bicycle-products}

https://www.amazon.co.uk/dp/B001VS1M20

Worked with \x[kross-bicycle-2017] Shimano FC-M311, I managed to remove the crank arm.

= 2020-04 DECARETA Pedal Spanner
{parent=bicycle-products}

https://www.amazon.co.uk/dp/B07VL2MLYY DECARETA Pedal Spanner Bike Pedal Wrench Three-in-one Function Bicycle Pedal Spanner 24mm Front and Rear Axle Spanner Pedal Install Spanner Repair Tool with Anti-Skidding Long Handle (Silver) £10.99.

Got dented the first time I tried to use it in the \x[kross-bicycle-2017]. All Amazon reviews say the same thing, should have read first, and bought instead known brand like Park And Tool which is the same price. Material advertized on Amazon: "\x[steel]{c} alloy and rubber".

= 2019-12 Bikehut bicycle repair stand
{parent=bicycle-products}

https://www.halfords.com/cycling/bike-maintenance/bike-work-stands/bikehut-repair-stand 40 pounds

Maybe I'm an idiot and should have bought a much smaller rear wheel stand, only thought of that later, e.g.: https://www.amazon.co.uk/dp/B00G7ZO3GE or https://www.amazon.co.uk/dp/B00SD7NL44

Rope attached to rear rack + door knob: https://www.youtube.com/watch?v=teUsJt1WL1g

= 2019-03 Giant Control Tower 3 floor pump bike pump
{parent=bicycle-products}

20 pounds. Works on both Schrader and Presta.

= Shoes
{parent=ciro-santilli-s-hardware}

For sizing see also: \x[ciro-santilli-s-body].

= 2017-04 Nike Flex Experience RN 6 Grey running shoes
{parent=shoes}

Amazing shoes! Wore them to their destruction.

https://www.amazon.in/Nike-Mens-Experience-Running-Shoes/dp/B07CQLHV9C (http://web.archive.org/web/20190504122243/https://www.amazon.in/Nike-Mens-Experience-Running-Shoes/dp/B07CQLHV9C[archive]).

Shoestring length: 1.185m

Replaced with after bicycle ate it: 1.0m, also worked but at limit.

Size: EUR 45.

= Ciro Santilli's cooking
{c}
{parent=ciro-santilli}
{scope}

= Roast chicken
{parent=ciro-santilli-s-cooking}

2020-12: large-ish chicken, https://www.youtube.com/watch?v=bJeUb8ToRIw worked very well. Just that after 1 hour it was slightly uncooked in the middle, and 10 minutes later, the top skin burnt a little bit. So next time, use some \x[aluminium] foil.

= Roasted nuts
{parent=ciro-santilli-s-cooking}

All with olive oil and salt mixed up before roasting.

2021-04-05 180C:
* chestnuts: 1.5x 200g: 3x 6min, this was a bit too much
* hazelnuts: 1.5x 200g: 3x 6min, seemed fine
* pecans: 4.5x 200g bags: 5x 6 min, a bit uneven roast because too much on tray

2021-02-06 180C:
* almonds: 2x 200g: 3x 6min, slighted burnt taste
* Brazil nuts: 2x 300g: 3x 6min + 3min
* chestnuts: 1x 400g: 3x 6min, perfect
* pecans: 3x 200g bags (previously had done just 2 bags at a time): 3x 6 min + 2x 3min, perfect

2021-01-04:
* almonds: 190C, 8 min, they started burning on top! What? I put olive oil abundantly this time. 170C 5 min
* chestnuts: 180C, 6 min, stir, 6 min, stir, 4 min, they became very good, dark brown
* pecans: 180C, 6 min, stir, 6 min, stir, 3 min while preparing chestnuts, very good

2020-11-21:
* mixed nuts: 180C, 10 minutes, did not reach the point. Then 7 more minutes on 190C: pecans completely burned out
* almonds: 190C, about 25 minutes, opened several times, in the end had a slight burnt taste, but did not get black, just darker brown. Not as crispy as the ones we buy roasted, but pretty good
* pecans: 180C, 13 minutes, opened 3 times to stir, became great

= Science
{parent=ciro-santilli-s-homepage}
{wiki}

= Scientific
{synonym}

= Natural science
{parent=science}
{wiki}

= Physics
{parent=natural-science}
{wiki}

= Physical
{synonym}

Physics is the \x[art] of predicting the future by modelling the world with \x[mathematics].

\x[ciro-santilli] doesn't know physics. He writes about it partly to start playing with some scientific content for: \x[write-free-books-to-get-famous-website], partly because this stuff is just amazingly beautiful.

Ciro's main intellectual \x[physics] \x[fetish]{p} are to learn \x[quantum-electrodynamics] (understanding the point of \x[lie-group]{p} being a subpart of that) and \x[condensed-matter-physics].

Every science \x[reductionism][is Physics in disguise], but the number of objects in the real world is so large that we can't solve the real equations in practice.

Luckily, due to \x[emergence], we can use uglier higher level approximations of the world to solve many problems, with the complex limits of applicability of those approximations.

Therefore, such higher level approximations are highly specialized, and given different names such as:
* \x[chemistry]
* \x[biology]

As of 2019, all known physics can be described by two theories:
* the \x[standard-model]
* \x[general-relativity]

Unifying those two into the \x[theory-of-everything] one of the major goals of modern physics.

\Image[https://web.archive.org/web/20190925220347if_/https://imgs.xkcd.com/comics/purity.png]
{title=\x[xkcd] 435: Fields arranged by purity.}
{source=https://xkcd.com/435/}

= How to teach and learn physics
{parent=physics}

The approach many courses take to physics, specially "modern Physics" is really bad, this is how it should be taught:
* start by describing experiments that the previous best theory did not explain. This gets intimately entangled with basically learning the \x[history-of-physics], which is extremely beneficial as also highlighted by \x[ron-maimon], and also because \x[there-is-value-of-tutorials-written-by-early-pioneers-of-the-field].

  In the \x[surely-you-re-joking-mr-feynman-chapter-o-americano-outra-vez] \x[richard-feynman] describes his experience teaching in \x[brazil] in the early 1950s, and how everything was memorized, without any explanation of the experiments or that the theory has some relationship to the real world! Although things have improved considerably since, Ciro still feels that some areas of physics are still taught without enough experiments described upfront. Notably, ironically, \x[quantum-field-theory], which is where Feynman himself worked. Feynman gave huge importance to understanding and explaining experiments, as can also be seen on \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979].
* then, give the final formula for the next best theory
* then, give all the important final implications of that formula, and how it amazingly describes the experiments. In particular this means: \x[doing-physics-means-calculating-a-number]
* then, give some mathematical intuition on the formulas, and how the main equation could have been derived
* finally, then and only then, start deriving the outcomes of the main formula in detail

This is likely because at some point, experiments get more and more complicated, and so people are tempted to say "this is the truth" instead of "this is why we think this is the truth", which is much harder.

But we can't be lazy, there is no replacement to the why.

Related:
* http://settheory.net/learnphysics and https://www.youtube.com/watch?v=5MKjPYuD60I&list=PLJcTRymdlUQPwx8qU4ln83huPx-6Y3XxH from \x[settheory-net]

= Doing physics means calculating a number
{parent=how-to-teach-and-learn-physics}

In Physics, in order to test a theory, you must be able to extract a number from it.

It does not matter how, if it is exact, or numerical, or a message from \x[god]: a number has to come out of the formulas in the end, and you have to compare it with the experimental data.

Many theoretical physicists seem to forget this in their lectures, see also: \x[how-to-teach-and-learn-physics]{full}.

= The most important physics experiments
{parent=physics}

Videos should be found/made for all of those: \x[videos-of-all-key-physics-experiments]

* \x[speed-of-light-experiments]
* basically all experiments listed under \x[quantum-mechanics-experiment]{full} such as:
  * \x[black-body-radiation-experiment]
* \x[davisson-germer-experiment]

= Aharonov–Bohm effect
{c}
{parent=the-most-important-physics-experiments}

This shows that viewing \x[electromagnetism] as \x[gauge-theory] does have experimentally observable consequences. TODO understand what that means.

In more understandable terms, it shows that the \x[magnetic-vector-potential] matters where the magnetic field is 0.

\Video[https://www.youtube.com/watch?v=a70Bmkza7XA]
{title=The Quantum Experiment that ALMOST broke Locality by \x[the-science-asylum] (2019)}

= Michelson-Morley experiment
{parent=the-most-important-physics-experiments}
{wiki=Michelson–Morley_experiment}

\Video[http://youtube.com/watch?v=lzBKlY4f1XA]
{title="Michelson \x[interferometer]{c} - Amrita University" by Amrita Vlab (2013)}
{description=Shows the optical controls and alignment in more detail.}

\Video[http://youtube.com/watch?v=j-u3IEgcTiQ]
{title="Michelson \x[interferometer]{c}" published TSG Physics (2012)}
{description=TSG PHysiQuantum electrodynamics bibliographycs is the channel from the MIT Department of Physics Technical Services Group. In the video they produce a very clear round interference pattern.}

= Compton scattering
{parent=the-most-important-physics-experiments}
{title2=1923}
{wiki}

Classic theory predicts that the output frequency must be the same as the input one since the electromagnetic wave makes the electron vibrate with same frequency as itself, which then irradiates further waves.

But the output waves are longer because \x[planck-einstein-relation][photons are discrete and energy is proportional to frequency]:

The formula is exactly that of two \x[relativistic] billiard balls colliding.

Therefore this is evidence that \x[photon]{p} exist and have momentum.

\Video[http://youtube.com/watch?v=uICnnfYHYJ4]
{title=Compton Scattering by Compton Scattering (2017)}
{description=Experiment with a \x[caesium-137] source.}

\Video[http://youtube.com/watch?v=WR88_Vzfcx4]
{title=L3.3 Compton Scattering by \x[barton-zwiebach] (2017)}

= Photoelectric effect
{parent=the-most-important-physics-experiments}
{wiki}

No matter how hight the wave intensity, if it the frequency is small, no photons are removed from the material.

This is different from classic waves where energy is proportional to intensity, and coherent with the \x[photon][existence of photons] and the \x[planck-einstein-relation].

= Lamb shift
{c}
{parent=the-most-important-physics-experiments}
{wiki}

2s/2p energy split, not predicted by the \x[dirac-equation], but explained by \x[quantum-electrodynamics], which is one of the first great triumphs of that theory.

Initial experiment: \x[lamb-retherford-experiment].

* https://www.youtube.com/watch?v=jPKEuiUNJIk Lamb Shift by Dr. Nissar Ahmad (2020)

On the return from the train from  the \x[shelter-island-conference] in \x[new-york], \x[hans-bethe] managed to do a \x[non-relativistic] calculation of the \x[lamb-shift]. He then published as The Electromagnetic Shift of Energy Levels by Hans Bethe (1947) which is still paywalled as of 2021, \x[academic-publishing][fuck me]: https://journals.aps.org/pr/abstract/10.1103/PhysRev.72.339 by \x[physical-review].

The Electromagnetic Shift of Energy Levels \x[freeman-dyson] (1948) published on  \x[physical-review] is apparently a \x[relativistic] analysis of the same: https://journals.aps.org/pr/abstract/10.1103/PhysRev.73.617 also paywalled as of 2021.

TODO how do the infinities show up, and how did people solve them?

\Video[https://www.youtube.com/watch?v=WcyMfgj9psQ]
{title=\x[murray-gell-mann] - The race to calculate the relativistic \x[lamb-shift] by \x[web-of-stories] (1997)}
{description=Quick historical overview. Mentions that \x[richard-feynman] and \x[julian-schwinger] were using \x[mass-renormalization] and cancellation if infinities. He says that French and  Weisskopf actually managed to do the correct calculations first with a less elegant method.}

https://www.mdpi.com/2624-8174/2/2/8/pdf History and Some Aspects of the Lamb Shift by G. Jordan Maclay (2019)

\Video[https://www.youtube.com/watch?v=062GN3RdH1c]
{title=Freeman Dyson - The Lamb shift by \x[web-of-stories] (1998)}
{description=
Mentions that he moved to the \x[usa] from the \x[united-kingdom] specifically because great experiments were being carried at \x[columbia-university], which is where the \x[lamb-retherford-experiment] was done, and that \x[isidor-isaac-rabi] was the head at the time.

He then explains \x[mass-renormalization] briefly: instead of calculating from scratch, you just compare the raw electron to the bound electron and take the difference. Both of those have infinities in them, but the difference between them cancels out those infinities.
}

\Video[https://www.youtube.com/watch?v=YP6TGj-yL7Y]
{title=\x[hans-bethe] - The Lamb shift (1996)}
{description=Ahh, Hans is so old in that video, it is sad to see. He did live a lot tough. Mentions that the shift is of about 1000 MHz.

The following video: https://www.youtube.com/watch?v=vZvQg3bkV7s Hans Bethe - Calculating the Lamb shift.
}

\Video[https://www.youtube.com/watch?v=-0DDUyR0200]
{title=\x[lamb-shift] by Vidya-mitra (2018)}

= Lamb-Retherford experiment
{c}
{parent=lamb-shift}
{title2=1947}

Published as Fine Structure of the Hydrogen Atom by a Microwave Method by \x[willis-lamb] and Robert Retherford (1947) on \x[physical-review].

\x[microwave] technology was developed in \x[world-war-ii] for \x[radar], notably at the \x[mit-radiation-laboratory]. Before that, people were using much higher frequencies such as the \x[visible-spectrum]. But to detect small energy differences, you need to look into longer wavelengths.

This experiment was fundamental to the development of \x[quantum-electrodynamics]. As mentioned at \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994] chapter "Shrinking the infinities", before the experiment, people already knew that trying to add \x[electromagnetism] to the \x[dirac-equation] led to \x[infinities-in-quantum-field-theory][infinities] using previous methods, and something needed to change urgently. However for the first time now the theorists had one precise number to try and hack their formulas to reach, not just a philosophical debate about infinities, and this led to major breakthroughs. The same book also describes the experiment briefly as:
\Q[Willis Lamb had just shined a beam of microwaves onto a hot wisp of hydrogen blowing from an oven.]

This one has open accesses as of 2021: https://journals.aps.org/pr/pdf/10.1103/PhysRev.72.241

It is two pages and a half long.

They were at \x[columbia-university] in the \x[columbia-radiation-laboratory]. Robert was Willis' graduate student.

Previous less experiments had already hinted at this effect, but they were too imprecise to be sure.

= System of units
{parent=physics}
{wiki}

= International System of Units
{c}
{parent=system-of-units}
{title2=SI}
{wiki}

The key is to define only the minimum number of measures: if you define more definitions become over constrained and could be inconsistent.

Learning the modern SI is also a great way to learn some interesting Physics.

In other sections:
* \x[volt]

= Origins of Precision by Machine Thinking (2017)
{c}
{parent=international-system-of-units}

\Video[https://www.youtube.com/watch?v=gNRnrn5DE58]

Great overview of the earlier history of unit standardization.

Gives particular emphasis to the invention of \x[gauge-block]{p}.

= Versions of the international System of Units
{parent=international-system-of-units}

= 2019 redefinition of the SI base units
{parent=versions-of-the-international-system-of-units}
{wiki}

= Ampere in the 2019 redefinition of the SI base units
{parent=international-system-of-units}
{wiki}

TODO how does basing it on the \x[elementary-charge] help at all? Can we count individual electrons going through a wire? https://www.nist.gov/si-redefinition/ampere/ampere-quantum-metrology-triangle by the \x[nist] explains that is it basically due to the following two \x[quantized-physics] \x[solid-state-physics] phenomena/experiments that allows for extremely precise measurements of the \x[elementary-charge]:
* \x[quantum-hall-effect], which has \x[discrete] \x[electrical-resistance][resistances] of type:
  $$
  R_{xy} = \frac{V_\text{Hall}}{I_\text{channel}} = \frac{h}{e^2\nu}
  $$
  for integer values of $\nu$.
* \x[josephson-effect], which provides the \x[josephson-constant] which equals:
  $$
  K_{J} = \frac{2e}{h}
  $$

= Ampere
{parent=international-system-of-units}
{wiki}

Unit of \x[electric-current].

Affected by the \x[ampere-in-the-2019-redefinition-of-the-si-base-units]{child}.

= Kilogram
{parent=international-system-of-units}
{wiki}

Unit of \x[mass].

Defined in the \x[2019-redefinition-of-the-si-base-units] via the \x[planck-constant]. This was possible due to the development of the \x[kibble-balance].

= Kibble balance
{parent=kilogram}
{wiki}

Measures weight from a voltage.

= Time
{parent=international-system-of-units}
{wiki}

= Frequency
{parent=time}
{wiki}

= Period
{disambiguate=physics}
{parent=frequency}
{wiki}

= Hertz
{c}
{parent=frequency}
{title2=1857-1894}
{wiki}

Named after \x[radio] pioneer \x[heinrich-hertz].

= Hz
{c}
{title2}
{synonym}

= Megahertz
{parent=hertz}

= MHz
{c}
{synonym}
{title2}

Mega-\x[hertz], i.e. a million \x[hertz].

= Clock
{parent=time}
{wiki}

= Quartz clock
{parent=clock}
{wiki}

\Video[https://www.youtube.com/watch?v=_2By2ane2I4]
{title=How a quartz watch works by \x[steve-mould] (2017)}
{description=Mentions \x[feedback-loop] loop with the \x[quartz] \x[tuning-fork] for the \x[piezoelectricity] and an \x[amplifier]. Also mentions the choice of 32768 \x[hertz] ($2^15$) as the first power of 2 that is outside of the \x[human-hearing-range], and then how a \x[frequency-divider] is used to reduce the frequency to get the \x[second] counter.}

= Atomic clock
{parent=clock}
{wiki}

\Video[https://www.youtube.com/watch?v=p2BxAu6WZI8]
{title=How an atomic clock works, and its use in the global positioning system (GPS) by \x[engineerguy] (2012)}
{description=Shows how conceptually an atomic clock is based on a \x[feedback-loop] of two \x[hyperfine-structure] states of \x[caesium] atoms (non-\x[radioactive] \x[caesium-133] as clarified by the \x[wikipedia] page). Like a \x[quartz-clock], it also relies on the \x[piezoelectricity] of quartz, but unlike the \x[quartz-clock], the \x[quartz] is not shaped like a \x[tuning-fork], and has a much larger ressonating frequency of about 7 \x[mhz]. The feedback is completed by producing \x[photon]{p} that \x[resonate] at the right frequency to excite the \x[caesium].}

= Caesium standard
{parent=atomic-clock}
{title2=1967}
{wiki}

Uses the \x[frequency] of the \x[hyperfine-structure] of \x[caesium-133] ground state ($6s^1$) to define the \x[second].

\x[international-system-of-units] definition os the second since 1967, because this is what \x[atomic-clock]{p} use.

Why \x[caesium] \x[hyperfine-structure] is used:
* https://physics.stackexchange.com/questions/191871/why-do-atomic-clocks-only-use-caesium

= Unit of time
{parent=time}
{wiki}

= Second
{parent=unit-of-time}
{title2=s}
{wiki}

= Day
{parent=unit-of-time}
{title2=d}
{wiki}

= Calendar
{parent=day}
{wiki}

= Year
{parent=unit-of-time}
{title2=y}
{wiki}

= Length
{parent=international-system-of-units}
{wiki}

= Meter
{parent=length}
{wiki}

= Nanometer
{parent=length}
{wiki}

= nm
{synonym}

= Gauge block
{parent=length}
{wiki}

Highlighted at the \x[origins-of-precision-by-machine-thinking-2017].

= Geiger counter
{c}
{parent=international-system-of-units}
{wiki}

= Natural units
{parent=international-system-of-units}
{wiki}

A series of systems usually derived from the \x[international-system-of-units] that are more convenient for certain applications.

= Planck units
{c}
{parent=natural-units}
{wiki}

= Imperial units
{parent=system-of-units}
{wiki}

= Imperial unit
{synonym}

= Imperial system
{synonym}

= Particle physics
{parent=physics}
{wiki}

Currently an informal name for the \x[standard-model]

Chronological outline of the key theories:
* \x[maxwell-s-equations]
* \x[schrodinger-equation]
  * Date: 1926
  * Numerical predictions:
    * \x[hydrogen-spectral-line], excluding finer structure such as 2p up and down split: https://en.wikipedia.org/wiki/Fine-structure_constant
* \x[dirac-equation]
  * Date: 1928
  * Numerical predictions:
    * \x[hydrogen-spectral-line] including 2p split, but excluding even finer structure such as \x[lamb-shift]
  * Qualitative predictions:
    * Antimatter
    * Spin as part of the equation
* \x[quantum-electrodynamics]
  * Date: 1947 onwards
  * Numerical predictions:
    * \x[lamb-shift]
  * Qualitative predictions:
    * Antimatter
    * \x[spin-physics] as part of the equation

= Standard Model
{c}
{parent=particle-physics}
{wiki}

As of 2019, the more formal name for \x[particle-physics], which is notably missing \x[general-relativity] to achieve the \x[theory-of-everything].

https://cds.cern.ch/record/799984/files/0401010.pdf The Making of the Standard Model by Steven Weinberg mentions three crucial elements that made up the standard model post earlier less generalized \x[quantum-electrodynamics] understandings
* \x[quark]
* \x[gauge-symmetry]
* \x[spontaneous-symmetry-breaking]

= Theory of everything
{parent=standard-model}
{title2=TOE}
{wiki}

As of 2019, the \x[standard-model] and \x[general-relativity] are incompatible. Once those are unified, we will have one equation to describe the entirety of \x[physics].

There are also however also unsolved problems in \x[electroweak-interaction] + \x[strong-interaction], which if achieved is referred to as a \x[grand-unified-theory]. Reaching a GUT is considered a sensible intermediate step before TOE.

The current state of Physics has been the result of several previous unifications as shown at: https://en.wikipedia.org/wiki/Theory_of_everything#Conventional_sequence_of_theories so it is expected that this last missing unification is likely to happen one day, potentially conditional on humanity having enough energy to observe new phenomena.

= Grand Unified Theory
{c}
{parent=theory-of-everything}
{title2=GUT}
{wiki}

\x[electroweak-interaction] + \x[strong-interaction].

Appears to be an \x[unsolved-physics-problem]. TODO why? Don't they all fit into the \x[standard-model] already? So why is strong force less unified with electroweak, than electromagnetic + weak is unified in electroweak?

= The standard model and general relativity are incompatible
{parent=theory-of-everything}

TODO arguments, proofs

= Fundamental interaction
{parent=theory-of-everything}
{wiki}

= Quantum gravity
{parent=theory-of-everything}
{wiki}

= String theory
{parent=quantum-gravity}
{wiki}

= Subatomic particle
{parent=standard-model}
{wiki}

= Elementary particle
{parent=subatomic-particle}
{wiki}

In other sections:
* \x[w-boson]{child}
* \x[z-boson]{child}

= Are there more than 3 generations of particles in the Standard Model?
{parent=elementary-particle}

* https://physics.stackexchange.com/questions/2051/why-do-we-think-there-are-only-three-generations-of-fundamental-particles on \x[physics-stack-exchange]

\Video[https://www.youtube.com/watch?v=AKtN6ajjSQo]
{title="PHYS 485 Lecture 5: Standard Model and Feynman Diagrams" by \x[2011-phys-485-lecture-videos-by-roger-moore-from-the-university-of-alberta][Roger Moore] (2016)}
{description=https://www.youtube.com/watch?v=AKtN6ajjSQo&t=1474 gives an argument why there might only be 3 generations of particles.}

= Defining properties of elementary particles
{parent=elementary-particle}
{wiki}

A suggested at \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] chapter 3.9 "Elementary particles", it appears that in the \x[standard-model], the behaviour of each particle can be uniquely defined by the following five numbers:
* due to \x[spacetime-symmetry]{p}:
  * \x[mass]
  * \x[spin-physics]
* due to \x[internal-symmetry]{p}:
  * \x[electric-charge]
  * \x[weak-charge]
  * \x[color-charge]

E.g. for the \x[electron] we have:
* mass: $9.1 \times 10^{-31}$
* spin: 1/2
* electric charge: $1.6 \times 10^{-29}$
* weak charge: -1/2
* color charge: 0

Once you specify these properties, you could in theory just pluck them into the \x[standard-model-lagrangian] and you could simulate what happens. 

Setting new random values for those properties would also allow us to create new particles. It appears unknown why we only see the particles that we do, and \x[parameters-of-the-standard-model][why they have the values of properties they have].

= Photon
{parent=elementary-particle}
{wiki}

Initially light was though of as a wave because it experienced interference as shown by experiments such as:
* \x[double-slit-experiment]
* https://en.wikipedia.org/wiki/Newton%27s_rings

But then, some key experiments also start suggesting that \x[light] is made up of \x[discrete] packets:
* \x[compton-scattering], also suggests that photons carry momentum
* \x[photoelectric-effect]
* \x[single-photon-production-and-detection-experiments]
and in the understanding of the 2020 \x[standard-model] the photon is one of the \x[elementary-particle]{p}{parent}.

This duality is fully described mathematically by \x[quantum-electrodynamics]{parent}, where the photon is modelled as a quantized excitation of the photon field.

= Light
{parent=photon}
{wiki}

= Light source
{parent=light}
{wiki=List_of_light_sources}

= Lamp
{parent=light-source}

= Gas-discharge lamp
{parent=lamp}

= Neon lamp
{parent=gas-discharge-lamp}

= Radio
{parent=light}
{wiki}

= Radio receiver
{parent=radio}
{wiki}

= Receiver
{synonym}

= Transmitter
{parent=radio}
{wiki}

= Radar
{parent=radio}
{wiki}

= Speed of light
{parent=light}
{wiki}

Experiments: \x[speed-of-light-experiments].

= Speed of light experiments
{parent=speed-of-light}

* https://en.wikipedia.org/wiki/Speed_of_light#First_measurement_attempts Rømer and Christiaan Huygens reached 26% accuracy by the observation of Jupiter's moon!
* https://en.wikipedia.org/wiki/Fizeau_experiment 1851
  * \Video[http://youtube.com/watch?v=YMO9uUsjXaI]
    {title="Measuring the speed of light the old fashioned way: Replicating the Fizeau Apparatus" by AlphaPhoenix (2018)}
    {description=Modern reconstruction with a \x[laser] and digital camera.}
* Fast cameras. OK, this takes it to the next level:
  * \Video[http://youtube.com/watch?v=EtsXgODHMWk]
    {title="Visualizing video at the speed of light - one trillion frames per second" by \x[mit] (2011)}

= Faster-than-light
{parent=speed-of-light}
{title2=FTL}
{wiki}

In \x[special-relativity], it is impossible to travel faster than light.

One argument of why, is that if you could travel faster than light, then you could send a message to a point in \x[spacetime] that is \x[spacelike-separated] from the present. But then since the target is spacelike separated, there exists a \x[inertial-frame-of-reference] in which that event happens before the present, which would be hard to make sense of.

Even worse, it would be possible to travel back in time. This can be seen clearly on a \x[spacetime-diagram] such as: \x[image-spacetime-diagram-illustrating-how-faster-than-light-travel-implies-time-travel].

Bibliography:
* https://physics.stackexchange.com/questions/13001/does-superluminal-travel-imply-travelling-back-in-time/615079#615079
* https://physics.stackexchange.com/questions/574395/why-would-ftl-imply-time-travel
* https://physics.stackexchange.com/questions/516767/how-does-a-tachyonic-antitelephone-work
* https://www.physicsmatt.com/blog/2016/8/25/why-ftl-implies-time-travel shows the causailty violation on a spacetime diagram

\Image[Faster_than_light_implies_time_travel_diagram.svg]
{title=\x[spacetime-diagram]{c} illustrating how \x[faster-than-light] travel implies time travel.}
{description=Legend an explanation are https://physics.stackexchange.com/questions/13001/does-superluminal-travel-imply-travelling-back-in-time/615079#615079[shown in this answer].}

= Tachyon
{parent=faster-than-light}
{wiki}

= Tachyonic antitelephone
{parent=faster-than-light}
{wiki}

= Electromagnetic spectrum
{parent=light}
{wiki}

= Radio wave
{parent=electromagnetic-spectrum}
{title2=1m or more, 300 GHz or less}
{wiki}

This is likely the easiest one to produce as the frequencies are lower, which is why it was discovered first. TODO original setup.

Also because it is \x[transparent] to brick and \x[glass], (though not \x[metal]) it becomes good for \x[telecommunication].

Some notable subranges:
* \x[fm-broadcasting]

= FM broadcasting
{c}
{title2=3m, 87.5-108.0 MHz}
{parent=radio-wave}
{wiki}

= Microwave
{parent=radio-wave}
{title2=1 mm - 1 m, 300 MHz - 300 GHz}
{wiki}

Micro means "small wavelength compared to \x[radio-wave]{p}".

= Microwave oven
{parent=microwave}
{wiki}

= Wi-Fi
{c}
{title2=2-6 GHz}
{parent=microwave}
{wiki}

This frequency range is likely chosen to allow faster data transfer than say, \x[fm-broadcasting], while still being relatively \x[transparent] to walls (though not as much).

= Infrared
{parent=electromagnetic-spectrum}
{title2=680 nm - 1m}
{wiki}

= Visible spectrum
{parent=electromagnetic-spectrum}
{title2=420-680 nm, 400-700 THz}
{wiki}

420 to 680 nm for sure, but larger ranges are observable in laboratory conditions.

= X-ray
{c}
{parent=electromagnetic-spectrum}
{title2=10pm-10nm}
{wiki}

= Photon spin
{parent=photon}

https://physics.stackexchange.com/questions/73942/how-do-we-know-photons-have-spin-1

Original 1931 experiment by Raman and Bhagavantam: http://dspace.rri.res.in/bitstream/2289/2123/1/1931%20IJP%20V6%20p353.pdf

= Radiation pressure
{parent=photon}
{wiki}

= Nichols radiometer
{c}
{parent=radiation-pressure}
{wiki}

Experimental setup to observe radiation pressure in the laboratory.

= Solar sail
{parent=radiation-pressure}
{wiki}

Application of \x[radiation-pressure].

First live example: https://en.wikipedia.org/wiki/IKAROS

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/IKAROS_IAC_2010.jpg/568px-IKAROS_IAC_2010.jpg]
{title=A 1:64 scale model of the IKAROS spacecraft.}

= Single photon production and detection experiments
{parent=photon}

You can't get more direct than this in terms of proving that \x[photon]{p} exist!

The particular case of the \x[double-slit-experiment] will be discussed at: \x[single-particle-double-slit-experiment].

Production:
* \x[spontaneous-parametric-down-conversion]
* \x[quantum-dot-single-photon-source]
* \x[video-jeremy-o-brien-quantum-technologies-by-googletechtalks-2014] https://www.youtube.com/watch?v=7wCBkAQYBZA&t=531s mentions \x[optical-ring-resonator]{p}

Detectors are generally called \x[photomultiplier]{p}:
* \x[photomultiplier-tube]
* \x[silicon-photomultiplier]
* \x[superconductivity][superconducting], mentioned at:
  * https://singlequantum.com/technology/snspd/
  * \x[video-jeremy-o-brien-quantum-technologies-by-googletechtalks-2014] https://youtube.com/watch?v=7wCBkAQYBZA?t=2720

\Video[http://youtube.com/watch?v=dyXq1u87qew]
{title="How to use an SiPM - Experiment Video" by SensLTech (2018)}

\Video[https://www.youtube.com/watch?v=Vt84rSJa7VI]
{title="Single-photon detectors - Krister Shalm" by Institute for Quantum Computing (2013)}
{description=
* https://youtu.be/Vt84rSJa7VI?t=721 \x[poincare-sphere]
}

= Spontaneous parametric down-conversion
{parent=single-photon-production-and-detection-experiments}
{title2=SPDC}
{wiki}

Phenomena that produces photons in pairs as it passes through a certain type of crystal.

You can then detect one of the photons, and when you do you know that the other one is there as well and ready to be used. \x[two-photon-interference-experiment] comes to mind, which is the basis of \x[photonic-quantum-computer], where you need two photons to be produced at the exact same time to produce \x[quantum-entanglement].

\Video[https://www.youtube.com/watch?v=1MaOqvnkBxk]
{title="One Photon In, TWO Photons Out" by JQInews (2010)}
{description=Features Alan Migdall of the \x[national-institute-of-standards-and-technology]. Produced by the https://jqi.umd.edu/[Joint Quantum Institute (JQI)].

Mentions that this phenomena is useful to determine the efficiency of a \x[single-photon-production-and-detection-experiments][single photon detector], as you have the second photon of the pair as a control.

Also briefly describes how the input energy and momentum must balance out the output energy and momentum of the two photons coming out (determined by the output \x[planck-einstein-relation][frequency] and angle).

Shows the crystal close up of the crystal branded "Cleveland Crystals Inc.". Mentions that only one in a billion photon gets scattered.

Also shows a \x[photomultiplier-tube].

Then shows their actual \x[optical-table] setup, with two tunnels of adjustable angle to get photons with different properties.
}

\Video[https://www.youtube.com/watch?v=F1GaTizdcb8]
{title="How do you produce a single photon?" by \x[physics-world] (2015)}
{description=Very short whiteboard video by Peter Mosley from the University of Bath, but it's worth it for newbs. Basically describes \x[spontaneous-parametric-down-conversion].

One interesting thing he mentions is that you could get single photons by making your sunglasses thicker and thicker to reduce how many photons pass, but one big downside problem is that then you don't know when the photon is going to come through, that becomes essentially random, and then you can't use this technique if you need two photons at the same time, which is often the case, see also: \x[two-photon-interference-experiment].
}

= Two photon interference experiment
{parent=single-photon-production-and-detection-experiments}
{wiki}

The basic experiment for a \x[photonic-quantum-computer].

Can be achieved in two ways it seems:
* macroscopic beam splitter and \x[optical-table]
* \x[photolithography]

Animation of Hong-Ou-Mandel Effect on a silicon like structure by Quantum Light University of Sheffield (2014): https://www.youtube.com/watch?v=ld2r2IMt4vg No maths, but gives the result clear: the photons are always on the same side.

\Video[http://youtube.com/watch?v=nyK-vhoOBpE]
{title="Quantum Computing with Light" by Quantum Light University of Sheffield (2015)}
{description=Animation of in-silicon single photon device with brief description of emitting and receiving elements. Mentions:
* \x[quantum-dot] source. TODO how do you produce identical photons from two separate \x[quantum-dot]{p}? See also: \x[quantum-dot-single-photon-source].
* \x[superconductivity][superconducting] nanowire detector. So the device has to be cooled then? \x[video-jeremy-o-brien-quantum-technologies-by-googletechtalks-2014] https://youtube.com/watch?v=7wCBkAQYBZA&t=2497 however says that semiconducting devices can also be used
}

\Video[http://youtube.com/watch?v=5Sb7-RNSsPg]
{title=Quantum Optics - Beam splitter in quantum optics by Alain Aspect (2017)}
{description=More theoretical approach.}

\Video[https://www.youtube.com/watch?v=ofg335d3BJ8]
{title=Building a Quantum Computer Out of Light by whentheappledrops (2014)}
{description=Yada yada yada, then at https://youtu.be/ofg335d3BJ8?t=341 shows optical table and it starts being worth it. Jacques Carolan from the University of Bristol goes through their setup which injects 5 photons into a 21-way experiment.}

= Photomultiplier
{parent=single-photon-production-and-detection-experiments}
{wiki}

= Photomultiplier tube
{parent=photomultiplier}
{wiki}

Can be used to \x[single-photon-production-and-detection-experiments][detect single photons].

\x[richard-feynman] likes them, he describes the tube at \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979] at one point.

It uses the \x[photoelectric-effect] multiple times to produce a chain reaction.

= Silicon photomultiplier
{parent=photomultiplier}
{wiki}

Here is a vendor showcasing their device. They claim in that video that a single photon is produced and detected:

Concrete device described at: \x[video-how-to-use-an-sipm-experiment-video-by-sensltech-2018].

= Squeezed state of light
{parent=photon}
{wiki=Squeezed states of light}

A \x[squeezed-coherent-state]{parent} of \x[light].

= Optics
{parent=photon}
{wiki}

The \x[science] and engineering of \x[light]{parent}!

When dealing more specifically with individual \x[photon]{p}, we usually call it \x[photonics].

= Beam splitter
{parent=optics}
{wiki}

= Half-silvered mirror
{parent=beam-splitter}
{wiki}

= Camera obscura
{parent=optics}
{wiki}

= Collimator
{parent=optics}
{wiki}

= Collimated beam
{parent=collimator}
{wiki}

= Parallel light
{parent=collimated-beam}
{wiki}

Often just called collimated light due to the \x[collimator] being the main procedure to obtain it.

However, you move very far away from the source, e.g. the \x[sun], you also get essentially parallel light.

Bibliography:
* https://physics.stackexchange.com/questions/82529/ways-of-achieving-parallel-rays-of-light

= Diffraction grating
{parent=optics}
{wiki}

= Diaphragm
{disambiguate=optics}
{parent=optics}
{wiki}

= Lens
{parent=optics}
{wiki}

The most important type of lens is the \x[biconvex-spherical-lens].

= Biconvex spherical lens
{parent=lens}

Focal length

Each side is a sphere section. They don't have to have the same radius, they are still simple to understand with different radiuses.

The two things you have to have in mind that this does are:
* converges \x[parallel-light] to a point at center at distance $f$ known as the \x[focal-length].

  This is for example why you can use lenses to burn things with \x[sun] rays, which are basically parallel.

  Conversely, if the input is a \x[point-light-source] at the \x[focal-length], it gets converted into \x[parallel-light].
* image formation: it converges all rays coming from a given source point to a single point image. This amplifies the signal, and forms an image at a plane.

  The source image can be far away, and the virtual image can be close to the lens. This is exactly what we need for a camera.

  For each distance on one side, it only works for another distance on the other side. So when we set the distance between the lens and the detector, this sets the distance of the source object, i.e. the focus. The equation is:
  $$\frac{1}{f} = \frac{1}{S_1} + \frac{1}{S_2}$$
  where $S_1$ and $S_2$ are the two distances.

= Focal length
{parent=biconvex-spherical-lens}
{title2=f}
{wiki}

If you pass \x[parallel-light].

For a \x[biconvex-spherical-lens], it is given by:
$$\frac{1}{f} = n \left( \frac{1}{R_1} + \frac{1}{R_2} \right)$$
where:
* n: f nidnex

= Optical cavity
{parent=optics}
{wiki}

= Point light source
{parent=optics}

Can be approximated with a \x[diaphragm-optics].

= Photonics
{parent=optics}
{wiki}

The \x[science] and engineering of \x[photon]{p}!

A bit more photon-specific than \x[optics]{parent}.

= Photon polarization
{parent=photonics}
{wiki}

The polarization state and how it can be decomposed into different modes can be well visualized with the \x[poincare-sphere].

One key idea about photon polarization is that it carries \x[angular-momentum]. Therefore, when an electron changes orbitals in the \x[schrodinger-equation-solution-for-the-hydrogen-atom], the angular momentum (as well as energy) change is carried out by the polarization of the \x[photon]!

\Video[https://www.youtube.com/watch?v=DOENxVgVO5E]
{title="Quantum Mechanics 9b - Photon Spin and Schrodinger's Cat II" by ViaScience (2013)}
{description=
* clear animations showing how two circular polarizations can make a vertical polarization
* a \x[polarizer] can be modelled \x[bra-ket-notation][bra] operator.
* light polarization experiments are extremely direct evidence of \x[quantum-superposition]. Individual photons must be on \i[both] L and R states at the same time because a V filter passes half of either L or R single photons, but it passes \i[all] L + R photons
}

= Polarizer
{parent=photon-polarization}
{wiki}

A device that modifies \x[photon-polarization].

As mentioned at \x[video-quantum-mechanics-9b-photon-spin-and-schrodinger-s-cat-ii-by-viascience-2013], it can be modelled as a \x[bra-ket-notation][bra].

= Poincaré sphere
{c}
{parent=photonics}
{wiki=Polarization_(waves)#Poincaré_sphere}

A more \x[photon]-specific version of the \x[bloch-sphere].

In it, each of the six sides has a clear and simple to understand \x[photon-polarization] state, either of:
* left/right
* diagonal up/diagonal down
* rotation clockwise/counterclockwise

The sphere clearly suggests for example that a rotational or diagonal polarizations are the combination of left/right with the correct phase. This is clearly explained at: \x[video-quantum-mechanics-9b-photon-spin-and-schrodinger-s-cat-ii-by-viascience-2013].

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/Poincaresp.png/800px-Poincaresp.png]
{title=Poincare sphere}

= Photonics equipment
{parent=photonics}

In other sections:
* \x[fluorometer]{child}
* \x[nichols-radiometer]{child}
* \x[photomultiplier-tube]{child}
* \x[single-photon-production-and-detection-experiments]{child}

= Interferometer
{parent=photonics-equipment}
{wiki=Interferometry}

= Fabry-Pérot interferometer
{parent=interferometer}
{wiki}

= Etalon
{synonym}

\Video[https://www.youtube.com/watch?v=HkjlfCiEqGE]
{title=Fabry Perot Interferometer by JFC UCL (2016)}
{description=Description only, reasonable animations. Considers the case of two nearby \x[beam-splitter]{p}.}

\Video[https://www.youtube.com/watch?v=tx67rXzXYD0]
{title=Fabry-Perot Introduction by Williams College Physics (2020)}
{description=Shows a working device. Confocal \x[optical-cavity], one of the mirrors scans back and forward moved by a \x[piezoelectric-motor], this is called a "scanning Fabry-Perot interferometer".

Does not produce an interference pattern, only an on/off blob, which is then fed into an \x[oscilloscope] for analysis. The oscilloscope shows both the mirror displacement (which is given by a voltage) and the light detector output.}

\Video[https://www.youtube.com/watch?v=r2ip14zIFmw]
{title=Aligning a Scanning Fabry-Perot Interferometer by University of South Florida (2016)}
{description=Very detailed, and shows of some nice equipment and techniques.}

= Optical fibre
{parent=photonics-equipment}
{wiki}

\Video[https://www.youtube.com/watch?v=7qkizPs2kdw]
{title=The Story of Light by \x[bell-labs] (2015)}
{description=A ultra quick and \x[bell-labs] focused overview of the development of \x[optical-fibre].}

= Optical table
{parent=photonics-equipment}
{wiki}

The \x[breadboard] of \x[photonics]!

For example, that is how most modern \x[microscope]{p} are prototyped, see for example \x[video-two-photon-microscopy-by-nemonic-neuronex-2019].

= Optical ring resonator
{parent=photonics-equipment}
{wiki}

= Higgs boson
{c}
{parent=elementary-particle}
{wiki}

Initially there were mathematical reasons why people suspected that all \x[boson] needed to have 0 mass as is the case for \x[photon]{p} a \x[gluon]{p}, see \x[goldstone-s-theorem].

However, experiments showed that the \x[w-boson] and the \x[z-boson] both has large non-zero masses.

So people started theorizing some hack that would fix up the equations, and they came up with the \x[higgs-mechanism].

= Goldstone's theorem
{c}
{parent=higgs-boson}
{wiki=Goldstone_boson#Goldstone's_theorem}

= Higgs mechanism
{parent=higgs-boson}

= Lepton
{parent=elementary-particle}
{wiki}

Can be contrasted with \x[baryon]{p} as mentioned at \x[baryon-vs-meson-vs-lepton].

= Electron
{parent=lepton}
{wiki}

Behaviour fully described by \x[quantum-electrodynamics]{p}.

= Elementary charge
{parent=electron}
{wiki}

= Electron charge
{synonym}

Experiments to measure it:
* \x[oil-drop-experiment]

The \x[2019-redefinition-of-the-si-base-units] defines it precisely and uses it as a measure of charge: https://en.wikipedia.org/wiki/2019_redefinition_of_the_SI_base_units#Ampere

= Why do the electron and the proton have the same charge except for the opposite signs?
{parent=elementary-charge}

https://physics.stackexchange.com/questions/21753/why-do-electron-and-proton-have-the-same-but-opposite-electric-charge

Given the view of the \x[standard-model] where the \x[electron] and \x[quark]{p} are just completely separate matter fields, there is at first sight no clear theoretical requirement for that.

As mentioned e.g. at \x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] chapter 1.6 "Hole theory", \x[dirac] initially wanted to think of the holes in his hole theory as the \x[proton]{p}, as a way to not have to postulate a new particle, the \x[positron], and as a way to "explain" the proton in similar terms. Others however soon proposed arguments why the \x[positron] would need to have the same \x[mass], and this idea had to be discarded.

= Oil drop experiment
{parent=elementary-charge}
{wiki}

Clear experiment diagram which explains that the droplet mass determined with https://en.wikipedia.org/wiki/Stokes%27_law[Stoke's law]:
\Video[http://youtube.com/watch?v=Y6XSK4tX6Gg]
{title="Quantum Mechanics 4a - Atoms I" by \x[viascience] (2013)}

American Scientific, LLC sells a ready made educational kit for this: https://www.youtube.com/watch?v=EV3BtoMGA9c

Here's some actual footage of a droplet on a well described more one-off setup:
\Video[http://youtube.com/watch?v=_683PGqG1M4]
{title="Millikan's Experiment, Part 2: The Experiment" by Phil Furneaux from Lancaster University published Feb 3, 2017.}

This American video likely from the 60's shows it with amazing contrast: https://www.youtube.com/watch?v=_UDT2FcyeA4[]

= Electron rest mass
{parent=electron}
{wiki}

= Positron
{parent=electron}
{title2=1932}
{wiki}

= Muon
{parent=lepton}
{title2=1936}
{wiki}

= Neutrino
{parent=lepton}
{wiki}

Hypothesized as the explanation for continuous \x[electron] energy spectrum in \x[beta-decay] in 1930 by .

First observed directly by the \x[cowan-reines-neutrino-experiment].

= Cowan-Reines neutrino experiment
{parent=neutrino}
{title2=1956}
{c}
{wiki}

= Composite particle
{parent=subatomic-particle}

= Hadron
{parent=composite-particle}
{wiki}

= Baryon
{parent=hadron}
{wiki}

\x[composite-particle] made up of an odd number of \x[elementary-particle]{p}.

The most important examples by far are the \x[proton] and the \x[neutron].

= Baryon vs meson vs lepton
{parent=baryon}

"Barys" means "heavy" in \x[greek-language], because \x[proton]{p} and \x[neutron]{p} was what made most of the \x[mass] of known ordinary matter, as opposed notably to \x[electron]{p}.

Baryons can be contrasted with:
* \x[meson]{p}, which have an even number of elementary particles. The name meson comes from "medium" since their most common examples have two quarks rather than three as the most common baryons such as \x[proton]{p}. So they have less mass than a \x[proton], but more than an \x[electron], this medium mass.
* \x[lepton]{p}, which are much lighter particles such as the \x[electron]. "Leptos" means "fine, small, thin".

= Neutron
{parent=hadron}
{wiki}

= Proton
{parent=hadron}
{wiki}

= Proton-to-electron mass ratio
{parent=proton}
{wiki}

= Meson
{parent=hadron}
{wiki}

\x[composite-particle] made up of an even number of \x[elementary-particle]{p}, most commonly one particle and one anti-particle.

This can be contrasted with \x[meson]{p}, which have an odd number of elementary particles, as mentioned at \x[baryon-vs-meson-vs-lepton].

= Pion
{parent=meson}
{title2=1947}
{wiki}

Conceptually the simplest \x[meson]{p}. All of them have neutral \x[color-charge]:
* charged: down + anti-up or up + anti-down, therefore with net electrical charge $\pm1$ \x[electron-charge]
* neutral: down + anti-down or up + anti-up, therefore with net electrical charge 0

= Kaon
{parent=meson}
{wiki}

One \x[strange-quark] bound with one \x[up-quark] or a \x[down-quark]. 6 combinations exist, 4 if we consider antiparticles the same as particles.

= Eightfold way
{disambiguate=physics}
{parent=subatomic-particle}
{wiki}

\Video[https://www.youtube.com/watch?v=BGeW6Nc6IMQ]
{title=Strangeness Minus Three (BBC Horizon 1964)}
{description=Basically shows \x[richard-feynman] 15 minutes on a blackboard explaining the experimental basis of the \x[eightfold-way-physics] really well, while at the same time hyperactively moving all over. The word \x[symmetry] gets tossed a few times.}

= Parameters of the Standard Model
{parent=standard-model}

The growing number of parameters of the Standard Model is one big source of worry for early 21st century physics, much like the growing number of particles was a worry in the beginning of the 20th (but that one was solved by 2020).

List: https://en.wikipedia.org/w/index.php?title=Standard_Model&oldid=1042518939#Construction_of_the_Standard_Model_Lagrangian

= Standard Model Lagrangian
{c}
{parent=standard-model}

Combination of other sub-\x[lagrangian]{p} for each of the forces, e.g.:
* \x[quantum-electrodynamics-lagrangian]

= Why do symmetries such as SU(3), SU(2) and U(1) matter in particle physics?
{parent=standard-model}

\x[physicist]{c}{p} love to talk about that stuff, but no one ever has the guts to explain it into enough detail to show its beauty!!!

Perhaps the wisest thing is to just focus entirely on the \x[u-1] part to start with, which is the \x[quantum-electrodynamics] one, which is the simplest and most useful and historically first one to come around.

Perhaps the best explanation is that if you assume those \x[internal-symmetry]{p}, then you can systematically make "obvious" educated guesses at the interacting part of the \x[standard-model-lagrangian], which is the fundamental part of the \x[standard-model]. See e.g.:
* \x[derivation-of-the-quantum-electrodynamics-lagrangian]
* \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] chapter 7 "Interaction Theory" derives all three of \x[quantum-electrodynamics], \x[weak-interaction] and \x[quantum-chromodynamics] Lagrangian from each of the symmetries!

One bit underlying reason is: \x[noether-s-theorem].

Notably, https://axelmaas.blogspot.com/2010/08/global-and-local-symmetries.html gives a good overview:
\Q[
A local symmetry transformation is much more complicated to visualize. Take a rectangular grid of the billiard balls from the last post, say ten times ten. Each ball is spherical symmetric, and thus invariant under a rotation. The system now has a global and a local symmetry. A global symmetry transformation would rotate each ball by the same amount in the same direction, leaving the system unchanged. A local symmetry transformation would rotate each ball about a different amount and around a different axis, still leaving the system to the eye unchanged. The system has also an additional global symmetry. Moving the whole grid to the left or to the right leaves the grid unchanged. However, no such local symmetry exists: Moving only one ball will destroy the grid's structure.

Such global and local symmetries play an important role in physics. The global symmetries are found to be associated with properties of particles, e. g., whether they are matter or antimatter, whether they carry electric charge, and so on. Local symmetries are found to be associated with forces. In fact, all the fundamental forces of nature are associated with very special local symmetries. For example, the weak force is actually associated in a very intricate way with local rotations of a four-dimensional sphere. The reason is that, invisible to the eye, everything charged under the weak force can be characterized by a arrow pointing from the center to the surface of such a four-dimensional sphere. This arrow can be rotated in a certain way and at every individual point, without changing anything which can be measured. It is thus a local symmetry. This will become more clearer over time, as at the moment of first encounter this appears to be very strange indeed.
]{id=quote-axelmaas-local-symmetry}
so it seems that that's why they are so key: \x[local-symmetry]{p} map to the forces themselves!!!

https://axelmaas.blogspot.com/2010/09/symmetries-of-standard-model.html then goes over all symmetries of the \x[standard-model] uber quickly, including the global ones.

= Maxwell's equations
{c}
{parent=particle-physics}
{wiki}

Unified all previous electro-magnetism theories into one equation.

Explains the propagation of light as a wave, and matches the previously known relationship between the \x[speed-of-light] and electromagnetic constants.

The equations are a limit case of the more complete \x[quantum-electrodynamics], and unlike that more general theory account for the quantization of \x[photon].

The equations are a system of \x[partial-differential-equation].

The system consists of 6 unknown functions that map 4 variables: time t and the x, y and z positions in space, to a real number:
* $E_x(t, x,y,z)$, $E_y(t, x,y,z)$, $E_z(t, x,y,z)$: directions of the electric field $\functionDomain{\E}{\RFour}{\RThree}$
* $B_x(t, x,y,z)$, $B_y(t, x,y,z)$, $B_z(t, x,y,z)$: directions of the magnetic field $\functionDomain{\B}{\RFour}{\RThree}$
and two known input functions:
* $\functionDomain{\rho}{\RThree}{\R}$: density of charges in space
* $\functionDomain{\J}{\RThree}{\RThree}$: current vector in space. This represents the strength of moving charges in space.

Due to the \x[conservation-of-charge] however, those input functions have the following restriction:
$$
\pdv{\rho}{t} + \div{\mathbf{\J}} = 0
$$
{title=Charge conservation}

Also consider the following cases:
* if a spherical charge is moving, then this of course means that $\rho$ is changing with time, and at the same time that a current exists
* in an \x[ideal] infinite cylindrical wire however, we can have constant $\rho$ in the wire, but there can still be a current because those charges are moving

  Such infinite cylindrical wire is of course an ideal case, but one which is a good approximation to the huge number of electrons that travel in a actual wire.

The goal of finding $\E$ and $\B$ is that those fields allow us to determine the force that gets applied to a charge via the \x[equation-lorentz-force], and then to find the force we just need to integrate over the entire body.

Finally, now that we have defined all terms involved in the Maxwell equations, let's see the equations:

$$
div{\E} = \frac{\rho}{\vacuumPermittivity}
$$
{title=Gauss' law}

$$
div{\B} = 0
$$
{title=Gauss's law for magnetism}

$$
\curl{\E} = -\pdv{\B}{t}
$$
{title=Faraday's law}

$$
\curl{\B} = \vacuumPermeability \left(\J + \vacuumPermittivity \pdv{E}{t} \right)
$$
{title=Ampere's circuital law}

You should also review the intuitive interpretation of \x[divergence] and \x[curl-mathematics].

= Lorentz force
{c}
{parent=maxwell-s-equations}
{wiki}

$$
\text{force\_density} = \rho \E + \J \times \B
$$
{title=Lorentz force}

A little suspicious that it bears the name of Lorentz, who is famous for \x[special-relativity], isn't it? See: \x[maxwell-s-equations-require-special-relativity].

= Explicit scalar form of the Maxwell's equations
{parent=maxwell-s-equations}

For numerical algorithms and to get a more low level understanding of the equations, we can expand all terms to the simpler and more explicit form:
$$
\pdv{E_x}{x} + \pdv{E_y}{x} +
\pdv{E_z}{x} =
\frac{\rho}{\vacuumPermittivity}
\\

\pdv{B_x}{x} +
\pdv{B_y}{x} +
\pdv{B_z}{x} =
0
\\

\pdv{E_z}{y} - \pdv{E_y}{z} = -\pdv{B_x}{t} \\
\pdv{E_x}{z} - \pdv{E_z}{x} = -\pdv{B_y}{t} \\
\pdv{E_y}{x} - \pdv{E_x}{y} = -\pdv{B_z}{t} \\

\pdv{B_z}{y} - \pdv{B_y}{z} = \vacuumPermeability \left(J_x + \vacuumPermittivity \pdv{E_x}{t} \right) \\
\pdv{B_x}{z} - \pdv{B_z}{x} = \vacuumPermeability \left(J_y + \vacuumPermittivity \pdv{E_y}{t} \right) \\
\pdv{B_y}{x} - \pdv{B_x}{y} = \vacuumPermeability \left(J_z + \vacuumPermittivity \pdv{E_z}{t} \right) \\
$$
{id=equation-maxwells-equation-explicit}

= Overdetermination of Maxwell's equations
{parent=explicit-scalar-form-of-the-maxwell-s-equations}
{wiki=Maxwell's_equations#Overdetermination_of_Maxwell's_equations}

As seen from \x[explicit-scalar-form-of-the-maxwell-s-equations], this expands to 8 equations, so the question arises if the system is over-determined because it only has 6 functions to be determined.

As explained on the Wikipedia page  however, this is not the case, because if the first two equations hold for the initial condition, then the othe six equations imply that they also hold for all time, so they can be essentially omitted.

It is also worth noting that the first two equations don't involve time derivatives. Therefore, they can be seen as spacial constraints.

TODO: the \x[electric-field] and \x[magnetic-field] can be expressed in terms of the \x[electric-potential] and \x[magnetic-vector-potential]. So then we only need 4 variables?

Bibliography:
* https://physics.stackexchange.com/questions/20071/do-maxwells-equations-overdetermine-the-electric-and-magnetic-fields

= Coulomb's law
{c}
{parent=maxwell-s-equations}
{wiki}

Static case of Maxwell's law for electricity only.

Is implied by Gauss' law if \x[maxwell-s-equations]: https://physics.stackexchange.com/questions/44418/are-the-maxwells-equations-enough-to-derive-the-law-of-coulomb

The "static" part is important: if this law were true for moving charges, we would be able to transmit information instantly at infinite distances. This is basically where the idea of \x[field-physics] comes in.

\Video[https://www.youtube.com/watch?v=B5LVoU_a08c]
{title=Coulomb's Law experiment with torsion balance with a mirror on the balance to amplify rotations by uclaphysics (2010)}

= Solutions of Maxwell's equations
{parent=maxwell-s-equations}

\Video[https://www.youtube.com/watch?v=FWCN_uI5ygY]
{title="Understanding Electromagnetic Radiation! | ICT #5" by Learn Engineering (2019)}
{description=Shows animations of a \x[dipole-antenna][dipole antenna] which illustrates well how radiation is emitted from moving charges and travels at the \x[speed-of-light].}

= Dipole antenna
{parent=solutions-of-maxwell-s-equations}
{wiki}

= Maxwell's equations with pointlike particles
{parent=solutions-of-maxwell-s-equations}

In the standard formulation of \x[maxwell-s-equations], the \x[electric-current] is a convient but magic input.

Would it be possible to use \x[maxwell-s-equations] to solve a system of \x[pointlike-particle]{p} such as electrons instead?

The following suggest no, or only for certain subcases less general than \x[maxwell-s-equations]:
* https://physics.stackexchange.com/questions/498892/solution-to-maxwell-lorentz-equations
* https://physics.stackexchange.com/questions/380741/complete-classical-description-of-two-interacting-charges
This is the type of thing where the probability aspect of \x[quantum-mechanics] seems it could "help".

= Maxwell's equations in 2D
{parent=maxwell-s-equations}
{c}

TODO it would be awesome if we could de-generalize the equations in 2D and do a \x[javascript] demo of it!

Not sure it is possible though because the \x[curl-mathematics] appears in the equations:
* https://physics.stackexchange.com/questions/104008/maxwells-equations-of-electromagnetism-in-21-spacetime-dimensions
* https://www.reed.edu/physics/faculty/wheeler/documents/Electrodynamics/Miscellaneous%20Essays/E&M%20in%202%20Dimensions.pdf

= Existence and uniqueness of solutions to Maxwell's equations
{parent=maxwell-s-equations}

TODO: I'm surprised that the Wiki page barely talks about it, and there are few \x[google] hits too! A sample one: https://www.researchgate.net/publication/228928756_On_the_existence_and_uniqueness_of_Maxwell's_equations_in_bounded_domains_with_application_to_magnetotellurics

= Electric field
{parent=maxwell-s-equations}
{title2=$\E$}
{wiki}

= Electric charge
{parent=electric-field}
{wiki}

= Charge conservation
{parent=electric-charge}
{wiki}

= Conservation of charge
{synonym}

= Electric current
{parent=electric-charge}
{wiki}

In the context of \x[maxwell-s-equations], it is \x[vector-field] that is one of the inputs of the equation.

\x[maxwell-s-equations-with-pointlike-particles]{full} asks if the theory would work for pointlike particles in order to predict the evolution of this field as part of the equations themselves rather than as an external element.

Measured in \x[ampere]{p} in the \x[international-system-of-units].

= Electric potential
{parent=electric-field}
{title2=$\phi$}
{wiki}

= Volt
{parent=electric-potential}
{title2=V}
{wiki}

= Electronvolt
{parent=volt}
{wiki}

After the \x[2019-redefinition-of-the-si-base-units] it is by definition exactly $1.602 176 634 10^{-19}$ \x[joule]{p}.

= Magnetic field
{parent=maxwell-s-equations}
{title2=$\B$}
{wiki}

= Magnetometer
{parent=magnetic-field}
{wiki}

Implementations:
* \x[hall-effect] based
* \x[squid-device]

= Magnetic vector potential
{parent=magnetic-field}
{title2=$\va{A}$}
{wiki}

= Hall effect
{parent=maxwell-s-equations}
{c}

* https://en.wikipedia.org/wiki/Hall_effect
* http://hyperphysics.phy-astr.gsu.edu/hbase/magnetic/Hall.html

The voltage changes perpendicular to the current when magnetic field is applied, Just watch this:
\Video[https://upload.wikimedia.org/wikipedia/commons/transcoded/7/77/Hall_Sensor.webm/Hall_Sensor.webm.480p.vp9.webm]

Applications:
* the direction of the effect proves that electric currents in common electrical conductors are made up of negative charged particles
* \x[magnetometer][measure magnetic fields], TODO vs other methods

Other more precise non-classical versions:
* \x[quantum-hall-effect]{child}

= Electromagnetic four-potential
{parent=maxwell-s-equations}
{wiki}

A different and more elegant way to express \x[maxwell-s-equations] by using the:
* \x[magnetic-vector-potential]
* \x[electric-potential]
instead of the:
* \x[magnetic-field]
* \x[electric-field]

= Electromagnetic tensor
{parent=electromagnetic-four-potential}
{title2=$F^{\mu \nu}$}
{wiki}

= Four-current
{parent=electromagnetic-four-potential}
{wiki}

= Lorentz gauge condition
{c}
{parent=electromagnetic-four-potential}
{wiki}

= Lorentz gauge
{c}
{synonym}

There are several choices of \x[electromagnetic-four-potential] that lead to the same physics.

E.g. thinking about the \x[electric-potential] alone, you could set the zero anywhere, and everything would remain be the same.

The Lorentz gauge is just one such choice. It is however a very popular one, because it is also manifestly \x[lorentz-invariant].

= Coulomb gauge
{c}
{parent=lorentz-gauge-condition}
{wiki}

Alternative to the \x[lorentz-gauge], but less used in general as it is not as nice for \x[relativity] invariance.

= Electromagnetism
{parent=maxwell-s-equations}
{wiki}

= Electromagnetic
{synonym}

= Electromagnetic force
{synonym}

The phenomena described by \x[maxwell-s-equations].

= Magnetism
{parent=electromagnetism}
{wiki}

= Theory of relativity
{parent=particle-physics}
{wiki}

= Relativistic
{synonym}

= Non-relativistic
{synonym}

= Relativity
{synonym}

= Special relativity
{parent=theory-of-relativity}
{wiki}

Explains how it is possible that everyone observes the same \x[speed-of-light], even if they are moving towards or opposite to the light!

This was observed in in the \x[michelson-morley-experiment] which uses the movement of the Earth to try and detect differences in the speed of light.

This leads leads to the following conclusions:
* to \x[length-contraction] and time dilation
* the speed of light is the maximum speed anything can reach

All of this goes of course completely against our daily Physics intuition.

The "special" in the name refers to the fact that it is a superset of \x[general-relativity], which also explains gravity in a single framework.

Since time and space get all messed up together, you have to be very careful to understand what it means to say "I observed this to happen over there at that time", otherwise you will go crazy. A good way to think about is this:
* use \x[einstein-synchronization] to setup a bunch of clocks for every position in your \x[frame-of-reference]
* on every point of space, you put a little detector which records events and the time of the event
* each detector can only detect events locally, i.e. events that happen very close to the detector
* then, after the event, the detectors can send a signal to you, who is sitting at the origin, telling you what they detected

= Einstein notation
{c}
{parent=special-relativity}
{wiki}

= Einstein summation convention
{c}
{synonym}
{title2}

The https://en.wikipedia.org/w/index.php?title=Einstein_notation&oldid=1021244532[Wikipedia page] of this article is basically a masterclass why \x[write-free-books-to-get-famous-website/wikipedia][Wikipedia is useless for learning technical subjects]. They are not even able to teach such a simple subject properly there!

Notably, you have to tell people that the thing works with partial derivatives: TODO

Then a specific \x[metric] is involved, sometimes we want to automatically add it to products, e.g. considering the \x[minkowski-inner-product-matrix] where $\eta$ is a 4x4 matrix and $\mu$ is a vector in \x[r-4]
$$
x^{\mu} x_{\mu} = x^{\mu} \eta_{\mu \nu} x^{\mu}
$$
which leads to the change of sign of some terms.

= Raising and lowering indices
{c}
{parent=einstein-notation}
{wiki}

= Einstein synchronization
{c}
{parent=special-relativity}
{wiki}

= Frame of reference
{parent=einstein-synchronization}
{wiki}

= Inertial frame of reference
{parent=frame-of-reference}
{wiki}

= Inertial frames of reference
{synonym}

= Lorentz transformation
{c}
{parent=special-relativity}
{wiki}

The equation that allows us to calculate stuff in \x[special-relativity]!

Take two observers with identical rules and stopwatch, and aligned axes, but one is on a car moving at towards the $+x$ direction at speed $v$.

TODO image.

When both observe an event, if we denote:
* $(t, x, y, z)$ the observation of the standing observer
* $(t', x', y', z')$ the observation of the ending observer on a car
It is of course arbitrary who is standing and who is moving, we will just use the term "standing" for the one without primes.

Then the coordinates of the event observed by the observer on the car are:
$$
\begin{aligned}
t' & = \gamma \left( t - \frac{v x}{c^2} \right) \\
x' & = \gamma \left( x - v t \right) \\
y' & = y \\
z' & = z
\end{aligned}
$$
where:
$$
\gamma = \frac{1}{\sqrt{1 - \frac{v^2}{c^2}}}
$$

Note that if $\frac{v}{c}$ tends towards zero, then this reduces to the usual https://en.wikipedia.org/wiki/Galilean_transformation[Gallilean transforms] which our intuition expects:
$$
\begin{aligned}
t' & = t
x' & = x - v t \\
y' & = y \\
z' & = z
\end{aligned}
$$

This explains why we don't observe special relativity in our daily lives: macroscopic objects move too slowly compared to light, and $\frac{v}{c}$ is almost zero.

= Lorentz covariance
{c}
{parent=lorentz-transformation}
{wiki}

= Lorentz invariant
{c}
{parent=lorentz-covariance}

= Lorentz invariance
{c}
{synonym}

Basically a synonym of \x[lorentz-covariance]?

= Lorentz transform consequence: everyone sees the same speed of light
{c}
{parent=lorentz-transformation}

OK, so let's verify the main desired consequence of the \x[lorentz-transformation]: that everyone observes the same \x[speed-of-light].

Observers will measure the speed of light by calculating how long it takes the light going towards $+x$ cross a rod of length $L = x_2 - x_1$ laid in the x axis at position $X1$.

TODO image.

Each observer will observe two events:
* $(t_1, x_1, y_1, z_1)$: the light touches the left side of the rod
* $(t_2, x_2, y_2, z_2)$: the light touches the right side of the rod

Supposing that the standing observer measures the speed of light as $c$ and that light hits the left side of the rod at time $T1$, then he observes the coordinates:
$$
\begin{aligned}
t_1 & = T1 \\
x_1 & = X1 \\
t_2 & = \frac{L}{c} \\
x_2 & = X1 + L \\
\end{aligned}
$$

Now, if we transform for the moving observer:
$$
\begin{aligned}
t_1' & = \gamma \left( t_1 - \frac{v x_1}{c^2} \right) \\
x_1' & = \gamma \left( x_1 - v t_1             \right) \\
t_2' & = \gamma \left( t_2 - \frac{v x_2}{c^2} \right) \\
x_2' & = \gamma \left( x_2 - v t_2             \right) \\
\end{aligned}
$$
and so the moving observer measures the speed of light as:
$$
\begin{aligned}
c' & = \frac{x_2' - x_1'}{t_2' - t_1'} \\
   & = \frac{(x_2 - v t_2) - (x_1 - v t_1)}{(t_2 - \frac{v x_2}{c^2}) - (t_1 - \frac{v x_1}{c^2})} \\
   & = \frac{(x_2 - x_1) - v (t_2 - t_1)}{(t_2 - t_1) - \frac{v}{c^2} (x_2 - x_1)} \\
   & = \frac{\frac{x_2 - x_1}{t_2 - t_1} - v}{1 - \frac{v}{c^2} \frac{x_2 -x_1}{t_2 - t_1}} \\
   & = \frac{c - v}{1 - \frac{v}{c^2} c} \\
   & = \frac{c - v}{\frac{c - v}{c}} \\
   & = c \\
\end{aligned}
$$

= Length contraction
{parent=lorentz-transformation}
{wiki}

Suppose that a rod has is length $L$ measured on a rest frame $S$ (or maybe even better: two identical rulers were manufactured, and one is taken on a spaceship, a bit like the \x[twin-paradox]).

Question: what is the length $L'$ than an observer in frame $S'$ moving relative to $S$ as speed $v$ observe the rod to be?

The key idea is that there are two events to consider in each frame, which we call 1 and 2:
* the left end of the rod is an observation event at a given position at a given time: $x_1$ and $t_1$ for $S$ or $x'_1$ and $t'_1$ for $S'$
* the right end of the rod is an observation event at a given position at a given time : $x_2$ and $t_2$ for $S$ or $x'_2$ and $t'_2$ for $S'$
Note that what you visually observe on a photograph is a different measurement to the more precise/easy to calculate two event measurement. On a photograph, it seems you might not even see the contraction in some cases as mentioned at https://en.wikipedia.org/wiki/Terrell_rotation

Measuring a length means to measure the $x_2 - x_1$ difference for a single point in time in your frame ($t2 = t1$).

So what we want to obtain is $x'_2 - x'_1$ for any given time $t'2 = t'1$.

In summary, we have:
$$
\begin{aligned}
L  &= x_2  &- x_1 \\
L' &= x'_2 &- x'_1
t'_2 = t'_1
\end{aligned}
$$

By plugging those values into the \x[lorentz-transformation], we can eliminate $t_2 and t_1$, and conclude that for any $t'_2 = t'_1$, the length contraction relation holds:
$$
L' = \frac{L}{\gamma}
$$

The key question that needs intuitive clarification then is: but how can this be symmetric? How can both observers see each other's rulers shrink?

And the key answer is: because to the second observer, the measurements made by the first observer are not simultaneous. Notably, the two measurement events are obviously \x[spacelike-separated-event]{p} by looking at the \x[light-cone], and therefore can be measured even in different orders by different observers.

= Terrell rotation
{c}
{parent=length-contraction}
{wiki}

What you would see the moving rod look like on a photo of a \x[length-contraction] experiment, as opposed as using two locally measured separate spacetime events to measure its length.

= Time dilation
{parent=lorentz-transformation}
{wiki}

One of the best ways to think about it is the \x[transversal-time-dilation] thought experiment.

= Transversal time dilation
{parent=time-dilation}
{wiki=Time_dilation#Simple_inference_of_velocity_time_dilation}

Light watch transverse to direction of motion. This case is interesting because it separates \x[length-contraction] from \x[time-dilation] completely.

Of course, as usual in \x[special-relativity], calling something "time dilation" leads us to \x[mind-boggling] ideas of "symmetry breaking": if both frames have a light watch, how can both possibly observe the other to be time dilated?

And the answer to this, is the usual: in special relativity time and space are interwoven in a \x[fucked] up way, everything is just a spacetime event.

In this case, there are three spacetime events of interest: both clocks start at same position, your beam hits up at x=0, moving frame hits up at x>0.

Those two mentioned events are \x[spacelike-separated-event]{p}, and therefore even though they seem simultaneous to you, they are not going to be simultaneous to the moving observer!

If \x[einstein-synchronization][little clock one meter away from you] tells you that at the time of some event (your light beam hit up) the moving light watch was only 50% up, this is just a number given by your one meter away watch!

= Transverse Doppler effect
{parent=time-dilation}
{wiki=Relativistic_Doppler_effect#Transverse_Doppler_effect}

= Twin paradox
{parent=lorentz-transformation}
{wiki}

The key question is: why is this not symmetrical?

One answer is: because one of the twin accelerates, and therefore changes inertial frames.

But the better answer is: understand what happens when the stationary twin sends light signals at constant time intervals to each other. When does the travelling twin receives them?

By doing that, we see that "all the extra aging happens immediately when the twin turns around":
* on the out trip, both twins receive signals at constant intervals
* when the moving twin turns around and starts to accelerate through different inertial frames, shit happens:
  * the moving twin suddenly notices that the rate of signals from the stationary twin increased. They are getting older faster than us!
  * the stationary twin suddenly notices that the rate of signals from the moving twin decreased. They are getting older slower than us!
* then when the moving twin reaches the return velocity, both see constant signal rates once again

\Image[https://upload.wikimedia.org/wikipedia/commons/7/73/TwinParadoxProperAcceleration.svg]
{height=600}
{title=Twin paradox illustration with twins sending light signals at regular intervals.}

Another way of understanding it is: you have to make all calculations on a \i[single] inertial frame for the entire trip.

Supposing the sibling quickly accelerates out (or magically starts moving at constant speed), travels at constant speed, and quickly accelerates back, and travels at constant speed setup, there are three frames that seem reasonable:
* the frame of the non-accelerating sibling
* the outgoing trip of the accelerating sibling
* the return trip of the accelerating sibling

If you do that, all three calculations give the exact same result, which is reassuring.

Another way to understand it is to do explicit integrations of the acceleration: https://physics.stackexchange.com/questions/242043/what-is-the-proper-way-to-explain-the-twin-paradox/242044#242044 This is the least insightful however :-)

Bibliography:

* https://physics.stackexchange.com/questions/98708/twin-paradox-calculating-spacetime-intervals-from-both-perspectives
* https://physics.stackexchange.com/questions/29921/why-isnt-the-symmetric-twin-paradox-a-paradox

= Maxwell's equations require special relativity
{c}
{parent=special-relativity}
{wiki}

The following aspects of \x[maxwell-s-equations] make no sense without \x[special-relativity]:
* the \x[lorentz-force] would be different observers have different speeds, see e.g.: \x[charged-particle-moving-at-the-same-speed-of-electrons-thought-experiment]
* \x[maxwell-s-equations-imply-that-the-speed-of-light-is-the-same-for-all-inertial-reference-frames]

When charged particle though experiment are seen from the point of view of special relativity, it becomes clear that magnetism is just a direct side effect of charges being viewed in special relativity. One is philosophically reminded of how \x[the-dirac-equation-predicts-spin][spin is the consequence of quantum mechanics + special relativity].

Bibliography:
* http://richardhaskell.com/files/Special%20Relativity%20and%20Maxwells%20Equations.pdf
* https://en.wikipedia.org/w/index.php?title=Lorentz_transformation&oldid=909991141#Transformation_of_the_electromagnetic_field

= Deriving magnetism from electricity and relativity
{c}
{parent=maxwell-s-equations-require-special-relativity}
{wiki}

It appears that \x[maxwell-s-equations] can be derived directly from Coulomb's law + special relativity:
* https://en.wikipedia.org/wiki/Classical_electromagnetism_and_special_relativity#Deriving_magnetism_from_electrostatics
* https://physics.stackexchange.com/questions/3618/can-maxwells-equations-be-derived-from-coulombs-law-and-special-relativity
This idea is suggested by the \x[charged-particle-moving-at-the-same-speed-of-electrons-thought-experiment], which indicates that \x[magnetism] is just a consenquence of \x[special-relativity].

= Charged particle moving at the same speed of electrons thought experiment
{parent=maxwell-s-equations-require-special-relativity}

This is a well known though experiment, which \x[richard-feynman] used to emphasize
* infinite wire with balanced positive and negative charges, so no net charge, but a net magnetic field
* a single charge moves parallel to wire at the same speed as the electrons

In the above experiment:
* from the wire frame, the charge feels electromagnetic force, because it is moving and there is a magnetic field
* from the single charge frame, there is still magnetic field (positive charges are moving), but the body itself is not moving, so there is no force!

The solution to this problem is \x[length-contraction]: the positive charges are length contracted and the moving electrons aren't, and therefore they are denser and therefore there is an effective charge from that frame.

This is also mentioned at \x[david-tong] http://www.damtp.cam.ac.uk/user/tong/em/el4.pdf (https://web.archive.org/web/20180920161243/http://www.damtp.cam.ac.uk/user/tong/em/el4.pdf[archive]) "David Tong: Lectures on Electromagnetism - 5. Electromagnetism and Relativity" "5.2.1 Magnetism and Relativity".

\Video[https://www.youtube.com/watch?v=Ii7rgIQawko]
{title=How Special Relativity Fixed Electromagnetism by \x[the-science-asylum] (2019)}

= Covariant formulation of classical electromagnetism
{parent=maxwell-s-equations-require-special-relativity}
{wiki}

See also: \x[covariance].

= Maxwell's equations are Lorentz invariant
{c}
{parent=covariant-formulation-of-classical-electromagnetism}

* https://physics.stackexchange.com/questions/219474/proof-that-maxwell-equations-are-lorentz-invariant

= Maxwell's equations imply that the speed of light is the same for all inertial reference frames
{c}
{parent=covariant-formulation-of-classical-electromagnetism}

* https://physics.stackexchange.com/questions/562149/how-can-we-conclude-from-maxwells-wave-equation-that-the-speed-of-light-is-the
* https://www.quora.com/How-do-Maxwell%E2%80%99s-equations-imply-that-the-speed-of-light-is-constant-in-all-reference-frames on \x[quora]

= Maxwell Lagrangian
{c}
{parent=covariant-formulation-of-classical-electromagnetism}

* https://www.youtube.com/watch?v=nrBiDRZRK5g Maxwell Lagrangian Derivation by \x[dietterich-labs] (2019)
* https://www.youtube.com/watch?v=yo-Z3RO-eeY Deriving the Maxwell Lagrangian by \x[pretty-much-physics] (2019)

= Spacetime
{c}
{parent=special-relativity}
{wiki}

= Four-vector
{c}
{parent=spacetime}
{wiki}

= Four-gradient
{c}
{parent=spacetime}
{wiki}

A \x[4d] \x[gradient] with some small \x[special-relativity] specifics added in (the light of speed and sign change for the time).

= Minkowski space
{c}
{parent=spacetime}
{wiki}

\x[r-4] with a weird \x[dot-product]-like operation called the \x[minkowski-inner-product].

Because that product is not \x[positive-definite], the \x[norm-induced-by-from-an-inner-product] is not really a \x[norm] strictly speaking either.

= Minkowski inner product
{c}
{parent=minkowski-space}

Not really an \x[inner-product] in the common modern definition, because it is not \x[positive-definite], only a \x[symmetric-bilinear-form].

= Minkowski inner product matrix
{c}
{parent=minkowski-inner-product}
{title2=$\eta_{\mu\nu}$

The \x[matrix-representation-of-the-symmetric-bilinear-form] that is the \x[minkowski-inner-product].

Since that is a \x[symmetric-bilinear-form], the associated \x[matrix] is a \x[symmetric-matrix].

One possibility is to give it a time negative representation:
$$
\eta_{\mu\nu} =
\begin{bmatrix}
-1 & 0 & 0 & 0 \\
 0 & 1 & 0 & 0 \\
 0 & 0 & 1 & 0 \\
 0 & 0 & 0 & 1 \\
\end{bmatrix}
$$
and another equivalent one is to use a time positive representation:
$$
\eta_{\mu\nu} =
\begin{bmatrix}
 1 &  0 &  0 &  0 \\
 0 & -1 &  0 &  0 \\
 0 &  0 & -1 &  0 \\
 0 &  0 &  0 & -1 \\
\end{bmatrix}
$$
The matrix is typically denoted by the \x[eta][Greek letter eta].

= Spacetime diagram
{c}
{parent=spacetime}
{wiki}

Why should I care when I can calculate new x and new time with \x[lorentz-transformation]?

Answer: it can give some qualitative intuition on what is larger/smaller happens before/after based only on arguably more intuitive geometric considerations, without requiring you to do any calculations, see e.g. \x[image-spacetime-diagram-illustrating-how-faster-than-light-travel-implies-time-travel].

= Light cone
{parent=spacetime-diagram}
{wiki}

A subset of \x[spacetime-diagram].

The key insights that it gives are:
* future and past are well defined: every reference frame sees your future in your future cone, and your past in your past cone

  Otherwise causality could be violated, and then things would go really bad, you could tell your past self to tell your past self to tell your past self to do something.

  You can only affect the outcome of events in your future cone, and you can only be affected by events in your past cone. You can't travel fast enough to affect.

  Two spacetime events with such fixed causality are called \x[timelike-separated-event]{p}.
* every other event (to right and left, known as \x[spacelike-separated-event]{p}) can be measured to happen before or after your current spacetime event by different observers.

  But that does not violate causality, because you just can't reach those spacetime points anyways to affect them.

\Image[https://upload.wikimedia.org/wikipedia/commons/7/78/Relativity_of_Simultaneity_Animation.gif]
{title=Animation showing how space-separated events can be observed to happen in different orders by observers in different \x[frame-of-reference][frames of reference].}

= Timelike-separated event
{parent=light-cone}

= Timelike-separated
{synonym}

The opposite of \x[spacelike-separated-event]{p}.

= Spacelike-separated event
{parent=light-cone}

Mathematically, we can decide if two events are \x[timelike-separated] or \x[spacelike-separated] by just looking at the sign of the \x[spacetime-interval] between them.

= Spacelike-separated
{synonym}

On the \x[light-cone], these are events on the left/right part of the cone.

Different observers might not agree on the order of two spacelike-separated events.

Further discussion at \x[light-cone]{full}.

The opposite of those events are \x[timelike-separated-event]{p}.

= Relativistic mechanics
{parent=special-relativity}
{wiki}

= Four-momentum
{parent=relativistic-mechanics}
{wiki=Relativistic_mechanics#Relativistic_energy_and_momentum}

= Relativistic energy
{parent=four-momentum}
{wiki=Relativistic_mechanics#Relativistic_energy_and_momentum}

= Energy-momentum relation
{parent=relativistic-energy}
{wiki=Energy–momentum_relation}

= Mass-energy equivalence
{parent=relativistic-energy}
{title2=$E=mc^2$}
{wiki=Mass–energy_equivalence}

= Spacetime interval
{parent=four-momentum}
{wiki=Spacetime#Spacetime_interval}

In the \x[galilean-transformation], there are two separate invariants that two \x[inertial-frame-of-reference] always agree on between two separate events:
* \x[time]
* \x[length], given by the \x[pythagorean-theorem]

However, in \x[special-relativity], neither of those are invariant separately, since space and time are mixed up together.

Instead, there is a new unified invariant: the spacetime-interval, given by:
$$c \Delta t^2 - (\Delta x ^2 + \Delta y^2 + \Delta z^2)$$

Note that this distance can be zero for two events separated.

= Proper time
{parent=spacetime-interval}
{wiki}

= General relativity
{parent=theory-of-relativity}
{wiki}

Unifies both \x[special-relativity] and \x[gravity].

Not compatible with the \x[standard-model], and the 2020 unification attempts are called \x[theory-of-everything].

One of the main motivations for it was likely having forces not be instantaneous, but rather mediated by \x[field-physics]{p} to maintain the \x[principle-of-locality], just like \x[electromagnetism] did earlier.

= Why gravity is not a force?
{parent=general-relativity}
{wiki}

* https://physics.stackexchange.com/questions/33875/gravitation-is-not-force
* https://www.quora.com/Why-is-everybody-saying-that-gravity-isnt-a-force

Related to \x[what-does-it-mean-that-photons-are-force-carriers-for-electromagnetism].

= Maxwell's equations in curved spacetime
{c}
{parent=general-relativity}
{wiki}

Combination of \x[electromagnetism] and \x[general-relativity]. Unlike combining \x[quantum-mechanics] and \x[general-relativity], this combination was easier.

TODO any experiments of interest at all?

= Gravity
{parent=general-relativity}
{wiki}

In 2020 physics, best explained by \x[general-relativity].

TODO: does old Newtonian gravity give different force results than general relativity?

= Experiments that measure the gravitational constant
{parent=gravity}

= Cavendish experiment
{c}
{parent=experiments-that-measure-the-gravitational-constant}
{wiki}

= Graviton
{parent=gravity}
{wiki}

= Applications of particle physics
{parent=particle-physics}

There aren't any, it's \x[art][useless]:
* \x[applications-of-quantum-electrodynamics]
* https://www.quora.com/What-if-any-are-the-widespread-applications-of-quantum-field-theory-today
* https://www.quora.com/What-commercial-applications-in-high-energy-particle-physics-and-the-results-coming-out-of-the-LHC-do-we-expect-to-see-in-the-next-5-10-years

= Quantum mechanics
{parent=particle-physics}
{wiki}

= Quantum mechanical
{synonym}

= Quantum
{synonym}

Quantum mechanics is quite a broad term. Perhaps it is best to start approaching it from the division into:
* \x[non-relativistic-quantum-mechanics]: obviously the simpler one, and where you should start
* \x[relativistic-quantum-mechanics]: more advanced, and arguably "less useful"

Key experiments that could not work without quantum mechanics: \x[quantum-mechanics-experiment]{full}.

Mathematics: there are a few models of increasing precision which could all be called "quantum mechanics":
* \x[schrodinger-equation]
* \x[dirac-equation]
* \x[quantum-electrodynamics]

\x[ciro-santilli] feels that the \x[deep-tech][largest technological revolutions since the 1950's have been quantum related], and will continue to be for a while, from deeper understanding of chemistry and materials to \x[quantum-computing], understanding and controlling quantum systems is where the most interesting frontier of technology lies.

= Quantum mechanics experiment
{parent=quantum-mechanics}

Atoms exist and last for a long time, while in \x[maxwell-s-equations][classical electromagnetic theory punctual] orbiting electrons should emit radiation quickly and fall into the nucleus: https://physics.stackexchange.com/questions/20003/why-dont-electrons-crash-into-the-nuclei-they-orbit

In other sections:
* \x[black-body-radiation-experiment]{child}
* \x[einstein-solid]{child} experiments
* \x[electron-diffraction-experiment]{p} such as:
  * \x[davisson-germer-experiment]{child}

= Emission spectrum
{parent=quantum-mechanics-experiment}
{wiki}

= Spectral line
{parent=emission-spectrum}
{wiki}

A single line in the \x[emission-spectrum].

So precise, so \x[discrete], which makes no sense in \x[classical-mechanics]!

Has been the leading motivation of the development of \x[quantum-mechanics], all the way from the:
* \x[schrodinger-equation]: major lines predicted, including \x[zeeman-effect], but not finer line splits like \x[fine-structure]
* \x[dirac-equation]: explains \x[fine-structure] 2p spin split due to electron spin/orbit interactions, but not \x[lamb-shift]
* \x[quantum-electrodynamics]: explains \x[lamb-shift]
* \x[hyperfine-structure]: due to electron/nucleus spin interactions, offers a window into \x[nuclear-spin]

= NIST Atomic Spectra Database
{c}
{parent=spectral-line}

\x[nist] database for \x[spectral-line]: https://physics.nist.gov/PhysRefData/ASD/lines_form.html

Let's do a sanity check.

Searching for "H" for \x[hydrogen] leads to: https://physics.nist.gov/cgi-bin/ASD/lines1.pl?spectra=H&limits_type=0&low_w=&upp_w=&unit=1&submit=Retrieve+Data&de=0&format=0&line_out=0&en_unit=0&output=0&bibrefs=1&page_size=15&show_obs_wl=1&show_calc_wl=1&unc_out=1&order_out=0&max_low_enrg=&show_av=2&max_upp_enrg=&tsb_value=0&min_str=&A_out=0&intens_out=on&max_str=&allowed_out=1&forbid_out=1&min_accur=&min_intens=&conf_out=on&term_out=on&enrg_out=on&J_out=on

From there we can see for example the 1 to 2 lines:
* 1s to 2p: 121.5673644608 nm
* 1s to 2: 121.56701 nm TODO what does that $2$ mean?
* 1s to 2s: 121.5673123130200 TODO what does that mean?

We see that the table is sorted from lower from level first and then by upper level second.

So it is good to see that we are in the same 121nm ballpark as mentioned at \x[hydrogen-spectral-line].

TODO why I can't see 2s to 2p transitions there to get the \x[fine-structure]?

= Hydrogen emission spectrum
{parent=spectral-line}

= Hydrogen spectral line
{synonym}

= Gross hydrogen emission spectrum
{parent=hydrogen-emission-spectrum}

One reasonable and memorable approximation excluding any \x[fine-structure] is:
$$
E_n = -\frac{13.6eV}{n^2}
$$
{title=Hydrogen spectral series mnemonic}
see for example example: \x[hydrogen-1-2-spectral-line].

= Hydrogen 1-2 spectral line
{parent=gross-hydrogen-emission-spectrum}
{title2=121.6 nm}

\x[equation-hydrogen-spectral-series-mnemonic] gives for example from \x[principal-quantum-number] 1 to 2 a difference:
$$
E_n = -13.6eV\left[\frac{1}{2^2} - \frac{1}{1^2}\right] = 10.2eV
$$
which with \x[planck-einstein-relation] gives about 121.6 \x[nm] ($2.47 \times 10^15$ \x[hz]), which is a reasonable match with the value of 121.567... from the \x[nist-atomic-spectra-database].

= Rydberg formula
{c}
{parent=spectral-line}
{wiki}

= Hydrogen spectral series
{parent=rydberg-formula}
{wiki}

Kind of a synonym for \x[hydrogen-spectral-series], not very clear if \x[fine-structure] is considered by this term or not.

= Balmer series
{c}
{parent=rydberg-formula}
{wiki}

A line set for \x[hydrogen-spectral-line].

Formula discovered in 1885, was it the first set to have an empirical formula?

= Fine structure
{parent=spectral-line}
{wiki}

Split in energy levels due to interaction between electron up or down \x[spin-physics] and the electron orbitals.

Numerically explained by the \x[dirac-equation] when \x[dirac-equation-solution-for-the-hydrogen-atom][solving it for the hydrogen atom], and it is one of the main triumphs of the theory.

= Fine structure constant
{parent=fine-structure}
{title2=$\alpha$}
{wiki}

= Hyperfine structure
{parent=fine-structure}
{wiki}

Small splits present in all levels due to interaction between the electron spin and the \x[nuclear-spin] if it is present, i.e. the nucleus has an even number of nucleons.

As the name suggests, this energy split is very small, since the influence of the nucleus spin on the electron spin is relatively small compared to other \x[fine-structure].

For example, for the \x[hydrogen-emission-spectrum]:
* \x[hydrogen-1-2-spectral-line]: 10.2eV

TODO confirm: does it need \x[quantum-electrodynamics] or is the \x[dirac-equation] enough?

Notable application: \x[caesium-standard], which is used to define the \x[second] in the \x[international-system-of-units] since 1967.

= Zeeman effect
{c}
{parent=spectral-line}
{wiki}

Split in the \x[spectral-line] when a \x[magnetic-field] is applied.

Non-anomalous: number of splits matches predictions of the \x[schrodinger-equation] about the number of possible states with a given angular momentum. TODO does it make numerical predictions?

Anomalous: evidence of \x[spin-physics].

http://www.pas.rochester.edu/~blackman/ast104/zeeman-split.html contains the hello world that everyone should know: 2p splits into 3 energy levels, so you see 3 spectral lines from 1s to 2p rather than just one.

p splits into 3, d into 5, f into 7 and so on, i.e. one for each possible \x[azimuthal-quantum-number].

It also mention that polarization effects become visible from this: each line is polarized in a different way. TODO more details as in an experiment to observe this.

Well explained at: \x[video-quantum-mechanics-7a-angular-momentum-i-by-viascience-2013].

\Video[https://www.youtube.com/watch?v=ZmObNFAqkBE]
{title=Experimental physics - IV: 22 - Zeeman effect by Lehrportal Uni Gottingen (2020)}
{description=This one is decent. Uses a \x[cadmium] lamp and an \x[etalon] on an \x[optical-table]. They see a more or less clear 3-split in a circular \x[interference-pattern],

They filter out all but the transition of interest.

* https://youtu.be/ZmObNFAqkBE?t=165 passes the lines through a \x[polarizer], which shows how orbital angular momentum is carried by \x[photon-polarization]
* https://youtu.be/ZmObNFAqkBE?t=370 says they are looking at 1D2 to 1P1 changes.
}

\Video[https://www.youtube.com/watch?v=OzkcB1lkgGU]
{title=Zeeman Effect - Control light with magnetic fields by \x[applied-science-youtube-channel] (2018)}
{description=Does not appear to achieve a crystal clear split unfortunately.}

= Double-slit experiment
{parent=quantum-mechanics-experiment}
{wiki}

Amazingly confirms the wave particle duality of \x[quantum-mechanics].

The effect is even more remarkable when done with individual particles such individual \x[photon]{p} or \x[electron]{p}.

\x[richard-feynman] liked to stress how this experiment can illustrate the core ideas of \x[quantum-mechanics]. Notably, he night have created the \x[infinitely-many-slits-thought-experiment] which illustrates the \x[path-integral-formulation].

= Single particle double slit experiment
{parent=double-slit-experiment}

This experiment seems to be really hard to do, and so there aren't many super clear demonstration videos with full experimental setup description out there unfortunately.

Wikipedia has a good summary at: https://en.wikipedia.org/wiki/Double-slit_experiment#Overview

For single-\x[photon] non-\x[double-slit-experiment]{p} see: \x[single-photon-production-and-detection-experiments]. Those are basically a pre-requisite to this.

\x[photon] experiments:
* https://aapt.scitation.org/doi/full/10.1119/1.4955173 "Video recording true single-photon double-slit interference" by Aspden and Padgetta (2016). Abstract says using \x[spontaneous-parametric-down-conversion] detection of the second photon to know when to turn the camera on

\x[electron] experiments: \x[single-electron-double-slit-experiment].

Non-\x[elementary-particle]:
* 2019-10-08: 25,000 Daltons
* https://interactive.quantumnano.at/letsgo/ awesome interactive demo that allows you to control many parameters on a lab. Written in Flash unfortunately, in 2015... what a lack of future proofing!

\Video[https://www.youtube.com/watch?v=GzbKb59my3U]
{title="Single Photon Interference" by \x[veritasium] (2013)}
{description=Claims to do exactly what we want, but does not describe the setup precisely well enough. Notably, does not justify how he knows that single photons are being produced.}

= Single electron double slit experiment
{parent=single-particle-double-slit-experiment}

\Video[https://www.youtube.com/watch?v=zc-iyjpzzGQ]
{title="Electron Interference" by the https://en.wikipedia.org/wiki/National_Research_Council_(Italy)[Italian National Research Council] (1976)}
{description=Institutional video about the 1974 single electron experiment by Merli, Missiroli, Pozzi from the https://en.wikipedia.org/wiki/University_of_Bologna[University of Bologna].

Uses an electron biprism as in \x[electron-holography] inside a \x[transmission-electron-microscope].

Shows them manually making the biprism by drawing a fine glass wire and coating it with gold.

Then actually show the result live on a television screen, where you see the interference patterns only at higher electron currents, and then on photographic film.

This was elected "the most beautiful experiment" by readers of Physics World in 2002.

Accompanying website: http://l-esperimento-piu-bello-della-fisica.bo.imm.cnr.it/english/index.html[].

Italian title: "Interferenza di elettroni". Goddammit, those Italian cinematographers can make even \x[physics] look exciting!
}

= Are particles bounced by the first wall in the double slit experiment?
{parent=double-slit-experiment}

https://physics.stackexchange.com/questions/443358/in-the-double-slit-experiment-why-is-it-never-shown-that-particles-may-hit-the/573455#573455

It would be amazing to answer this with \x[single-particle-double-slit-experiment] measurements!

= Franck–Hertz experiment
{c}
{parent=quantum-mechanics-experiment}
{wiki=Franck–Hertz_experiment}

= Quantum Hall effect
{parent=quantum-mechanics-experiment}
{wiki}

Quantum version of the \x[hall-effect].

Gotta understand this because the name sounds cool. Maybe also because it is used to define the \x[fucking] \x[ampere-in-the-2019-redefinition-of-the-si-base-units].

At least the experiment description itself is easy to understand. The hard part is the physical theory behind.

TODO \x[videos-of-all-key-physics-experiments][experiment video].

= Fractional quantum Hall effect
{parent=quantum-hall-effect}
{wiki}

= Fractional quantum Hall effect 5/2
{parent=fractional-quantum-hall-effect}

= Spin Hall effect
{parent=quantum-hall-effect}
{wiki}

= History of quantum mechanics
{parent=quantum-mechanics}
{wiki}

The discovery of the \x[photon] was one of the major initiators of quantum mechanics.

Light was very well known to be a wave through \x[diffraction] experiments. So how could it also be a particle???

This was a key development for people to eventually notice that the \x[electron] is also a wave.

This process "started" in 1900 with \x[planck-s-law] which was based on discrete energy packets being exchanged as exposed at \x[on-the-theory-of-the-energy-distribution-law-of-the-normal-spectrum-by-max-planck-1900].

This ideas was reinforced by \x[einstein]'s explanation of the \x[photoelectric-effect] in 1905 in terms of \x[photon].

In the next big development was the \x[bohr-model] in 1913, which supposed non-\x[classical-physics] new quantization rules for the \x[electron] which explained the \x[hydrogen-emission-spectrum]. The quantization rule used made use of the \x[planck-constant], and so served an initial link between the emerging quantized nature of \x[light], and that of the \x[electron].

The final phase started in 1923, when \x[louis-de-broglie] proposed that in analogy to photons, \x[electron]{p} might also be waves, a statement made more precise through the \x[de-broglie-relations].

This event opened the floodgates, and soon \x[matrix-mechanics] was published in \x[quantum-mechanical-re-interpretation-of-kinematic-and-mechanical-relations-by-heisenberg-1925], as the first coherent formulation of \x[quantum-mechanics].

It was followed by the \x[schrodinger-equation] in 1926, which proposed an equivalent \x[partial-differential-equation] formulation to \x[matrix-mechanics], a mathematical formulation that was more familiar to \x[physicist]{p} than the matrix ideas of Heisenberg.

Bibliography:
* https://physics.stackexchange.com/questions/18632/good-book-on-the-history-of-quantum-mechanics on \x[physics-stack-exchange]
* https://www.youtube.com/watch?v=5hVmeOCJjOU A Brief History of Quantum Mechanics by \x[sean-carroll] (2020) Given at the \x[royal-institution].

\x[inward-bound-by-abraham-pais-1988] summarizes his views of it:
\Q[Planck's on the discovery of the quantum theory (1900); Einstein's on the light-quantum (1905); \x[bohr-model][Bohr's on the hydrogen atom] (1913); Bose's on what came to be called quantum statistics (1924); Heisenberg's on what came to be known as \x[matrix-mechanics] (1925); and Schroedinger's on wave mechanics (1926).]

= Old quantum theory
{parent=history-of-quantum-mechanics}
{wiki}

= History of quantum mechanics bibliography
{parent=quantum-mechanics}
{wiki}

= The Old Quantum Theory by Dirk ter Haar (1967)
{c}
{parent=history-of-quantum-mechanics-bibliography}

= Quantum mechanics bibliography
{parent=quantum-mechanics}

= The Principles of Quantum Mechanics by Paul Dirac (1930)
{c}
{parent=quantum-mechanics-bibliography}
{wiki}

= The Principles of Quantum Mechanics by Paul Dirac revised fourth edition (1967)
{c}
{parent=the-principles-of-quantum-mechanics-by-paul-dirac-1930}

= MIT 8.06 Quantum Physics III, Spring 2018 by Barton Zwiebach
{c}
{parent=quantum-mechanics-bibliography}

https://www.youtube.com/playlist?list=PLUl4u3cNGP60Zcz8LnCDFI8RPqRhJbb4L

100 10-20 minute videos properly split by topic, good resource!

Instructor: \x[barton-zwiebach]{parent}.

Free material from university courses:
* https://physics.weber.edu/schroeder/quantum/QuantumBook.pdf  (https://web.archive.org/web/20191230193450/https://physics.weber.edu/schroeder/quantum/QuantumBook.pdf[archive]) "Notes on Quantum Mechanics" pusbliehd by Daniel V. Schroeder (2019) The author is from from Weber State University.

= Applications of Quantum Mechanics by David Tong (2017)
{c}
{parent=quantum-mechanics-bibliography}

* http://www.damtp.cam.ac.uk/user/tong/aqm/aqm.pdf
* https://web.archive.org/web/20200215103215/http://www.damtp.cam.ac.uk/user/tong/aqm/aqm.pdf

Author: \x[david-tong]{parent}.

Summary:
* Chapter 2 "Band Structure" covers \x[electronic-band-theory]

= Quantum Mechanics for Engineers by Leon van Dommelen (2011)
{parent=quantum-mechanics-bibliography}

* http://www.eng.fsu.edu/~dommelen/quantum/style_a/index.html
* https://web.archive.org/web/20200220003741/http://www.eng.fsu.edu/~dommelen/quantum/style_a/index.html

Looks very impressive! Last update marked 2011 as of 2020.

Goes up to "A.15 \x[quantum-field-theory] in a Nanoshell", Ciro have to review it to see if there's anything worthwhile in that section.

Personal page says he retired as of 2020: http://www.eng.fsu.edu/~dommelen/ But hopefully he has more time for these notes!

And he appears to have his own lightweight markup language that \x[transpiles] to \x[latex] called l2h: http://www.eng.fsu.edu/~dommelen/l2h/

= Quantum physics by Jim Branson (2003)
{parent=quantum-mechanics-bibliography}

https://quantummechanics.ucsd.edu/ph130a/130_notes/130_notes.html

For the UCSD Physics 130 course.

Last updated: 2013.

Very good! Goes up to the \x[dirac-equation].

= Mathematical formulation of quantum mechanics
{parent=quantum-mechanics}
{wiki}

These are the key mathematical ideas to understand!!

The state of a quantum system is a vector of unit length in a \x[hilbert-space]. TODO why Hilbert Space.

"Making a measurement" for an \x[observable] means applying a \x[self-adjoint-operator] to the state, and after a measurement is done:
* the state collapses to an \x[eigenvector] of the self adjoint operator
* the result of the measurement is the \x[eigenvalue] of the self adjoint operator
* the probability of a given result happening when the spectrum is \x[discrete] is proportional to the modulus of the projection on that eigenvector.

  For continuous spectra such as that of the \x[position-operator] in most systems, e.g. \x[schrodinger-equation-for-a-free-one-dimensional-particle], the projection on each individual eigenvalue is zero, i.e. the probability of one absolutely exact position is zero. To get a non-zero result, measurement has to be done on a continuous range of eigenvectors (e.g. for position: "is the particle present between x=0 and x=1?"), and you have to integrate the probability over the projection on a continuous range of eigenvalues.

  In such continuous cases, the probability collapses to an uniform distribution on the range after measurement.

  The continuous position operator case is well illustrated at: \x[video-visualization-of-quantum-physics-quantum-mechanics-by-udiprod-2017]
Those last two rules are also known as the \x[born-rule].

Self adjoint operators are chosen because they have the following key properties:
* their eigenvalues form an orthonormal basis
* they are diagonalizable

See also: https://en.wikipedia.org/wiki/Measurement_in_quantum_mechanics

Perhaps the easiest case to understand this for is that of \x[spin-physics], which has only a finite number of eigenvalues. Although it is a shame that fully understanding that requires a \x[special-relativity][relativistic] quantum theory such as the \x[dirac-equation].

The next steps are to look at simple 1D bound states such as \x[particle-in-a-box] and \x[quantum-harmonic-oscillator].

This naturally generalizes to \x[schrodinger-equation-solution-for-the-hydrogen-atom].

The solution to the \x[schrodinger-equation-for-a-free-one-dimensional-particle] is a bit harder since the possible energies do not make up a \x[countable-set].

This formulation was apparently called more precisely \x[dirac-von-neumann-axioms], but it because so dominant we just call it "the" formulation.

\x[quantum-field-theory-lecture-notes-by-david-tong-2007] mentions that:
\Q[if you were to write the wavefunction in quantum field theory, it would be a functional, that is a function of every possible configuration of the field $\phi$.]

= Born rule
{parent=mathematical-formulation-of-quantum-mechanics}
{wiki}

= Bra-ket notation
{parent=mathematical-formulation-of-quantum-mechanics}
{wiki=Bra–ket_notation}

Notation used in \x[quantum-mechanics].

Ket is just a \x[vector-mathematics]. Though generally in the context of \x[quantum-mechanics], this is an infinite dimensional vector in a \x[hilbert-space] like \x[l2].

Bra is just the \x[projection-mathematics] \x[linear-operator], i.e. a linear function which can act on a given vector and returns a single \x[complex-number]. Also known as... \x[dot-product].

For example:
$$
(\bra{x}) \ket{y}
$$
is basically a fancy way of saying:
$$
x \cdot y
$$
that is: we are taking the projection of $y$ along the $x$ direction. Note that in the ordinary dot product notation however, we don't differentiate as clearly what is a vector and what is an operator, while the bra-ket notation makes it clear.

The projection operator is completely specified by the vector that we are projecting it on. This is why the bracket notation makes sense.

It also has the merit of clearly differentiating vectors from operators. E.g. it is not very clear in $x \cdot y$ that $x$ is an operator and $y$ is a vector, except due to the relative position to the dot. This is especially bad when we start manipulating operators by themselves without vectors.

This notation is widely used in \x[quantum-mechanics] because calculating the \x[probability] of getting a certain outcome for an experiment is calculated by taking the projection of a state on one an \x[eigenvalue] basis vector as explained at: \x[mathematical-formulation-of-quantum-mechanics]{full}.

Making the projection operator "look like a thing" (the bra) is nice because we can add and multiply them much like we can for vectors (they also form a \x[vector-space]), e.g.:
$$
\bra{x} + \bra{y}
$$
just means taking the projection along the $x + y$ direction.

\x[ciro-santilli] thinks that this notation is a bit over-engineered. Notably the bra's are just vectors, which we should just write as usual with $\va{v}$... the bra thing makes it look scarier than it needs to be. And then we should just find a different notation for the projection part.

Maybe \x[dirac] chose it because of the appeal of the women's piece of clothing: \x[bra], in an irresistible call from \x[british-humour].

But in any case, alas, we are now stuck with it.

= Dirac-von Neumann axioms
{c}
{parent=mathematical-formulation-of-quantum-mechanics}
{wiki=Dirac–von_Neumann_axioms}

This is basically what became the dominant formulation as of 2020 (and much earlier), and so we just call it the "\x[mathematical-formulation-of-quantum-mechanics]".

= Linearity of quantum mechanics
{parent=mathematical-formulation-of-quantum-mechanics}

* https://physics.stackexchange.com/questions/1201/linearity-of-quantum-mechanics-and-nonlinearity-of-macroscopic-physics
* https://physics.stackexchange.com/questions/134503/what-is-the-physical-reason-behind-linearity-of-schrodingers-equation
* https://physics.stackexchange.com/questions/33344/is-the-universe-linear-if-so-why

= Observable
{parent=mathematical-formulation-of-quantum-mechanics}
{wiki}

= Phase-space formulation
{parent=mathematical-formulation-of-quantum-mechanics}
{wiki}

An "alternative" formulation of \x[quantum-mechanics] that does not involve operators.

= Non-relativistic quantum mechanics
{parent=quantum-mechanics}

The first \x[quantum-mechanics] theories developed.

Their most popular formulation has been the \x[schrodinger-equation].

= Schrödinger equation
{c}
{parent=non-relativistic-quantum-mechanics}
{wiki}

The \x[partial-differential-equation] of \x[special-relativity][non-relativistic] \x[quantum-mechanics].

Experiments explained:
* via the \x[schrodinger-equation-solution-for-the-hydrogen-atom] it predicts:
  * \x[spectral-line] basic lines, plus \x[zeeman-effect]
* \x[schrodinger-equation-solution-for-the-helium-atom]: perturbative solutions give good approximations to the energy levels
* \x[double-slit-experiment]: I think we have a closed solution for the max and min probabilities on the measurement wall, and they match experiments

Experiments not explained: those that the \x[dirac-equation] explains like:
* \x[fine-structure]
* \x[spontaneous-emission] coefficients

To get some intuition on the equation on the consequences of the equation, have a look at:
* \x[schrodinger-equation-simulations]
* \x[solutions-of-the-schrodinger-equation]

The easiest to understand case of the equation which you must have in mind initially that of the \x[schrodinger-equation-for-a-free-one-dimensional-particle].

Then, with that in mind, the general form of the \x[schrodinger-equation] is:
$$i\hbar\pdv{\psi(\vv{x}, t)}{t} = \hat{H}[\psi(\vv{x}, t)]$$
{title=Schrodinger equation}
where:
* $\hbar$ is the \x[reduced-planck-constant]
* $\psi$ is the \x[wave-function]
* $t$ is the time
* $\hat{H}$ is a \x[linear-operator] called the \x[hamiltonian]. It takes as input a function $\psi$, and returns another function. This plays a role analogous to the Hamiltonian in \x[classical-mechanics]: determining it determines what the physical system looks like, and how the system evolves in time, because we can just plug it into the equation and solve it. It basically encodes the total energy and forces of the system.

The $\vv{x}$ argument of $\psi$ could be anything, e.g.:
* we could have preferred \x[polar-coordinate]{p} instead of linear ones if the potential were symmetric around a point
* we could have more than one particle, e.g. \x[solutions-of-the-schrodinger-equation-for-two-electrons], which would have e.g. $x_1$ and $x_2$ for different particles. No matter how many particles there are, we have just a single $\psi$, we just add more arguments to it.
* we could have even more generalized coordinates. This is much in the spirit of \x[hamiltonian-mechanics] or \x[generalized-coordinate]{p}
Note however that there is always a single magical $t$ time variable. This is needed in particular because there is a time \x[partial-derivative] in the equation, so there must be a corresponding time variable in the function. This makes the equation explicitly \x[non-relativistic].

The general \x[schrodinger-equation] can be broken up into a trivial time-dependent and a \x[time-independent-schrodinger-equation] by separation of variables. So in practice, all we need to solve is the slightly simpler \x[time-independent-schrodinger-equation], and the full equation comes out as a result.

Existence and uniqueness: https://mathoverflow.net/questions/212913/existence-and-uniqueness-for-two-dimensional-time-dependent-schr%C3%B6dinger-equation

= Time-independent Schrodinger equation
{parent=schrodinger-equation}
{wiki=Schrödinger_equation#Time-independent_equation}

As shown at https://quantummechanics.ucsd.edu/ph130a/130_notes/node124.html[] from \x[quantum-physics-by-jim-branson-2003], using \x[separation-of-variables] we can break up the general \x[schrodinger-equation] into:
* a time-only part that does not depend on space and does not depend on the potential
* a space-only part that does not depend on time:

  $$\hat{H}[\psi(\vv{x})] = E \psi{\vv{x}}$$
  {title=Time-independent Schrodinger equation}

  Since this is the only non-trivial part, unlike the time part which is trivial, this spacial part is just called "the time-independent Schrodinger equation".

  Note that the $\psi$ here is not the same as the $\psi$ in the \x[equation-schrodinger-equation][time-dependent Schrodinger equation] of course, as that psi is the result of the multiplication of the time and space parts. This is a bit of imprecise terminology, but hey, physics.

The key initial example to have in mind is the \x[time-independent-schrodinger-equation-for-a-free-one-dimensional-particle].

It is interesting to note that the time-independent Schrodinger equation can also be seen exactly as an \x[eigenvalue] equation, since the value of the energy `E` can be any fixed value that can satisfy the \x[boundary-condition]{p} conditions imposed.

Then, just like in \x[solving-partial-differential-equations-with-the-fourier-series] of the \x[heat-equation], the boundary conditions may make it so that only certain \x[discrete] values of `E` are possible solutions.

Then, the time part o the equation can be solved explicitly in the general case, as it does not depend on the potential $V(x)$, and it is just an exponential.

Therefore, all we need to do to solve the general Schrodinger equation is to solve the time-independent version, and then decompose the initial condition in terms of it like as done in \x[solving-partial-differential-equations-with-the-fourier-series]{full}.

Furthermore:
* we immediately see from the equation that the time-independent solutions are states of deterministic energy because the energy is an \x[eigenvalue] of the Hamiltonian operator
* the probability density of such a state does not change with time because the exponential time part cancels out on the conjugate

= Derivation of the Schrodinger equation
{parent=schrodinger-equation}

Where derivation == "intuitive routes", since a "law of physics" cannot be derived, only observed right or wrong.

TODO also comment on \x[why-are-complex-numbers-used-in-the-schrodinger-equation].

Some approaches:
* https://en.wikipedia.org/w/index.php?title=Schr%C3%B6dinger_equation&oldid=964460597#Derivation[]: holy crap, this just goes all in into a \x[lie-group] approach, nice
* \x[richard-feynman]'s derivation of the Schrodinger equation:
  * https://physics.stackexchange.com/questions/263990/feynmans-derivation-of-the-schrödinger-equation
  * https://www.youtube.com/watch?v=xQ1d0M19LsM "Class Y. Feynman's Derivation of the Schrödinger Equation" by doctorphys (2020)
* https://www.youtube.com/watch?v=zC_gYfAqjZY&list=PL54DF0652B30D99A4&index=53 "I5. Derivation of the Schrödinger Equation" by doctorphys

= Why are complex numbers used in the Schrodinger equation?
{parent=derivation-of-the-schrodinger-equation}

\x[ciro-santilli][Ciro]'s 10 cents: https://physics.stackexchange.com/questions/32422/qm-without-complex-numbers/557600#557600

Why is there a \x[complex-number] in the equation? Intuitively and mathematically:
* https://physics.stackexchange.com/questions/8062/about-the-complex-nature-of-the-wave-function
* https://physics.stackexchange.com/questions/32422/qm-without-complex-numbers
* https://physics.stackexchange.com/questions/292947/is-it-possible-to-formulate-the-schr%C3%B6dinger-equation-in-a-manner-that-excludes-i

Some ideas:
* \x[explicit-scalar-form-of-the-maxwell-s-equations]

= Solutions of the Schrodinger equation
{parent=schrodinger-equation}

https://en.wikipedia.org/wiki/List_of_quantum-mechanical_systems_with_analytical_solutions

As always, the best way to get some intuition about an equation is to solve it for some simple cases, so let's give that a try with different fixed potentials.

= Schrodinger equation simulations
{c}
{parent=solutions-of-the-schrodinger-equation}

* https://www.youtube.com/watch?v=1Z9wo2CzJO8 "Schrodinger equation solved numerically in 3D" by Tetsuya Matsuno. 3D hydrogen atom, code may be hidden in some paper, maybe
* https://www.youtube.com/playlist?list=PLdCdV2GBGyXM0j66zrpDy2aMXr6cgrBJA "Computational Quantum Mechanics" by Let's Code Physics. Uses a 1D trinket.io.
* https://www.youtube.com/watch?v=BBt8EugN03Q Simulating Quantum Systems \[Split Operator Method\] by LeiosOS (2018)
* https://www.youtube.com/watch?v=86x0_-JGlGQ Simulating the Quantum World on a \x[classical-computer][Classical Computer] by Garnet Chan (2016) discusses how modeling only local entanglement can make certain simulations feasible

\Video[http://youtube.com/watch?v=g4wuSgwLT9I]
{title="Simulation of the time-dependent Schrodinger equation (\x[javascript] Animation)" by Coding Physics (2019)}
{description=Source code: https://github.com/CodingPhysics/Schroedinger[]. One dimensional potentials, non-interacting particles. The code is clean, graphics based on https://github.com/processing/p5.js[], and all maths from scratch. Source organization and comments are typical of numerical code, the anonymous author is was likely a Fortran user in the past.

A potential change patch in `sketch.js`:
``
-   potential:     x => 2E+4*Math.pow((4*x - 1)*(4*x - 3),2),
+ potential:     x => 4*Math.pow(x - 0.5, 2),
``
}

\Video[http://youtube.com/watch?v=ee4LqXRlQmE]
{title="Quantum Mechanics 5b - Schrödinger Equation II" by \x[viascience] (2013)}
{description=2D non-interacting particle in a box, description says using \x[scilab][Scilab] and points to source. Has a double slit simulation.}

\Video[https://www.youtube.com/watch?v=p7bzE1E5PMY]
{title="Visualization of Quantum Physics (Quantum Mechanics)" by udiprod (2017)}
{description=Closed source, but a fantastic visualization and explanation of a 1D free wave packet, including how measurement snaps position to the measured range, \x[position-and-momentum-space] and the \x[uncertainty-principle].}

= Why it is hard to simulate quantum systems?
{parent=schrodinger-equation-simulations}

This is basically how \x[quantum-computing] was first theorized by \x[richard-feynman]: \x[quantum-computers-as-experiments-that-are-hard-to-predict-outcomes].

TODO answer that: https://quantumcomputing.stackexchange.com/questions/5005/why-it-is-hard-to-simulate-a-quantum-device-by-a-classical-devices[]. A good answer would be with a more physical example of \x[quantum-entanglement], e.g. on a \x[photonic-quantum-computer].

= Schrodinger equation for a one dimensional particle
{c}
{parent=solutions-of-the-schrodinger-equation}

We select for the general \x[equation-schrodinger-equation]:
* $\vv{x} = x$, the linear \x[cartesian-coordinate] in the x direction
* $\hat{H} = -\frac{\hbar^2}{2m}\pdv{^2}{x^2} + V(x, t)$, which analogous to the sum of \x[kinetic-energy][kinetic] and \x[potential-energy] in \x[classical-mechanics]
giving the full explicit \x[partial-differential-equation]:
$$i\hbar\pdv{\psi(x, t)}{t} = \left[ -\frac{\hbar^2}{2m}\pdv{^2}{x^2} + V(x, t) \right]\psi(x, t)$$
{title=\x[schrodinger-equation] for a one dimensional particle}
The corresponding \x[time-independent-schrodinger-equation] for this equation is:
$$
\left[-\frac{\hbar}{2m} \pdv{^2}{x} + V(x)\right]\psi = E \psi(x)
$$
{title=\x[time-independent-schrodinger-equation] for a one dimensional particle}

= Schrodinger equation for a free one dimensional particle
{c}
{parent=solutions-of-the-schrodinger-equation}
{wiki=Free_particle#Quantum_free_particle}

\x[schrodinger-equation-for-a-one-dimensional-particle] with $V = 0$.

= Time independent Schrodinger equation for a free one dimensional particle
{parent=schrodinger-equation-for-a-free-one-dimensional-particle}

= Particle in a box
{parent=solutions-of-the-schrodinger-equation}
{wiki}

= Quantum harmonic oscillator
{parent=solutions-of-the-schrodinger-equation}
{wiki}

This equation is a subcase of \x[equation-schrodinger-equation-for-a-one-dimensional-particle] with $V(x) = x^2$.

We get the \x[time-independent-schrodinger-equation] by substituting this $V$ into \x[equation-time-independent-schrodinger-equation-for-a-one-dimensional-particle]:
$$
\left[- \frac{\hbar}{2m} \pdv{^2}{x} + x^2 \right]\psi = E \psi(x)
$$

Now, there are two ways to go about this.

The first is the stupid "here's a guess" + "hey this family of solutions forms a \x[complete-basis]"! This is exactly how we solved the problem at \x[solving-partial-differential-equations-with-the-fourier-series]{full}, except that now the complete basis are the \x[hermite-functions].

The second is the much celebrated \x[ladder-operator] method.

= Hermite polynomials
{c}
{parent=quantum-harmonic-oscillator}
{wiki}

Show up in the solution of the \x[quantum-harmonic-oscillator] after \x[separation-of-variables] leading into the \x[time-independent-schrodinger-equation], much like \x[solving-partial-differential-equations-with-the-fourier-series].

= Hermite functions
{c}
{parent=hermite-polynomials}
{wiki=Hermite_polynomials#Hermite_functions}

Not the same as \x[hermite-polynomials].

= Ladder operator
{parent=quantum-harmonic-oscillator}
{wiki}

http://www.physics.udel.edu/~jim/PHYS424_17F/Class%20Notes/Class_5.pdf by James MacDonald shows it well.

The operators are a natural guess on the lines of "if p and x were integers".

And then we can prove the ladder properties easily.

The \x[commutator] appear in the middle of this analysis.

= Quantum tunnelling
{parent=solutions-of-the-schrodinger-equation}
{wiki}

Examples:
* \x[flash-memory] uses quantum tunneling as the basis for setting and resetting bits
* \x[alpha-decay] is understood as a quantum tunneling effect in the nucleus

= Schrodinger equation solution for the hydrogen atom
{c}
{parent=solutions-of-the-schrodinger-equation}

Is the only atom that has a closed form solution, which allows for very good predictions, and gives awesome intuition about the orbitals in general.

It is arguably the most important solution of the Schrodinger equation.

In particular, it predicts:
* the major \x[spectral-line] of the \x[hydrogen] atom by taking the difference between energy levels

The explicit solution can be written in terms of \x[spherical-harmonic]{p}.

\Video[https://www.youtube.com/watch?v=W2Xb2GFK2yc]
{title=A Better Way To Picture Atoms by \x[minutephysics] (2021)}
{description=Renderings based on the exact \x[schrodinger-equation-solution-for-the-hydrogen-atom] that depict \x[wave-function] concentration by concentration of small balls, and \x[angular-momentum] by how fast the balls rotate at each point. Mentions that the approach is inspired by \x[de-broglie-bohm-theory].}

= Atomic orbital
{parent=schrodinger-equation-solution-for-the-hydrogen-atom}
{wiki}

In the case of the \x[schrodinger-equation-solution-for-the-hydrogen-atom], each orbital is one \x[eigenvector] of the solution.

Remember from \x[time-independent-schrodinger-equation] that the final solution is just the weighted sum of the eigenvector decomposition of the initial state, analogously to \x[solving-partial-differential-equations-with-the-fourier-series].

This is the table that you should have in mind to visualize them: https://en.wikipedia.org/w/index.php?title=Atomic_orbital&oldid=1022865014#Orbitals_table

= Principal quantum number
{parent=atomic-orbital}
{title2=n}
{wiki}

Determines energy. This comes out directly from the resolution of the \x[schrodinger-equation-solution-for-the-hydrogen-atom] where we have to set some arbitrary values of energy by \x[separation-of-variables] just like we have to set some arbitrary numbers when \x[solving-partial-differential-equations-with-the-fourier-series]. We then just happen to see that only certain integer values are possible to satisfy the equations.

= Azimuthal quantum number
{parent=atomic-orbital}
{title2=l}
{wiki}

Fixed \x[total-angular-momentum-operator][total angular momentum].

= Magnetic quantum number
{parent=atomic-orbital}
{title2=m_l}
{wiki}

Fixed \x[angular-momentum-operator][angular momentum in a given direction]. Note that this direction is arbitrary, since for a fixed \x[azimuthal-quantum-number] (and therefore fixed total angular momentum), we can only know one direction for sure. $z$ is normally used by convention.

= Solutions for the Schrodinger equation with multiple particles
{parent=solutions-of-the-schrodinger-equation}

Quantum Mechanics for Engineers by Leon van Dommelen (2011)

Bibliography:
* \x[quantum-mechanics-for-engineers-by-leon-van-dommelen-2011] "5. Multiple-Particle Systems"

= Solutions of the Schrodinger equation for two electrons
{parent=solutions-for-the-schrodinger-equation-with-multiple-particles}

TODO. Can't find it easily. Anyone?

This is closely linked to the \x[pauli-exclusion-principle].

What does a particle even mean, right? Especially in \x[quantum-field-theory], where two electrons are just vibrations of a single electron field.

Another issue is that if we consider \x[magnetism], things only make sense if we add \x[special-relativity], since \x[maxwell-s-equations-require-special-relativity], so a non approximate solution for this will necessarily require full \x[quantum-electrodynamics].

As mentioned at \x[david-tong-s-2009-quantum-field-theory-lectures-at-the-perimeter-institute/lecture-1] https://youtube.com/watch?video=H3AFzbrqH68&t=555[], \x[special-relativity][relativistic] quantum mechanical theories like the \x[dirac-equation] and \x[klein-gordon-equation] make no sense for a "single particle": they must imply that particles can pop in out of existence.

Bibliography:
* https://www.youtube.com/watch?v=Og13-bSF9kA&list=PLDfPUNusx1Eo60qx3Od2KLUL4b7VDPo9F "Advanced quantum theory" by \x[tobias-j-osborne] says that the course will essentially cover multi-particle quantum mechanics!
* https://physics.stackexchange.com/questions/54854/equivalence-between-qft-and-many-particle-qm "Equivalence between QFT and many-particle QM"
* Course: Quantum Many-Body Physics in Condensed Matter by Luis Gregorio Dias (2020) from \x[course-quantum-many-body-physics-in-condensed-matter-by-luis-gregorio-dias-2020] give a good introduction to non-interacting particles

= Schrodinger equation solution for the helium atom
{c}
{parent=solutions-for-the-schrodinger-equation-with-multiple-particles}

No closed form solution, but good approximation that can be calculated by hand with the \x[hartree-fock-method], see \x[hartree-fock-method-for-the-helium-atom].

Bibliography:
* https://www.quora.com/Why-do-electrons-not-repel-each-other-on-their-orbits
* https://physics.stackexchange.com/questions/224108/what-does-an-orbital-mean-in-atoms-with-multiple-electrons-what-do-the-orbitals

\Video[https://www.youtube.com/watch?v=tcfNNGGjS2o]
{title="Quantum Chemistry 9.2 - Helium Atom Energy Approximations" by TMP Chem (2016)}
{description=Video gives the actual numerical value of various methods, second order \x[perturbation-theory] being very close. But it the says that in the following videos will only do \x[hartree-fock-method][Hartree-Fock method].}

= Hartree-Fock method
{c}
{parent=solutions-for-the-schrodinger-equation-with-multiple-particles}
{wiki=Hartree–Fock_method}

= Hartree-Fock method for the helium atom
{parent=hartree-fock-method}
{wiki=Helium_atom#Hartree–Fock_method}

= Why do multiple electrons occupy the same orbital if electrons repel each other?
{parent=hartree-fock-method}

That is, two electrons per \x[atomic-orbital], each with a different \x[spin-physics].

As shown at \x[schrodinger-equation-solution-for-the-helium-atom], they do repel each other, and that affects their measurable energy.

However, this energy is still lower than going up to the next orbital. TODO numbers.

Bibliography:
* https://physics.stackexchange.com/questions/505263/do-electrons-in-the-same-orbital-but-different-spin-feel-each-others-coulomb-re

This changes however at higher orbitals, notably as approximately described by the \x[aufbau-principle].

= Aufbau principle
{parent=hartree-fock-method}
{wiki}

Boring rule that says that less energetic atomic orbitals are filled first.

Much more interesting is actually determining that order, which the \x[madelung-energy-ordering-rule] is a reasonable approximation to.

= Madelung energy ordering rule
{c}
{parent=aufbau-principle}

= n + l energy ordering rule
{synonym}

Looking at the energy level of the \x[schrodinger-equation-solution-for-the-hydrogen-atom], you would guess that for multi-electron atoms that only the \x[principal-quantum-number] would matter, \x[azimuthal-quantum-number] getting filled randomly.

However, orbitals energies for large atoms don't increase in energy like those of hydrogen due to \x[electron]-electron interactions.

In particular, the following would not be naively expected:
* 2s fills up before 2p. From the hydrogen solution, you might guess that they would randomly go into either one as they'd have the same energy
* $4s^1$ in \x[potassium] fills up before 3d, even though it has a higher \x[principal-quantum-number]!

This rule is only an approximation, there exist \x[exceptions-to-the-madelung-energy-ordering-rule].

Bibliography:
* https://chemistry.stackexchange.com/questions/8357/why-does-the-3rd-electron-shell-start-filling-up-with-scandium
* https://www.quora.com/If-4s-orbitals-are-higher-in-energy-than-3d-orbitals-then-why-do-electrons-fill-up-in-4s-before-filling-up-in-3d

= Exception to the Madelung energy ordering rule
{parent=madelung-energy-ordering-rule}

= Exceptions to the Madelung energy ordering rule
{synonym}

= Schrodinger equation solution for molecule
{c}
{parent=solutions-for-the-schrodinger-equation-with-multiple-particles}

= Schrodinger equation solution for the hydrogen molecule
{c}
{parent=schrodinger-equation-solution-for-molecule}

Can we make any ab initio predictions about it all?

A 2016 paper: https://aip.scitation.org/doi/abs/10.1063/1.4948309

\Video[https://www.youtube.com/watch?v=BBoE6NRRZ8k]
{title="Quantum Chemistry 10.1 - Hydrogen Molecule Hamiltonian" by TMP Chem (2016)}
{description=Continued in the following videos, uses the \x[born-oppenheimer-approximation][Born–Oppenheimer approximation]. Does not give predictions vs experiment?}

= Chemical bond
{parent=schrodinger-equation-solution-for-molecule}
{wiki}

= Molecule
{parent=chemical-bond}
{wiki}

= Covalent bond
{parent=chemical-bond}
{wiki}

= Ionic bond
{parent=chemical-bond}
{wiki}

= Octet rule
{parent=chemical-bond}
{wiki}

= Two-state quantum system
{parent=solutions-of-the-schrodinger-equation}
{wiki}

\x[discrete]{c} quantum system model that can model both \x[spin-physics] in the \x[stern-gerlach-experiment] or \x[photon-polarization] in \x[polarizer].

Also known in \x[quantum-computing] as a qubit :-)

= Bloch sphere
{c}
{parent=two-state-quantum-system}
{wiki}

https://physics.stackexchange.com/questions/204090/understanding-the-bloch-sphere/598254#598254

A more concrete and easier to understand version of it is the more \x[photon]-specific \x[poincare-sphere], have a look at that one first.

= Pauli matrix
{c}
{parent=two-state-quantum-system}
{wiki=Pauli_matrices}

\x[2d-representation-of-su-2].

= Born-Oppenheimer approximation
{c}
{parent=schrodinger-equation}
{wiki=Born–Oppenheimer_approximation}

= Uncertainty principle
{parent=schrodinger-equation}
{wiki}

= Heisenberg uncertainty principle
{c}
{synonym}

The wave equation contains the entire state of a particle.

From \x[mathematical-formulation-of-quantum-mechanics] remember that the wave equation is a vector in \x[hilbert-space].

And a single vector can be represented in many different ways in different basis, and two of those ways happen to be the position and the momentum representations.

More importantly, position and momentum are first and foremost operators associated with observables: the \x[position-operator] and the \x[momentum-operator]. And both of their eigenvalue sets form a basis of the \x[hilbert-space] according to the \x[spectral-theorem].

When you represent a wave equation as a function, you have to say what the variable of the function means. And depending on weather you say "it means position" or "it means momentum", the position and momentum operators will be written differently.

This is well shown at: \x[video-visualization-of-quantum-physics-quantum-mechanics-by-udiprod-2017].

Furthermore, the position and momentum representations are equivalent: one is the \x[fourier-transform] of the other: \x[position-and-momentum-space]. Remember that notably we can always take the Fourier transform of a function in \x[l2] due to \x[carleson-s-theorem].

Then the uncertainty principle follows immediately from a general property of the Fourier transform: https://en.wikipedia.org/w/index.php?title=Fourier_transform&oldid=961707157#Uncertainty_principle

In precise terms, the \x[uncertainty-principle] talks about the \x[standard-deviation] of two measures.

We can visualize the uncertainty principle more intuitively by thinking of a \x[wave-function] that is a \x[real-number][real] \x[flat-top-bump-function] with a flat top in \x[1d]. We can then change the width of the support, but when we do that, the top goes higher to keep probability equal to 1. The momentum is 0 everywhere, except in the edges of the support. Then:
* to localize the wave in space at position 0 to reduce the space uncertainty, we have to reduce the support. However, doing so makes the momentum variation on the edges more and more important, as the slope will go up and down faster (higher top, and less x space for descent), leading to a larger variance (note that average momentum is still 0, due to to symmetry of the bump function)
* to localize the momentum as much as possible at 0, we can make the support wider and wider. This makes the bumps at the edges smaller and smaller. However, this also obviously delocalises the wave function more and more, increasing the variance of x

Bibliography:
* https://www.youtube.com/watch?v=bIIjIZBKgtI&list=PL54DF0652B30D99A4&index=59 "K2. Heisenberg Uncertainty Relation" by doctorphys (2011)
* https://physics.stackexchange.com/questions/132111/uncertainty-principle-intuition Uncertainty Principle Intuition on \x[physics-stack-exchange]

= Position and momentum space
{parent=uncertainty-principle}
{wiki}

One of the main reasons why physicists are obsessed by this topic is that position and momentum are mapped to the \x[phase-space-coordinate]{p} of \x[hamiltonian-mechanics], which appear in the \x[matrix-mechanics] formulation of \x[quantum-mechanics], which offers insight into the theory, particularly when generalizing to \x[relativistic-quantum-mechanics].

One way to think is: what is the definition of space space? It is a way to write the wave function $\psi_x(x)$ such that:
* the position operator is the multiplication by $x$
* the momentum operator is the derivative by $x$
And then, what is the definition of momentum space? It is of course a way to write the wave function $\psi_p(p)$ such that:
* the momentum operator is the multiplication by $p$

https://physics.stackexchange.com/questions/39442/intuitive-explanation-of-why-momentum-is-the-fourier-transform-variable-of-posit/39508#39508 gives the best idea intuitive idea: the \x[fourier-transform] writes a function as a (continuous) sum of plane waves, and each plane wave has a fixed momentum.

Bibliography:
* https://en.wikipedia.org/wiki/Position_and_momentum_space

= Position representation
{parent=position-and-momentum-space}
{wiki}

A way to write the wavefunction $\psi(x)$ such that the \x[position-operator] is:
$$x$$
i.e., a function that takes the wavefunction as input, and outputs another function:
$$x \psi(x)$$

If you believe that \x[mathematician]{p} took care of \x[continuous-spectrum-functional-analysis] for us and that everything just works, the most concrete and direct thing that this representation tells us is that:
\Q[the probability of finding a particle between $x_0$ and $x_1$ at time $t$]
equals:
$$\int_{x_0}^{x_1}x \psi{x, t} dx$$

= Position operator
{parent=position-and-momentum-space}
{wiki}

This operator case is surprisingly not necessarily mathematically trivial to describe formally because you often end up getting into the \x[dirac-delta-function]{p}/continuous spectrum: as mentioned at: \x[mathematical-formulation-of-quantum-mechanics]

= Momentum operator
{parent=position-and-momentum-space}
{wiki}

One dimension in \x[position-representation]:
$$
\hat{p} = - i \hbar \pdv{}{x}
$$

In three dimensions In position representation, we define it by using the \x[gradient], and so we see that 
$$
\hat{p} = - i \hbar \pdv{}{x}
$$

\Video[https://www.youtube.com/watch?v=Egu4i8umpoM]
{title=Position and Momentum from Wavefunctions by \x[faculty-of-khan] (2018)}
{description=Proves in detail why the \x[momentum-operator] is $\pdv{}{x}$. The starting point is determining the time \x[derivative] of the \x[expectation-value] of the \x[position-operator].}

= Squeezed coherent state
{parent=position-and-momentum-space}
{wiki}

= Energy operator
{parent=uncertainty-principle}
{wiki}

Appears directly on \x[schrodinger-equation]! And in particular in the \x[time-independent-schrodinger-equation].

= Time-energy uncertainty principle
{parent=energy-operator}

There is also a time-energy \x[uncertainty-principle], because those two operators are also \x[complementarity-physics][complementary].

= Angular momentum operator
{parent=uncertainty-principle}
{wiki}

Basically the operators are just analogous to the classical ones e.g. the classical:
$$L_z = x p_y - y p_x$$
becomes:
$$\hat{L}_z = -i \hbar \left( x\pdv{}{y} - y\pdv{}{x} \right)$$

Besides the angular momentum in each direction, we also have the \x[total-angular-momentum-operator][total angular momentum]:
$$\hat{L}^2 = \hat{L}_x + \hat{L}_y + \hat{L}_z$$

Then you have to understand what each one of those does to the each \x[atomic-orbital]:
* total angular momentum: determined by the \x[azimuthal-quantum-number]
* angular momentum in one direction ($z$ by convention): determined by the \x[magnetic-quantum-number]

There is an \x[uncertainty-principle] between the x, y and z angular momentums, we can only measure one of them with certainty at a time. \x[video-quantum-mechanics-7a-angular-momentum-i-by-viascience-2013] justifies this intuitively by mentioning that this is analogous to \x[precession]: if you try to measure electrons e.g. with the \x[zeeman-effect] the precess on the other directions which you end up modifing.

\Video[https://youtube.com/watch?v=NwbvTa2xV9k]
{title="Quantum Mechanics 7a - Angular Momentum I" by \x[viascience] (2013)}

= Total angular momentum operator
{parent=angular-momentum-operator}

See: \x[angular-momentum-operator].

= Complementarity
{disambiguate=physics}
{parent=uncertainty-principle}
{wiki}

= Conservation laws in Schrodinger equations
{parent=schrodinger-equation}

https://physics.stackexchange.com/questions/229885/energy-equation-in-quantum-mechanics

TODO is there any good intuitive argument or proof of conservation of energy, momentum, angular momentum?

= Conservation of the square amplitude in the Schrodinger equation
{parent=conservation-laws-in-schrodinger-equations}

Proof that the probability 1 is conserved by the time evolution:

It can be derived directly from the \x[schrodinger-equation].

Bibliography:
* https://quantummechanics.ucsd.edu/ph130a/130_notes/node127.html from \x[quantum-physics-by-jim-branson-2003].

  That proof also mentions that if the potential `V` is not real, then there is no conservation of probability! Therefore the potential \i[must] be real valued!

= Probability current
{parent=conservation-of-the-square-amplitude-in-the-schrodinger-equation}
{wiki}

= Wave function
{parent=schrodinger-equation}
{title2=$\psi$}
{wiki}

Contains the full state of the quantum system.

This is in contrast to classical mechanics where e.g. the state of mechanical system is given by two real functions: position and speed.

The wave equation in \x[position-representation] on the other hand encodes speed in "how fast does the complex phase spin arond", and direction in "does it spin clockwise or counterclockwise", as described well at: \x[video-visualization-of-quantum-physics-quantum-mechanics-by-udiprod-2017]. Then once you understand that, it is more compact to just view those graphs with the phase color coded as in \x[video-simulation-of-the-time-dependent-schrodinger-equation-javascript-animation-by-coding-physics-2019].

= Matter wave
{parent=wave-function}
{title2=1923}
{wiki}

= Electron diffraction experiment
{parent=matter-wave}

In other sections:
* \x[single-electron-double-slit-experiment]{child}

= Diffraction of Cathode Rays by a Thin Film by Thomson and Reid (1927)
{c}
{parent=electron-diffraction-experiment}

https://www.nature.com/articles/119890a0

= Davisson-Germer experiment
{c}
{parent=electron-diffraction-experiment}
{title2=1927}
{wiki=Davisson–Germer_experiment}

= de Broglie relations
{c}
{parent=matter-wave}
{wiki=Matter_wave#de_Broglie_relations}

Relates particle momentum and its wavelength, or equivalently, energy and frequency.

The wavelength relation is:
$$
\lambda = \frac{h}{p}
$$
but since:
$$
v = \lambda f
E = p v
$$
the wavelength relation implies:
$$
\frac{v}{f} = \frac{h}{p}
f = \frac{v p}{h}  = \frac{E}{h}
$$

Particle wavelength can be for example measured very directly on a \x[double-slit-experiment].

So if we take for example electrons of different speeds, we should be able to see the diffraction pattern change accordingly.

= Equivalent alternatives to the Schrodinger equation
{parent=non-relativistic-quantum-mechanics}

* \x[path-integral-formulation]{child}

= Matrix mechanics
{parent=equivalent-alternatives-to-the-schrodinger-equation}
{title2=1925}
{wiki}

Published by \x[werner-heisenberg] in 1925-07-25 as \x[quantum-mechanical-re-interpretation-of-kinematic-and-mechanical-relations-by-heisenberg-1925], it offered the first general formulation of quantum mechanics.

It is apparently more closely related to the \x[ladder-operator] method, which is a more \x[algebraic] than the more \x[analytical] \x[schrodinger-equation].

It appears that this formulation makes the importance of the \x[poisson-bracket] clear, and explains why \x[physicist]{p} are so obsessed with talking about \x[position-and-momentum-space]. This point of view also apparently makes it clearer that \x[quantum-mechanics] can be seen as a generalization of \x[classical-mechanics] through the \x[hamiltonian].

\x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] mentions however that \x[relativistic-quantum-mechanics] broke that analogy, because some 2x2 matrix had a different form, TODO find that again.

\x[inward-bound-by-abraham-pais-1988] chapter 12 "Quantum mechanics, an essay" part (c) "A chronology" has some ultra brief, but worthwhile mentions of matrix mechanics and the \x[commutator].

= Quantum mechanical re-interpretation of kinematic and mechanical relations by Heisenberg (1925)
{parent=matrix-mechanics}
{title2=Über quantentheoretische Umdeutung kinematischer und mechanischer Beziehungen}

This \x[heisenberg]'s breakthrough paper on \x[matrix-mechanics] which later led to the \x[schrodinger-equation], see also: \x[history-of-quantum-mechanics].

Published on the \x[zeitschrift-fur-physik] volume 33 page pages 879-893, https://link.springer.com/article/10.1007%2FBF01328377

Modern overview: http://www.mat.unimi.it/users/galgani/arch/heisenberg25amer_j_phys.pdf

= Heisenberg picture
{c}
{parent=matrix-mechanics}
{wiki}

= De Broglie-Bohm theory
{parent=equivalent-alternatives-to-the-schrodinger-equation}
{wiki=De Broglie–Bohm theory}

Deterministic, but \x[principle-of-locality][non-local].

= Planck-Einstein relation
{c}
{parent=quantum-mechanics}
{wiki=Planck–Einstein_relation}

Photon energy is proportional to its frequency:
$$
energy = (plancks \space constant) * (frequency)
$$
or with common weird variables:
$$
E = h * \nu
$$

This only makes sense if the \x[photon] exists, there is no classical analogue, because the energy of classical waves depends only on their amplitude, not frequency.

Experiments that suggest this:
* \x[photoelectric-effect]
* \x[compton-scattering]

= Planck constant
{c}
{parent=planck-einstein-relation}
{title2=$h$}
{wiki}

Proportionality factor in the \x[planck-einstein-relation] between light energy and frequency.

And analogously for matter, appears in the \x[de-broglie-relations] relating momentum and frequency. Also appears in the \x[schrodinger-equation], basically as a consequence/cause of the de Broglie relations most likely.

Intuitively, the \x[planck-constant] determines at what length scale do quantum effects start to show up for a given energy scale. It is because the Plank constant is very small that we don't perceive quantum effects on everyday energy/length/time scales. On the $\lim_{h \to 0}$, quantum mechanics disappears entirely.

A very direct way of thinking about it is to think about what would happen in a \x[double-slit-experiment]. TODO think more clearly what happens there.

Defined exactly in the \x[2019-redefinition-of-the-si-base-units] to:
$$
6.62607015 \times 10^{-34} J \cdot s
$$

= Reduced Planck constant
{parent=planck-constant}
{title2=$\hbar$, $h/2\pi$}

Appears in the \x[schrodinger-equation].

Equals the quantum of \x[angular-momentum] in the \x[bohr-model].

= Relativistic quantum mechanics
{parent=quantum-mechanics}
{wiki}

The first really good \x[quantum-mechanics] theory made compatible with \x[special-relativity] was the \x[dirac-equation].

And then came \x[quantum-electrodynamics] to improve it: \x[dirac-equation-vs-quantum-electrodynamics].

TODO: does it use full blown QED, or just something intermediate?

https://www.youtube.com/watch?v=NtnsHtYYKf0 "Mercury and Relativity - Periodic Table of Videos" by \x[periodic-videos] (2013). Doesn't give the key juicy details/intuition. Also mentioned on Wikipedia: https://en.wikipedia.org/wiki/Relativistic_quantum_chemistry#Mercury

= Dirac equation
{c}
{parent=relativistic-quantum-mechanics}
{wiki}

Adds \x[special-relativity] to the \x[schrodinger-equation], and the following conclusions come basically as a direct consequence of this!

Experiments explained:
* \x[spontaneous-emission] coefficients.
* \x[fine-structure], notably for example \x[dirac-equation-solution-for-the-hydrogen-atom]
* \x[antimatter]
* \x[particle-creation-and-annihilation]

Experiments not explained: those that \x[quantum-electrodynamics] explains like:
* \x[lamb-shift]
* TODO: quantization of the electromagnetic field as \x[photon]{p}?
See also: \x[dirac-equation-vs-quantum-electrodynamics].

The Dirac equation is a set of 4 \x[partial-differential-equation]{p} on 4 \x[complex-number][complex valued] wave functions. The full explicit form in \x[planck-units] is shown e.g. in \x[video-quantum-mechanics-12a-dirac-equation-i-by-viascience-2015] at https://youtu.be/OCuaBmAzqek?t=1010[]:
$$
  i \partial_t \begin{bmatrix} \psi_1 \\  \psi_2 \\  \psi_3 \\  \psi_4 \end{bmatrix} =
- i \partial_x \begin{bmatrix} \psi_4 \\  \psi_3 \\  \psi_2 \\  \psi_1 \end{bmatrix}
+   \partial_y \begin{bmatrix}-\psi_4 \\  \psi_3 \\ -\psi_2 \\  \psi_1 \end{bmatrix}
- i \partial_z \begin{bmatrix} \psi_3 \\ -\psi_4 \\  \psi_1 \\ -\psi_2 \end{bmatrix}
+ m            \begin{bmatrix} \psi_1 \\  \psi_2 \\ -\psi_3 \\ -\psi_4 \end{bmatrix}
$$
{title=Expanded \x[dirac-equation] in \x[planck-units].}
Then as done at https://physics.stackexchange.com/questions/32422/qm-without-complex-numbers/557600#557600 from \x[why-are-complex-numbers-used-in-the-schrodinger-equation], we could further split those equations up into a system of 8 equations on 8 \x[real-number][real-valued] functions.

\Video[http://youtube.com/watch?v=OCuaBmAzqek]
{title="Quantum Mechanics 12a - Dirac Equation I" by \x[viascience] (2015)}

\Video[https://www.youtube.com/watch?v=ajMaPc022VM]
{title="PHYS 485 Lecture 14: The Dirac Equation" by \x[2011-phys-485-lecture-videos-by-roger-moore-from-the-university-of-alberta][Roger Moore] (2016)}

= Spontaneous emission
{parent=dirac-equation}
{wiki}

Do electrons spontaneously jump from high orbitals to lower ones emitting photons?

Explaining this was was one of the key initial achievements of the \x[dirac-equation].

Yes, but this is not predicted by the \x[schrodinger-equation], you need to go to the \x[dirac-equation].

A critical application of this phenomena is \x[laser].

See also:
* https://physics.stackexchange.com/questions/233330/why-do-electrons-jump-between-orbitals
* https://physics.stackexchange.com/questions/117417/quantum-mechanics-scattering-theory/522220#522220
* https://physics.stackexchange.com/questions/430268/stimulated-emission-how-can-giving-energy-to-electrons-make-them-decay-to-a-low/430288

= The Dirac equation predicts spin
{parent=dirac-equation}

Shown at: \x[video-quantum-mechanics-12b-dirac-equation-ii-by-viascience-2015].

= Antimatter
{parent=dirac-equation}
{wiki}

= Antiparticle
{synonym}

Predicted by the \x[dirac-equation].

Can be easily seen from the solution of \x[equation-expanded-dirac-equation-in-planck-units] when the particle is at rest as shown at \x[video-quantum-mechanics-12b-dirac-equation-ii-by-viascience-2015].

= Particle creation and annihilation
{parent=dirac-equation}

https://en.wikipedia.org/wiki/Annihilation

Predicted by the \x[dirac-equation].

We've likely known since forever that \x[photon]{p} are created: just turn on a light and see gazillion of them come out!

Photon creation is easy because photons are massless, so there is not minimum energy to create them.

The creation of other particles is much rarer however, and took longer to be discovered, one notable milestone being the discovery of the \x[positron].

In the case of the electron, we need to start with at least enough energy for the mass of the electron positron pair. This requires a photon with wavelength in the picometer range, which is not common in the thermal radiation of daily life.

= Particle decay
{parent=particle-creation-and-annihilation}
{wiki}

Can produce two \x[quantum-entanglement][entangled] particles.

= Pair production
{parent=particle-decay}
{wiki}

= Relativistic particle in a box thought experiment
{parent=particle-creation-and-annihilation}

Described for example in \x[quantum-field-theory-lecture-by-tobias-osborne-2017/lecture-1].

= The Dirac equation is consistent with special relativity
{parent=dirac-equation}

TODO, including why the Schrodinger equation is not.

= Derivation of the Dirac equation
{parent=dirac-equation}

Bibliography:
* \x[video-quantum-mechanics-12a-dirac-equation-i-by-viascience-2015] at https://youtu.be/OCuaBmAzqek?t=743
* https://www.youtube.com/watch?v=zM-Lc16nyho&list=PL54DF0652B30D99A4&index=66 "L3. The Dirac Equation" by doctorphys
* \x[video-dirac-equation-for-the-electron-and-hydrogen-hamiltonian-by-barton-zwiebach-2019]

\Video[https://www.youtube.com/watch?v=jjG2Y_dMsbI]
{title=Deriving The \x[dirac-equation] by \x[andrew-dotson] (2019)}

= Pauli equation
{c}
{parent=dirac-equation}
{wiki}

Bibliography:

* https://www.youtube.com/watch?v=Fu1BGGeyqHQ&list=PL54DF0652B30D99A4&index=63 "K6. The Pauli Equation" by doctorphys

= Klein-Gordon equation
{c}
{parent=dirac-equation}
{wiki=Klein–Gordon_equation}

Relativistic version of the \x[schrodinger-equation], but has some problems, which the \x[dirac-equation] solves:
* it has a second time derivative of the \x[wave-function]. Therefore, to solve it we must specify not only the initial value of the wave equation, but also the derivative of the wave equation, 

  As mentioned at \x[advanced-quantum-mechanics-by-freeman-dyson-1951] and further clarified at: https://physics.stackexchange.com/questions/340023/cant-the-negative-probabilities-of-klein-gordon-equation-be-avoided[], this would lead to negative probabilities.
* the modulus of the wave function is not constant and therefore not always one, and therefore cannot be interpreted as a probability density anymore
* since we are working with the square of the energy, we have both positive and negative value solutions. This is also a features of the \x[dirac-equation] however.

What it does well however, is to describe \x[spin-physics]=0 particles.

Bibliography:
* \x[video-quantum-mechanics-12a-dirac-equation-i-by-viascience-2015] at https://youtu.be/OCuaBmAzqek?t=600
* \x[an-introduction-to-qed-and-qcd-by-jeff-forshaw-1997] 1.2 "Relativistic Wave Equations" and 1.4 "The Klein Gordon Equation" gives some key ideas
* \x[2011-phys-485-lecture-videos-by-roger-moore-from-the-university-of-alberta] at around 7:30
* https://www.youtube.com/watch?v=WqoIW85xwoU&list=PL54DF0652B30D99A4&index=65 "L2. The Klein-Gordon Equation" by doctorphys
* https://sites.ualberta.ca/~gingrich/courses/phys512/node21.html from \x[advanced-quantum-mechanics-ii-by-douglas-gingrich-2004]
  * https://sites.ualberta.ca/~gingrich/courses/phys512/node23.html gives \x[lorentz-invariance]

= Derivation of the Klein-Gordon
{c}
{parent=klein-gordon-equation}
{wiki=Klein–Gordon_equation}

The Klein-Gordon equation directly uses a more naive \x[relativistic-energy] guess of $p^2 + m^2$ squared.

But since this is \x[quantum-mechanics], we feel like making $p$ into the "\x[momentum-operator]", just like in the \x[schrodinger-equation].

But we don't really know how to apply the momentum operator twice, because it is a \x[gradient], so the first application goes from a scalar field to the vector field, and the second one...

So we just cheat and try to use the \x[laplace-operator] instead because there's some squares on it:
$$
H = \laplacian{} + m^2
$$

But then, we have to avoid taking the square root to reach a first derivative in time, because we don't know how to take the square root of that operator expression.

So the Klein-Gordon equation just takes the approach of using this squared Hamiltonian instead.

Since it is a Hamiltonian, and comparing it to the \x[schrodinger-equation] which looks like:
$$
H \psi = i \pdv{\psi}{t}
$$
taking the Hamiltonian twice leads to:
$$
H^2 \psi = - \pdv{^2 \psi}{^2 t}
$$

We can contrast this with the \x[dirac-equation], which instead attempts to explicitly construct an operator which squared coincides with the relativistic formula: \x[derivation-of-the-dirac-equation].

= Solutions of the Dirac equation
{parent=dirac-equation}

Related: \x[dirac-equation-vs-quantum-electrodynamics].

\Video[https://www.youtube.com/watch?v=tR6UebCvFqE]
{title="Quantum Mechanics 12b - Dirac Equation II" by \x[viascience] (2015)}
{description=
* https://youtu.be/tR6UebCvFqE?t=23 particle at rest
* https://youtu.be/tR6UebCvFqE?t=322 unidirectional movement without a potential
* https://youtu.be/tR6UebCvFqE?t=507 shows that observers in different \x[frame-of-reference][frames of reference] also see different \x[spin-physics]. We are reminded of how \x[maxwell-s-equations-require-special-relativity][magnetism is just a side effect of special-relativity].
* https://youtu.be/tR6UebCvFqE?t=549 \x[dirac-equation-solution-for-the-hydrogen-atom], final result only + mentions \x[fine-structure] prediction.
}

= Dirac equation solution for the hydrogen atom
{c}
{parent=solutions-of-the-dirac-equation}
{wiki=Hydrogen-like_atom#Solution_to_Dirac_equation}

Predicts \x[fine-structure].

Bibliography:
* \x[video-quantum-mechanics-12b-dirac-equation-ii-by-viascience-2015] https://youtu.be/tR6UebCvFqE?t=549

\Video[https://www.youtube.com/watch?v=lr4HqQ_sLO0]
{title=\x[dirac-equation] for the \x[electron] and \x[hydrogen] Hamiltonian by \x[barton-zwiebach] (2019)}
{description=Uses \x[perturbation-theory] to get to the relativistic corrections of \x[fine-structure]! Part of \x[mit-8-06-quantum-physics-iii-spring-2018-by-barton-zwiebach]}

\Video[https://www.youtube.com/watch?v=jWYtP-rAoYA]
{title="How To Solve The Dirac Equation For The Hydrogen Atom | Relativistic Quantum Mechanics" by \x[dietterich-labs] (2018)}

= Spin
{disambiguate=physics}
{parent=dirac-equation}

\x[video-quantum-mechanics-9a-photon-spin-and-schrodinger-s-cat-i-by-viascience-2013] explains nicely how:
* incorporated into the \x[dirac-equation] as a natural consequence of \x[special-relativity] corrections, but not naturally present in the \x[schrodinger-equation], see also: \x[the-dirac-equation-predicts-spin]{child}
* \x[photon] spin can be either linear or circular
* the linear one can be made from a superposition of circular ones
* straight antennas produce linearly polarized photos, and https://en.wikipedia.org/wiki/Helical_antenna[Helical antennas] circularly polarized ones
* a jump between 2s and 2p in an atom changes angular momentum. Therefore, the photon must carry angular momentum as well as energy.
* cannot be classically explained, because even for a very large estimate of the electron size, its surface would have to spin faster than light to achieve that magnetic momentum with the known \x[electron-charge]
* as shown at \x[video-quantum-mechanics-12b-dirac-equation-ii-by-viascience-2015], observers in different \x[frame-of-reference][frames of reference] see different spin states

\Video[https://www.youtube.com/watch?v=6sR6RV2znXI]
{title="Quantum Mechanics 9a - Photon Spin and Schrodinger's Cat I" by \x[viascience] (2013)}

\Video[https://www.youtube.com/watch?v=3k5IWlVdMbo]
{title="Quantum Spin - Visualizing the physics and mathematics" by \x[physics-videos-by-eugene-khutoryansky] (2016)}

= Spin experiments
{parent=spin-physics}

* \x[stern-gerlach-experiment]
* \x[fine-structure] split in energy levels
* anomalous \x[zeeman-effect]
* of a more statistical nature, but therefore also macroscopic and more dramatically observable:
  * \x[ferromagnetism]
  * \x[bose-einstein-statistics] vs \x[fermi-dirac-statistics]. A notable example is the difference in \x[superfluid] transition \x[temperature] between \x[superfluid-helium-3] and \x[superfluid-helium-4].

= Stern-Gerlach experiment
{c}
{parent=spin-experiments}
{title2=1921}
{wiki=Stern–Gerlach_experiment}

Originally done with silver in 1921, but even clearer theoretically was the hydrogen reproduction in 1927 by T.E. Phipps and J.B. Taylor.

The hydrogen experiment was apparently harder to do and the result is less visible, TODO why: https://physics.stackexchange.com/questions/33021/why-silver-atoms-were-used-in-stern-gerlach-experiment

= Spintronics
{parent=spin-experiments}
{wiki}

= Tunnel magnetoresistance
{parent=spintronics}
{wiki}

\Video[https://www.youtube.com/watch?v=q3-S5hM-3QY]
{title=What is spintronics and how is it useful? by SciToons (2019)}
{description=Gives a good 1 minute explanation of \x[tunnel-magnetoresistance].}

= Giant magnetoresistance
{parent=spintronics}
{wiki}

= Spin number of a field
{parent=spin-physics}

Some fantastic explanations at: \x[video-quantum-field-theory-visualized-by-scienceclic-english-2020]

Bibliography:
* \x[spin-comes-naturally-when-adding-relativity-to-quantum-mechanics]
* https://physics.stackexchange.com/questions/31119/what-does-spin-0-mean-exactly What does spin 0 mean exactly? on \x[physics-stack-exchange]

= Why is the spin of the electron half?
{parent=spin-number-of-a-field}

https://physics.stackexchange.com/questions/266359/when-we-say-electron-spin-is-1-2-what-exactly-does-it-mean-1-2-of-what

More interestingly, how is that implied by the \x[stern-gerlach-experiment]?

https://physics.stackexchange.com/questions/266359/when-we-say-electron-spin-is-1-2-what-exactly-does-it-mean-1-2-of-what/266371#266371 suggests that half could either mean:
* at limit of large `l` for the \x[schrodinger-equation-solution-for-the-hydrogen-atom] the difference between each angular momentum is twice that of the eletron's spin. Not very satisfactory.
* it comes directly out of the \x[dirac-equation]. This is satisfactory. :-)

= Pauli exclusion principle
{c}
{parent=spin-physics}
{wiki}

Initially a phenomenological guess to explain the periodic table. Later it was apparently proven properly with the \x[spin-statistics-theorem], https://physics.stackexchange.com/questions/360140/theoretical-proof-of-paulis-exclusion-principle[].

And it was understood more and more that basically this is what prevents solids from collapsing into a single nucleus, not electrical repulsion: \x[electron-degeneracy-pressure]!

Bibliography:
* https://www.youtube.com/watch?v=EK_6OzZAh5k How Electron Spin Makes Matter Possible by \x[pbs-space-time] (2021)

\Video[https://www.youtube.com/watch?v=dQWn9NzvX4s]
{title="The Biggest Ideas in the Universe | 17. Matter" by \x[sean-carroll] (2020)}

= Fermion
{parent=pauli-exclusion-principle}
{wiki}

= Boson
{parent=fermion}
{wiki}

= Spin-statistics theorem
{parent=pauli-exclusion-principle}
{wiki=Spin–statistics_theorem}

\x[video-the-biggest-ideas-in-the-universe-17-matter-by-sean-carroll-2020] at https://youtu.be/dQWn9NzvX4s?t=3707 says that no one has ever been able to come up with an intuitive reason for the proof.

= Electron degeneracy pressure
{parent=pauli-exclusion-principle}
{wiki}

= Nuclear spin
{parent=spin-physics}

http://hyperphysics.phy-astr.gsu.edu/hbase/Nuclear/nspin.html

Nuclear physics basically means \x[quantum-chromodynamics]

TODO experiments. Can you do \x[stern-gerlach-experiment] with alpha particles?

= Spin comes naturally when adding relativity to quantum mechanics
{parent=spin-physics}

\x[physics-from-symmetry-by-jakob-schwichtenberg-2015] chapter 3.9 "Elementary particles" has a good summary of the preceding chapters the \x[spin-physics] value has a relation to the \x[representation-theory][representations] of the \x[poincare-group], which encodes the \x[spacetime-symmetry] that each particle observes.

These symmetries can be characterized by small integer numbers:
* \x[spin-0]: $(0, 0)$ representation
* \x[spin-half]: $(1/2, 0) \bigoplus (0, 1/2)$ representation
* \x[spin-1]: $(1/2, 1/2)$ representation
\x[parameters-of-the-standard-model][As usual], we don't know why there aren't \x[elementary-particle]{p} with other spins, as we could construct them.

= Spin 0
{parent=spin-comes-naturally-when-adding-relativity-to-quantum-mechanics}

https://physics.stackexchange.com/questions/31119/what-does-spin-0-mean-exactly

Leads to the \x[klein-gordon-equation].

= Spin half
{parent=spin-comes-naturally-when-adding-relativity-to-quantum-mechanics}

Leads to the \x[dirac-equation].

= Spin 1
{parent=spin-comes-naturally-when-adding-relativity-to-quantum-mechanics}

Leads to the \x[proca-equation].

= Proca equation
{c}
{parent=spin-1}
{wiki=Proca_action#Equation}

= Spin 2
{parent=spin-comes-naturally-when-adding-relativity-to-quantum-mechanics}

Theorized for the \x[graviton].

= Dirac Lagrangian
{c}
{parent=dirac-equation}
{wiki=Lagrangian_(field_theory)#Dirac_Lagrangian}

$$
\mathcal{L} = \bar \psi ( i \hbar c {\partial}\!\!\!/ - mc^2) \psi
$$
where:
* ${\partial}\!\!\!$: \x[feynman-slash-notation]
* $\bar \psi$: \x[dirac-adjoint]

Remember that $\psi$ is a 4-vetor, gamma matrices are 4x4 matrices, so the whole thing comes down to a \x[dot-product] of two 4-vectors, with a modified $\psi$ by matrix multiplication/derivatives, and the result is a scalar, as expected for a \x[lagrangian].

Like any other \x[lagrangian], you can then recover the \x[dirac-equation], which is the corresponding \x[equations-of-motion], by applying the \x[euler-lagrange-equation] to the Lagrangian.

= Dirac adjoint
{c}
{parent=dirac-lagrangian}
{wiki}

= Gamma matrices
{c}
{parent=dirac-lagrangian}
{wiki}

= Gamma matrix
{synonym}

= Feynman slash notation
{c}
{parent=dirac-lagrangian}
{wiki}

= Quantum field theory
{parent=relativistic-quantum-mechanics}

= QFT
{c}
{synonym}
{title2}

Theoretical framework on which quantum field theories are based, theories based on framework include:
* \x[quantum-electrodynamics]
* \x[quantum-chromodynamics]
so basically the entire \x[standard-model]

The basic idea is that there is a field for each particle particle type.

E.g. in QED, one for the electron and one for the photon: https://physics.stackexchange.com/questions/166709/are-electron-fields-and-photon-fields-part-of-the-same-field-in-qed[].

And then those fields interact with some \x[lagrangian-mechanics][Lagrangian].

There appear to be two main equivalent formulations of quantum field theory:
* \x[second-quantization]
* \x[path-integral-formulation]

\Video[https://www.youtube.com/watch?v=MmG2ah5Df4g]
{title=Quantum Field Theory visualized by \x[scienceclic] English (2020)}
{description=Gives one piece of possibly OK intuition: quantum theories kind of model all possible evolutions of the system at the same time, but with different probabilities. QFT is no different in that aspect.
* https://youtu.be/MmG2ah5Df4g?t=209 describes how the \x[spin-number-of-a-field] is directly related to how much you have to rotate an element to reach the original position
* https://youtu.be/MmG2ah5Df4g?t=480 explains which particles are modelled by which spin number
}

\Video[https://youtu.be/zNVQfWC_evg]
{title=Quantum Fields: The Real Building Blocks of the Universe by \x[david-tong] (2017)}
{description=Boring, does not give anything except the usual blabla everyone knows from Googling:
* https://youtu.be/zNVQfWC_evg?t=1335 shows https://www.youtube.com/watch?v=9TJe1Pr5c9Q from \x[quantum-field-theory-simulations]
* https://youtu.be/zNVQfWC_evg?t=1522 alludes to the \x[birch-and-swinnerton-dyer-conjecture]
}

\Video[https://www.youtube.com/watch?v=QPAxzr6ihu8]
{title=Quantum Field Theory: What is a particle? by \x[physics-explained] (2021)}
{description=Gives some high level analogies between high level principles of \x[non-relativistic-quantum-mechanics] and \x[special-relativity] in to suggest that there is a minimum quanta of a relativistic quantum field.}

= Quantum field
{parent=quantum-field-theory}

= Mathematical formulation of quantum field theory
{parent=quantum-field-theory}

TODO holy crap, even this is hard to understand/find a clear definition of.

The \x[dirac-equation], OK, is a \x[partial-differential-equation], so we can easily understand its definition with basic calculus. We may not be able to solve it efficiently, but at least we understand it.

But what the heck is the mathematical model for a quantum field theory? TODO someone was saying it is equivalent to an infinite set of PDEs somehow. Investigate. Related:
* https://www.reddit.com/r/AskPhysics/comments/74qeag/what_is_so_hard_about_qft_after_all/
* https://physics.stackexchange.com/questions/337423/what-are-quantum-fields-mathematically
* https://physics.stackexchange.com/questions/155608/what-is-a-quantum-field

The \x[path-integral-formulation] might actually be the most understandable formulation, as shown at \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979].

The formulation of QFT also appears to be a form of infinite-dimentional calculus.

\x[quantum-electrodynamics-by-lifshitz-et-al-2nd-edition-1982] chapter 1. "The uncertainty principle in the relativistic case" contains an interesting idea:
\Q[The foregoing discussion suggests that the theory will not consider the time dependence of particle interaction processes. It will show that in these processes there are no characteristics precisely definable (even within the usual limitations of quantum mechanics); the description of such a process as occurring in the course of time is therefore just as unreal as the classical paths are in non-relativistic quantum mechanics. The only observable quantities are the properties (momenta,
polarizations) of free particles: the initial particles which come into interaction, and the final particles which result from the process.]

= Gauge theory
{parent=mathematical-formulation-of-quantum-field-theory}
{wiki}

The term and idea was first introduced initialized by \x[hermann-weyl] when he was working on combining \x[electromagnetism] and \x[general-relativity] to formulate \x[maxwell-s-equations-in-curved-spacetime] in 1918 and published as \x[gravity-and-electricity-by-hermann-weyl-1918]. Based on perception that \x[u-1] symmetry implies \x[charge-conservation]. The same idea was later adapted for \x[quantum-electrodynamics], a context in which is has even more impact.

= Gauge field
{parent=gauge-theory}

A random field you add to make something transform locally the way you want. See e.g.: \x[video-deriving-the-qed-lagrangian-by-dietterich-labs-2018].

= Gauge symmetry
{parent=gauge-theory}
{wiki=Gauge_symmetry_(mathematics)}

\Video[https://www.youtube.com/watch?v=YP-tPE7WO64]
{title=Lawrence Krauss explains Gauge symmetry by Joe Rogan (2017)}
{description=While most of this is useless as you would expect from the channel, it does give one key idea: you can change charge locally, but things somehow still work out.

And this has something to do with the general intuition of \x[special-relativity] that only local measures make much sense, as evidenced by \x[einstein-synchronization].}

= Fock space
{c}
{parent=mathematical-formulation-of-quantum-field-theory}
{wiki}

Yup, this one Focks you up.

= Second quantization
{parent=mathematical-formulation-of-quantum-field-theory}
{wiki}

https://www.quora.com/How-are-quantum-fields-quantized-to-describe-particles

Second quantization also appears to be useful not only for \x[relativistic-quantum-mechanics], but also for \x[condensed-matter-physics]. The reason is that the basis idea is to use the number occupation basis. This basis is:
* convenient for \x[quantum-field-theory] because of \x[particle-creation-and-annihilation] changes the number of particles all the time
* convenient for \x[condensed-matter-physics] because there you have a gazillion particles occupying entire \x[electronic-band-theory][energy bands]

Bibliography:

* https://www.youtube.com/watch?v=MVqOfEYzwFY "How to Visualize Quantum Field Theory" by ZAP Physics (2020). Has \x[quantum-field-theory-simulations][1D simulations] on a circle. Starts towards the right direction, but is a bit lacking unfortunately, could go deeper.

= Canonical quantization
{parent=second-quantization}
{wiki}

Basically a synonym for \x[second-quantization].

= Path integral formulation
{parent=mathematical-formulation-of-quantum-field-theory}
{wiki}

This one might actually be understandable! It is what \x[richard-feynman] starts to explain at: \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979].

The difficulty is then proving that the total probability remains at 1, and maybe causality is hard too.

The path integral formulation can be seen as a generalization of the \x[double-slit-experiment] to infinitely many slits.

Feynman first stared working it out for \x[non-relativistic-quantum-mechanics], with the relativistic goal in mind, and only later on he attained the relativistic goal.

TODO why intuitively did he take that approach? Likely is makes it easier to add \x[special-relativity].

This approach more directly suggests the idea that \x[quantum-particles-take-all-possible-paths].

= Quantum particles take all possible paths
{parent=path-integral-formulation}

As mentioned at: https://physics.stackexchange.com/questions/212726/a-quantum-particle-moving-from-a-to-b-will-take-every-possible-path-from-a-to-b/212790#212790[], classical \x[gravity-wave]{p} for example also "take all possible paths". This is just what waves look like they are doing.

= Propagator
{parent=path-integral-formulation}
{wiki}

= Infinitely many slits thought experiment
{parent=path-integral-formulation}

Thought experiment that illustrates the \x[path-integral-formulation] of \x[quantum-field-theory].

Mentioned for example in \x[quantum-field-theory-in-a-nutshell-by-anthony-zee-2010] page 8.

= Renormalization
{parent=mathematical-formulation-of-quantum-field-theory}
{wiki}

* https://www.quora.com/What-is-renormalization-in-quantum-theory-explained-to-graduated-only-not-doctors/answer/Paul-Mainwood covers the simpler \x[ising-model] case

\Video[https://www.youtube.com/watch?v=Nm8DRUgmjZc]
{title="The Biggest Ideas in the Universe | 11. Renormalization" by \x[sean-carroll] (2020)}
{description=Gives a very quick and high level overview of \x[renormalization]. It is not enough to satisfy \x[ciro-santilli] as usual for other Sean Carroll videos, but it goes some way.}

= Mass renormalization
{parent=renormalization}

= Renormalization group
{parent=renormalization}
{wiki}

= Cutoff energy
{parent=renormalization}
{wiki}

= Effective field theory
{parent=renormalization}
{wiki}

https://www.youtube.com/watch?v=WB8r7CU7clk&list=PLUl4u3cNGP60TvpbO5toEWC8y8w51dtvm by Iain Stewart. Basically starts by explaining how \x[quantum-field-theory] is so generic that it is hard to get any numerical results out of it :-)

But in particular, we want to describe those subtheories in a way that we can reach arbitrary precision of the full theory if desired.

= Yang-Mills theory
{c}
{parent=renormalization}
{wiki=Yang–Mills_theory}

= Yang-Mills existence and mass gap
{c}
{parent=yang-mills-theory}
{wiki=Yang–Mills_existence_and_mass_gap}

* https://www.youtube.com/watch?v=-_qNKbwM_eE Unsolved: Yang-Mills existence and mass gap by J Knudsen (2019). Gives 10 key points, but the truly hard ones are too quick. He knows the thing though.

\Video[https://www.youtube.com/watch?v=j3fsPHnrgLg]
{title=Yang-Mills 1 by David Metzler (2011)}
{description=Playlist: https://www.youtube.com/watch?v=j3fsPHnrgLg&list=PL613A31A706529585&index=13

A bit disappointing, too high level, with very few nuggests that are not Googleable withing 5 minutes.

Breakdown:
* 1 https://www.youtube.com/watch?v=j3fsPHnrgLg[]: too basic
* 2 https://www.youtube.com/watch?v=br6OxCLyqAI?t=569[]: mentions \x[groups-of-lie-type] in the context of \x[classification-of-finite-simple-groups]. Each group has a little diagram.
* 3 https://youtu.be/1baiIxKKQlQ?list=PL613A31A706529585&t=728 the original example of a \x[local-symmetry] was \x[general-relativity], and that in that context it can be clearly seen that the local symmetry is what causes "forces" to appear
  * https://youtu.be/1baiIxKKQlQ?list=PL613A31A706529585&t=933 \x[local-symmetry] gives a conserved current. In the case of \x[electromagnetism], this is electrical current. This was the only worthwhile thing he sad to 2021 Ciro. Summarized at: \x[local-symmetries-of-the-lagrangian-imply-conserved-currents].
* 4 https://youtu.be/5ljKcWm7hoU?list=PL613A31A706529585&t=427 \x[electromagnetism] has both a global symmetry (\x[special-relativity]) but also \x[local-symmetry], which leads to the conservation of charge current and forces.

  \x[quantum-field-theory-lecture-by-tobias-osborne-2017/lecture-3] properly defines a \x[local-symmetry] in terms of the context of the \x[lagrangian-density], and explains that the conservation of currents there is basically the statement of \x[noether-s-theorem] in that context.
}

\Video[https://www.youtube.com/watch?v=vMiY7zlBOFI]
{title=Millennium Prize Problem: Yang Mills Theory by David Gross (2018)}
{description=2 hour talk at the \x[kavli-institute-for-theoretical-physics]. Too mathematical, 2021 Ciro can't make much out of it.}

\Video[https://www.youtube.com/watch?v=pCQ9GIqpGBI]
{title=Lorenzo Sadun on the "Yang-Mills and Mass Gap" \x[millennium-prize-problems][Millennium problem]}
{description=Unknown year. He almost gets there, he's good. Just needed to be a little bit deeper.}

= Wightman axioms
{c}
{parent=yang-mills-existence-and-mass-gap}
{wiki}

= Quantum electrodynamics
{parent=quantum-field-theory}
{title2=QED}
{wiki}

Theory that describes \x[electron]{p} and \x[photon]{p} really well, and \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979][as Feynman puts it] "accounts very precisely for all physical phenomena we have ever observed, except for gravity and nuclear physics" ("including the laughter of the crowd" ;-)).

Learning it is one of \x[ciro-santilli]'s main intellectual \x[fetish]{p}.

While Ciro acknowledges that QED is intrinsically challenging due to the wide range or requirements (\x[quantum-mechanics], \x[special-relativity] and \x[electromagnetism]), Ciro feels that there is a glaring gap in this moneyless market for a learning material that follows the \x[middle-way] as mentioned at: \x[the-missing-link-between-basic-and-advanced]. \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979] is one of the best attempts so far, but it falls a bit too close to the superficial side of things, if only Feynman hadn't assumed that the audience doesn't know any mathematics...

The funny thing is that when \x[ciro-santilli-s-mother] retired, learning it (or as she put it: "how photons and electrons interact") was also one of her retirement plans. She is a pharmacist by training, and doesn't know much \x[mathematics], and her \x[english-language][English] was \x[having-more-than-one-natural-language-is-bad-for-the-world][somewhat limited]. Oh, she also wanted to learn how \x[photosynthesis] works (possibly not fully understood by science as that time, 2020). Ambitious old lady!!!

Experiments: \x[quantum-electrodynamics-experiments].

Combines \x[special-relativity] with more classical \x[quantum-mechanics], but further generalizing the \x[dirac-equation], which also does that: \x[dirac-equation-vs-quantum-electrodynamics].

Before QED, the most advanced theory was that of the \x[dirac-equation], which was already relativistic but TODO what was missing there exactly?

As summarized at: https://youtube.com/watch?v=_AZdvtf6hPU?t=305[] Quantum Field Theory lecture at the African Summer Theory Institute 1 of 4 by Anthony Zee (2004):
* classical mechanics describes large and slow objects
* special relativity describes large and fast objects (they are getting close to the speed of light, so we have to consider relativity)
* classical \x[quantum-mechanics] describes small and slow objects.
* QED describes objects that are both small and fast

That video also mentions the interesting idea that:
* in special relativity, we have the \x[mass-energy-equivalence]
* in quantum mechanics, thinking along the \x[time-energy-uncertainty-principle], $\Delta E \sim \frac{1}{\Delta t}$
Therefore, for small timescales, energy can vary a lot. But mass is equivalent to energy. Therefore, for small time scale, particles can appear and disappear wildly.

QED is the first \x[quantum-field-theory] fully developed. That framework was later extended to also include the \x[weak-interaction] and \x[strong-interaction]. As a result, it is perhaps easier to just \x[google] for "Quantum Field Theory" if you want to learn QED, since QFT is more general and has more resources available generally.

Like in more general quantum field theory, there is on field for each particle type. In quantum field theory, there are only two fields to worry about:
* \x[photon] field
* \x[electromagnetism] field

\Video[https://www.youtube.com/watch?v=EzfFklLqDjA]
{title="Lecture 01 | Overview of Quantum Field Theory" by Markus Luty (2013)}
{description=This takes quite a direct approach, one cool thing he says is how we have to be careful with adding special relativity to the \x[schrodinger-equation] to avoid faster-than-light information.}

= Quantum electrodynamics experiments
{parent=quantum-electrodynamics}
{wiki}

Experiments explained by QED but not by the \x[dirac-equation]:
* \x[lamb-shift]: by far the most famous one
* \x[hyperfine-structure] TODO confirm
* \x[anomalous-magnetic-dipole-moment-of-the-electron]

= Electron magnetic moment
{parent=quantum-electrodynamics-experiments}
{wiki}

= Anomalous magnetic dipole moment
{parent=electron-magnetic-moment}
{wiki}

= Anomalous magnetic dipole moment of the electron
{parent=anomalous-magnetic-dipole-moment}
{wiki=Anomalous_magnetic_dipole_moment#Electron}

\x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979] mentions it several times.

This was one of the first two great successes of \x[quantum-electrodynamics], the other one being the \x[lamb-shift].

In https://youtu.be/UKbp85zpdcY?t=52 from \x[freeman-dyson-web-of-stories-interview-1998] Dyson mentions that the original key experiment was from Kusch and Foley from \x[columbia-university], and that in 1948, \x[julian-schwinger] reached the correct value from his calculations.

Apparently first published at \x[the-magnetic-moment-of-the-electron-by-kusch-and-foley-1948].

Bibliography:
* https://www.youtube.com/watch?v=Ix-3LQhElvU Anomalous Magnetic Moment Of The Electron | One Loop Quantum Correction | Quantum Electrodynamics by \x[dietterich-labs] (2019)

= The Magnetic Moment of the Electron by Kusch and Foley (1948)
{parent=anomalous-magnetic-dipole-moment-of-the-electron}o

Published on \x[physical-review] by \x[polykarp-kusch] and Foley.

https://journals.aps.org/pr/abstract/10.1103/PhysRev.74.250[], paywall as of 2021.

= Dirac equation vs quantum electrodynamics
{c}
{parent=quantum-electrodynamics-experiments}

TODO: in high level terms, why is QED more general than just solving the \x[dirac-equation]{parent}, and therefore explaining \x[quantum-electrodynamics-experiments]?

Also, is it just a bunch of \x[differential-equation] (like the \x[dirac-equation] itself), or does it have some other more complicated mathematical formulation, as seems to be the case? Why do we need something more complicated than 

\x[advanced-quantum-mechanics-by-freeman-dyson-1951] mentions:
\Q[A Relativistic Quantum Theory of a Finite Number of Particles is Impossible.]

Bibliography:
* https://physics.stackexchange.com/questions/101307/dirac-equation-in-qft-vs-relativistic-qm
* https://physics.stackexchange.com/questions/44188/what-is-the-relativistic-particle-in-a-box/44309#44309 says:
  \Q[By several reasons explained in textbooks, the Dirac equation is not a valid wavefunction equation. You can solve it and find solutions, but those solutions cannot be interpreted as wavefunctions for a particle]
* https://physics.stackexchange.com/questions/64206/why-is-the-dirac-equation-not-used-for-calculations
* https://www.physicsforums.com/threads/is-diracs-equation-still-useful-after-qed-is-developed.663994/

= Applications of quantum electrodynamics
{parent=quantum-electrodynamics}

* https://www.quora.com/What-are-some-engineering-applications-of-QED-or-QCD-quantum-field-theories
* \x[relativistic-quantum-chemistry]{child}

= Quantum electrodynamics Lagrangian
{parent=quantum-electrodynamics}

$$\mathcal{L}_{\mathrm{QED}} = \bar \psi (i\hbar c {D}\!\!\!\!/\ - mc^2) \psi - {1 \over 4\mu_0} F_{\mu \nu} F^{\mu \nu}$$
where:
* $F$ is the \x[electromagnetic-tensor]

Note that this is the sum of the:
* \x[dirac-lagrangian], which  only describes the "inertia of bodies" part of the equation
* the \x[electromagnetic] interaction term ${1 \over 4\mu_0} F_{\mu \nu} F^{\mu \nu}$, which describes term describes forces
Note that the relationship between $\psi$ and $F$ is not explicit. However, if we knew what type of particle we were talking about, e.g. \x[electron], then the knowledge of \x[psi] would also give the charge distribution and therefore $F$

As mentioned at the beginning of \x[quantum-field-theory-lecture-notes-by-david-tong-2007]:
* by "\x[lagrangian]" we mean Lagrangian density
* the \x[generalized-coordinate]{p} of the Lagrangian are fields

= Derivation of the quantum electrodynamics Lagrangian
{parent=quantum-electrodynamics-lagrangian}

\Video[https://www.youtube.com/watch?v=IFRyN3fQMO8]
{title=Deriving the \x[quantum-electrodynamics-lagrangian][QED Lagrangian] by \x[dietterich-labs] (2018)}
{description=As mentioned at the start of the video, he starts with the \x[dirac-equation] Lagrangian derived in a previous video. It has nothing to do with \x[electromagnetism] specifically.

He notes that that \x[dirac-lagrangian], besides being globally \x[lorentz-invariant], it also also has a global \x[u-1] invariance.

However, it does not have a local invariance if the \x[u-1] transformation depends on the point in spacetime.

He doesn't mention it, but I think this is highly desirable, because in general \x[local-symmetries-of-the-lagrangian-imply-conserved-currents], and in this case we want conservation of charges.

To fix that, he adds an extra \x[gauge-field] $A_\mu$ (a field of $4 \times 4$ matrices) to the regular derivative, and the resulting derivative has a fancy name: the \x[covariant-derivative].

Then finally he notes that this \x[gauge-field] he had to add has to transform exactly like the \x[electromagnetic-four-potential]!

So he uses that as the gauge, and also adds in the \x[maxwell-lagrangian] in the same go. It is kind of a guess, but it is a natural guess, and it turns out to be correct.

https://www.youtube.com/watch?v=IFRyN3fQMO8&lc=UgzNGkLXdwcSl7z8Lap4AaABAg
}

= What does it mean that photons are force carriers for electromagnetism?
{parent=quantum-electrodynamics}

https://physics.stackexchange.com/questions/61095/photon-as-the-carrier-of-the-electromagnetic-force

TODO find/create decent answer.

I think the best answer is something along:
* \x[local-symmetries-of-the-lagrangian-imply-conserved-currents]. $U(1)$ gives conserved charges.
* OK now. We want a local $U(1)$ symmetry. And we also want:
  * \x[dirac-equation]: quantum relativistic Newton's laws that specify what forces do to the fields
  * \x[electromagnetism]: specifies what causes forces based on currents. But not what it does to masses.
  Given all of that, the most obvious and direct thing we reach a guess at the \x[quantum-electrodynamics-lagrangian] is \x[video-deriving-the-qed-lagrangian-by-dietterich-labs-2018]

A basic non-precise intuition is that a good model of reality is that electrons do not "interact with one another directly via the electromagnetic field".

A better model happens to be the \x[quantum-field-theory] view that the electromagnetic field interacts with the photon field but not directly with itself, and then the photon field interacts with parts of the electromagnetic field further away.

The more precise statement is that the \x[photon-field] is a gauge field of the electromagnetic force under local U(1) symmetry, which is described by a \x[lie-group]. TODO understand.

This idea was first applied in \x[general-relativity], where \x[einstein] understood that the "force of \x[gravity]" can be understood just in terms of symmetry and curvature of space. This was later applied o \x[quantum-electrodynamics] and the entire \x[standard-model].

From \x[video-lorenzo-sadun-on-the-yang-mills-and-mass-gap-millennium-problem]:
https://www.youtube.com/watch?v=pCQ9GIqpGBI&t=1663s mentions this idea first came about from \x[hermann-weyl].
https://youtu.be/pCQ9GIqpGBI?t=2827 mentions that in that case the curvature is given by the \x[electromagnetic-tensor].

* https://www.youtube.com/watch?v=qtf6U3FfDNQ Symmetry and Quantum Electrodynamics (The Standard Model Part 1) by ZAP Physics (2021)
* https://www.youtube.com/watch?v=OQF7kkWjVWM The Symmetry and Simplicity of the Laws of Nature and the Higgs Boson by Juan Maldacena (2012). Meh, also too basic.

= Photon field
{parent=quantum-electrodynamics}

= Schwinger effect
{c}
{parent=quantum-electrodynamics}
{wiki}

= Feynman diagram
{c}
{parent=quantum-electrodynamics}
{wiki}

I think they are a tool to calculate the probability of different types of particle decays and particle collision outcomes. TODO Minimal example of that.

And they can be derived from a more complete \x[quantum-electrodynamics] formulation via \x[perturbation-theory].

Can be used for all of \x[quantum-electrodynamics], \x[weak-interaction] and \x[quantum-chromodynamics].

At \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979], an intuitive explanation of them in termes of sum of products of \x[propagator]{p} is given.

* https://www.youtube.com/watch?v=fG52mXN-uWI The Secrets of Feynman Diagrams | Space Time by \x[pbs-space-time] (2017)

= Feynman diagram solver
{c}
{parent=feynman-diagram}

https://physics.stackexchange.com/questions/96510/software-for-calculating-feynman-diagrams

= Does the exact position of vertices matter in Feynman diagrams?
{parent=feynman-diagram}

No, but why?

* https://physics.stackexchange.com/questions/297004/feynman-diagram-and-uncertainty/297006

= Wheeler-Feynman absorber theory
{c}
{parent=quantum-electrodynamics}
{wiki=Wheeler–Feynman absorber theory}

What they presented on \x[richard-feynman-s-first-seminar-in-1941]. Does not include \x[quantum-mechanics] it seems.

= Cavity quantum electrodynamics
{parent=quantum-electrodynamics}
{wiki}

= Circuit quantum electrodynamics
{parent=cavity-quantum-electrodynamics}
{wiki}

= Positrons are electrons travelling back in time
{parent=quantum-electrodynamics}

TODO understand this stuff:
* https://physics.stackexchange.com/questions/144607/are-all-positrons-electrons-traveling-back-in-time
* https://www.quora.com/Is-a-positron-just-an-electron-going-backwards-in-time?share=1

= Quantum electrodynamics bibliography
{parent=quantum-electrodynamics}

http://fafnir.phyast.pitt.edu/py3765/ Phys3765 Advanced Quantum Mechanics -- QFT-I Fall 2012 by E.S. Swanson mentions several milestone texts including:
* \x[advanced-quantum-mechanics-by-freeman-dyson-1951]

= Quantum Theory of Radiation by Fermi (1932)
{c}
{parent=quantum-electrodynamics-bibliography}

= Advanced quantum mechanics by Freeman Dyson (1951)
{c}
{parent=quantum-electrodynamics-bibliography}

https://arxiv.org/abs/quant-ph/0608140v1

Lecture notes that were apparently very popular at \x[cornell-university]. In this period he was actively synthesizing the revolutionary bullshit \x[richard-feynman] and \x[julian-schwinger] were writing and making it understandable to the more general \x[physicist] audience, so it might be a good reading.

\Q[We shall not develop straightaway a correct theory including many particles. Instead we follow the historical development. We try to make a relativistic quantum theory of one particle, find out how far we can go and where we get into trouble.]
Oh yes, see also: \x[dirac-equation-vs-quantum-electrodynamics].

= Selected Papers on Quantum Electrodynamics by Julian Schwinger (1958)
{c}
{parent=quantum-electrodynamics-bibliography}

Recommended by \x[ron-maimon] at https://physics.stackexchange.com/questions/18632/good-book-on-the-history-of-quantum-mechanics/18643#18643[].

\x[julian-schwinger]'s selection of \x[academic-paper]{p} by himself and others.

= Richard Feynman Quantum Electrodynamics Lecture at University of Auckland (1979)
{c}
{parent=quantum-electrodynamics-bibliography}

By \x[richard-feynman]{parent}.

Talk title shown on intro: "Today's Answers to Newton's Queries about Light".

6 hour lecture, where he tries to explain it to an audience that does not know any modern physics. This is a noble effort.

Part of The Douglas Robb Memorial Lectures lecture series.

Feynman apparently also made a book adaptation: https://en.wikipedia.org/wiki/QED:_The_Strange_Theory_of_Light_and_Matter[QED: The Strange Theory of Light and Matter]. That book is basically word by word the same as the presentation, including the diagrams.

According to http://www.feynman.com/science/qed-lectures-in-new-zealand/ the official upload is at http://www.vega.org.uk/video/subseries/8[] and Vega does show up as a watermark on the video (though it is too pixilated to guess without knowing it), a project that has been discontinued and has has a non-permissive license. Newbs.

4 parts:
* Part 1: is saying "\x[photon]{p} exist"
* Part 2: is amazing, and describes how photons move as a sum of all possible paths, not sure if it is relativistic at all though, and suggests that something is minimized in that calculation (the \x[action-physics])
* Part 3: is where he hopelessly tries to explain the crucial part of how electrons join the picture in a similar manner to how photons do.

  He does make the link to light, saying that there is a function $P(A, B)$ which gives the amplitude for a photon going from A to B, where A and B are spacetime events.

  And then he mentions that there is a similar function $E(A, B)$ for an electron to go from A to B, but says that that function is too complicated, and gives no intuition unlike the photon one.

  He does not mention it, but P and E are the so called \x[propagator]{p}.

  This is likely the \x[path-integral-formulation] of QED.

  On \x[quantum-mechanical-view-of-reality-by-richard-feynman-1983] he mentions that $E$ is a \x[bessel-function], without giving further detail.

  And also mentions that:
  $$
  E = f(1, 2, m) \\
  P = f(1, 2, 0)
  $$
  where `m` is basically a scale factor.
  such that both are very similar. And that something similar holds for many other particles.

  And then, when you draw a \x[feynman-diagram], e.g. electron emits photon and both are detected at given positions, you sum over all the possibilities, each amplitude is given by:
  $$
  c \times E(A, D) \times E(D, B) \times P(B, C)
  $$
  summed over all possible $D$ \x[spacetime] points.

  This is basically well said at: https://youtu.be/rZvgGekvHes?t=3349 from \x[quantum-mechanical-view-of-reality-by-richard-feynman-1983].

  TODO: how do electron velocities affect where they are likely to end up? $E(A, D)$ suggests the probability only depends on the spacetime points.

  Also, this clarifies why computations in QED are so insane: you have to sum over every possible point in space!!! TODO but then how do we calculate anything at all in practice?
* Part 4: known problems with QED and thoughts on QCD. Boring.
This talk has the merit of being very experiment oriented on part 2, big kudos: \x[how-to-teach-and-learn-physics]

\Video[https://www.youtube.com/watch?v=Alj6q4Y0TNE]
{title=Richard Feynman Quantum Electrodynamics Lecture at University of Auckland (1979) uploaded by Trev M (2015)}
{description=Single upload version. Let's use this one for the timestamps I guess.
* https://youtu.be/Alj6q4Y0TNE?t=2217[]: \x[photomultiplier-tube]
* https://youtu.be/Alj6q4Y0TNE?t=2410[]: \x[local-hidden-variable-theory]
* https://youtu.be/Alj6q4Y0TNE?t=6444[]: mirror experiment shown at https://en.wikipedia.org/w/index.php?title=Quantum_electrodynamics&oldid=991301352#Probability_amplitudes
* https://youtu.be/Alj6q4Y0TNE?t=7309[]: mirror experiment with a \x[diffraction-grating] pattern painted black leads to reflection at a weird angle
* https://youtu.be/Alj6q4Y0TNE?t=7627[]: detector under water to explain \x[refraction]
* https://youtu.be/Alj6q4Y0TNE?t=8050[]: explains \x[biconvex-spherical-lens]{p} in terms of minimal times
* https://youtu.be/Alj6q4Y0TNE?t=8402[]: mentions that for events in a series, you multiply the complex number of each step
* https://youtu.be/Alj6q4Y0TNE?t=9270[]: mentions that the up to this point, ignored:
  * amplitude shrinks down with distance
  * \x[photon-polarization]
  but it should not be too hard to add those
* https://youtu.be/Alj6q4Y0TNE?t=11697[]: finally starts electron interaction. First point is to add time of event detection.
* https://youtu.be/Alj6q4Y0TNE?t=13704[]: electron between plates, and mentions the word \x[action-physics], without giving a clear enough idea of what it is unfortunately
* https://youtu.be/Alj6q4Y0TNE?t=14467[]: mentions \x[positron]{p} going back in time, but does not clarify it well enough
* https://youtu.be/Alj6q4Y0TNE?t=16614[]: on the fourth part, half is about frontiers in \x[quantum-electrodynamics], and half full blown \x[theory-of-everything]. The QED part goes into \x[renormalization] and the large number of parameters of the \x[standard-model]
}

\Video[https://www.youtube.com/watch?v=LPDP_8X5Hug]

= Quantum Mechanical View of Reality by Richard Feynman (1983)
{c}
{parent=richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979}

Sample playlist: https://www.youtube.com/playlist?list=PLW_HsOU6YZRkdhFFznHNEfua9NK3deBQy

Basically the same content as: \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979], but maybe there is some merit to this talk, as it is a bit more direct in some points. This is consistent with what is mentioned at http://www.feynman.com/science/qed-lectures-in-new-zealand/ that the Auckland lecture was the first attempt.

Some more information at: https://iucat.iu.edu/iub/5327621

By Mill Valley, CA based producer "Sound Photosynthesis", some info on their website: http://sound.photosynthesis.com/Richard_Feynman.html

They are mostly a \x[new-age] production company it seems, which highlights Feynman's absolute cult status. E.g. on the last video, he's not wearing shoes, like a proper guru.

Feynman liked to meet all kinds of weird people, and at some point he got interested in the \x[new-age] \x[esalen-institute]. \x[surely-you-re-joking-mr-feynman] this kind of experience a bit, there was nude bathing on a pool that oversaw the sea, and a guy offered to give a massage to the he nude girl and the accepted.

https://youtu.be/rZvgGekvHest=5105 actually talks about \x[spin-physics], notably that the endpoint events also have a spin, and that the transition rules take spin into account by rotating thing, and that the transition rules take spin into account by rotating things.

= Quantum electrodynamics by Lifshitz et al. 2nd edition (1982)
{c}
{parent=quantum-electrodynamics-bibliography}

= Physics 253a by Sidney Coleman (1986)
{c}
{parent=quantum-electrodynamics-bibliography}

= QED and the men who made it: Dyson, Feynman, Schwinger, and Tomonaga by Silvan Schweber (1994)
{c}
{parent=quantum-electrodynamics-bibliography}

Available for \x[free] \x[online] \x[rent] on the \x[internet-archive]: https://archive.org/details/qedmenwhomadeitd0000schw

This book has formulas on it, which is quite cool!! And the formulas are basically not understandable unless you know the subject pretty well already in advance. It is however possible to skip over them and get back to the little personal stories.

= Advanced quantum mechanics II by Douglas Gingrich (2004)
{c}
{parent=quantum-electrodynamics-bibliography}

https://sites.ualberta.ca/~gingrich/courses/phys512/phys512.html

From \x[university-of-alberta].

= Weak interaction
{parent=quantum-field-theory}
{wiki}

= Weak force
{synonym}

Explains \x[beta-decay]. TODO why/how.

Maybe a good view of why this force was needed given \x[beta-decay] experiments is: in beta decay, a \x[neutron] is getting split up into an \x[electron] and a \x[proton]. Therefore, those charges must be contained inside the neutron somehow to start with. But then what could possibly make a positive and a negative particle separate?
* the \x[electromagnetic-force] should hold them together
* the \x[strong-force] seems to hold positive charges together. Could it then be pushing opposite-charges apart? Why not?
* \x[gravity] is too weak

http://www.thestargarden.co.uk/Weak-nuclear-force.html gives a quick and dirty:
\Q[
Beta decay could not be explained by the strong nuclear force, the force that's responsible for holding the atomic nucleus together, because this force doesn't affect electrons. It couldn't be explained by the electromagnetic force, because this does not affect \x[neutron]{p}, and the force of \x[gravity] is far too weak to be responsible. Since this new atomic force was not as strong as the strong nuclear force, it was dubbed the weak nuclear force.
]
Also interesting:
\Q[
While the photon 'carries' charge, and therefore mediates the \x[electromagnetic-force], the \x[z-boson][Z] and \x[w-boson][W] \x[boson]{p} are said to carry a property known as 'weak isospin'. \x[w-boson]{p} mediate the weak force when particles with charge are involved, and \x[z-boson]{p} mediate the weak force when neutral particles are involved.
]

\Video[https://www.youtube.com/watch?v=iIWTRwJlrGo]
{title="Weak Nuclear Force and \x[standard-model] of \x[particle-physics]" by \x[physics-videos-by-eugene-khutoryansky] (2018)}
{description=Some decent visualizations of the field lines.}

= Electroweak interaction
{parent=weak-interaction}
{wiki}

= Parity violation
{parent=weak-interaction}
{wiki}

This is quite \x[mind-blowing]. The \x[laws-of-physics] actually differentiate between particles and \x[antiparticle]{p} moving in opposite directions!!!

Only the \x[weak-interaction] however does it of the \x[fundamental-interaction]{p}.

Some historical remarks on \x[surely-you-re-joking-mr-feynman] section "The 7 Percent Solution".

It gets worse of course with \x[cp-violation].

= Wu experiment
{c}
{parent=parity-violation}
{title2=1956}
{wiki}

= CP Violation
{parent=parity-violation}
{wiki}

= CPT symmetry
{parent=cp-violation}
{wiki}

= Strong CP problem
{parent=cp-violation}
{wiki}

= Weak charge
{c}
{parent=weak-interaction}
{wiki}

= W boson
{c}
{parent=weak-interaction}
{wiki}

= Z boson
{c}
{parent=weak-interaction}
{wiki}

= Quantum chromodynamics
{parent=quantum-field-theory}
{title2=QCD}
{wiki}

Formulated as a \x[quantum-field-theory].

\Video[http://youtube.com/watch?v=FoR3hq5b5yE]
{title="Quarks, Gluon flux tubes, Strong Nuclear Force, & Quantum Chromodynamics" by \x[physics-videos-by-eugene-khutoryansky] (2018)}
{description=Some decent visualizations of how the field lines don't expand out like they do in \x[electromagnetism], suggesting \x[color-confinement].}

\Video[https://www.youtube.com/watch?v=LqUgzxJ8Jss]
{title="PHYS 485 Lecture 6: Feynman Diagrams" by \x[2011-phys-485-lecture-videos-by-roger-moore-from-the-university-of-alberta][Roger Moore] (2016)}
{description=Despite the title, this is mostly about QCD.}

= Quark
{parent=quantum-chromodynamics}
{wiki}

TODO experimental discovery.

= Down quark
{parent=quark}
{wiki}

= Up quark
{parent=quark}
{wiki}

= Why do the up ad down quarks have different masses?
{parent=up-quark}
{wiki}

https://www.quora.com/Why-do-up-quarks-and-down-quarks-have-different-charges

= Strange quark
{parent=quantum-chromodynamics}
{wiki}

= Gluon
{parent=quantum-chromodynamics}
{wiki}

Force carrier of \x[quantum-chromodynamics], like the \x[photon] is the force carrier of \x[quantum-electrodynamics].

One big difference is that it carrier itself \x[color-charge].

= Glueball
{parent=gluon}
{wiki}

= Proton decay
{parent=quantum-chromodynamics}
{wiki}

= Strong interaction
{parent=quantum-chromodynamics}
{wiki}

= Strong force
{synonym}

= Color charge
{parent=quantum-chromodynamics}
{wiki}

= Color confinement
{parent=quantum-chromodynamics}
{wiki}

Can be thought as being produced from \x[gluon]-gluon lines of the \x[feynman-diagram]{p} of \x[quantum-chromodynamics]. This is in contrast to \x[quantum-electrodynamics], in which there are no \x[photon]-photon vertices, because the photon does not have charge unlike gluons.

This phenomena makes the strong force be very very different from electromagnetism.

= Quantum field theory simulations
{parent=quantum-field-theory}

TODO why is it so hard to find anything non perturbative :-(

* https://www.youtube.com/channel/UCPHFUHiwbpMqC8ONxEICCiQ NanoNebula using raw \x[perl-programming-language] PDFL https://en.wikipedia.org/wiki/Perl_Data_Language (the Perl \x[numpy])
* https://www.youtube.com/watch?v=9TJe1Pr5c9Q "Interplay of Quantum Electrodynamics and Quantum Chromodynamics in the Nontrivial Vacuum" by CSSM Visualisation (2019)

On a \x[quantum-computer]...:
* https://www.cornell.edu/video/john-preskill-simulating-quantum-field-theory-with-quantum-computer Simulating Quantum Field Theory with a Quantum Computer by John Preskill (2019)
* https://www.youtube.com/watch?v=Lln-C21u0U8 Quantum Simulation from Quantum Chemistry to Quantum Field Theory by Peter Love (2019)

= Infinities in quantum field theory
{parent=quantum-field-theory}

TODO concrete example, please...
* https://physics.stackexchange.com/questions/310496/what-is-the-infinity-that-strikes-quantum-field-theory
* \x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] chapter 2.5 "The Divergences" contains a specific example by \x[pascual-jordan]

= Mathematical consistency of quantum field theory
{parent=infinities-in-quantum-field-theory}

https://physics.stackexchange.com/questions/16142/is-qft-mathematically-self-consistent

= Internal and spacetime symmetries
{parent=quantum-field-theory}

https://physics.stackexchange.com/questions/106392/internal-and-spacetime-symmetries

The different only shows up for \x[field-physics], not with particles. For fields, there are two types of changes that we can make that can keep the \x[lagrangian] unchanged as mentioned at \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] chapter "4.5.2 Noether's Theorem for Field Theories - Spacetime":
* \x[spacetime-symmetry]: act with the \x[poincare-group] on the \x[four-vector] spacetime inputs of the field itself, i.e. transforming $L(\Phi(x), \partial \Phi(x), dx)$ into $L(\Phi'(x'), \partial \Phi'(x'), x')$
* \x[internal-symmetry]: act on the output of the  field, i.e.: $L(\Phi(x) + \delta \Phi(x), \partial (\Phi(x) + \delta \Phi(x)), x)$

From \x[defining-properties-of-elementary-particles]:
* spacetime:
  * \x[mass]
  * \x[spin-physics]
* internal
  * \x[electric-charge]
  * \x[weak-charge]
  * \x[color-charge]

From the spacetime theory alone, we can derive the \x[lagrangian] for the free theories for each \x[spin-physics]:
* \x[spin-0]: \x[klein-gordon-equation]
* \x[spin-half]: \x[dirac-equation]
* \x[spin-1]: \x[proca-equation]
Then the internal symmetries are what add the interaction part of the \x[lagrangian], which then completes the \x[standard-model-lagrangian].

= Internal symmetry
{parent=internal-and-spacetime-symmetries}

= Spacetime symmetry
{parent=internal-and-spacetime-symmetries}

= Quantum field theory bibliography
{parent=quantum-field-theory}

* https://physics.stackexchange.com/questions/8441/what-is-a-complete-book-for-introductory-quantum-field-theory "What is a complete book for introductory quantum field theory?"
* https://www.quora.com/What-is-the-best-book-to-learn-quantum-field-theory-on-your-own on \x[quora]
* https://www.amazon.co.uk/Lectures-Quantum-Field-Theory-Ashok-ebook/dp/B07CL8Y3KY

Recommendations by friend P. C.:

* The Global Approach to Quantum Field Theory
* Lecture Notes | Geometry and Quantum Field Theory | Mathematics https://ocw.mit.edu/courses/mathematics/18-238-geometry-and-quantum-field-theory-fall-2002/lecture-notes/
* Towards the mathematics of quantum field theory (Frederic Paugam)
* Path Integrals in Quantum Mechanics (J. Zinn–Justin)
* (B.Hall) Quantum Theory for Mathematicians (B.Hall)
* Quantum Field Theory and the Standard Model (Schwartz)
* The Algebra of Grand Unified Theories (Baez)
* \x[quantum-field-theory-for-the-gifted-amateur-by-tom-lancaster-2015]

= Quantum field theory lecture notes
{parent=quantum-field-theory-bibliography}

Lecture notes found by \x[google][Googling] "quantum field theory pdf":
* https://www.ppd.stfc.ac.uk/Pages/Dasgupta_08_Intro_to_QFT.pdf "An Introduction to Quantum Field Theory" by Mrinal Dasgupta from the University of Manchester (2008). 48 pages.
* https://www.thphys.uni-heidelberg.de/~weigand/QFT2-14/SkriptQFT2.pdf "Quantum Field Theory I + II" by Timo Weigand from the Heidelberg University. Unknown year, references up to 2008.
* https://edu.itp.phys.ethz.ch/hs12/qft1/ Quantum Field Theory 1 by Niklas Beisert

= An Introduction to QED and QCD by Jeff Forshaw (1997)
{c}
{parent=quantum-field-theory-lecture-notes}

http://www.hep.man.ac.uk/u/forshaw/NorthWest/QED.pdf https://web.archive.org/web/20200824083133/http://www.hep.man.ac.uk/u/forshaw/NorthWest/QED.pdf

These seem very direct and not ultra advanced, good read.

= Quantum Field Theory lecture notes by David Tong (2007)
{c}
{parent=quantum-field-theory-lecture-notes}

https://www.damtp.cam.ac.uk/user/tong/qft/qft.pdf

Author: \x[david-tong]{parent}.

Number of pages: 155.

Likely used at: \x[david-tong-s-2009-quantum-field-theory-lectures-at-the-perimeter-institute].

Followup "Advanced QFT course" (AQFT, Quantum field theory II) by David Skinner http://www.damtp.cam.ac.uk/user/dbs26/AQFT.html

\Q[In this course we will not discuss \x[path-integral-formulation][path integral methods], and focus instead on canonical quantization.]

= Quantum Field Theory book by Mark Srednicki (2006)
{parent=quantum-field-theory-lecture-notes}

Free to view draft: https://web.physics.ucsb.edu/~mark/ms-qft-DRAFT.pdf Page presenting it: http://web.physics.ucsb.edu/~mark/qft.html

Author affiliation: University of California, Santa Barbara.

Number of pages: 616!

Don't redistribute clause, and final version by Cambridge University Press, alas, so corrections will never be merged back: http://web.physics.ucsb.edu/~mark/qft.html[]. But at least he's collecing erratas for the published (and therefore draft) versions there.

The book is top-level organized in spin 0, spin half, and spin 1. Quite ominous, really.

The preface states that one of its pedagogical philosophies is to "Illustration of the basic concepts with the simplest examples.", so maybe there is hope after all.

= Quantum field theory lectures
{parent=quantum-field-theory-bibliography}

= Relativistic Quantum Mechanics by Apoorva D Patel (2014)
{c}
{parent=quantum-field-theory-lectures}

https://www.youtube.com/playlist?list=PLbMVogVj5nJTDMhThY9xu2Tvg0u1RPuxO

45 1 hour lessons. The Indian traditional music opening is the best.

= New Revolutions in Particle Physics by Leonard Susskind (2009)
{c}
{parent=quantum-field-theory-lectures}

https://www.youtube.com/playlist?list=PL138995FAC49F5FB4

10 2-hour lessons.

Lecturer: \x[leonard-susskind].

= David Tong's 2009 Quantum Field Theory lectures at the Perimeter Institute
{scope}
{parent=quantum-field-theory-lectures}

https://www.youtube.com/playlist?list=PLaNkJORnlhZlVkrpQVvCTVvGAMIlXL88Y

Lecture notes: \x[quantum-field-theory-lecture-notes-by-david-tong-2007].

By \x[david-tong]{parent}.

14 1 hours 20 minute lectures.

The video quality is a bit wonky, extremely low resolution with images glued as he moves away from what he wrote :-)

= Lecture 1
{parent=david-tong-s-2009-quantum-field-theory-lectures-at-the-perimeter-institute}

https://www.youtube.com/watch?v=H3AFzbrqH68

= Quantum field theory courses by Tobias Osborne
{parent=quantum-field-theory-lectures}

= Quantum field theory lecture by Tobias Osborne (2017)
{scope}
{parent=quantum-field-theory-courses-by-tobias-osborne}

https://www.youtube.com/playlist?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS

This is a bit "\x[how-to-teach-and-learn-physics][formal hocus pocus first, action later]". But withing that category, it is just barely basic enough that 2021 Ciro can understand something.

By: \x[tobias-j-osborne]{parent}.

Lecture notes transcribed by a student: https://github.com/avstjohn/qft

18 1h30 lectures.

Followup course: \x[advanced-quantum-field-theory-lecture-by-tobias-osborne-2017].

= Lecture 1
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=T58H6ofIOpE

Bibliography review:
* \x[quantum-field-theory-lecture-notes-by-david-tong-2007] is the course basis
* \x[quantum-field-theory-in-a-nutshell-by-anthony-zee-2010] is a good quick and dirty book to start

Course outline given:
* classical field theory
* quantum scalar field. Covers \x[boson]{p}, and is simpler to get intuition about.
* quantum Dirac field. Covers \x[fermion]{p}
* interacting fields
* \x[perturbation-theory]
* \x[renormalization]

Non-relativistic \x[qft] is a limit of relativistic QFT, and can be used to describe for example \x[condensed-matter-physics] systems at very low temperature. But it is still very hard to make accurate measurements even in those experiments.

Defines "relativistic" as: "the \x[lagrangian] is symmetric under the \x[poincare-group]".

Mentions that "QFT is hard" because (a finite list follows???):
\Q[There are no nontrivial finite-dimensional unitary \x[representation-theory][representations] of the \x[poincare-group].]
But I guess that if you fully understand what that means precisely, QTF won't be too hard for you!

Notably, this is stark contrast with rotation symmetry groups (\x[special-orthogonal-group][SO(3)]) which appears in space rotations present in \x[non-relativistic-quantum-mechanics].

https://www.youtube.com/watch?v=T58H6ofIOpE&t=5097 describes the \x[relativistic-particle-in-a-box-thought-experiment] with shrinking walls

= Lecture 2
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=bTcFOE5vpOA&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=2

* the advantage of using \x[lagrangian-mechanics] instead of directly trying to work out the equations of motion is that it is easier to guess the Lagrangian correctly, while still imposing some fundamental constraints
* https://youtu.be/bTcFOE5vpOA?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&t=3375
  * \x[lagrangian-mechanics] is better for \x[path-integral-formulation]. But the \x[mathematics] of that is fuzzy, so not going in that path.
  * \x[hamiltonian-mechanics] is better for non-\x[path-integral-formulation]
* https://youtu.be/bTcFOE5vpOA?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&t=3449 Hamiltonian formalism requires finding conjugate pairs, and doing a 

= Lecture 3
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=cj-QpsZsDDY&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=3

* symmetry in classical field theory
* from Lagrangian density we can algorithmically get equations of motion, but the Lagrangian density is a more compact way of representing the equations of motion
* definition of symmetry in context: keeps Lagrangian unchanged up to a total derivative
* \x[noether-s-theorem]
* https://youtu.be/cj-QpsZsDDY?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&t=3062 Lagrangian and conservation example under translations
* https://youtu.be/cj-QpsZsDDY?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&t=3394 same but for \x[poincare-transformation]{p} But now things are harder, because it is harder to describe general infinitesimal Poincare transforms than it was to describe the translations. Using constraints/definition of Lorentz transforms, also constricts the allowed infinitesimal symmetries to 6 independent parameters
* https://youtu.be/cj-QpsZsDDY?list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&t=4525 brings out \x[poisson-bracket]{p}, and concludes that each conserved current maps to a \x[generator-of-a-lie-algebra][generator of the Lie algebra]

  This allows you to build the symmetry back from the conserved charges, just as you can determine conserved charges starting from the symmetry.

= Lecture 4
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=fnMcaq6QqTY&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=4

* quantization. Uses a more or less standard way to guess the quantized system from the classical one using \x[hamiltonian-mechanics].
* https://youtu.be/fnMcaq6QqTY?t=1179 remembers how to solve the non-field \x[quantum-harmonic-oscillator]
* https://youtu.be/fnMcaq6QqTY?t=2008 puts hats on everything to make the field version of things. With the \x[klein-gordon-equation] \x[hamiltonian], everything is analogous to the harmonic oscilator

= Lecture 5
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=fnMcaq6QqTY&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=5

* something about finding a unitary representation of the poincare group

= Lecture 8
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=ARes2YJNFds&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=8

Interactions.

= Lecture 9
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=zSSjgG9AbgM&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=9

\x[feynman-diagram].

= Lecture 14
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=zSSjgG9AbgM&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=9

Dirac field.

= Lecture 15
{parent=quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=J2lV8uNx0LU&list=PLDfPUNusx1EpRs-wku83aqYSKfR5fFmfS&index=15

Dirac equation.

= Advanced quantum field theory lecture by Tobias Osborne (2017)
{c}
{scope}
{parent=quantum-field-theory-courses-by-tobias-osborne}

https://www.youtube.com/playlist?list=PLDfPUNusx1ErSu1JDVV1KKGQkJQCkzL9u

Followup to \x[quantum-field-theory-lecture-by-tobias-osborne-2017].

When the word "advanced" precedes QFT, you know that the brainrape is imminent!!!

Big goal: explain the \x[standard-model].

= Lecture 2
{parent=advanced-quantum-field-theory-lecture-by-tobias-osborne-2017}

https://www.youtube.com/watch?v=hapYr6rX4JM&list=PLDfPUNusx1ErSu1JDVV1KKGQkJQCkzL9u&index=2

Gaussian path integrals.

= Quantum field theory book
{c}
{parent=quantum-field-theory-bibliography}

* https://web.archive.org/web/20150623011722/http://users.physik.fu-berlin.de/~kleinert/b6/psfiles/qft.pdf by https://en.wikipedia.org/wiki/Hagen_Kleinert[Hagen Kleinert] (2015). 1500 pages!
* The Quantum Theory of Fields by Steven Weinberg (2013) https://www.cambridge.org/core/books/quantum-theory-of-fields/22986119910BF6A2EFE42684801A3BDF 
* Quantum Field Theory by Lewis H. Ryder 2nd edition (1996) https://www.amazon.co.uk/Quantum-Field-Theory-Lewis-Ryder/dp/0521478146
* Lectures of Quantum Field Theory by Ashok Das (2018) https://www.amazon.co.uk/Lectures-Quantum-Field-Theory-Ashok-ebook/dp/B07CL8Y3KY
* A Modern Introduction to Quantum Field Theory by Michele Maggiore (2005) https://www.amazon.co.uk/Modern-Introduction-Quantum-Theory-Physics/dp/0198520743

= No-Nonsense Quantum Field Theory: A Student-Friendly Introduction by Jakob Schwichtenberg (2020)
{parent=quantum-field-theory-book}

This book really tries to recall basic things to ensure that the reader will be able to understand the more advanced ones.

Sometimes it goes a little bit overboard, like defining what a\x[function] does several times.

But \x[ciro-santilli] really prefers it when authors error on the side of obvious.

= Quantum Field Theory for The Gifted Amateur by Tom Lancaster (2015)
{parent=quantum-field-theory-book}

https://www.amazon.co.uk/Quantum-Field-Theory-Gifted-Amateur/dp/019969933X

People are mostly saying you have to be a more of a genius amateur to read it.

= Student Friendly Quantum Field Theory by Robert D Klauber (2013)
{parent=quantum-field-theory-book}

http://www.quantumfieldtheory.info/

https://www.quora.com/Whats-an-expert-opinion-on-Robert-Klaubers-Student-Friendly-Quantum-Field-Theory

https://www.amazon.co.uk/Student-Friendly-Quantum-Field-Theory/dp/0984513957

= Quantum field theory in a nutshell by Anthony Zee (2010)
{parent=quantum-field-theory-book}

Author: https://en.wikipedia.org/wiki/Anthony_Zee from \x[university-of-california-santa-barbara].

ISBN-13: 978-0691140346

\x[amazon-company]: https://www.amazon.com/dp/0691140340

\x[quantum-field-theory-lecture-by-tobias-osborne-2017/lecture-1] mentions that this book is quick and dirty, as one might guess from the title. \x[ciro-santilli] thinks he's gonna like this one.

First edition: from 2003, https://www.amazon.com/dp/0691010196[], ISBN-13: 978-0691010199.

Summary:
* page 8: \x[infinitely-many-slits-thought-experiment]

= Problem Book in Quantum Field Theory by Voja Radovanovic (2008)
{parent=quantum-field-theory-book}

https://www.springer.com/gp/book/9783540770138

= Quantum Field Theory Demystified by David McMahon (2008)
{parent=quantum-field-theory-book}

This didn't really deliver. It does start from the basics, but it is often hard to link those basics to more interesting or deeper points. Also like many other \x[quantum-field-theory-book], it does not seem to contain a single comparison between a theoretical result and an experiment.

= An Introduction To Quantum Field Theory by Peskin and Schroeder (1995)
{parent=quantum-field-theory-book}

https://www.amazon.co.uk/Introduction-Quantum-Theory-Frontiers-Physics/dp/0201503972

This is very widely used in courses as of 2020, it became kind of the default book.

800+ pages.

= Quantization
{disambiguate=physics}
{parent=quantum-mechanics}
{wiki}

= Quantized
{disambiguate=physics}
{synonym}

\x[quantum-field-theory-lecture-by-tobias-osborne-2017] mentions that quantization is a guess.

We make observations

= Quantization of a real scalar field
{parent=quantization-physics}

This is one of the first examples in most \x[quantum-field-theory].

It usually does not involve any forces, just the interpretation of what the \x[quantum-field] is.

https://www.youtube.com/watch?v=zv94slY6WqY&list=PLSpklniGdSfSsk7BSZjONcfhRGKNa2uou&index=2 Quantization Of A Free Real Scalar Field by Dietterich Labs (2019)

= Quantum superposition
{parent=quantum-mechanics}
{wiki}

Quantum superposition is really weird because it is fundamentally different than "either definite state but I don't know which", because the superposition state leads to different measurements than the non-superposition state.

Examples:
* https://www.youtube.com/watch?v=tt8gVXDsh7Q "Interference in quantum mechanics" by \x[looking-glass-universe] (2015) shows how a left-right \x[spin-physics] measurement has a defined value for a superposed half up half down state, but not for a pure up state.

  TODO can this be conducted? As mentioned in the video, this is closely linked to the fact that you can describe the wave function in multiple different bases (up/down or left/right), which is also at the root of the \x[uncertainty-principle].
* \x[video-quantum-mechanics-9b-photon-spin-and-schrodinger-s-cat-ii-by-viascience-2013] gives a similar photon version
* it seems that the \x[single-particle-double-slit-experiment] can also be thought of as in terms of a superposition of "the particle goes through the right" and "the particle goes through the right", although it is a bit harder to thing about as it is not a \x[discrete] process

= Quantum entanglement
{parent=quantum-mechanics}
{wiki}

Quantum entanglement is often called spooky/surprising/unintuitive, but they key question is to understand why.

To understand that, you have to understand why it is fundamentally impossible for the entangled particle pair be in a predefined state \x[bell-test-experiment][according to experiments done] e.g. where one is deterministically yes and the other deterministically down.

In other words, why \x[local-hidden-variable-theory] is not valid.

How to generate entangled particles:
* \x[particle-decay], notably \x[pair-production]
* for \x[photon]{p}, notably: \x[spontaneous-parametric-down-conversion], e.g.: https://www.youtube.com/watch?v=tn1sEaw1K2k "Shanni Prutchi Construction of an Entangled Photon Source" by HACKADAY (2015). Estimatd price: 5000 USD.

\Video[https://www.youtube.com/watch?v=zcqZHYo7ONs]
{title=Bell's Theorem: The Quantum Venn Diagram Paradox by \x[minutephysics] (2017)}
{description=Contains the clearest \x[bell-test-experiment] description seen so far.

It clearly describes the \x[photon]-based 22.5, 45 degree/85%/15% probability \x[photon-polarization] experiment and its result conceptually.

It does not mention \x[spontaneous-parametric-down-conversion] but that's what they likely hint at.

Done in Collaboration with \x[3blue1brown].

Question asking further clarification on why the 100/85/50 thing is surprising: https://physics.stackexchange.com/questions/357039/why-is-the-quantum-venn-diagram-paradox-considered-a-paradox/597982#597982
}

\Video[https://www.youtube.com/watch?v=sAXxSKifgtU]
{title=Bell's Inequality I by \x[viascience] (2014)}

\Video[https://www.youtube.com/watch?v=ZuvK-od647c]
{title=Quantum Entanglement & Spooky Action at a Distance by \x[veritasium] (2015)}
{description=Gives a clear explanation of a thought \x[bell-test-experiment]{p} with \x[electron] \x[spin-physics] of electron pairs from photon decay with three 120-degree separated slits. The downside is that he does not clearly describe an experimental setup, it is quite generic.}

\Video[https://www.youtube.com/watch?v=iVpXrbZ4bnU]
{title="Quantum Mechanics: Animation explaining quantum physics" by \x[physics-videos-by-eugene-khutoryansky] (2013)}
{description=Usual Eugene, good animations, and not too precise explanations :-) https://youtu.be/iVpXrbZ4bnU?t=922 describes a conceptual spin entangled electron-prositro \x[pair-production] \x[stern-gerlach-experiment] as a \x[bell-test-experiment]{p}. The 85% is mentioned, but not explained at all.}

\Video[https://www.youtube.com/watch?v=JFozGfxmi8A]
{title="Quantum Entanglement: Spooky Action at a Distance" by \x[don-lincoln] (2020)}
{description=This only has two merits compared to \x[video-quantum-entanglement-and-spooky-action-at-a-distance-by-veritasium-2015]: it mentions the Aspect et al. (1982) \x[bell-test-experiment], and it shows the continuous curve similar to https://en.wikipedia.org/wiki/File:Bell.svg[]. But it just does not clearly explain the bell test.}

\Video[https://www.youtube.com/watch?v=Z34ugMy1QaA]
{title=Quantum Entanglement Lab by \x[scientific-american] (2013)}
{description=The hosts interview Professor Enrique Galvez of Colgate University who shows briefly the \x[optical-table] setup without great details, and then moves to a whiteboard explanation. Treats the audience as stupid, doesn't say the keywords \x[spontaneous-parametric-down-conversion] and \x[bell-s-theorem] which they clearly allude to. You can even them showing a two second footage of the professor explaining the rotation experiments and the data for it, but that's all you get.}

= Bell's theorem
{c}
{parent=quantum-entanglement}
{wiki}

Basically a precise statement of "\x[quantum-entanglement] is spooky".

= Bell test experiment
{c}
{parent=bell-s-theorem}
{wiki=Bell_test_experiments}

Some of the most remarkable ones seem to be:
* Alain Aspect 1982
* Hensen et al., Giustina et al., Shalm et al. (2015): "\x[loopholes-in-bell-test-experiments][loophole]-free" Bell tests

= Loopholes in Bell test experiments
{parent=bell-test-experiment}
{wiki}

= Local hidden-variable theory
{parent=bell-s-theorem}
{wiki}

= EPR paradox
{c}
{parent=bell-s-theorem}
{wiki}

= Experimental particle physics
{parent=particle-physics}
{wiki}

= Cross section
{disambiguate=physics}
{parent=experimental-particle-physics}
{wiki}

https://cms.cern/news/what-do-we-mean-cross-section-particle-physics

The \x[neutron-temperature] example is crucial: you just can't give the cross section of a target alone, the \x[energy] of the incoming beam also matters.

= Barn
{disambiguate=unit}
{parent=cross-section-physics}
{wiki}

= Particle detector
{parent=experimental-particle-physics}
{wiki}

= Cloud chamber
{parent=particle-detector}
{title2=}
{wiki}

= Bubble chamber
{parent=particle-detector}
{wiki}

= Particle accelerator
{parent=experimental-particle-physics}
{wiki}

= Synchrotron
{parent=particle-accelerator}
{wiki}

Most important application: produce \x[x-ray]{p} for \x[x-ray-crystallography].

List of facilities: https://en.wikipedia.org/wiki/List_of_synchrotron_radiation_facilities

= Nuclear physics
{parent=particle-physics}
{wiki}

Nuclear physics is basically just the study of the complex outcomes of \x[weak-interaction] + \x[quantum-chromodynamics].

= Atomic nucleus
{parent=nuclear-physics}
{wiki}

= Nucleus
{synonym}

= Nucleon
{parent=atomic-nucleus}
{wiki}

A \x[proton] or a \x[neutron].

= Nuclear force
{parent=atomic-nucleus}
{wiki}

Side effect of the \x[strong-force] that in addition to binding individual \x[proton]{p} and \x[neutron]{p} as units, also binds different protons and neutrons to one another.

= Radioactive decay
{parent=nuclear-physics}
{wiki}

= Radioactivity
{synonym}

= Radioactive
{synonym}

\x[ciro-santilli] finds it interesting that radioactive decay basically kickstarted the domain of \x[nuclear-physics] by essentially providing a natural \x[particle-accelerator] from a chunk of radioactive element.

The discovery process was particularly interesting, including \x[henri-becquerel]'s luck while observing \x[phosphorescence], and \x[marie-curie]'s observation that the \x[uranium] \x[ore] were more radioactive than pure uranium, and must therefore contain other even more radioactive substances, which lead to the discovery of \x[polonium] (\x[half-life] 138 days) and \x[radium] (half-life 1600 years).

\Image[https://upload.wikimedia.org/wikipedia/commons/6/65/Decay_chain%284n%2B2%2C_Uranium_series%29.svg]
{title=\x[uranium]-238 decay chain.}

= Alpha decay
{parent=radioactive-decay}
{wiki}

Most of the \x[helium] in the Earth's atmosphere comes from alpha decay, since helium is lighter than air and naturally escapes out out of the atmosphere.

Wiki mentions that alpha decay is well modelled as a \x[quantum-tunnelling] event, see also \x[geiger-nuttall-law].

As a result of that law, alpha particles have relatively little energy variation around 5 MeV or a speed of about 5% of the \x[speed-of-light] for any element, because the energy is inversely exponentially proportional to \x[half-life]. This is because:
* if the energy is much larger, decay is very fast and we don't have time to study the \x[isotope]
* if the energy is much smaller, decay is very rare and we don't have enough events to observe at all

= Cluster decay
{parent=alpha-decay}
{wiki}

= Spontaneous fission
{parent=alpha-decay}
{wiki}

= Alpha particle
{parent=alpha-decay}
{wiki}

= Geiger-Nuttall law
{c}
{parent=alpha-particle}
{wiki=Geiger–Nuttall_law}

= Beta decay
{parent=radioactive-decay}
{wiki}

\x[uranium]{c} emits them, you can see their mass to charge ratio under magnetic field and so deduce that they are \x[electron]{p}.

Caused by \x[weak-interaction] TODO why/how.

The emitted electron kinetic energy is random from zero to a maximum value. The rest goes into a \x[neutrino]. This is how the neutrino was first discovered/observed indirectly. This is well illustrated in a \x[decay-scheme] such as \x[image-caesium-137-decay-scheme].

= Gamma ray
{parent=radioactive-decay}
{wiki}

Most commonly known as a byproduct \x[radioactive-decay].

A \x[decay-scheme] such as \x[image-caesium-137-decay-scheme] illustrates well how gamma radiation happens as a byproduct of \x[radioactive-decay] due to the existence of \x[nuclear-isomer].

Gamma rays are pretty cool as they give us insight into the energy levels/different configurations of the nucleus.

They have also been used as early sources of high energy particles for \x[particle-physics] experiments before the development of \x[particle-accelerator]{p}, serving a similar purpose to \x[cosmic-ray]{p} in those early days.

But \x[gamma-ray]{p} they were more convenient in some cases because you could more easily manage them inside a \x[laboratory] rather than have to go climb some bloody mountain or a \x[balloon].

The \x[positron] for example was first observed on \x[cosmic-ray]{p}, but better confirmed in \x[gamma-ray] experiments by \x[carl-david-anderson].

= Nuclear isomer
{parent=gamma-ray}
{wiki}

= Decay scheme
{parent=radioactive-decay}
{wiki}

Example: \x[image-caesium-137-decay-scheme]

= Half-life
{parent=radioactive-decay}
{wiki}

The \x[half-life] of \x[radioactive-decay], which as discovered a few years before \x[quantum-mechanics] was discovered and matured, was a major mystery. Why do some nuclei fission in apparently random fashion, while others don't? How is the state of different nuclei different from one another? This is mentioned in \x[inward-bound-by-abraham-pais-1988] Chapter 6.e Why a half-life?

= Isotope
{parent=nuclear-physics}
{wiki}

= Nuclear fission
{parent=nuclear-physics}
{wiki}

= Neutron temperature
{parent=nuclear-fission}
{wiki}

https://www.radioactivity.eu.com/site/pages/Slow_Neutrons.htm

= Fast neutron
{parent=neutron-temperature}
{wiki}

= Slow neutron
{parent=neutron-temperature}
{wiki}

= Fissile material
{parent=nuclear-fission}
{wiki}

= Nuclear chain reaction
{parent=nuclear-fission}
{wiki}

= Nuclear reactor
{parent=nuclear-chain-reaction}
{wiki}

Some of the most notable ones:
* 1942: \x[chicago-pile-1]{child}: the first human-made \x[nuclear-chain-reaction].
* 1943: \x[x-10-graphite-reactor]{child}: an intermediate step between the \x[nuclear-chain-reaction] prototype \x[chicago-pile-1] and the full blown mass production at \x[hanford-site]. Located in the \x[oak-ridge-national-laboratory].
* \x[b-reactor]{child} produced the \x[plutonium] used for \x[trinity-nuclear-test] and \x[fat-man].

= Nuclear magnetic resonance
{parent=nuclear-physics}
{wiki}

= Magnetic resonance imaging
{parent=nuclear-magnetic-resonance}
{title2=MRI}
{wiki}

TODO what does it measure? \x[hydrogen] concentration?

= Nuclear weapon
{parent=nuclear-physics}
{wiki}

= Atomic bomb
{synonym}

= Nuclear bomb
{synonym}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Plutonium_ring.jpg/505px-Plutonium_ring.jpg]
{title=A weapons-grade ring of electrorefined plutonium, typical of the rings refined at Los Alamos and sent to Rocky Flats for fabrication.}
{description=The ring has a purity of 99.96%, weighs 5.3 kg, and is approx 11 cm in diameter. It is enough plutonium for one bomb core. Which city shall we blow up today?}

\x[ciro-santilli] is mildly obsessed by nuclear reactions, because they are so \x[ciro-santilli-s-self-perceived-creative-personality][quirky]. How can a little ball destroy a city? How can putting too much of it together produce criticality and kill people like in the https://en.wikipedia.org/wiki/Demon_core[Slotin accident] or the https://www.youtube.com/watch?v=ZWomuWd7-to[Tokaimura criticality accident]. It is \x[mind-blowing] really.

\x[uranium]{c} vs \x[plutonium]: \x[uranium-vs-plutonium-quora-answer-by-ciro-santilli]{full}.

More fun nuclear stuff to watch:
* \x[dr-strangelove-1964]
* https://en.wikipedia.org/wiki/Chernobyl_(miniseries)[]
* https://www.youtube.com/watch?v=g3SKBwzTtv0 "The World Of Enrico Fermi (1970)" produced by "Harvard Project Physics"
* https://en.wikipedia.org/wiki/Fat_Man_and_Little_Boy[Fat Man and Little Boy (1987)] shows a possibly reasonably realistic of the history of the development of https://en.wikipedia.org/wiki/Trinity_(nuclear_test)[Trinity]

= Fission weapon
{parent=nuclear-weapon}

= Boosted fission weapon
{parent=fission-weapon}
{wiki}

= Thermonuclear weapon
{parent=nuclear-weapon}
{wiki}

= Hydrogen bomb
{synonym}

= H bomb
{synonym}

= Mark 17 nuclear bomb
{c}
{parent=thermonuclear-weapon}
{title2=1954-1957}
{wiki}

= Nuclear site
{parent=nuclear-weapon}

= Hanford site
{c}
{parent=nuclear-site}
{wiki}

The \x[b-reactor] of the facility produced the \x[plutonium] used for \x[trinity-nuclear-test] and \x[fat-man], and then for many more thousand bombs during the \x[cold-war]. More precisely, this was done at 

Located in \x[washington-state], in a dry place the middle of the mountainous areas of the Western United states, where basically no one lives. The Columbia river is however nearby, that river is quite large, and provided the water needed by their activities, notably for cooling the \x[nuclear-reactor]{p}. It is worth it having look on \x[google-maps] to get a feel for the region.

Unlike many other such laboratories, this one did not become a \x[united-states-department-of-energy-national-laboratories]. It was likely just too polluted.

Bibliography:
* \x[los-alamos-from-below-by-richard-feynman-1975]

= B Reactor
{c}
{parent=hanford-site}
{wiki}

Reactor of the \x[hanford-site] of the produced the \x[plutonium] used for \x[trinity-nuclear-test] and \x[fat-man].

= Nuclear weapons program
{c}
{parent=nuclear-weapon}
{wiki}

= American nuclear weapons program
{c}
{parent=nuclear-weapons-program}
{wiki}

= Manhattan Project
{c}
{parent=american-nuclear-weapons-program}
{wiki}

= Chicago Pile-1
{c}
{parent=manhattan-project}
{title2=1942-12-02}
{wiki}

The first human-made \x[nuclear-chain-reaction].

= Metallurgical Laboratory
{c}
{parent=chicago-pile-1}
{wiki}

The lab that made \x[chicago-pile-1], located in the \x[university-of-chicago]. Metallurgical in this context basically as in "working with the metals \x[uranium] and \x[plutonium]".

Given their experience, they also designed the important \x[x-10-graphite-reactor] and the \x[b-reactor] which were built in other locations.

= Trinity
{c}
{disambiguate=nuclear-test}
{parent=manhattan-project}
{title2=1945-07-16}
{wiki}

\x[plutonium]-based.

Its plutonium was produced at \x[hanford-site].

= British nuclear weapons program
{c}
{parent=nuclear-weapons-program}
{wiki}

= Atomic Weapons Establishment
{c}
{parent=nuclear-weapons-program}
{title2=AWE}
{wiki}

Their website, and in particular the recruitment section, are so creepy.

There's not mention of bombs. No photos of atomic explosions. The words "atomic" and "weapon" do not even show up in the front page!!! The acronym AWE is instead used everywhere as an \x[euphemism].

In the recruitment section we can see a bunch of people smiling: https://web.archive.org/web/20211007213222/https://www.awe.co.uk/careers/working-at-awe/[], suggesting:
\Q[We make nukes, and we do it with a smile!]
There's even children \x[outreach]!!!

\x[ciro-santilli] is not against storing a few nukes to be ready against \x[dictatorship]{p}. But don't be such a pussy! Just say what the fuck you are doing more clearly! You are making weapons to kill people and destroy things in order to maintain the \x[balance-of-power]. If the public can't handle such facts, then shut down the fucking program.

= German nuclear weapons program
{c}
{parent=nuclear-weapons-program}
{title2=Uranprojekt, Uranverein}
{wiki}

= Multiple independently targetable reentry vehicle
{parent=nuclear-weapon}
{wiki}

= MIRV
{c}
{synonym}
{title2}

\x[ciro-santilli]'s jaw dropped when he learned about this concept. \x[a-small-talent-for-war], are you sure?

= List of nuclear weapons
{parent=nuclear-weapon}

= Fat Man
{c}
{parent=list-of-nuclear-weapons}
{title2=1945}
{wiki}

\x[plutonium]-based.

Its plutonium was produced at \x[hanford-site].

= Little Boy
{c}
{parent=list-of-nuclear-weapons}
{title2=1945}
{wiki}

\x[uranium]-based, dropped on Hiroshima. The uranium was enriched at the \x[clinton-engineer-works].

= History of particle physics
{parent=particle-physics}

* https://en.wikipedia.org/wiki/Timeline_of_particle_physics
* https://en.wikipedia.org/wiki/History_of_subatomic_physics

= Inward Bound by Abraham Pais (1988)
{c}
{parent=history-of-particle-physics}

Free borrow on the \x[internet-archive]: https://archive.org/details/inwardboundofmat0000pais/page/88/mode/2up

The book unfortunately does not cover the history of \x[quantum-mechanics] very, the author specifically says that this will not be covered, the focus is more on particles/forces. But there are still some mentions.

= Particle physics bibliography
{parent=particle-physics}

Some light YouTube channels, good for the first view, but which don't go into enough detail to truly show the subject's beauty:

= PBS Space Time
{c}
{parent=particle-physics-bibliography}

https://www.youtube.com/channel/UC7_gcs09iThXybpVgjHZ_7g

Always a bit too much on the superficial side, but sometimes OK, 5-10 minute videos.

https://en.wikipedia.org/wiki/Matt_O%27Dowd_(astrophysicist)

= 2011 PHYS 485 lecture videos by Roger Moore from the University of Alberta
{parent=particle-physics-bibliography}

These feel good. Targeted at upper \x[undergrad]{p}, so he says he holds back on some stuff, but gives a good level of detail for people who have a life.

= Particle physics YouTube channel
{parent=particle-physics-bibliography}

https://www.youtube.com/playlist?list=PLSrKSt8xhLVrc0ptX1OYr3OWoOvrxBOvz

= Andrew Dotson YouTube channel
{c}
{parent=particle-physics-youtube-channel}

https://www.youtube.com/channel/UCnFmWQbVW_YbqPQZGNuq8sA

Too many fun skit videos for \x[ciro-santilli]'s taste, but does have some serious derivations in \x[quantum-electrodynamics].

= Andrew Dotson
{c}
{parent=andrew-dotson-youtube-channel}

= Dietterich Labs
{c}
{parent=particle-physics-youtube-channel}

https://www.youtube.com/channel/UCd02pSRrecAVFOPjB-bfv-Q

Covers some specific hardcore subjects, notably \x[quantum-electrodynamics], in full \x[mathematical] detail, e.g.: "Quantum Field Theory Lecture Series" playlist: https://www.youtube.com/playlist?list=PLSpklniGdSfSsk7BSZjONcfhRGKNa2uou

Dietterich is a \x[condensed-matter] PhD candidate or post-doc as of 2020 apparently, living in \x[minnesota]https://www.youtube.com/watch?v=Fs9O1PZDtag{ref}.

Unfortunately the channel is too obsessed with mathematical detail (which it does amazingly), and does not give enough examples/application/intuition, which is what would be useful to most people.

This channel does have on merit however: compared to other university courses, it is much more direct, which might mean that you get to something interesting before you got bored to death.

Videos generally involves short talks + a detailed read-through of a pre-prepared \x[pdf]. Dietterich has refused however giving the PDF or \x[latex] source as of 2020 on comments unfortunately... what a \x[open-educational-resources][wasted opportunity] for society.

Full name as shown in channel content: Samuel Dietterich. Other accounts:
* https://twitter.com/samdietterich?lang=en
* https://www.researchgate.net/profile/Samuel-Dietterich-2

\Video[https://www.youtube.com/watch?v=7v0vVFRkXWs]
{title="The Ultimate Goal Of My YouTube Channel" by \x[dietterich-labs] (2020)}
{description=In this video Dietterich gives his \x[ideal] for the channel. Notably, he describes how the few experimental videos he has managed to make were done in a opportunistic way from experiments that were happening around him. This resonated with Ciro's ideas from \x[videos-of-all-key-physics-experiments].}

= Pretty Much Physics
{c}
{parent=particle-physics-youtube-channel}

https://www.youtube.com/channel/UCVa8De6q6aOjtx_TEiDBaMw

Almost always \x[the-missing-link-between-basic-and-advanced][too short superficial where it matters unfortunately], as usual.

= ViaScience
{c}
{parent=particle-physics-youtube-channel}

https://www.youtube.com/c/viascience

Those guys are really good, \x[ciro-santilli] especially enjoyed their \x[quantum-mechanics] playlist: https://www.youtube.com/playlist?list=PL193BC0532FE7B02C

The \x[quantum-electrodynamics] one was a bit too slow paced for Ciro unfortunately, too much groundwork and too little results.

Accompanying website with a tiny little bit of code: http://viascience.org/what.html

TODO: authors and their affiliation.

Videos licensed as \x[cc-by-sa], those guys are so good.

= Physics Videos by Eugene Khutoryansky
{c}
{parent=particle-physics-youtube-channel}

https://www.youtube.com/user/EugeneKhutoryansky

These videos can give some geometric insight and do have their value.

But they are sometimes too slow, \x[there are never any mention of experiments, just how-to-teach-and-learn-physics]["the truth"].

And when things get "\x[mathy]", it sticks to a more qualitative view which may not be enough.

Very over the top with \x[sexy] demons and angels making appearances, and has some classic aesthetic artistic value :-)

Eugene's background: https://www.quora.com/Who-is-Eugene-Khutoryansky/answer/Ciro-Santilli

= Don Lincoln
{c}
{parent=particle-physics-youtube-channel}
{title2=particle physicist, YouTubber}
{wiki}

https://www.youtube.com/watch?v=vIJTwYOZrGU&list=PLCfRa7MXBEsoJuAM8s6D8oKDPyBepBosS

Publishes through the \x[fermilab] \x[youtube] channel under the playlist "Fermilab - Videos by Don Lincoln"

Some insights, but too much on the \x[popular-science] side of things.

= Energy
{parent=physics}
{wiki}

= Joule
{c}
{parent=energy}
{title2=J}
{wiki}

= Conservation of energy
{parent=energy}
{wiki}

= Energy is conserved
{synonym}

= Potential energy
{parent=energy}
{wiki}

= Kinetic energy
{parent=energy}
{wiki}

Why kinetic energy is $mv^2/2$:
* why the square: https://physics.stackexchange.com/questions/535/why-does-kinetic-energy-increase-quadratically-not-linearly-with-speed on \x[physics-stack-exchange]. \x[ron-maimon]'s answer is great, as it relies only on the following staring points:
  * \x[energy-is-conserved]
  * \x[galilean-invariance]
  He also offers a \x[symmetry] argument considering the case of \x[potential-energy].
* why the half: https://physics.stackexchange.com/questions/27847/why-is-there-a-frac-1-2-in-frac-1-2-mv2 on \x[physics-stack-exchange]

= Experimental physics
{parent=physics}
{wiki}

Experiment and theory are like the \x[yin-and-yang]: opposites, but one cannot exist without the other.

= Theoretical physics
{parent=experimental-physics}
{wiki}

= Field
{disambiguate=physics}
{parent=physics}
{wiki}

\x[quantum-field-theory-lecture-notes-by-david-tong-2007] puts it well:
\Q[
In classical physics, the primary reason for introducing the concept of the \x[field-physics] is to construct laws of Nature that are local. The old laws of Coulomb and Newton involve "action at a distance". This means that the force felt by an electron (or planet) changes immediately if a distant \x[proton] (or star) moves. This situation is philosophically unsatisfactory. More importantly, it is also experimentally wrong. The field theories of Maxwell and Einstein remedy the situation, with all interactions mediated in a local fashion by the field.
]
This is also mentioned e.g. at \x[video-the-quantum-experiment-that-almost-broke-locality-by-the-science-asylum-2019].

= Principle of locality
{parent=field-physics}
{wiki}

= Law of physics
{parent=physics}
{wiki=Scientific_law#Laws_of_physics}

= Laws of physics
{synonym}

= History of physics
{parent=physics}
{wiki}

Good reading list: \x[abraham-pais-prize-for-history-of-physics]{child}.

In other sections:
* \x[history-of-particle-physics]{child}

= Condensed matter physics
{parent=physics}
{wiki}

= Condensed matter
{synonym}

Includes fun things like:
* \x[superconductivity] and \x[superfluidity]
* \x[semiconductor]{p}

= Solid-state physics
{parent=condensed-matter-physics}
{wiki}

= Condensed matter Physics bibliography
{parent=condensed-matter-physics}

* https://www.youtube.com/watch?v=RImqF8z91fU&list=PLtTPtV8SRcxi91n9Mni2xcQX4KhjX91xp Solid State Physics" course by Sergey Frolov taught at the University of Pittsburgh in the Fall 2015 semester

= Course: Quantum Many-Body Physics in Condensed Matter by Luis Gregorio Dias (2020)
{parent=condensed-matter-physics-bibliography}

https://www.youtube.com/playlist?list=PL6FyrZIBwD8LMWizZW1FUN2dS_l44yuiy

Affiliation: \x[university-of-sao-paulo].

= Electronic band theory
{parent=condensed-matter-physics}
{wiki}

How are the bands measured experimentally?

Why are there gaps? Why aren't bands infinite? What determines the width of gaps?

Bibliography:
* \x[applications-of-quantum-mechanics-by-david-tong-2017] Chapter 2 "Band Structure"

= Semiconductor
{parent=condensed-matter-physics}
{wiki}

The basis of 1970-20XX \x[computer]{p}, gotta understand them I guess.

= Superconductivity
{parent=condensed-matter-physics}
{wiki}

= Superconductor
{synonym}

Experiments:
* "An introduction to superconductivity" by Alfred Leitner originally published in 1965, source: http://www.alfredleitner.com/
* Isotope effect on the critical temperature. http://hyperphysics.phy-astr.gsu.edu/hbase/Solids/coop.html mentions that:

  \Q[If electrical conduction in mercury were purely electronic, there should be no dependence upon the nuclear masses. This dependence of the critical temperature for superconductivity upon isotopic mass was the first direct evidence for interaction between the electrons and the lattice. This supported the \x[bcs-theory] of lattice coupling of electron pairs.]

Lectures:
* \Video[http://youtube.com/watch?v=O_zjGYvP4Ps]
  {title="20. Fermi gases, BEC-BCS crossover" by Wolfgang Ketterle (2014)}
  {description=Part of the "Atomic and Optical Physics" series, uploaded by \x[mit-opencourseware].}

  Actually goes into the equations.

  Notably, https://youtu.be/O_zjGYvP4Ps?t=3278 describes extremely briefly an experimental setup that more directly observes pair condensation.
* \Video[http://youtube.com/watch?v=Yx666k2XH8E]
  {title="Steven Kivelson | Superconductivity and Quantum Mechanics at the Macro-Scale - 1 of 2" by Stanford Institute for Theoretical Physics (2016)}
  {description=Gives a reasonable basis overview, but does not go into the meat of BCS it at the end.}

Media:
* http://www.supraconductivite.fr/en/index.php#supra-explication

  Cool CNRS video showing the condensed wave function, and mentioning that "every pair moves at the same speed". To change the speed of one pair, you need to change the speed of all others. That's why there's not energy loss.

Transition into superconductivity can be seen as a \x[phase-transition], which happens to be a \x[second-order-phase-transition].

= Cooper pair
{c}
{parent=superconductivity}
{wiki}

= Superconducting material
{parent=superconductivity}

= Type-I superconductor
{parent=superconducting-material}
{wiki}

= Type-II superconductor
{parent=superconducting-material}
{wiki}

= High-temperature superconductivity
{parent=superconducting-material}
{wiki}

\Image[https://upload.wikimedia.org/wikipedia/commons/b/bb/Timeline_of_Superconductivity_from_1900_to_2015.svg]
{height=600}

= Yttrium barium copper oxide
{parent=superconducting-material}
{wiki}

= YBCO
{c}
{synonym}
{title2}

Upside: superconducting above 92K, which is above the 77K of \x[liquid-nitrogen], and therefore much much cheaper to obtain and maintain than liquid helium.

Downside: it is brittle, so how do you make wires out of it? Still, can already be used in certain circuits, e.g. high temperature \x[squid-device]{p}.

= Bismuth strontium calcium copper oxide
{parent=superconducting-material}
{wiki}

= BSCCO
{c}
{synonym}
{title2}

Discovered in 1988, the first \x[high-temperature-superconductivity][high-temperature superconductor] which did not contain a rare-earth element.

= Applications of superconductivity
{parent=superconductivity}

Superconductivity is one of the key advances of 21st century technology:
* the \x[josephson-effect] can be used both for:
  * \x[squid-device]: precise \x[magnetometer]
  * basis for \x[superconducting-quantum-computer]
* can be used to produce powerful magnetic fields, which in turn can be used to:
  * \x[magnetic-confinement-fusion]

= What is the IV curve of superconductors?
{parent=superconductivity}

TODO, come on, Internet!

Bibliography.

= Do superconductors carry infinite current?
{parent=what-is-the-iv-curve-of-superconductors}

No, see: \x[what-is-the-iv-curve-of-superconductors].

Bibliography:
* https://physics.stackexchange.com/questions/62664/how-can-ohms-law-be-correct-if-superconductors-have-0-resistivity on \x[physics-stack-exchange]
* https://www.quora.com/Do-superconductors-produce-infinite-current-I-V-R-R-0-How-do-they-fit-into-quantum-theory
* https://www.reddit.com/r/askscience/comments/dcgdf/does_superconductivity_imply_infinite_current/

= BCS Theory
{c}
{parent=superconductivity}
{wiki}

Main theory to explain Type I superconductors very successfully.

TODO can someone please just give the final predictions of BCS, and how they compare to experiments, first of all? Then derive them.

High level concepts:
* the wave functions of pairs of electrons (fermions) get together to form bosons. This is a \x[phase-transition] effect, thus the specific sudden transition temperature.
* the pairs form a \x[bose-einstein-condensate]
* once this new state is reached, all pairs are somehow entangled into one big wave function, and you so individual lattice imperfections can't move just one single electron off trajectory and make it lose energy

= Josephson effect
{c}
{parent=superconductivity}
{wiki}

\x[discrete]{p} \x[quantum] effect observed in \x[superconductor]{p} with a small insulating layer.

TODO: curves showing the effect.

The effect is likely mentioned in Leitner's video at: https://www.youtube.com/watch?v=BFdq6IecUJc&t=2290s

Bibliography:
* https://www.youtube.com/watch?v=cnZ6exn2CkE "Superconductivity: Professor Brian Josephson". Several random excerpts from Cambridge people talking about the Josephson effect

= Josephson junction
{c}
{parent=josephson-effect}
{wiki}

A device that exhibits the \x[josephson-effect].

= Magnetic flux quantum
{c}
{parent=josephson-effect}
{wiki}

= Josephson constant
{c}
{parent=magnetic-flux-quantum}

The inverse of the \x[magnetic-flux-quantum].

= Applications of Josephson Junctions
{parent=josephson-effect}

* the basis for the most promising 2019 \x[quantum-computing] implementation: \x[superconducting-quantum-computer]
* offers https://en.wikipedia.org/wiki/Josephson_voltage_standard[the most practical/precise volt standard], which motivated the definition of the \x[ampere-in-the-2019-redefinition-of-the-si-base-units]

  Quick NIST article about it: https://www.nist.gov/news-events/news/2013/04/primary-voltage-standard-whole-world (https://web.archive.org/web/20190410011041/https://www.nist.gov/news-events/news/2013/04/primary-voltage-standard-whole-world[archive])
* \x[squid-device]

= SQUID device
{c}
{parent=applications-of-josephson-junctions}
{wiki=SQUID}

Can be used as a very precise \x[magnetometer].

There are high temperature \x[yttrium-barium-copper-oxide] ones that work on \x[liquid-nitrogen].

= Superconducting tunnel junction
{parent=condensed-matter-physics}
{title2=STJ}
{wiki}

Specific type of \x[josephson-junction]. Probably can be made tiny and in huge numbers through \x[photolithography].

\Image[https://web.archive.org/web/20210124093431im_/https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Superconducting_tunnel_junction.svg/735px-Superconducting_tunnel_junction.svg.png]
{title=Illustration of a thin-film superconducting tunnel junction (STJ).}
{description=The superconducting material is light blue, the insulating tunnel barrier is black, and the substrate is green.}
{source=https://upload.wikimedia.org/wikipedia/commons/8/81/Superconducting_tunnel_junction.svg}

\Video[http://youtube.com/watch?v=-HUVGWTfaSI]
{title="Quantum Transport, Lecture 14: Josephson effects" by Sergey Frolov.}
{description=https://youtu.be/-HUVGWTfaSI?t=878 mentions https://en.wikipedia.org/wiki/Electron-beam_lithography[maskless electron beam litograpy] being used to produce STJs.}

= Superfluidity
{parent=condensed-matter-physics}
{wiki}

= Superfluid
{synonym}

\Video[http://youtube.com/watch?v=7eZlF6IToQs]
{title="Alfred Leitner - Liquid Helium II the Superfluid" by Alfred Leitner (1963)}
{description=Original source: http://www.alfredleitner.com[].}

\Video[http://youtube.com/watch?v=9FudzqfpLLs]
{title="Ben Miller experiments with superfluid helium - Horizon: What is One Degree? - BBC Two" by BBC (2011)}
{description=Just quickly shows the superfluid helium climbing out o the cup, no detailed setup. With https://www2.physics.ox.ac.uk/contacts/people/rtaylor[professor Robert Taylor] from the \x[university-of-oxford].}

= Bose-Einstein condensate
{c}
{parent=condensed-matter-physics}
{wiki=Bose–Einstein_condensate}

\x[inward-bound-by-abraham-pais-1988] page 282 shows how this can be generalized from the \x[maxwell-boltzmann-distribution]

= Materials science
{parent=condensed-matter-physics}
{wiki}

= Type of material
{parent=materials-science}

= Glass
{parent=type-of-material}
{wiki}

= Quantum dot
{parent=type-of-material}
{wiki}

= Quantum dot single photon source
{parent=quantum-dot}
{wiki}

Mentioned at: \x[video-quantum-computing-with-light-by-quantum-light-university-of-sheffield-2015] https://youtu.be/nyK-vhoOBpE?t=185[].

= Metal
{parent=type-of-material}
{wiki}

= Metallurgy
{parent=metal}
{wiki}

= Ingot
{parent=metallurgy}
{wiki}

= Polymer
{parent=type-of-material}
{wiki}

= Plastic
{parent=polymer}
{wiki}

https://www.youtube.com/watch?v=PbuiIhr0LVA 7 Different Types of Plastic and Their Uses by Orange Plastics Academy (2018) Does not mention packaging foams.

= Material property
{parent=materials-science}

= Density
{parent=material-property}
{wiki}

= Magnet
{parent=material-property}
{wiki}

= Ferromagnetism
{parent=magnet}
{wiki}

The wiki comments: https://en.wikipedia.org/w/index.php?title=Ferromagnetism&oldid=965600553#Explanation
\Q[
The Bohr–van Leeuwen theorem, discovered in the 1910s, showed that classical physics theories are unable to account for any form of magnetism, including ferromagnetism. Magnetism is now regarded as a purely quantum mechanical effect. Ferromagnetism arises due to two effects from quantum mechanics: spin and the Pauli exclusion principle.
]

= Ising model
{parent=magnet}
{c}
{wiki}

Also has some funky relations to \x[renormalization] TODO.

= Optical material property
{parent=material-property}

= Black-body radiation
{parent=optical-material-property}
{wiki}

= Planck's law
{c}
{parent=black-body-radiation}
{wiki}

Used to explain the \x[black-body-radiation-experiment].

TODO how can it be derived from theoretical principles alone? There is one derivation at; https://en.wikipedia.org/wiki/Planck%27s_law#Derivation but it does not seem to mention the \x[schrodinger-equation] at all.
* https://physics.stackexchange.com/questions/22075/deriving-plancks-radiation-law-from-microscopic-considerations
* https://physics.stackexchange.com/questions/4816/is-there-a-fully-quantum-field-theoretic-treatise-of-plancks-law-for-black-body

Introduced in the \x[on-the-theory-of-the-energy-distribution-law-of-the-normal-spectrum-by-max-planck-1900] paper.

\Video[https://youtube.com/watch?v=KabPQLIXLw4]
{title="Quantum Mechanics 2 - Photons" by \x[viascience] (2012)}
{description=Contains a good explanation of how \x[discretization] + \x[energy] increases with frequency explains the \x[black-body-radiation-experiment] curve: you need more and more energy for small wavelengths, each time higher above the average energy available.}

= Black-body radiation experiment
{parent=black-body-radiation}
{wiki}

TODO original setups.

Led to: \x[planck-s-law]

\Video[http://youtube.com/watch?v=HnBZf1RfB-w]
{title="\x[black-body-radiation][Black-body Radiation] Experiment" by sciencesolution (2008)}
{description=A modern version of the experiment with a PASCO scientific EX-9920 setup.}

= Ultraviolet catastrophe
{parent=black-body-radiation}
{wiki}

\Video[https://www.youtube.com/watch?v=rCfPQLVzus4]
{title=What is the Ultraviolet Catastrophe? by \x[physics-explained] (2020)}

= Transparency
{disambiguate=electromagnetic radiation}
{parent=optical-material-property}
{wiki}

= Transparency
{synonym}

= Transparent
{synonym}

https://physics.stackexchange.com/questions/300551/how-can-wifi-penetrate-through-walls-when-visible-light-cant

= Absorption
{disambiguate=electromagnetic radiation}
{parent=transparency-electromagnetic-radiation}
{wiki}

= Piezoelectricity
{parent=material-property}
{wiki}

= Piezoelectric motor
{parent=piezoelectricity}
{wiki}

= Piezo
{synonym}

= Piezoelectric
{synonym}

= Piezo ignition
{parent=piezoelectricity}
{wiki}

= Piezo igniter
{synonym}

= Photoluminescence
{parent=material-property}
{wiki}

= Fluorescence
{parent=photoluminescence}
{wiki}

= Fluorometer
{parent=fluorescence}
{wiki}

= Fluorimeter
{synonym}

\Video[https://www.youtube.com/watch?v=BbqsNDfCPQU]
{title=Time-Correlated \x[single-photon-production-and-detection-experiments][Single Photon Counting] (TCSPC) with the Fluorolog \x[fluorimeter]{c} by Yale CBIC (2011)}

= Phosphorescence
{parent=photoluminescence}
{wiki}

= Specific heat capacity
{parent=material-property}
{wiki}

= Dulong-Petit law
{c}
{parent=specific-heat-capacity}
{wiki}

= Einstein solid
{c}
{parent=specific-heat-capacity}
{wiki}

One important \x[quantum-mechanics-experiment], which using quantum effects explains the dependency of \x[specific-heat-capacity] on temperature, an effect which is not present in the \x[dulong-petit-law].

= Debye model
{c}
{parent=specific-heat-capacity}
{wiki}

Wikipedia mentions that it is completely analogous to \x[planck-s-law], since both are 

= Viscosity
{parent=material-property}
{wiki}

= Viscous
{synonym}

= Pitch drop experiment
{parent=viscosity}
{wiki}

= Laser
{parent=condensed-matter-physics}
{wiki}

\Video[https://www.youtube.com/watch?v=_JOchLyNO_w]
{title=How Lasers Work - A Complete Guide by Scientized (2017)}
{description=An extremely good overview of how lasers work. Clearly explains the electron/photon exchange processes involved, notably \x[spontaneous-emission].

Talks about the importance of the metastable state to achieve \x[population-inversion].

Also briefly explains the imperfections that lead to the slightly imperfect non punctual spectrum seen in a real laser.
}

= Population inversion
{parent=laser}
{wiki}

= Quasiparticle
{parent=condensed-matter-physics}
{wiki}

= Statistical physics
{parent=physics}
{wiki}

= Maxwell-Boltzmann distribution
{c}
{parent=statistical-physics}
{wiki=Maxwell–Boltzmann_distribution}

= Application of the Maxwell-Boltzmann distribution
{parent=maxwell-boltzmann-distribution}

https://edisciplinas.usp.br/pluginfile.php/48089/course/section/16461/qsp_chapter7-boltzman.pdf mentions
* \x[sedimentation]
* \x[reaction-rate] as it calculates how likely it is for particles to overcome the \x[activation-energy]

= Sedimentation
{parent=statistical-physics}
{wiki}

= Quantum statistics
{parent=statistical-physics}
{wiki=Particle_statistics#Quantum_statistics}

= Bose-Einstein statistics
{c}
{parent=statistical-physics}
{wiki=Bose–Einstein_statistics}

= Fermi-Dirac statistics
{c}
{parent=statistical-physics}
{wiki=Fermi–Dirac_statistics}

= Thermodynamics
{parent=statistical-physics}
{wiki}

= Thermodynamic potential
{parent=thermodynamics}
{wiki}

https://chemistry.stackexchange.com/questions/7696/how-do-i-distinguish-between-internal-energy-and-enthalpy/7700#7700 has a good insight:
\Q[To summarize, internal energy and enthalpy are used to estimate the thermodynamic potential of the system. There are other such estimates, like the Gibbs free energy G. Which one you choose is determined by the conditions and how easy it is to determine pressure and volume changes.]

= Enthalpy
{parent=thermodynamic-potential}
{title2=$H$}
{wiki}

Adds up chemical energy and kinetic energy.

Wikipedia mentions however that the kinetic energy is often negligible, even for gases.

The sum is of interest when thinking about reactions because chemical reactions can change the number of molecules involved, and therefore the pressure.

To predict if a reaction is spontaneous or not, negative enthalpy is not enough, we must also consider \x[entropy] via \x[gibbs-free-energy].

Bibliography:
* https://chemistry.stackexchange.com/questions/7696/how-do-i-distinguish-between-internal-energy-and-enthalpy

= Gibbs free energy
{c}
{parent=thermodynamic-potential}
{title2=$G$}
{wiki}

TODO understand more intuitively how that determines if a reaction happens or not.

$$\Delta G = \Delta H - T \Delta S$$

At least from the formula we see that:
* the more exothermic, the more likely it is to occur
* if the entropy increases, the higher the temperature, the more likely it is to occur
  * otherwise, the lower the temperature the more likely it is to occur

A prototypical example of reaction that is exothermic but does not happen at any temperature is combustion.

\Video[https://www.youtube.com/watch?v=DKiBA35Nqp4]
{title=Lab 7 - Gibbs Free Energy by MJ Billman (2020)}
{description=Shows the shift of equilibrium due to temperature change with a color change in a HCl CoCl reaction. Unfortunately there are no conclusions because its student's homework.}

= Chemical equilibrium
{c}
{parent=gibbs-free-energy}
{wiki}

= Reversible reaction
{c}
{parent=gibbs-free-energy}
{wiki}

I think these are the ones where $\Delta H \times \Delta S > 0$, i.e. \x[enthalpy] and \x[entropy] push the reaction in different directions. And so we can use temperature to move the \x[chemical-equilibrium] back and forward.

\Video[https://www.youtube.com/watch?v=NMIoon-kuQ4]
{title=Demonstration of a Reversible Reaction by Rugby School Chemistry (2020)}
{description=Hydrated copper(ii) sulfate.}

= Ideal gas law
{parent=thermodynamics}
{wiki}

= Entropy
{parent=thermodynamics}
{wiki}

OK, can someone please just stop the philosophy and give numerical predictions of how entropy helps you predict the future?

For entropy in chemistry see: \x[entropy-of-a-chemical-reaction]{child}.

* https://www.youtube.com/watch?v=0-yhZFDxBh8 The Unexpected Side of Entropy by Daan Frenkel (2021)

\Video[https://www.youtube.com/watch?v=rBPPOI5UIe0]
{title="The Biggest Ideas in the Universe | 20. Entropy and Information" by \x[sean-carroll] (2020)}
{description=In usual Sean Carroll fashion, it glosses over the subject. This one might be worth watching. It mentions 4 possible definitions of entropy: Boltzmann, Gibbs, Shannon (\x[information-theory]) and \x[john-von-neumann] (\x[quantum-mechanics]).}

= Phase transition
{parent=thermodynamics}
{wiki}

TODO can anything interesting and deep be said about "why phase transition happens?" https://physics.stackexchange.com/questions/29128/what-causes-a-phase-transition on \x[physics-stack-exchange]

= Second-order phase transition
{parent=phase-transition}

Mentioned at: https://en.wikipedia.org/wiki/Phase_transition#Modern_classifications

The more familiar transitions we are familiar with like liquid \x[water] into solid water happen at constant temperature.

However, other types of phase transitions we are less familiar in our daily lives happen across a continuum of such "state variables", notably
* \x[superconductivity]{child}
* \x[superfluidity]{child}
* \x[ferromagnetism]{child}

= Refrigerator
{parent=thermodynamics}
{wiki}

= Dilution refrigerator
{parent=refrigerator}
{wiki}

Reaches 2mK.

Used for example in some times of \x[quantum-computer]{p}:
* \x[d-wave-systems]: https://www.dwavesys.com/tutorials/background-reading-series/introduction-d-wave-quantum-hardware#h2-5 (15mK)

\Video[https://www.youtube.com/watch?v=j0s3uqqXZlc]
{title=This Is What A \x[helium]{c} Dilution Refrigerator Is by \x[dietterich-labs] (2019)}

= Temperature
{parent=thermodynamics}
{wiki}

= Thermometer
{parent=temperature}
{wiki}

= Mercury-in-glass thermometer
{parent=thermometer}
{wiki}

= Mercury thermometer
{synonym}

= Vacuum
{parent=thermodynamics}
{wiki}

= Vacuum engineering
{parent=vacuum}
{wiki}

\Video[https://www.youtube.com/watch?v=VD69crOFx10]
{title="Air-tight vs. Vacuum-tight" by AlphaPhoenix (2020)}
{description=Shows how to debug a leak in an ultra-high-vacuum system. Like every other area of engineering, you basically bisect the machine! :-) By https://www.materials.ucsb.edu/people/graduate-student/brian-haidet[Brian Haidet], a PhD at \x[university-of-california-santa-barbara].}

= Mechanics
{parent=physics}
{wiki}

= Mechanical
{synonym}

This section is more precisely about \x[classical-mechanics].

= Angular momentum
{parent=mechanics}
{wiki}

= Precession
{parent=angular-momentum}
{wiki}

= Axle
{parent=mechanics}
{wiki}

= Classical mechanics
{parent=mechanics}
{wiki}

Mechanics before \x[quantum-mechanics] and \x[special-relativity].

= Classical physics
{parent=classical-mechanics}
{wiki}

Basically the same as \x[classical-mechanics].

= Continuum mechanics
{parent=mechanics}
{wiki}

= Continuity equation
{parent=continuum-mechanics}
{wiki}

= Diffusion
{parent=continuum-mechanics}
{wiki}

= Fick's laws of diffusion
{parent=diffusion}
{wiki}

= Fluid mechanics
{parent=continuum-mechanics}
{wiki}

Boooooring.

= Gravity wave
{parent=fluid-mechanics}
{wiki}

= Navier-Stokes equations
{c}
{parent=fluid-mechanics}
{wiki=Navier–Stokes_equations}

= Navier-Stokes existence and smoothness
{parent=navier-stokes-equations}
{c}
{wiki=Navier–Stokes_existence_and_smoothness}

One of the \x[millennium-prize-problems].

See also: \x[existence-and-uniqueness-of-solutions-of-partial-differential-equations].

= Lagrangian mechanics
{c}
{parent=mechanics}
{wiki}

Originally it was likely created to study constrained mechanical systems where you want to use some "custom convenient" variables to parametrize things instead of global x, y, z. Classical examples that you must have in mind include:
* \x[compound-atwood-machine]. Here, we can use the coordinates as the heights of masses relative to the \x[axle]{p} rather than absolute heights relative to the ground
* \x[double-pendulum], using two angles. The Lagrangian approach is simpler than using Newton's laws
  * \x[pendulum], use angle instead of x/y
* \x[two-body-problem], use the distance between the bodies
\x[lagrangian-mechanics-lectures-by-michel-van-biezen-2017] is a good starting point.

When doing lagrangian mechanics, we just lump together all generalized coordinates into a single vector $\va{q}(t) : \R \to \R^n$ that maps time to the full state:
$$
\va{q}(t) = [q_1(t), q_2(t), q_3(t), ..., q_n(t)]
$$
where each component can be anything, either the x/y/z coordinates relative to the ground of different particles, or angles, or nay other crazy thing we want.

The \x[lagrangian] is a function $\R^n \times \R^n \times \R \to \R$ that maps:
$$
L(\va{q}(t), \dot{\va{q}}(t), t)
$$
to a real number.

Then, the \x[stationary-action-principle] says that the actual path taken obeys the \x[euler-lagrange-equation]:
$$
\pdv{L(\va{q}(t), \dot{\va{q}}(t), t)}{q_i} - \dv{}{t}\pdv{L(\va{q}(t), \dot{\va{q}}(t), t)}{\dot{q_i}} = 0
$$
This produces a \x[system-of-partial-differential-equations] with:
* $n$ equations
* $n$ unknown functions $q_i$
* at most second order derivatives of $q_i$. Those appear because of the chain rule on the second term.

The mixture of so many derivatives is a bit mind mending, so we can clarify them a bit further. At:
$$
\pdv{L(\va{q}(t), \dot{\va{q}}(t), t)}{q_i}
$$
the $q_i$ is just identifying which argument of the Lagrangian we are differentiating by: the i-th according to the order of our definition of the Lagrangian. It is not the actual function, just a mnemonic.

Then at:
$$
\dv{}{t}\pdv{L(\va{q}(t), \dot{\va{q}}(t), t)}{\dot{q_i}}
$$
* the $\pdv{}{\dot{q_i}}$ part is just like the previous term, $\dot{q_i}$ just identifies the argument with index $n + i$ ($n$ because we have the $n$ non derivative arguments)
* after the partial derivative is taken and returns a new function $\pdv{L(\va{q}(t), \dot{\va{q}}(t), t)}{\dot{q_i}}$, then the \x[multivariable-chain-rule] comes in and expands everything into $2n + 1$ terms

However, people later noticed that the Lagrangian had some nice properties related to \x[lie-group] continuous symmetries.

Basically it seems that the easiest way to come up with new \x[quantum-field-theory] models is to first find the Lagrangian, and then derive the equations of motion from them.

For every \x[continuous-symmetry] in the system (modelled by a \x[lie-group]), there is a corresponding conservation law: \x[local-symmetries-of-the-lagrangian-imply-conserved-currents].
\x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994] chapter "The Best Path" mentions that \x[richard-feynman] didn't like the \x[lagrangian-mechanics] approach when he started university at \x[mit], because he felt it was too magical. The reason is that the Lagrangian approach basically starts from the principle that "nature minimizes the action across time globally". This implies that things that will happen in the future are also taken into consideration when deciding what has to happen before them! Much like the lifeguard in the \x[lifegard-problem] making global decisions about the future. However, chapter "Least Action in Quantum Mechanics" comments that Feynman later notice that this was indeed necessary while developping \x[wheeler-feynman-absorber-theory] into \x[quantum-electrodynamics], because they felt that it would make more sense to consider things that way while playing with ideas such as \x[positrons-are-electrons-travelling-back-in-time]. This is in contrast with \x[hamiltonian-mechanics], where the idea of time moving foward is more directly present, e.g. as in the \x[schrodinger-equation].

Furthermore, given the symmetry, we can calculate the derived conservation law, and vice versa.

And partly due to the above observations, it was noticed that the easiest way to describe the fundamental laws of \x[particle-physics] and make calculations with them is to first formulate their Lagrangian somehow: \x[why-do-symmetries-such-as-su-3-su-2-and-u-1-matter-in-particle-physics].

TODO advantages:
* https://physics.stackexchange.com/questions/254266/advantages-of-lagrangian-mechanics-over-newtonian-mechanics on \x[physics-stack-exchange], \x[fucking] closed question...
* https://www.quora.com/Why-was-Lagrangian-formalism-needed-in-the-presence-of-Newtonian-formalism 
* https://www.researchgate.net/post/What_is_the_advantage_of_Lagrangian_formalism_over_Hamiltonian_formalism_in_QFT

Bibliography:
* http://www.physics.usu.edu/torre/6010_Fall_2010/Lectures.html Physics 6010 Classical Mechanics lecture notes by Charles Torre from Utah State University published on 2010,
  * Classical physics only. The last lecture: http://www.physics.usu.edu/torre/6010_Fall_2010/Lectures/12.pdf mentions \x[lie-algebra] more or less briefly.
* http://www.damtp.cam.ac.uk/user/tong/dynamics/two.pdf by \x[david-tong]

\Video[https://www.youtube.com/watch?v=EceVJJGAFFI]
{title="Euler-Lagrange equation explained intuitively - Lagrangian Mechanics" by \x[physics-videos-by-eugene-khutoryansky] (2018)}
{description=Well, unsurprisingly, it is exactly what you can expect from an Eugene Khutoryansky video.}

= Lagrangian mechanics lectures by Michel van Biezen (2017)
{parent=lagrangian-mechanics}

https://www.youtube.com/playlist?list=PLX2gX-ftPVXWK0GOFDi7FcmIMMhY_7fU9

Original playlist name: "PHYSICS 68 ADVANCED MECHANICS: LAGRANGIAN MECHANICS"

Author: Michel van Biezen.

\x[high-school]{c} classical mechanics material, no mention of the key \x[continuous-symmetry] part.

But does have a few classic pendulum/pulley/spring worked out examples that would be really wise to get under your belt first.

= Action
{disambiguate=physics}
{parent=lagrangian-mechanics}
{wiki}

= Stationary action principle
{parent=action-physics}
{wiki}

= Principle of least action
{synonym}
{title2}
{wiki}

As mentioned on the \x[wikipedia] page https://en.wikipedia.org/w/index.php?title=Stationary_Action_Principle&oldid=1020413171[], "principle of least action" is not accurate since it could not necessarily be a minima, we could just be in a \x[maxima-and-minima][saddle-point].

= Euler-Lagrange equation
{c}
{parent=stationary-action-principle}
{wiki=Euler–Lagrange equation}

= Equations of motion
{parent=euler-lagrange-equation}
{wiki}

These are the final equations that you derive from the \x[lagrangian] via the \x[euler-lagrange-equation] which specify how the system evolves with time.

= Lagrangian
{c}
{parent=lagrangian-mechanics}
{wiki}

The function that fully describes a physical system in \x[lagrangian-mechanics].

= Lagrangian (field theory)
{c}
{parent=lagrangian}
{wiki}

Basically: \x[why-do-symmetries-such-as-su-3-su-2-and-u-1-matter-in-particle-physics].

= Lagrangian density
{parent=lagrangian-field-theory}

When we particles particles, the \x[action-physics] is obtained by integrating the \x[lagrangian] over time:
$$
Action = \int_{t_0}^{t} L(x(t), \pdv{x(t)}{t}, t) dt
$$

In the case of \x[field-mathematics]{p} however, we can expand the Lagrangian out further, to also integrate over the space coordinates and their derivatives.

Since we are now working with something that gets integrated over space to obtain the total action, much like \x[density] would be integrated over space to obtain a total mass, the name "Lagrangian density" is fitting.

E.g. for a 2-dimensional field $f(x, y, t)$:
$$
Action = \int_{t_0}^{t} L(f(x, y, t), \pdv{f(x, y, t)}{x}, \pdv{f(x, y, t)}{y}, \pdv{f(x, y, t)}{t}, x, y, t) dx dy dt
$$

Of course, if we were to write it like that all the time we would go mad, so we can just write a much more condensed \x[vectorized] version using the \x[gradient] with $x \in \RTwo$:
$$
Action = \int_{t_0}^{t} L(f(x, t), \grad{f(x, t)}, x, t) dx dt
$$

And in the context of \x[special-relativity], people condense that even further by adding $t$ to the spacetime \x[four-vector] as well, so you don't even need to write that separate pesky $t$.

The main point of talking about the Lagrangian density instead of a Lagrangian for fields is likely that it treats space and time in a more uniform way, which is a basic requirement of \x[special-relativity]: we have to be able to mix them up somehow to do \x[lorentz-transformation]{p}. Notably, this is a key ingredient in a/the formulation of \x[quantum-field-theory].

= Generalized coordinate
{parent=lagrangian}
{wiki}

The variables of the \x[lagrangian], e.g. the angles of a \x[double-pendulum]. From that example it is clear that these variables don't need to be simple things like \x[cartesian-coordinate]{p} or \x[polar-coordinate]{p} (although these tend to be the overwhelming majority of simple case encountered): any way to describe the system is perfectly valid.

In \x[quantum-field-theory], those variables are actually fields.

= Noether's theorem
{c}
{parent=lagrangian-mechanics}

For every \x[continuous-symmetry] in the system (\x[lie-group]), there is a corresponding conservation law.

Furthermore, given the symmetry, we can calculate the derived conservation law, and vice versa.

As mentioned at http://buzzard.ups.edu/courses/2017spring/projects/schumann-lie-group-ups-434-2017.pdf[], what the symmetry (\x[lie-group]) acts on (obviously?!) are the \x[lagrangian] \x[generalized-coordinate]{p}. And from that, we immediately guess that manifolds are going to be important, because the generalized variables of the Lagrangian can trivially be \x[non-euclidean-geometry], e.g. the \x[pendulum] lives on an infinite cylinder.

\Video[https://www.youtube.com/watch?v=CxlHLqJ9I0A]
{title="The most beautiful idea in physics - Noether's Theorem" by \x[looking-glass-universe] (2015)}
{description=One sentence stands out: the generated quantities are called the generators of the transforms.}

\Video[https://www.youtube.com/watch?v=AuqKsBQnE2A]
{title="The Biggest Ideas in the Universe | 15. Gauge Theory" by \x[sean-carroll] (2020)}
{description=This attempts a one hour hand wave explanation of it. It is a noble attempt and gives some key ideas, but it falls a bit short of Ciro's desires (as would anything that fit into one hour?)}

\Video[https://www.youtube.com/watch?v=hF_uHfSoOGA]
{title="The Symmetries of the universe" by \x[scienceclic] English (2021)}
{description=https://youtu.be/hF_uHfSoOGA?t=144 explains intuitively why symmetry implies consevation!}

= Time invariance implies energy conservation
{parent=noether-s-theorem}

https://physics.stackexchange.com/questions/614757/intuitive-explanation-for-why-time-symmetry-implies-conservation-of-energy on \x[physics-stack-exchange]

= Spontaneous symmetry breaking
{parent=lagrangian-mechanics}
{wiki}

= Hamiltonian mechanics
{c}
{parent=lagrangian-mechanics}
{wiki}

= Hamiltonian
{c}
{synonym}

Equivalent to \x[lagrangian-mechanics] but formulated in a different way.

Motivation: \x[lagrangian-vs-hamiltonian].

TODO understand original historical motivation, https://www.youtube.com/watch?v=SZXHoWwBcDc says it is from \x[optics].

Intuitively, the \x[hamiltonian] is the total energy of the system in terms of arbitrary parameters, a bit like \x[lagrangian-mechanics].

Bibliography:
* http://www.damtp.cam.ac.uk/user/tong/dynamics/four.pdf

= Lagrangian vs Hamiltonian
{c}
{parent=hamiltonian-mechanics}

The key difference from \x[lagrangian-mechanics] is that the Hamiltonian approach groups variables into pairs of coordinates called the \x[phase-space-coordinate]{p}:
* generalized coordinates, generally positions or angles
* their corresponding conjugate momenta, generally velocities, or angular velocities
This leads to having two times more unknown functions than in the Lagrangian. However, it also leads to a \x[system-of-partial-differential-equations] with only first order derivatives, which is nicer. Notably, it can be more clearly seen in \x[phase-space].

Bibliography:
* https://physics.stackexchange.com/questions/89035/whats-the-point-of-hamiltonian-mechanics
* https://www.quora.com/What-is-the-difference-between-a-Lagrangian-and-a-Hamiltonian

= Phase space coordinate
{parent=hamiltonian-mechanics}

= Hamilton's equations
{c}
{parent=hamiltonian-mechanics}
{wiki}

Analogous to what the \x[euler-lagrange-equation] is to \x[lagrangian-mechanics], Hamilton's equations give the \x[equations-of-motion] from a given input \x[hamiltonian]:
$$
\frac{\partial H}{\partial q_j} = -\dot{p}_j \\
\frac{\partial H}{\partial p_j} =  \dot{q}_j
$$
So once you have the Hamiltonian, you can write down this system of \x[partial-differential-equation]{p} which can then be numerically solved.

= Poisson bracket
{c}
{parent=hamiltonian-mechanics}
{wiki}

= Equivalence between Lagrangian and Hamiltonian formalisms
{parent=lagrangian-mechanics}

https://physics.stackexchange.com/questions/105912/equivalence-between-hamiltonian-and-lagrangian-mechanics

= Legendre transformation
{c}
{parent=equivalence-between-lagrangian-and-hamiltonian-formalisms}
{wiki}

This is how you transform the \x[lagrangian] into the \x[hamiltonian].

= Mechanics problem
{parent=mechanics}

= Atwood machine
{c}
{parent=mechanics-problem}
{wiki}

= Compound Atwood machine
{parent=atwood-machine}

\Video[https://www.youtube.com/watch?v=439ikBF4BII]
{title=\x[lagrangian-mechanics][Lagrangian Mechanics] Example: The Compound Atwood Machine by Michel van Biezen (2017)}
{description=Part of \x[lagrangian-mechanics-lectures-by-michel-van-biezen-2017].}

= Elastic collision
{parent=mechanics-problem}
{wiki}

= Harmonic oscillator
{parent=mechanics-problem}
{wiki}

= Coupled oscillators
{parent=harmonic-oscillator}

https://www.youtube.com/watch?v=-pXnfzQfupE

= Pendulum
{parent=mechanics-problem}
{wiki}

The \x[period-physics] does depend on the initial height/angle, except for the very small angle approximation:
* https://www.quora.com/How-does-the-angle-of-a-pendulum-affect-its-period
* http://hyperphysics.phy-astr.gsu.edu/hbase/pend.html
* http://hyperphysics.phy-astr.gsu.edu/hbase/pendl.html

= Double pendulum
{parent=pendulum}
{wiki}

= Spherical pendulum
{parent=pendulum}
{wiki}

= Two-body problem
{parent=mechanics-problem}
{wiki}

https://youtu.be/Ca7c5B7Js18?t=803 compares \x[lagrangian-mechanics] equation vs the direct x/y coordinate equation.

= Continuous mechanics problem
{parent=mechanics-problem}

= Mechanical resonance
{parent=continuous-mechanics-problem}
{wiki}

\x[resonance] in a \x[mechanical] system.

= Tuning fork
{parent=mechanical-resonance}
{wiki}

= Newton's laws of motion
{c}
{parent=mechanics}
{wiki}

= Force
{parent=newton-s-laws-of-motion}
{wiki}

= Mass
{parent=newton-s-laws-of-motion}
{wiki}

= Point particle
{parent=mechanics}
{wiki}

= Pointlike particle
{synonym}

This idealization does not seems to be possible at all in the context of \x[maxwell-s-equations-with-pointlike-particles].

= Rigid body
{parent=point-particle}
{wiki}

= Computational physics
{parent=physics}
{wiki}

The intersection of two beautiful \x[art]{p}: \x[computer][coding] and \x[physics]!

Computational physics is a good way to get valuable intuition about the key equations of physics, and train your \x[numerical-analysis] skills:
* classical mechanics
  * "Real-time \x[heat-equation] OpenGL visualization with interactive mouse cursor using relaxation method" under \x[articles]
* https://phet.colorado.edu PhET simulations from University of Colorado Boulder

Other child sections:
* \x[schrodinger-equation-simulations]
* \x[quantum-field-theory-simulations]

= Computational chemistry
{parent=computational-physics}

= Quantum chemistry
{parent=computational-chemistry}
{wiki}

Ah, the jewel of \x[computational-physics].

Also known as an https://en.wikipedia.org/wiki/Ab_initio_quantum_chemistry_methods[ab initio] method: no experimental measurement is taken as input, \x[quantum-electrodynamics][QED is all you need].

But since QED is thought to fully describe all relevant aspects mollecules, it could be called "the" ab initio method.

For one, if we were able to predict protein molecule interactions, our understanding of \x[molecular-biology-technologies] would be solved.

No more ultra expensive and complicated \x[x-ray-crystallography] or \x[cryogenic-electron-microscopy].

And the fact that \x[quantum-computer]{p} are one of the most promising advances to this field, is also very very exciting: \x[quantum-algorithm]{full}.

= Relativistic quantum chemistry
{parent=quantum-chemistry}

* https://www.youtube.com/watch?v=NtnsHtYYKf0 "Mercury and Relativity - Periodic Table of Videos" by a

= Quantum chemistry software
{parent=quantum-chemistry}

= PySCF
{parent=quantum-chemistry-software}
{wiki}

https://github.com/pyscf/pyscf

= Psi4
{parent=quantum-chemistry-software}
{wiki=PSI_(computational_chemistry)}

https://github.com/psi4/psi4

= Quantum computing computational chemistry algorithms
{parent=computational-chemistry}

= IBM 2017 beryllium hydride ground state calculation on a quantum computer
{c}
{parent=quantum-computing-computational-chemistry-algorithms}

TODO what's the largest molecule done on a \x[classical-computer]?

* https://www.ibm.com/blogs/research/2017/09/quantum-molecule/
* https://www.nature.com/articles/nature23879 "Hardware-efficient variational quantum eigensolver for small molecules and quantum magnets"
* https://www.sciencemag.org/news/2017/09/quantum-computer-simulates-largest-molecule-yet-sparking-hope-future-drug-discoveries

= Physics conference
{parent=physics}

= Solvay Conference
{c}
{parent=physics-conference}
{title2=1911}
{wiki}

= First Solvay Conference (1911)
{c}
{parent=solvay-conference}
{wiki}

= Fifth Solvay Conference (1927)
{c}
{parent=solvay-conference}
{wiki}

= Shelter Island Conference
{c}
{parent=physics-conference}
{title2=1947}
{wiki}

Sponsored by \x[national-academy-of-sciences], located in \x[long-island].

Some photos at: http://www.nasonline.org/about-nas/history/archives/milestones-in-NAS-history/shelter-island-conference-photos.html on the website of \x[national-academy-of-sciences], therefore canon. 

This is where \x[isidor-rabi] exposed experiments carried out on the \x[anomalous-magnetic-dipole-moment] and \x[willis-lamb] presented his work on the \x[lamb-shift].

It was a very private and intimate conference, that gathered the best physicists of the area, one is reminded of the style of the \x[solvay-conference].

\x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] chapter 4.1 this conference was soon compared to the \x[first-solvay-conference-1911], which set in motion the development of \x[non-relativistic-quantum-mechanics].

= Pocono conference
{c}
{parent=shelter-island-conference}
{title2=1948}
{wiki}

Followup to the \x[shelter-island-conference], this is where \x[julian-schwinger] and \x[richard-feynman] exposed their theories to explain the experiments of the previous conference.

Julian made a formal presentation that took until the afternoon and bored everyone to death, though the mathematics avoided much questioning.

Feynman then presented his revolutionary approach, which he was unable to prove basic properties of, but which gave correct results, and people were not very happy.

= Physicist
{parent=physics}
{wiki}

\Image[https://web.archive.org/web/20190925220347if_/https://imgs.xkcd.com/comics/purity.png]
{disambiguate=physicist}
{title=\x[xkcd] 435: Fields arranged by purity.}
{source=https://xkcd.com/435/}

= Albert Einstein
{c}
{parent=physicist}
{wiki}

= Einstein
{c}
{synonym}

= Annus Mirabilis papers
{c}
{parent=albert-einstein}
{title2=1905}
{wiki}

= Annus Mirabilis
{c}
{synonym}

= On a Heuristic Viewpoint Concerning the Production and Transformation of Light by Einstein (1905)
{parent=annus-mirabilis-papers}

The \x[photoelectric-effect] paper.

= Barton Zwiebach
{c}
{parent=physicist}
{wiki}

Affiliation: \x[massachusetts-institute-of-technology].

Doctoral advisor: \x[murray-gell-mann].

= Carl David Anderson
{c}
{parent=physicist}
{wiki}

= David Tong
{c}
{parent=physicist}
{wiki=David_Tong_(physicist)}

A charismatic perfect English accent physicist from \x[university-of-cambridge], specializing in \x[quantum-field-theory]. Has done some \x[popular-science] content, but still hardcore at heart it seems.

The amount of lecture notes on his website looks really impressive: http://www.damtp.cam.ac.uk/user/tong/teaching.html[], he looks like a good educator.

= Enrico Fermi
{c}
{parent=physicist}
{title2=1901-1954}
{wiki}

Died of \x[cancer] at age 53. \x[ciro-santilli] just can't help but speculate that it is linked to \x[radioactivity] exposure.

= Erwin Schrödinger
{c}
{title2=1887-1961}
{parent=physicist}

= Schrödinger
{synonym}

= Paper by Erwin Schrödinger
{parent=erwin-schrodinger}

= Quantization as an Eigenvalue Problem by Schrödinger (1926)
{c}
{parent=paper-by-erwin-schrodinger}
{title2=Quantisierung als Eigenwertproblem}

The original paper on the schrodinger-equation.

Published on \x[annalen-der-physik] volume 384, Issue 4, Pages 361-376.

\x[open-access]{c} in \x[german-language] at: https://onlinelibrary.wiley.com/doi/10.1002/andp.19263840404[], and \x[english-language] translation is present at \x[collected-papers-on-wave-mechanics-by-deans-1928].

= Collected Papers On Wave Mechanics by Deans (1928)
{c}
{parent=quantization-as-an-eigenvalue-problem-by-schrodinger-1926}

\x[english-language] translation of papers that include the original \x[quantization-as-an-eigenvalue-problem-by-schrodinger-1926].

= Ettore Majorana
{c}
{parent=physicist}
{wiki}

Ciro's theory for his disappearance is that he became a \x[majorana-fermion] and flew off into the infinite.

= Majorana fermion
{c}
{parent=ettore-majorana}
{wiki}

= Freeman Dyson
{c}
{parent=physicist}
{title2=1923-2020, God}
{wiki}

\x[ciro-santilli]'s admiration for Dyson goes beyond his "unify all the things approach", which \x[high-flying-bird-vs-gophers][Ciro loves], but also extends to the way he talks and the things he says. Dyson is one of Ciro's favorite physicist.

Besides this, he was also very \x[idealistic] compassionate, and supported a peaceful resolution until \x[world-war-ii] with \x[united-kingdom] was basically ineviatble. Note that this was a strategic mistake.

Dyson is "hawk nosed" as mentioned in \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994] chapter "Dyson". But he wasn't when he was young, see e.g. https://i2.wp.com/www.brainpickings.org/wp-content/uploads/2016/03/freemandyson_child-1.jpg?resize=768%2C1064&ssl=1 It sems that his nose just never stopped growing after puberty.

He also has some fun stories, like him practicing \x[night-climbing] while at \x[cambridge-university], and having walked from \x[cambridge] to \x[london] (~86km!) in a day with his wheelchair bound friend.

\x[ciro-santilli] feels that the label \x[child-prodigy] applies even more so to him than to \x[feynman] and \x[julian-schwinger].

Bibliography:
* \x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] chapter 9 Freeman Dyson and the Structure of Quantum Field Theory

= Work by Freeman Dyson
{parent=freeman-dyson}

* \x[advanced-quantum-mechanics-by-freeman-dyson-1951]{child}

= Freeman Dyson Web of Stories interview (1998)
{parent=freeman-dyson}

https://www.youtube.com/playlist?list=PLVV0r6CmEsFzDA6mtmKQEgWfcIu49J4nN

Shot by \x[web-of-stories].

The amount of detail in which he remembers all that happened is astounding. Not too different from the \x[murray-gell-mann] interview in that aspect.

= Galileo Galilei
{c}
{parent=physicist}
{title2=1564-1642}
{wiki}

= Galileo
{c}
{synonym}

= Hans Bethe
{c}
{parent=physicist}
{wiki}

Head of the theoretical division at the \x[los-alamos-laboratory] during the \x[manhattan-project].

\x[richard-feynman] was working under him there, and was promoted to team lead by him because Richard impressed Hans.

He was also the person under which \x[freeman-dyson] was originally under when he moved from the \x[united-kingdom] to the \x[united-states].

And Hans also impressed Feynman, both were problem solvers, and liked solving mental arithmetic and \x[numerical-analysis].

This relationship is what brought Feynman to \x[cornell-university] after \x[world-war-ii], Hans' institution, which is where Feynman did the main part of his \x[1965-nobel-prize-in-physics-laureate][Nobel prize winning] work on \x[quantum-electrodynamics].

Hans must have been the perfect \x[phd] advisor. He's always smiling, and he seemed so approachable. And he was incredibly capable, notably in his calculation skills, which were much more important in those pre-\x[computer] days.

= Heinrich Hertz
{c}
{parent=physicist}
{wiki}

= Hertz electromagnetic wave experiments
{c}
{parent=heinrich-hertz}
{wiki}

https://en.wikipedia.org/wiki/Heinrich_Hertz#Electromagnetic_waves

\Video[https://www.youtube.com/watch?v=9gDFll6Ge7g]
{title=Hertz Experiment on Electromagnetic Waves by \x[ludic-science] (2015)}
{description=Simplified recreation with cheap modern equipment. Uses as \x[transmitter] power source both:
* a \x[piezo-igniter] from a \x[barbequeue-lighter]
* a more powerful home-made \x[transformer]
and the signal is observed on the \x[receiver] with a \x[neon-lamp]
}

\Video[https://www.youtube.com/watch?v=UN37QEmW_ns]
{title=Hertz and Radio Waves Explained by PhysicsHigh (2016)}
{description=Simple schematics showing the basics of the experiments. No choice of components rationale.}

= Henri Becquerel
{c}
{parent=physicist}
{title2=1852-1908}
{wiki}

WTF is wrong with that family???

= Hermann Weyl
{c}
{parent=physicist}
{title2=1885-1955}
{wiki}

= Publication by Hermann Weyl
{parent=hermann-weyl}

= Gravity and electricity by Hermann Weyl (1918)
{parent=publication-by-hermann-weyl}
{title2=Gravitation und Elektrizität}

Published on the \x[session-reports-of-the-royal-prussian-academy-of-sciences-at-berlin] 1918 page 464.

Is about \x[maxwell-s-equations-in-curved-spacetime], and notably introduces \x[gauge-theory].

Viewable for free at: https://archive.org/details/mobot31753002089727/page/464/mode/2up[].

= Isidor Isaac Rabi
{c}
{parent=physicist}
{title2=1898-1988}
{wiki}

= Isidor Rabi
{c}
{synonym}

He was a leading figure at the \x[mit-radiation-laboratory], and later he was head at the \x[columbia-university] laboratory that carried out the crucial \x[lamb-retherford-experiment] and the \x[anomalous-magnetic-dipole-moment-of-the-electron] published at \x[the-magnetic-moment-of-the-electron-by-kusch-and-foley-1948] using related techniques.

= Jakob Schwichtenberg
{c}
{parent=physicist}

\x[personal-website]: https://jakobschwichtenberg.com/

\x[phd] at \x[karlsruhe-institute-of-technology] in 2019: https://www-kseta.ttp.kit.edu/fellows/Jakob.Schwichtenberg/ on the \x[strong-cp-problem].

Books:
* \x[no-nonsense-quantum-field-theory-a-student-friendly-introduction-by-jakob-schwichtenberg-2020]{child}

= Physics from Symmetry by Jakob Schwichtenberg (2015)
{c}
{parent=jakob-schwichtenberg}

https://www.amazon.com/Physics-Symmetry-Undergraduate-Lecture-Notes/dp/3319192000

This is a good book. It is rather short, very direct, which is a good thing. At some points it is slightly too direct, but to a large extent it gets it right.

The main goal of the book is to basically to build the \x[standard-model-lagrangian] from only initial \x[symmetry] considerations, notably the \x[poincare-group] + \x[internal-symmetry]{p}.

The book doesn't really \x[doing-physics-means-calculating-a-number][show how to extract numbers from that Lagrangian], but perhaps that can be pardoned, \x[do-one-thing-and-do-it-well].

= Physics Travel Guide
{c}
{parent=jakob-schwichtenberg}

https://physicstravelguide.com/about

\x[dokuwiki] about \x[physics], mostly/fully written by \x[jakob-schwichtenberg] and therefore focusing on \x[particle-physics], although registration might be open to all.

= John Archibald Wheeler
{c}
{parent=physicist}
{wiki}

\x[richard-feynman]'s mentor at \x[princeton-university], and notable contributor to his development of \x[quantum-electrodynamics].

Worked with \x[niels-bohr].

= John Bardeen
{c}
{parent=physicist}
{wiki}

= John von Neumann
{c}
{parent=physicist}
{wiki}

This is the one \x[ciro-santilli] envies the most, because he has such a great overlap with Ciro's interests, e.g.:
* \x[dirac-von-neumann-axioms]

\Video[https://www.youtube.com/watch?v=Y2jiQXI6nrE]
{title="John von Neuman - a documentary" by the Mathematical Association of America (1966)}
{description=Some good testimonies. Some boring.}

= Julian Schwinger
{c}
{parent=physicist}
{wiki}

Extremely precocious, borderline \x[child-prodigy], he was reading \x[dirac] at 13-14 from the library.

He started working at night and sleeping during the moring/early afternoon while he was at university.

He was the type of guy that was so good that he didn't really have to follow the university rules very much. He would get into trouble for not following some stupid requirement, but he was so good that they would just let him get away with it.

Besides \x[quantum-electrodynamics], Julian worked on \x[radar] at the \x[rad-lab] during \x[world-war-ii], unlike most other top \x[physicist]{p} who went to \x[los-alamos-laboratory] to work on the \x[atomic-bomb], and he made important contributions there on calculating the best shape of the parts and so on.

He was known for being very formal mathematically and sometimes hard to understand, in stark contrast to \x[feynman] which was much more lose and understandable, especially after \x[freeman-dyson] translated him to the masses.

However, \x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] does emphacise that he was actually also very practical in the sense that he always aimed to obtain definite numbers out of his calculations, and that was not only the case for the \x[lamb-shift].

= Karl Guthe Jansky
{c}
{parent=physicist}
{wiki}

= Leonard Susskind
{c}
{parent=physicist}
{wiki}

The bald confident chilled out \x[particle-physics] guy from \x[stanford-university]!

= Lectures by Leonard Susskind
{parent=leonard-susskind}

* \x[new-revolutions-in-particle-physics-by-leonard-susskind-2009]{child}

= Louis de Broglie
{c}
{parent=physicist}
{wiki}

= Marie Curie
{c}
{parent=physicist}
{wiki}

= Michio Kaku
{c}
{parent=physicist}
{wiki}

Well known \x[popular-science] character. He just looks futuristic and wraps stuff in exciting empty words. When he shows up, you won't be learning much.

= Murray Gell-Mann
{c}
{parent=physicist}
{wiki}

\x[web-of-stories] 1997 interview playlist: https://www.youtube.com/playlist?list=PLVV0r6CmEsFxKFx-0lsQDs6oLP3SZ9BlA

The way this dude speaks. He exhales incredible intelligence!!!

In the interviews you can see that he pronounces names in all languages amazingly, making acute effort to do so, to the point of being notable. His passion for linguistics is actually mentioned on \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994].

Maybe this obsession is partly due to his name which no \x[english-language][English] speaking person knows how to pronounce from the writing.

This passion also led in part for his names to some \x[physics] terminology he worked on winning out over alternatives by his collaborators, most notably in the case of the naming of the \x[quark].

= Max Planck
{c}
{parent=physicist}
{wiki}

= Paper by Max Planck
{parent=max-planck}

= On the Theory of the Energy Distribution Law of the Normal Spectrum by Max Planck (1900)
{parent=paper-by-max-planck}

http://hermes.ffn.ub.es/luisnavarro/nuevo_maletin/Planck%20(1900),%20Distribution%20Law.pdf

This is THE paper.

= Niels Bohr
{c}
{parent=physicist}
{title2=1885-1962}
{wiki}

= Pascual Jordan
{c}
{parent=physicist}
{wiki}

One of the leading figures of the early development of \x[quantum-electrodynamics].

= Paul Dirac
{c}
{parent=physicist}
{wiki}

= Dirac
{c}
{synonym}

Eccentric nerdy slow speaking \x[physicist] mostly based in \x[university-of-cambridge].

Created the \x[dirac-equation], what else do you need to know?!

\x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994] chapter 1.3 "P.A.M. Dirac and the Birth of Quantum Electrodynamics" quotes Dirac saying how being at high school during \x[world-war-i] was an advantage, since all slightly older boys were being sent to war, and so the younger kids were made advance as fast as they could through subjects. Exactly the type of thing \x[ciro-santilli] wants to achieve with \x[write-free-books-to-get-famous-website], but without the need for a world war hopefully.

Dirac was a staunch \x[atheist] having said during the \x[fifth-solvay-conference-1927]https://en.wikipedia.org/wiki/Solvay_Conference{ref}:
\Q[If we are honest - and scientists have to be - we must admit that religion is a jumble of false assertions, with no basis in reality. The very idea of God is a product of the human imagination. It is quite understandable why primitive people, who were so much more exposed to the overpowering forces of nature than we are today, should have personified these forces in fear and trembling. But nowadays, when we understand so many natural processes, we have no need for such solutions. I can't for the life of me see how the postulate of an Almighty God helps us in any way. What I do see is that this assumption leads to such unproductive questions as why God allows so much misery and injustice, the exploitation of the poor by the rich and all the other horrors He might have prevented. If religion is still being taught, it is by no means because its ideas still convince us, but simply because some of us want to keep the lower classes quiet. Quiet people are much easier to govern than clamorous and dissatisfied ones. They are also much easier to exploit. Religion is a kind of opium that allows a nation to lull itself into wishful dreams and so forget the injustices that are being perpetrated against the people. Hence the close alliance between those two great political forces, the State and the Church. Both need the illusion that a kindly God rewards - in heaven if not on earth - all those who have not risen up against injustice, who have done their duty quietly and uncomplainingly. That is precisely why the honest assertion that God is a mere product of the human imagination is branded as the worst of all mortal sins.]

\Video[http://youtube.com/watch?v=jPwo1XsKKXg]
{title="Paul Dirac and the religion of mathematical beauty" by \x[royal-society] (2013)}

= Pieter Zeeman
{c}
{parent=physicist}
{wiki}

= Polykarp Kusch
{c}
{parent=physicist}
{wiki}

= Richard Feynman
{c}
{parent=physicist}
{wiki}

= Feynman
{c}
{synonym}

Some of Feynman's key characteristics are:
* obsession with understanding the experiments well, see also \x[how-to-teach-and-learn-physics]{full}
* when doing more \x[mathematical] stuff, analogous obsession about starting with a concrete example and then generalizing that into the theory
* liked to teach others. At \x[surely-you-re-joking-mr-feynman] for example he mentions that one key problem of the \x[institute-for-advanced-study] is that they didn't have to teach, and besides that making you feel useless when were not having new ideas, it is also the case that student's questions often inspire you to look again in some direction which sometimes happens to be profitable

  He hated however mentoring others one to one, because almost everyone was too stupid for him
* interest in other \x[natural-science]{p}, and also random art and culture (and especially if it involves pretty women)

Some non-Physics related ones, mostly highlighted at \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994]:
* \x[feynman-was-a-huge-womanizer-during-a-certain-period-of-his-life]
* he hated pomp, going as far as seeming uneducated to some people in the way he spoke, or going out of his way to look like that. This is in stark contrast to "rivals" \x[murray-gell-mann] and \x[julian-schwinger], who were posh/snobby.

Even \x[apple-inc] thinks so according to their \x[think-different] campaign: http://www.feynman.com/fun/think-different/

\x[quantum-electrodynamics] lectures:
* \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979]

Feynman was apparently seriously interested/amused by \x[computer]:
* \x[video-los-alamos-from-below-by-richard-feynman-1975] see description for the human \x[emulator]
* \x[quantum-computers-as-experiments-that-are-hard-to-predict-outcomes] was first attributed to Feynman
* https://www.youtube.com/watch?v=EKWGGDXe5MA Richard Feynman Computer Heuristics Lecture (1986)

\Video[https://www.youtube.com/watch?v=rnMsgxIIQEE]
{title="\x[murray-gell-mann] talks about Richard Feynman" by Muon Ray}
{description=TODO interview date and source. Very amusing, he tells how Feynman wouldn't brush his teeth, or purposefully forget to wear jacket and tie when going to the faculty canteen where it was required.}

\Video[https://www.youtube.com/watch?v=5PH4H29g_wQ]
{title="\x[murray-gell-mann] - Feynman's partons (131/200)" by \x[web-of-stories] (1997)}
{description=Listener is likely this https://en.wikipedia.org/wiki/Geoffrey_West[Geoffrey West]. Key quote:
\Q[Feynman of course, as usual, put it in a form so that the common people could use it, and experimentalists all over the world now thought they understood things because Feynman had put it in such simple language for them.]
}

Two official websites?
* http://www.richardfeynman.com/ this one has clearly superior scientific information.
* http://www.feynman.com/

High level timeline of his life:
* \x[mit]
* \x[manhattan-project]
* \x[princeton-university]
* \x[cornell-university]
* \x[caltech]

In 1948 he published his reworking of classical \x[quantum-mechanics] in terms of the \x[path-integral-formulation]: https://journals.aps.org/rmp/abstract/10.1103/RevModPhys.20.367 Space Time Approach to nonrelativistic quantum mechanics (paywalled 2021)

= Personal life of Richard Feynman
{parent=richard-feynman}

= Arline Greenbaum
{c}
{parent=personal-life-of-richard-feynman}
{title2=Richard Feynman's first wife}

\x[feynman]'s first wife, previously his local-\x[high-school] darling.

\x[feynman] was like an reversed \x[stephen-hawking]: he married his wife knowing that she had a serious illness, while Hawking's wife married him knowing that as well.

Just that in Feynman's case, the disease outcome (\x[tuberculosis]) was much more uncertain, and she tragically died in 1945 much earlier while \x[feynman] was at \x[los-alamos-laboratory], while \x[stephen-hawking][Hawking], despite his decline, lived much longer.

Reading about her death e.g. at \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994] is a major tearjerker, it's just too horrible. The book mentions on chapter "The Last Springtime" that at last, during the last months of her life, after much hesitation, they did \x[fuck] in the sanatorium Arline was staying at in \x[albuquerque], the nearest major city to \x[los-alamos], despite the risk of Feynman being being infected.

It is even sadder to think that the first \x[antibiotic]{p} for \x[tuberculosis], \x[streptomycin], finished its first major clinical trial at around 1948, not long after her \x[death].

\x[ciro-santilli] consider this tragedy a cause of \x[feynman-was-a-huge-womanizer-during-a-certain-period-of-his-life].

= Feynman was a huge womanizer during a certain period of his life
{c}
{parent=personal-life-of-richard-feynman}

\x[feynman] became a terrible \x[womanizer] after his first wife \x[arline-greenbaum] died, involving himself with several married women, and leading to at least two \x[abortion]{p} according to \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994].

\x[ciro-santilli] likes to think that he is quite liberal and not a strict follower of \x[christian] morals, but this one shocked him slightly even. Feynman could be a \x[god], but he could also be a \x[dick] sometimes.

One particular case that stuck to \x[ciro-santilli]'s mind, partly because he is \x[brazilian], is when \x[feynman] was in \x[brazil], he had a girlfriend called Clotilde that called him "Ricardinho", which means "Little Richard"; -inho is a \x[diminutive] suffix in \x[portuguese-language], and also indicates affection. At some point he even promised to take her back to the \x[united-states], but didn't in the end, and instead came back and married his second wife in marriage that soon failed.

Richard's third and final wife seemed a good match for him though. When they started \x[courting], she made it very clear that Feynman should decide if he wanted her or not soon, because she had other options available and being actively tested. \x[fight-fire-with-fire]{c}.

= Richard Feynman's first seminar in 1941
{parent=richard-feynman}

He and \x[john-archibald-wheeler] presented the \x[wheeler-feynman-absorber-theory].

Bibliography:
* https://www.cantorsparadise.com/richard-feynmans-first-lecture-4c392833b395

= Works by Richard Feynman
{parent=richard-feynman}

* \x[richard-feynman-quantum-electrodynamics-lecture-at-university-of-auckland-1979]{child}

= Space-Time Approach to Quantum Electrodynamic by Richard Feynman (1949)
{parent=works-by-richard-feynman}

The first key paper to his approach to \x[quantum-electrodynamics] apparently.

= Works about Richard Feynman
{parent=richard-feynman}

= Genius: Richard Feynman and Modern Physics by James Gleick (1994)
{c}
{parent=works-about-richard-feynman}

This is a good book.

It has some overlap with \x[surely-you-re-joking-mr-feynman], which it likely takes as primary sources of some stories.

However, while Surely goes into a lot of detail of each event, this book paints a more cohesive and global picture of things.

In terms of hard physics/mathematics, this book takes the approach of spending a few paragraphs in some chapters describing in high level terms some of the key ideas, which is a good compromise. It does sometime fall into the sin of \x[to-talk-about-something-without-giving-the-real-name-to-not-scare-off-the-audience], but it does give a lot of names, notably it talks a lot about \x[lagrangian-mechanics]. And it goes into more details than Surely in any case.

= Los Alamos From Below by Richard Feynman (1975)
{c}
{parent=works-about-richard-feynman}

Amazing talk by \x[richard-feynman] that describes his experiences at \x[los-alamos-national-laboratory] while developing the first \x[nuclear-weapon]{p}.

Transcript: http://calteches.library.caltech.edu/34/3/FeynmanLosAlamos.htm Also included full text into \x[surely-you-re-joking-mr-feynman].

* https://www.youtube.com/watch?v=uY-u1qyRM5w&t=2881s describes the computing aspects. Particularly interesting is the quote about how they used the typist secretary pool to \x[emulate] the \x[ibm] machines and debug their programs before the machines had arrived. This is exactly analogous to what is done in 2020 in the \x[semiconductor] industry, where slower models are used to estimate how future algorithms will run in future hardware.

\Video[https://www.youtube.com/watch?v=uY-u1qyRM5w]
{title="Los Alamos From Below" by \x[richard-feynman] (1975)}

= Surely You're Joking, Mr. Feynman
{c}
{parent=works-about-richard-feynman}
{wiki}

= Surely You're Joking, Mr. Feynman chapter O Americano, Outra Vez!
{c}
{parent=surely-you-re-joking-mr-feynman}

In this chapter \x[richard-feynman] talks about his experiences in \x[brazil].

"O Americano, Outra Vez!" means "The American, once again!" in \x[portuguese-language][Portuguese], which is what one of the samba school boss exclaimed when Feynman was not playing well his instrument, the frigideira, during a rehearsal.

Feynman really enjoyed Brazil's (and notably \x[rio]'s) stereotypical "take it easy and enjoy life" attitude.

= Surely You're Joking, Mr. Feynman chapter Alfred Nobel's Other Mistake
{c}
{parent=surely-you-re-joking-mr-feynman}

Key quote that names the chapter:
\Q[
My friend https://en.wikipedia.org/wiki/Matthew_Sands[Matt Sands] was once going to write a book to be called Alfred Nobel's Other Mistake.
]

= Rich people who create charitable prizes are often crooked
{c}
{parent=surely-you-re-joking-mr-feynman-chapter-alfred-nobel-s-other-mistake}

\Q[
A friend of mine who's a rich man - he invented some kind of simple digital switch - tells me about these people who contribute money to make prizes or give lectures: "You always look at them carefully to find out what crookery they're trying to absolve their conscience of."
]

= Sean M. Carroll
{c}
{parent=physicist}
{wiki}

Works at \x[caltech] as of 2020.

= Sean Carroll
{c}
{synonym}

Sean's series https://www.youtube.com/playlist?list=PLrxfgDEc2NxZJcWcrxH3jyjUUrJlnoyzX[The Biggest Ideas in the Universe] has some merit, but it's just to math-light falling a bit below \x[the-missing-link-between-basic-and-advanced].

But as usual, it falls too close to \x[popular-science] for Ciro's taste.

= The Purpose of Harvard is Not to Educate People by Sean Carroll (2008)
{c}
{parent=sean-m-carroll}

https://web.archive.org/web/20120126021615/http://blogs.discovermagazine.com/cosmicvariance/2008/05/29/the-purpose-of-harvard-is-not-to-educate-people/

Critique of \x[harvard] by \x[sean-carroll]. Applies to basically all \x[university]{p}.

= How To Get Tenure at a Major Research University by Sean Carroll (2011)
{c}
{parent=sean-m-carroll}

https://web.archive.org/web/20120414075927/http://blogs.discovermagazine.com/cosmicvariance/2011/03/30/how-to-get-tenure-at-a-major-research-university/ 

= Stephen Hawking
{c}
{parent=physicist}
{wiki}

While learning black-hole stuff is not on top of \x[ciro-santilli]'s priorities, Hawking's spirit is to be admired.

To never give up even when everything seems lost, and still have a sense of humour is respectable.

An ex-physicist colleague who had met Hawking told an anecdote. Hawking was around in the department one day, they said hi and all. But then Hawking wanted to tell a joke. It took like 5 minutes of typing, and you can imagine that things were pretty awkward and the joke's timing was "a bit off". But Hawking did tell the joke nonetheless.

This is also suggested in the https://en.wikipedia.org/wiki/The_Theory_of_Everything_(2014_film)[The Theory of Everything (2014)] film, and therefore likely the biographies.

= Sylvain Poirier
{c}
{parent=physicist}

\x[ciro-santilli] feels \x[ciro-santilli-s-e-soulmates][a bit like this guy]:
* he's also an \x[idealist], even more than Ciro. So cute. Notably, he he also dumps his brain online into pages that no-one will ever read
* he also thinks that the 2010's education system is bullshit, e.g. http://settheory.net/learnphysics[]
* https://trust-forum.net/ some kind of change the world website. But \Q[Started with Vue.js + Node.js. Details reserved for developers willing to contribute] is a sin to Ciro. Planning a change the world thing behind closed doors? Really?
* https://antispirituality.net/ his \x[atheism] website

One big divergence: \x[having-more-than-one-natural-language-is-bad-for-the-world][obsession with translating every page into every language].

His \x[mathematics-genealogy-project] entry: https://www.genealogy.math.ndsu.nodak.edu/id.php?id=56185

Old \x[french-language][French] website: https://spoirier.lautre.net/

https://singlesunion.org/ so cute, he's looking for true love!!!

\Video[https://www.youtube.com/watch?v=5MKjPYuD60I&list=PLJcTRymdlUQPwx8qU4ln83huPx-6Y3XxH]
{title=Why learn Physics by yourself by \x[sylvain-poirier] (2013)}

= settheory.net
{parent=sylvain-poirier}

https://settheory.net/

Where \x[sylvain-poirier] dumps his \x[mathematics] and \x[physics] brain.

Notably, given the domain name, it is clear that he likes \x[formalization-of-mathematics]-stuff, like \x[ciro-santilli].

At first glance, looks a bit dry though, not many examples.

= Tobias J. Osborne
{c}
{parent=physicist}

\x[quantum-mechanics] stuff at https://en.wikipedia.org/wiki/University_of_Hanover[University of Hanover]. Good teaching. Big respect:
* \x[quantum-field-theory-lecture-by-tobias-osborne-2017]{child}
* \x[advanced-quantum-field-theory-lecture-by-tobias-osborne-2017]{child}

= Victor Francis Hess
{c}
{parent=physicist}
{wiki}

= Walter Houser Brattain
{c}
{parent=physicist}
{wiki}

= Walter Brattain
{synonym}

= Werner Heisenberg
{c}
{parent=physicist}
{wiki}

= Heisenberg
{c}
{synonym}

Participated in the \x[german-nuclear-weapons-project], ouch.

= Paper by Werner Heisenberg
{parent=werner-heisenberg}

* \x[quantum-mechanical-re-interpretation-of-kinematic-and-mechanical-relations-by-heisenberg-1925]{child}

= William Shockley
{c}
{parent=physicist}
{wiki}

= Willis Lamb
{c}
{parent=physicist}
{wiki}

= Wolfgang Pauli
{c}
{parent=physicist}
{wiki}

= Pauli
{c}
{synonym}

The due was brutal. \x[ron-maimon] praises that at https://youtu.be/ObXbKbpkSjQ?t=944 from \x[video-ron-maimon-interview-with-jeff-meverson-2014].

= Physics gossip
{parent=physics}

= Feud between Sabine Hossenfelder and Luboš Motl
{parent=physics-gossip}

* https://www.hollywoodlanews.com/sabine-hossenfelder-physicist-lubos-motl-blogger/
* https://motls.blogspot.com/
* http://settheory.net/crackpot-physics from \x[settheory-net].
* https://en.wikipedia.org/wiki/Lubo%C5%A1_Motl
* https://physics.stackexchange.com/users/1236/lubo%c5%a1-motl he has lots of contributions to \x[physics-stack-exchange]

= Philosophy of Science
{parent=physics}

= Never trust an experiment that is not supported by a good theory
{parent=philosophy-of-science}

Not the usual bullshit you were expecting from the \x[philosophy-of-science], right?
* https://youtu.be/AYC5lE0b8os?t=41 A Computational Whole-Cell Model Predicts Genotype From Phenotype- Markus Covert by "Calit2ube" (2013), see also: \x[whole-cell-simulation]{full}
* https://en.wikipedia.org/wiki/Jacques_Monod

  \x[ciro-santilli] also likes how Monod "learned from other students a little older than himself, rather than from the faculty.", read somewhere else that it is because faculty is more likely outdated.
* the book \x[genius-richard-feynman-and-modern-physics-by-james-gleick-1994] mentions a few incidents of this involving \x[feynman], see e.g. chapter "New Particles, New Language" where he and fellow theorist \x[hans-bethe] immediately spot problems with experimentalists' data in suspicious results

= Physics and the illusion of life
{parent=philosophy-of-science}

The natural sciences are not just a tool to predict the future.

They are a reminder that the lives that we live daily are mere illusions, just like \x[buddhist]{p} and https://en.wikipedia.org/wiki/Maya_(religion)[Hinduists] say.

We as individuals perceive nothing about the materials that we touch every day really work, nor more importantly how our \x[brain] and \x[cell-biology]{p} work.

Everything is magic out of our control.

The natural sciences allow us peek, with huge concentrated effort, into tiny little bits a little of those unknowns, and blow our minds as we notice that we don't know anything.

For all practical purposes in life, there is a huge macro micro gap. We are only able to directly perceive and influence the macro events. And through those we try to affect micro events. Because for good or bad, micro events reflect in the macro world.

Every one or two weeks \x[ciro-santilli] remembers that he and everything he touches are just a bunch of atoms, and that is an amazing feeling.

\x[alan-watts]'s \x[video-alan-watts-philosopher-talk]["Philosopher" talk] mentions related ideas:
\Q[The origin of a person who is defined as a philosopher, is one who finds that existence itself is exceedingly odd.]

\Video[http://youtube.com/watch?v=BbXZLKb_nSo]
{title=\x[alan-watts]' "Philosopher" talk.}

= Animations of molecular biology processes
{parent=physics-and-the-illusion-of-life}

Perhaps, the feeling of \x[physics-and-the-illusion-of-life] reaches its peak in \x[molecular-biology].

Just look at your \x[fucking] hand right now.

Do you have any idea of each of the cells in it work? Isn't is at least 100 times more complex than the materials of the table you hand is currently resting on?

\x[animations-of-molecular-biology-processes] make this particularly bind bendingly clear.

And don't get \x[ciro-santilli] started on \x[brain][the brain] and the impossibility of \x[free-will].

And yet, we live, oblivious to all of it.

\Video[https://www.youtube.com/watch?v=kXpzp4RDGJI]
{title=ATP synthase in action by \x[harvardx] (2017)}

\Video[https://www.youtube.com/watch?v=LQmTKxI4Wn4]
{title="\x[electron-transport-chain]{c}" by \x[harvardx] (2017)}
{description=This actually explains how \x[mitochondrion]{p} use \x[cellular-respiration][sugar derivatives and oxygen to transform ADP into ATP].}

\Video[https://youtube.com/watch?v=wJyUtbn0O5Y]
{title=The Inner Life of the Cell by XVIVO Scientific Animation (2011)}
{description=Also created for BioVisions from \x[harvard-university] apparently like other amazing videos. It also has the best music.}

\Video[https://youtube.com/watch?v=7Hk9jct2ozY]
{title=\x[dna] animations by wehi.tv for Science-Art exhibition by WEHImovies (2018)}

= Alan Watts controlled dream of life talk
{c}
{parent=physics-and-the-illusion-of-life}

Goes along: if you could control your life multiple times to be perfect, you would eventually get tired of paradise, and you would go further and further into creating uncertain worlds with some suffering, until you would reach the current real world.

Very similar to \x[the-matrix-1999] when Agent Smith talks about the failed https://matrix.fandom.com/wiki/Paradise_Matrix[Paradise Matrix] shown at https://www.youtube.com/watch?v=9Qs3GlNZMhY[]:
\Q[Did you know that the first Matrix was designed to be a perfect human world where none suffered, where everyone would be happy? It was a disaster. No one would accept the program. Entire crops were lost. Some believed that we lacked the programming language to describe your "perfect world". But I believe that, as a species, human beings define their reality through misery and suffering. So the perfect world was a dream that your primitive cerebrum kept trying to wake up from.]

\Video[https://youtube.com/watch?v=XlCZm-mz20M]
{title=\x[alan-watts]' "The dream of life" talk.}

= Rick and Morty A Life Well Lived
{parent=physics-and-the-illusion-of-life}
{c}

From episode "Mortynight Run"
* https://rickandmorty.fandom.com/wiki/Mortynight_Run
* https://rickandmorty.fandom.com/wiki/Roy:_A_Life_Well_Lived

\Q[Look at this. You beat \x[cancer], and then you went back to work at the carpet store? Booooh.]

\Video[http://youtube.com/watch?v=szzVlQ653as]
{title="Roy: A Life Well Lived | Rick and Morty | Adult Swim" by Adult Swim (2015)}

= Reductionism
{parent=philosophy-of-science}
{wiki}

= Emergence
{parent=reductionism}
{wiki}

Basically the opposite of \x[reductionism].

= Unsolved physics problem
{parent=physics}
{wiki=List_of_unsolved_problems_in_physics}

The most important ones are:
* \x[theory-of-everything]{child}. We are certain that our base equations are wrong, but we don't know how to fix them :-)
  * \x[grand-unified-theory]{child}
  * \x[strong-cp-problem]{child}
* full explanation of \x[high-temperature-superconductivity]{child}. \x[superconductivity]{c} already has a gazillion applications, and doing it in higher temperatures would add a gazillion more, and maybe this theoretical explanation would help us find new high temperature superconducting materials more effectively
* \x[fractional-quantum-hall-effect-5-2]{child}

Other super important ones:
* \x[neutrino] mass measurement and explanation

= Physics bibliography
{parent=physics}

= Theoretical Physics Reference by Ondrej Certík
{parent=physics-bibliography}
{title2=certik/theoretical-physics}

* https://github.com/certik/theoretical-physics
* https://www.theoretical-physics.com/dev/index.html

The only one on \x[github]. In RST and renders to HTML with image formulas.

Too "direct formula overload" at first look.

By the creator of SymPy, who works at \x[los-alamos-national-laboratory] and has a PhD in chemical physics: shttps://www.linkedin.com/in/ondřej-čertík-064b355b/ Man, big kudos to this dude.

= Physics YouTube channel
{parent=physics-bibliography}

In other sections:
* \x[particle-physics-youtube-channel]{child}

= Faculty of Khan
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/channel/UCGDanWUzNMbIV11lcNi-yBg

This is quite in-depth, pretty good.

= Looking Glass Universe
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/user/LookingGlassUniverse

Cute simple paper-cut stop motion animations videos by Mithuna Yoganathan, a PhD in theoretical physics at the \x[university-of-cambridge]: http://www.damtp.cam.ac.uk/person/my332[].

This has the seeds of direct good intuition, but often stops a bit too short. Worth a look though, there is value in them for beginners.

= Ludic Science
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/channel/UCM014DFZ7peFVrSaxnh4-Mw

Maybe \x[spanish-language][Spanish] accent, but might also be from some other \x[european] language.

Very practical, low-cost experiments.

= minutephysics
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/channel/UCUHW94eEFW7hkUMVaZz4eDg

= Physics Explained
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/c/PhysicsExplainedVideos

Falls a bit too much on the basic side of the \x[the-missing-link-between-basic-and-advanced].

= ScienceClic
{c}
{parent=physics-youtube-channel}

* \x[english-language]: https://www.youtube.com/channel/UCWvq4kcdNI1r1jZKFw9TiUA
* French: https://www.youtube.com/user/ScienceClic

This is very promising.

= Steve Mould
{c}
{parent=physics-youtube-channel}
{wiki}

https://www.youtube.com/channel/UCEIwxahdLz7bap-VDs9h35A

= The Science Asylum
{c}
{parent=physics-youtube-channel}

https://www.youtube.com/channel/UCXgNowiGxwwnLeQ7DXTwXPg

= Nick Lucid
{c}
{parent=the-science-asylum}

\x[ciro-santilli]'s answer to https://www.quora.com/How-credible-is-Nick-Lucid-of-YouTubes-%E2%80%9CThe-Science-Asylum%E2%80%9D/answer/Ciro-Santilli[How credible is Nick Lucid, of YouTube's "The Science Asylum"?] on \x[quora].

= Veritasium
{c}
{parent=physics-youtube-channel}

\x[youtube]{parent} channel: https://www.youtube.com/channel/UCHnyfMqiRRG1u-2MsSQLbXA

Does have some gems worth looking at. But generally always \x[popular-science][too superficial] as can be expected from any self-sufficient YouTubber.

\Video[https://www.youtube.com/watch?v=S1tFT4smd6E]
{title="My Life Story" by \x[veritasium] (2018)}
{description=Basically a \x[don-t-be-a-pussy] story where he describes how he has always been passionate by both \x[science] and \x[cinema][film making]. Veritasium is a nice guy.}

= Chemistry
{parent=natural-science}
{wiki}

Chemistry is fun. Too hard for precise \x[physics] (pre \x[quantum-computing], see also \x[quantum-chemistry]), but not too hard for some maths like \x[social-science]{p}.

And it underpins \x[biology].

\Video[https://www.youtube.com/watch?v=oSBM2SXlGC]
{title=100 Greatest Discoveries - Chemistry by the Discovery Channel (2005)}
{description=Pretty good within what you can expect from \x[popular-science]. The discovery selection is solid, and he interviews 3 \x[nobel-prize] laureates, only one about stuff they invented, so you can see their faces. The short non-precise scenes of epoch are also pleasing. Part of \x[100-greatest-discoveries-by-the-discovery-channel-2004-2005].
}

= Atomic theory
{parent=chemistry}
{wiki}

Theory that atoms exist, i.e. matter is not continuous.

Evidence:
* \x[brownian-motion] mathematical analysis in 1908
* \x[x-ray-crystallography]: it \i[sees] crystal latices
* \x[scanning-tunnelling-microscope]: it \i[sees] individual atoms for Christ's sake, what else do you want?

  \Image[https://upload.wikimedia.org/wikipedia/en/3/37/A_Boy_and_His_Atom_%28still%29.jpg]
  {title=Still from https://en.wikipedia.org/wiki/A_Boy_and_His_Atom[A boy and his atom] by \x[ibm].}
  {source=https://en.wikipedia.org/wiki/File:A_Boy_and_His_Atom_(still).jpg}

= Brownian motion
{c}
{parent=atomic-theory}
{wiki}

Small microscopic visible particles move randomly around in water.

If water were continuous, this shouldn't happen.

The amount it moves also quantitatively matches with the expected properties of water.

Tiny uniform plastic beads called "microbeads" are the preferred 2019 modern method of doing this: https://en.wikipedia.org/wiki/Microbead

Original observation in 1827 by Brown, with further experiments and interpretation in 1908 by https://en.wikipedia.org/wiki/Jean_Baptiste_Perrin[Perrin].

\Video[http://youtube.com/watch?v=UUSL0NqcY6k]
{title="Observing Brownian motion of micro beads" by Forrest Charnock (2016)}

= Atom
{parent=chemistry}
{wiki}

= Model of the atom
{parent=atom}

= Bohr model
{c}
{parent=model-of-the-atom}
{title2=1913}
{wiki}

Was the first model to explain the \x[balmer-series], notably linking atomic spectra to the \x[planck-constant] and therefore to other initial \x[quantum-mechanical] observations.

This was one of the first major models that just said:
\Q[I give up, I can't tie this to \x[classical-physics] in any way, let's just roll with it, OK?]

It still treats \x[electron]{p} as little points spinning around the nucleus, but it makes the non-\x[classical-physics][classical] postulate that only certain angular momentums (and therefore energies) are allowed.

Bibliography:
* \x[inward-bound-by-abraham-pais-1988] Chapter 9.e Atomic structure and spectral lines - Niels Bohr

= Chemist
{parent=chemistry}
{wiki}

= Alfred Nobel
{parent=chemist}
{wiki}

= Chemical element
{parent=chemistry}
{wiki}

= Hydrogen
{parent=chemical-element}
{title2=H, 1}
{wiki}

= Water
{parent=hydrogen}
{wiki}

= Ice
{parent=water}
{wiki}

= Snow
{parent=ice}
{wiki}

= Deuterium
{parent=hydrogen}
{title2=\sup[2]H}
{wiki}

= Heavy water
{parent=deuterium}
{wiki}

\x[cody-s-lab] had a nice 5 video series on making it at home! But the \x[united-states-government] asked him to take it down as suggested at \x[video-what-s-been-going-on-with-cody-slab-by-cody-s-lab-2019] at https://youtu.be/x1mv0vwb08Y?t=84.

Here's a copy online as of 2020: https://www.youtube.com/watch?v=bCXB6BdMh9Y

= Semiheavy water
{parent=heavy-water}
{wiki}

= Girdler sulfide process
{c}
{parent=heavy-water}
{wiki}

= Tritium
{parent=hydrogen}
{title2=\sup[3]H}
{wiki}

Used in:
* \x[boosted-fission-weapon]
* \x[magnetic-confinement-fusion]

= Helium
{parent=chemical-element}
{title2=He, 2}
{wiki}

= Helium-3
{parent=helium}
{wiki}

= Helium-4
{parent=helium}
{wiki}

= Liquid helium
{parent=helium}
{wiki}

= Helium I
{synonym}
{title2}

4K. Enough for to make "low temperature \x[superconductor]{p}" like regular metals superconducting.

Contrast with \x[liquid-nitrogen], which is much cheaper but only goes to 77K.

= Superfluid helium-3
{parent=liquid-helium}
{wiki}

Surprisingly, can also become a \x[superfluid] even though each atom is a \x[fermion]! This is because of \x[cooper-pair] formation, just like in \x[superconductor]{p}, but the transition happens at lower temperatures than \x[superfluid-helium-4], which is a \x[boson].

= Superfluid helium-4
{parent=liquid-helium}
{wiki}

= Helium II
{synonym}
{title2}

Also sometimes called \x[helium-ii], in contrast to \x[helium-i], which is the non-\x[superfluid] \x[liquid-helium] phase.

= Carbon
{parent=chemical-element}
{title2=C, 6}
{wiki}

= Carbon-14
{parent=carbon}
{wiki}

= Nitrogen
{parent=chemical-element}
{title2=N, 7}
{wiki}

= Liquid nitrogen
{parent=nitrogen}
{wiki}

77K. Low enough for "high temperature \x[superconductor]{p}" such as \x[yttrium-barium-copper-oxide], but for "low temperature superconductors", you need to go much lower, typically with \x[liquid-helium], which is likely much more expensive. TODO by how much?

\Video[https://www.youtube.com/watch?v=PEgm5NFXlFM]
{title="Where Do You Get Liquid Nitrogen?" by The King of Random (2016)}
{description=He just goes to a medical gases shop in a local \x[industrial] estate and buys 20L for 95 dollars and brings it back on his own Dewar marked 35LD.}

\Video[https://www.youtube.com/watch?v=dCXkaQa53QQ]
{title="Making Liquid Nitrogen From Scratch!" by \x[veritasium] (2019)}
{description="From scratch" is perhaps a bit \x[clickbaity], but I'll take it.}

= Oxygen
{parent=liquid-nitrogen}
{title2=O, 8}
{wiki}

= Quartz
{parent=oxygen}
{title2=$SiO_2$}
{wiki}

\x[piezoelectric], and notably used in \x[quartz-clock].

= Neon
{parent=chemical-element}
{title2=Ne, 10}
{wiki}

= Sodium
{parent=chemical-element}
{title2=Na, 11}
{wiki}

= Sodium chloride
{parent=sodium}
{title2=NaCl}
{wiki}

= Aluminium
{parent=chemical-element}
{title2=Al, 13}
{wiki}

= Silicon
{parent=chemical-element}
{title2=Si, 14}
{wiki}

= Argon
{parent=chemical-element}
{title2=Ar, 18}
{wiki}

= Potassium
{parent=chemical-element}
{title2=K, 19}
{wiki}

= Iron
{parent=chemical-element}
{title2=Fe, 26}
{wiki}

= Steel
{parent=iron}
{wiki}

= Cadmium
{parent=chemical-element}
{title2=Ca, 48}
{wiki}

= Caesium
{parent=chemical-element}
{title2=Cs, 55, $6s^1$}
{wiki}

= Cesium
{synonym}

= Caesium-133
{parent=caesium}
{title2=stable}
{wiki}

Stable \x[isotope].

= Caesium-137
{parent=caesium}
{title2=radioactive}
{wiki}

Highly \x[radioactive] \x[isotope] of \x[caesium]  with \x[half-life] of 30.17 \x[year][y]. Produced from the \x[nuclear-fission] of \x[uranium], TODO exact reaction, not found in nature.

The \x[fucked] thing about this byproduct is that it is in the same chemical family as \x[sodium], and therefore forms a salt that looks like regular \x[sodium-chloride][table salt], and dissolves in water and therefore easily enters your body and sticks to things.

Another problem is that its \x[half-life] is long enough that it doesn't lose radioactivity very quickly compared to the life of a human person, although it is short enough to make it highly toxic, making it a terrible pollutant when released.

This is why for example in the \x[goiania-accident] a girl ended up ingesting Caesium-137 after eating an egg after touching the Caesium with her hands.

\Image[https://upload.wikimedia.org/wikipedia/commons/3/3e/Cs-137-decay.svg]
{title=\x[caesium-137] decay scheme.}

= Goiânia accident
{parent=caesium-137}
{title2=1987}
{wiki}

= Gold
{parent=chemical-element}
{title2=Au, 79}
{wiki}

= Polonium
{parent=chemical-element}
{title2=Po, 84}
{wiki}

= Radium
{parent=chemical-element}
{title2=Ra, 88}
{wiki}

Discovered by \x[marie-curie] when she noticed that there was some yet unknown more radioactive element in their raw samples, after \x[uranium] had already been separated.

\Image[https://upload.wikimedia.org/wikipedia/commons/6/65/Decay_chain%284n%2B2%2C_Uranium_series%29.svg]
{title=The \x[uranium]-238 decay chain is the main source of naturally occurring radium.}

\Video[https://www.youtube.com/watch?v=wAZX8sWSCqs]
{title="The epic story of radium" by Institut de Radioprotection et de Sûreté Nucléaire - IRSN (2013)}

= Uranium
{parent=chemical-element}
{title2=U, 92}
{wiki}

Vs \x[plutonium]: \x[uranium-vs-plutonium-quora-answer-by-ciro-santilli].

= Uranium vs plutonium Quora answer by Ciro Santilli
{parent=uranium}

https://www.quora.com/What-is-the-difference-between-plutonium-and-uranium/answer/Ciro-Santilli

= Enriched uranium
{parent=uranium}
{wiki}

= Plutonium
{parent=chemical-element}
{title2=Pu, 94}
{wiki}

Vs \x[uranium]: \x[uranium-vs-plutonium-quora-answer-by-ciro-santilli].

= Chemical compound
{parent=chemistry}
{wiki}

= Nutrient
{parent=chemical-compound}
{wiki}

In other sections:
* \x[carbohydrate]

= Vitamin
{parent=nutrient}
{wiki}

All vitamins are \x[organic-compound]{parent}{p}.

Mentioned at \x[100-greatest-discoveries-by-the-discovery-channel-2004-2005] medicine episode.

= Vitamin C
{parent=vitamin}
{wiki}

= Organic compound
{parent=chemical-compound}
{wiki}

= Capsaicin
{parent=organic-compound}
{title2}
{wiki}

Active compound in pepper.

= Nitroglycerin
{parent=organic-compound}
{wiki}

= Carbohydrate
{parent=chemical-compound}

= Carbohydrate loading
{parent=carbohydrate}
{wiki}

= Sugar
{parent=carbohydrate}

= Sucrose
{parent=sugar}
{wiki}

= Organic chemistry
{parent=chemistry}
{wiki}

= Biochemistry
{parent=organic-chemistry}
{wiki}

= Chemical company
{parent=chemistry}
{wiki}

= DuPont
{c}
{parent=chemical-company}

They made \x[gunpowder]. Then the \x[american-civil-war] came. Billions, baby.

Military links carried over well into \x[world-war-ii], where e.g. they built the \x[b-reactor].

= Chemical reaction
{parent=chemistry}
{wiki}

= Reaction rate
{parent=chemical-reaction}
{wiki}

= Activation energy
{parent=reaction-rate}
{wiki}

= Catalysis
{parent=reaction-rate}
{wiki}

= Catalyst
{synonym}

= Catalyse
{synonym}

= Catalyses
{synonym}

= Total synthesis
{parent=chemical-reaction}
{wiki}

TODO why can't we produce \x[organic-compound]{p} more cheaply by total synthesis than biosynthesis?

= Semisynthesis
{parent=total-synthesis}
{wiki}

= Cell-free protein synthesis
{parent=total-synthesis}
{wiki}

= Chemical process design
{parent=chemical-reaction}

https://en.wikipedia.org/wiki/Process_design

\Video[https://www.youtube.com/watch?v=gkj-FZOldpI]
{title="Computer Aided Simulation & Design in Chemical Engineering (E21)" by Chemical Engineering Guy (2016)}
{description=Interesting overview of the different types of modelling software used in chemical process design.}

\Video[https://www.youtube.com/watch?v=9jRfAJJO7mM]
{title="How to Design a Total Synthesis" by Mike Christiansen (2013)}
{description=Just a ultra quick \x[hello-world] with some very basic ideas, but worth watching.}

\Video[https://www.youtube.com/watch?v=rbhkAu5mgis]
{title="SuperPro Designer: Fermentation Simulation" by LearnChemE (2012)}

= Chemical process design software
{parent=chemical-process-design}

\Video[https://www.youtube.com/watch?v=mcbbWn4F1lQ]
{title="Process Simulation Software FREE Download - Aspen Hysys versus DWSim | COCO" by Jeferson Costa (2020)}
{description=Jeferson, a \x[brazilian] from Petrobras, is the creator of the open source DWSim software, and in this video he  gives a quick demo of his software and compares it briefly to \x[aspen-hysys], which appears to be the golden paid reference implementaion.}

= Aspen HYSYS
{parent=chemical-process-design-software}
{wiki}

\Video[https://www.youtube.com/watch?v=mcbbWn4F1lQ]
{title="Aspen Hysys Introduction" by Emmanuel Oloyede (2016)}
{description=Holy crap, the UI is idential to Microsoft Word with that huge top bar!!!}

= Retrosynthetic analysis
{parent=chemical-process-design}
{wiki}

= Entropy of a chemical reaction
{parent=chemical-reaction}

First, experiments, please how do you determine it and how it helps predict the future: https://chemistry.stackexchange.com/questions/42066/is-there-a-way-to-experimentally-measure-entropy

No \x[youtube] video? Really?

= Electrochemistry
{parent=chemistry}
{wiki}

= Electric battery
{parent=electrochemistry}
{wiki}

= Nine-volt battery
{parent=electric-battery}
{wiki}

= NFPA 704
{c}
{parent=chemistry}
{wiki}

= Fire diamond
{synonym}
{title2}

= How can a chemical substance be unstable but not flammable?
{parent=nfpa-704}

I can't believe there isn't a \x[youtube] video comparing various substances for each flammability and instability ratings, this would be a huge hit.

= pH
{c}
{parent=chemistry}
{wiki}

= pH strip
{c}
{parent=ph}
{wiki}

= Periodic table
{parent=chemistry}
{wiki}

= Nobel gas
{parent=periodic-table}
{wiki}

* \x[helium]{child}

= Chemistry bibliography
{parent=chemistry}

= Periodic Videos
{c}
{parent=chemistry-bibliography}

https://www.youtube.com/channel/UCtESv1e7ntJaLJYKIO1FoYw

= Biology
{parent=natural-science}
{wiki}

= Molecular biology
{parent=biology}
{wiki}

\x[ciro-santilli] believes that \x[molecular-biology-technologies] will be a large part of \x[the-next-big-thing]{p}{parent} as shown at: \x[molecular-biology-technologies]{full}.

= DNA
{c}
{parent=molecular-biology}
{wiki}

Since DNA is the centerpiece of life, \x[ciro-santilli] is extremely excited about DNA-related technologies, see also: \x[molecular-biology-technologies].

= Chromosome
{c}
{parent=dna}
{wiki}

= Circular chromosome
{c}
{parent=chromosome}
{wiki}

= DNA detection
{c}
{parent=dna}

DNA detection means determining if a specific DNA sequence is present in a sample.

This can be used to detect if a given species of microorganism is present in a sample, and is therefore a widely used diagnostics technique to see if someone is infected with a virus.

You could of course do full \x[dna-sequencing][DNA Sequencing] to see everything that is there, but since it is as a more generic procedure, sequencing is more expensive and slow.

The alternative is to use a \x[dna-amplification] technique.

= DNA amplification
{c}
{parent=dna}
{wiki}

DNA amplification is one of the key DNA technologies:
* it is one of the main ways in which \x[dna-detection] can be done.
* it is the first step of \x[illumina][Illumina sequencing], since you need multiple copies of several parts of the genome for the method to work

= Polymerase chain reaction
{parent=dna-amplification}
{title2=PCR}
{wiki}

This is an extremely widely used technique as of 2020 and much earlier.

If allows you to amplify "any" sequence of choice (TODO length limitations) between a start and end sequences of interest which you synthesize.

If the sequence of interest is present, it gets amplified exponentially, and you end up with a bunch of DNA at the end.

You can then measure the DNA concentration based on simple light refraction methods to see if there is a lot of DNA or not in the post-processed sample.

Even \x[ciro-santilli] had some contact with it at: \x[oxford-nanopore-river-bacteria]{full}, see: \x[oxford-nanopore-river-bacteria/pcr]{child}!

One common problem that happens with PCR if you don't design your primers right is: https://en.wikipedia.org/wiki/Primer_dimer

= Real-time polymerase chain reaction
{parent=polymerase-chain-reaction}
{wiki}

Also known as: Quantitative PCR (qPCR).

Like PCR, but the amplification machine measures the concentration of DNA at each step.

This describes one possible concentration detection method with \x[fluorescence][fluorescent] molecules that only become fluorescent when the DNA is double stranded (https://en.wikipedia.org/wiki/SYBR_Green_I[SYBR Green])

\Video[http://youtube.com/watch?v=YhXj5Yy4ksQ]
{title="Polymerase Chain Reaction (PCR) - Quantitative PCR (qPCR)" by Applied Biological Materials - abm (2016)}

This allows you to predict the exact initial concentration by extrapolating the exponential curve backwards.

TODO: vs non-real-time PCR. Why can't you just divide by 2 for every heating step to reach back the original concentration? Likely the reaction reach saturation at an unknown step.

TODO: vs non-real-time PCR in medical diagnostics: do you really need to know concentration for diagnostics? Isn't it enough to know if the virus is present or not?

= Isothermal DNA amplification techniques
{parent=polymerase-chain-reaction}

Isothermal means "at fixed temperature".

This is to contrast with the more well established \x[polymerase-chain-reaction], which requires heating and cooling the sample several times.

The obvious advantage of isothermal methods is that their machinery can be simpler and cheaper, and the process can happen faster, since you don't have to do through heating and cooling cycles.

= Loop-mediated isothermal amplification
{parent=isothermal-dna-amplification-techniques}
{title2=LAMP}
{wiki}

Like PCR, but does not require thermal cycling. Thus the "isothermal" in the name: iso means same, so "same temperature".

Not needing the thermo cycling means that the equipment needed is much smaller and cheaper it seems.

Trade-offs question: https://biology.stackexchange.com/questions/92172/what-are-the-trade-offs-between-polymerase-chain-reaction-pcr-vs-loop-mediated

\Video[https://www.youtube.com/watch?v=L5zi2P4lggw]
{title=Loop Mediated Isothermal Amplification (LAMP) Tutorial by New England Biolabs (2015)}
{description=Explains the basic LAMP concept well.}

= DNA replication
{c}
{parent=dna}
{wiki}

= Origin of replication
{parent=dna-replication}
{wiki}

= DNA sequencing
{c}
{parent=dna}
{wiki}

= Sequence the DNA
{synonym}

Big excitement picture at: \x[molecular-biology-technologies].

A concrete experiment has been done at \x[oxford-nanopore-river-bacteria/sequencing]{full} on section \x[oxford-nanopore-river-bacteria/sequencing]{child}.

= Base calling
{parent=dna-sequencing}
{wiki}

= Metagenomics
{parent=dna-sequencing}
{wiki}

Experiments that involve sequencing bulk DNA found in a sample to determine what species are present, as opposed to sequencing just a single specific specimen. Examples of samples that are often used:
* river water to determine which bacteria are present, notably to determine is the water is free of dangerous bacteria. A concrete example is shown at: \x[oxford-nanopore-river-bacteria]{child}{full}.
* sea water biodiversity: http://ocean-microbiome.embl.de/companion.html
* food, including searching for desirable microorganisms such as in cheese or bread yeast
* poo, e.g. to study how the human microbiome influences health. There are companies actively working on this, e.g.: https://www.microbiotica.com/

One related application which most people would not consider metagenomics, is that of finding https://en.wikipedia.org/wiki/Circulating_tumor_DNA[circulating tumor DNA] in blood to detect tumors.

= Short-read DNA sequencing
{parent=dna-sequencing}

= Long-read DNA sequencing
{parent=short-read-dna-sequencing}

= DNA sequencing company
{c}
{parent=dna-sequencing}

= Illumina
{c}
{parent=dna-sequencing-company}
{wiki=Illumina,_Inc.}

The by far dominating DNA sequencing company of the late 2000's and 2010's due to having the smallest cost per base pair.

Illumina actually bought their 2010's dominating technology from a \x[cambridge] company called \x[solexa].

To understand how Illumina's technology works basically, watch this video: \x[video-illumina-sequencing-by-synthesis].

\Video[http://youtube.com/watch?v=fCd6B5HRaZ8]
{title="Illumina Sequencing by Synthesis" by \x[illumina] (2016)}
{id=video-illumina-sequencing-by-synthesis}

The key innovation of this method is the https://en.wikipedia.org/wiki/Illumina_dye_sequencing#Bridge_amplification[bridge amplification step], which produces a large amount of identical DNA strands: \x[image-bridge-amplification].

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/Cluster_Generation.png/960px-Cluster_Generation.png]
{id=image-bridge-amplification}
{title=Illustration of the bridge amplification step of Illumina's DNA sequencing.}

This step is genius because sequencing is basically a noise to signal problem, as you are trying to observe individual tiny nucleotides mixed with billions of other tiny nucleotides.

With bridge amplification, we group some of the nucleotides together, and multiply the signal millions of times for that part of the DNA.

= Solexa
{c}
{parent=illumina}

Bought by \x[illumina] https://www.reuters.com/article/us-illumina-solexa/illumina-to-buy-genome-firm-solexa-for-600-mln-idUSN1348062320061113[for 600 million in 2007 for 600 million dollars].

This is one of the prime examples of \x[europe]'s decline.

Instead of trying to dominate the sequencing market and gain trillions of dollars from it, they local British early stage investors were more than happy to get a 20x return on their small initial investments, and sold out to the Americans who will then make the real profit.

And now Solexa doesn't even have its own \x[wikipedia] page, while Illumina is set out to be the next \x[microsoft]. What a disgrace.

Here are some good articles about the company:
* http://www.bio-itworld.com/2010/issues/sept-oct/solexa.html (https://web.archive.org/web/20190411005034/http://www.bio-itworld.com/2010/issues/sept-oct/solexa.html[archive]).

Cambridge visitors can still visit the https://pantonarms.co.uk/[Panton Arms pub], which was the location of the legendary "hey we should talk" founders meeting, chosen due to its proximity to the chemistry department of the \x[university-of-cambridge].

In 2021 the founders were awarded the \x[breakthrough-prize]. The third person awarded was Pascal Mayer. He was apparently at Serono Pharmaceutical Research Institute at the time of development. They do have a wiki page unlike Solexa: https://en.wikipedia.org/wiki/Serono[]. They paid a 700 million fine in 2005 in the \x[united-states], and sold out in 2006 to \x[merck] for 10 billion USD.

= Oxford Nanopore Technologies
{c}
{parent=dna-sequencing-company}
{wiki}

= Oxford Nanopore MinION
{c}
{parent=oxford-nanopore-technologies}

One of the sequencers made by \x[oxford-nanopore-technologies].

The device has had several updates since however, notably of the pore proteins which are present in the critical flow cell consumable.

Official documentation: https://nanoporetech.com/products/minion (https://web.archive.org/web/20190825022606/https://nanoporetech.com/products/minion[archive])

The following images of the device and its peripherals were taken during the experiment: \x[oxford-nanopore-river-bacteria]{full}.

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Oxford_Nanopore_MinION_top_cropped.jpg/392px-Oxford_Nanopore_MinION_top_cropped.jpg]
{title=Top view of a closed Oxford Nanopore MinION.}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/6/6e/Oxford_Nanopore_MinION_side_cropped.jpg/191px-Oxford_Nanopore_MinION_side_cropped.jpg]
{title=Side view of an Oxford Nanopore MinION.}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Oxford_Nanopore_MinION_top_open_cropped.jpg/110px-Oxford_Nanopore_MinION_top_open_cropped.jpg]
{title=Top view of an open Oxford Nanopore MinION.}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Oxford_Nanopore_MinION_side_USB_cropped.jpg/597px-Oxford_Nanopore_MinION_side_USB_cropped.jpg]
{title=Oxford Nanopore MinION side USB.}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/Oxford_nanopore_MinION_flow_cell_package.jpg/304px-Oxford_nanopore_MinION_flow_cell_package.jpg]

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/Oxford_nanopore_MinION_flow_cell_front.jpg/640px-Oxford_nanopore_MinION_flow_cell_front.jpg]

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/Oxford_nanopore_MinION_flow_cell_back.jpg/1024px-Oxford_nanopore_MinION_flow_cell_back.jpg]

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Oxford_nanopore_MinION_flow_cell_pipette_loading.jpg/278px-Oxford_nanopore_MinION_flow_cell_pipette_loading.jpg]

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/Oxford_Nanopore_MinION_connected_to_a_Mac_via_USB.jpg/360px-Oxford_Nanopore_MinION_connected_to_a_Mac_via_USB.jpg]

\Video[https://upload.wikimedia.org/wikipedia/commons/transcoded/7/7e/Oxford_Nanopore_MinION_software_channels_pannel_on_Mac.webm/Oxford_Nanopore_MinION_software_channels_pannel_on_Mac.webm.480p.webm]

\Include[oxford-nanopore-river-bacteria]

= De novo DNA synthesis
{parent=dna}
{wiki=De_novo_synthesis}

As of 2018, \x[ciro-santilli] believes that this could be \x[the-next-big-thing] in \x[biology] technology.

"De novo" means "starting from scratch", that is: you type the desired sequence into a computer, and the synthesize it.

The "de novo" part is important, because it distinguishes this from the already well solved problem of duplicating DNA from an existing DNA template, which is what all our cells do daily, and which can already be done very efficiently \x[in-vitro] with \x[polymerase-chain-reaction].

Many \x[startup] companies are attempting to create more efficient de novo synthesis methods:
* https://twistbioscience.com/
* https://www.evonetix.com/technology/
* http://dnascript.co/
* https://www.ansabio.com/
* https://www.nuclera.com/

Notably, the dream of most of those companies is to have a machine that sits on a lab bench, which synthesises whatever you want.

TODO current de novo synthesis costs.

News coverage:
* 2020-10-05 https://www.nature.com/articles/s41587-020-0695-9 "Enzymatic DNA synthesis enters new phase"

= Artificial gene synthesis
{parent=de-novo-dna-synthesis}
{wiki}

Same as \x[de-novo-dna-synthesis]?

= Species bootstrapping from DNA
{parent=de-novo-dna-synthesis}

Synthesizing the DNA itself is not the only problem however.

You then have to get that DNA into a working living form state so that normal cell processes can continue:
* for \x[virus]{p} see: \x[synthetic-virus]
* for bacteria, you have to inject it into a cell
* for placental animals, you also have to somehow simulate a compatible placenta. It is likely easier for eggs.

Multicellular questions:
* https://biology.stackexchange.com/questions/8590/can-extinct-animals-be-cloned

Apparently achieved for the first time in 2021: https://www.jcvi.org/research/first-self-replicating-synthetic-bacterial-cell by the \x[j-craig-venter-institute].

= Synthetic virus
{parent=species-bootstrapping-from-dna}

Man-made \x[virus]{parent}!

* https://en.wikipedia.org/wiki/Synthetic_virology
* https://en.wikipedia.org/wiki/Genetically_modified_virus
* https://www.scientificamerican.com/article/is-it-possible-to-enginee/
* https://www.npr.org/sections/health-shots/2019/05/22/723582726/scientists-modify-viruses-with-crispr-to-create-new-weapon-against-superbugs

TODO: if we had cheap \x[de-novo-dna-synthesis], how hard would it be to bootstrap a virus culture from that? https://github.com/cirosantilli/cirosantilli.github.io/issues/60

Is it easy to https://en.wikipedia.org/wiki/Transfection[transfect] a cell with the synthesized DNA, and get it to generate full infectious viral particles?

If so, then \x[de-novo-dna-synthesis] would be very similar to 3D printed guns: https://en.wikipedia.org/wiki/3D_printed_firearms[].

It might already be possible to order dissimulated sequences online:
* https://www.theguardian.com/world/2006/jun/14/terrorism.topstories3

\Video[http://youtube.com/watch?v=dB25H7pD2jg]
{title=3D Printed Guns Are Easy To Make And Impossible To Stop by VICE News (2018)}

= RNA
{c}
{parent=dna}
{wiki}

= Messenger RNA
{parent=rna}
{wiki}

= mRNA
{c}
{synonym}
{title2}

= Alternative splicing
{parent=messenger-rna}
{wiki}

= Transcription
{disambiguate=biology}
{parent=rna}
{wiki}

= Transcribe
{disambiguate=biology}
{synonym}

= Transcribed
{disambiguate=biology}
{synonym}

= Post-transcriptional modification
{parent=transcription-biology}
{wiki}

= Promoter
{disambiguate=genetics}
{parent=transcription-biology}

= RNA polymerase
{c}
{parent=transcription-biology}
{wiki}

Converts \x[dna] to \x[rna].

= RNA-dependent RNA polymerase
{c}
{parent=rna-polymerase}
{wiki}

= RdRp
{c}
{synonym}

Makes \x[rna] from \x[rna].

Used in \x[positive-strand-rna-virus] to replicate.

I don't think it's present outside viruses. Well regulated organisms just \x[transcribe-biology] more \x[dna] instead.

= Operon
{oarent=transcription-biology}
{wiki}

For an example, see \x[e-coli-k-12-mg1655-operon-thrlabc].

= Transcription unit
{oarent=operon}
{wiki}

For an example, see \x[e-coli-k-12-mg1655-operon-thrlabc].

TODO vs \x[operon].

= Polycistronic mRNA
{parent=operon}

E.g. \x[e-coli-k-12-mg1655-operon-thrlabc].

= Transcription factor
{parent=transcription-biology}
{wiki}

= Base pair
{parent=dna}
{title2=bp, kbp, Mbp}
{wiki}

= Chromosome
{parent=dna}
{wiki}

= Genetic code
{parent=dna}
{wiki}

= Reading frame
{parent=genetic-code}
{wiki}

There are six, three in each sense, depending on where you start \x[modulo]-3.

= Open reading frame
{parent=reading-frame}
{title2=orf}
{wiki}

Area between a \x[start-codon] and an \x[stop-codon].

This term is useful because:
* there are some crazy constructs, notably in viruses, in which there's more than one gene in a single orf
* \x[post-transcriptional-modification]{p} can throw out parts of the sequence

= NCBI open reading frame tool
{c}
{parent=open-reading-frame}

\x[ncbi] online tool to find and view all \x[open-read-frame]{p} in a given \x[fasta]: https://www.ncbi.nlm.nih.gov/orffinder/

= Codon
{c}
{parent=genetic-code}

= Start codon
{parent=codon}
{wiki}

= Stop codon
{parent=codon}
{wiki}

= DNA paternity testing
{parent=dna}
{wiki}

= Genetics
{parent=dna}
{wiki}

High level \x[dna] studies? :-)

= Genetics database
{parent=genetics}

= BioCyc
{c}
{parent=genetics-database}
{wiki}

Some things that they have of interest which may not be on \x[ncbi]:
* \x[biocyc-promoter-database]

Hits a free login wall after a few IP hits. And just a very normal casually browsing number of hits. What is this \x[bullshit]{}?

= BioCyc promoter database
{c}
{parent=biocyc}

Database of \x[promoter-genetics]{p}.

E.g. for \x[e-coli-k-12-mg1655]: https://biocyc.org/group?id=:ALL-PROMOTERS&orgid=ECOLI For some context see \x[e-coli-k-12-mg1655-gene-thrl] + \x[e-coli-k-12-mg1655-gene-thra] + thrB + thrC all of which are in the same \x[transcription-unit].

= National Center for Biotechnology Information
{c}
{parent=genetics-database}
{wiki}

= NCBI
{c}
{synonym}

\i[The] \x[bioinformatics] database: https://www.ncbi.nlm.nih.gov/

Here's a good example of what you can get out of it: \x[e-coli-k-12-mg1655]

= GenBank
{c}
{parent=national-center-for-biotechnology-information}
{wiki}

= UniProt
{c}
{parent=genetics-database}
{wiki}

For an example with context, have a look at \x[e-coli-k-12-mg1655] and the second \x[protein] of the genome, \x[e-coli-k-12-mg1655-gene-thra].

= Transposable element
{parent=genetics}
{wiki}

= transposon
{c}
{synonym}
{title2}

= Gene
{parent=dna}
{wiki}

= Genome
{parent=genome}
{wiki}

= Genomics
{parent=genome}

Study of the \x[genome], one of the \x[omics].

= Mutation
{parent=dna}
{wiki}

= Single-nucleotide polymorphism
{parent=mutation}
{title2=SNP}
{wiki}

= Molecular machine
{parent=molecular-biology}
{wiki}

The most beautiful ones:
* \x[sodium-channel]
* basically anything that falls in the \x[dna-replication] and \x[transcription-biology]
see also \x[animations-of-molecular-biology-processes]{full}

= Sodium channel
{parent=molecular-machine}
{wiki}

Base machinery of the \x[nervous-system].

= Omics
{parent=molecular-biology}
{wiki}

Each of the omics studies a subset of \x[molecular-biology] with a data intensive and broad point of view that tries to understand global function or organisms, trying to understand what every biologically relevant \x[mollecule] does as part of the hole \x[metabolism].

The main omics are:
* \x[proteomics]{child}
* \x[metabolomics]{child}

\x[omics]{c} might be \x[stamp-collecting], but maybe it is a bit more like \x[trading-card-game]/\x[magic-the-gathering] collecting, in which the cards that you are collecting actually have specific uses and interactions, especially considering that most \x[metabolic-pathways] are analogous across many \x[species].

\Image[https://upload.wikimedia.org/wikipedia/en/thumb/9/98/Metabolomics_schema.png/800px-Metabolomics_schema.png]
{title=Hierarchical diagram of the major \x[omics].}

= Multiomics
{parent=multiomics}

Integrating multiple \x[omics], comes quite close to \x[whole-cell-simulation].

= Protein
{parent=molecular-biology}
{wiki}

Related: https://en.wikipedia.org/wiki/Protein_(nutrient)

= Amino acid
{parent=protein}
{wiki}

= Proteinogenic amino acid
{parent=amino-acid}
{wiki}

= Arginine
{parent=proteinogenic-amino-acid}
{title2=R, Arg}
{wiki}

= Threonine
{parent=proteinogenic-amino-acid}
{title2=T, Thr}

= Valine
{parent=proteinogenic-amino-acid}
{title2=V, Val}
{wiki}

= Protein folding
{parent=protein}
{wiki}

= Protein structure level
{parent=protein-folding}

= Primary structure
{parent=protein-structure-level}

= Secondary structure
{parent=protein-structure-level}

= Tertiary structure
{parent=protein-structure-level}

= Quaternary structure
{parent=protein-structure-level}

= Computational protein folding
{parent=protein-folding}

= Computational protein folding implementation
{parent=computational-protein-folding}

= AlphaFold
{c}
{parent=computational-protein-folding-implementation}
{wiki}

= Protein folding problem
{parent=computational-protein-folding}

= Protein of unknown function
{parent=protein}
{wiki}

= Proteome
{parent=protein}
{wiki}

Of specific \x[species]:
* \x[human-proteome]

= Proteomics
{parent=proteome}

The study of the \x[proteome].

= Type of protein
{parent=protein}
{wiki}

= Enzyme
{parent=type-of-protein}
{wiki}

A \x[protein] that is a \x[catalyst] for some \x[chemical] reaction.

For an initial concrete example, consider \x[e-coli-k-12-mg1655-gene-thra].

In other sections:
* \x[rna-polymerase]{child}

\Video[https://www.youtube.com/watch?v=yk14dOOvwMk]
{title=How Enzymes Work by RCSBProteinDataBank (2017)}
{description=Shows in detail how https://en.wikipedia.org/wiki/Aconitase[aconitase] catalyses the citrate to isocitrate reaction in the \x[citric-acid-cycle].}
{start=121}

= Cofactor
{disambiguate=biochemistry}
{wiki}

= NADP+
{parent=cofactor-biochemistry}

= Protease
{parent=enzyme}
{wiki}

= Restriction enzyme
{parent=enzyme}
{wiki}

= Glycoprotein
{parent=type-of-protein}
{wiki}

= Polyprotein
{parent=type-of-protein}
{wiki}

= Transmembrane protein
{parent=type-of-protein}
{wiki}

= Transmembrane domain
{parent=transmembrane-protein}

= Metabolism
{parent=molecular-biology}
{wiki}

= Flux balance analysis
{parent=metabolism}
{wiki}

= Metabolome
{parent=metabolism}
{wiki}

\Image[https://upload.wikimedia.org/wikipedia/en/thumb/9/98/Metabolomics_schema.png/800px-Metabolomics_schema.png]

= Metabolomics
{parent=metabolome}

Study of the \x[metabolome].

= Metabolic pathway
{parent=metabolism}
{wiki}

Examples:
* \x[citric-acid-cycle]{child}

= KEGG
{c}
{title2=Kyoto Encyclopedia of Genes and Genomes}
{wiki}

https://www.genome.jp/kegg/pathway.html

For a commented initial example, see: \x[e-coli-k-12-mg1655-gene-thra].

= Excretion
{parent=metabolism}
{wiki}

= Feces
{parent=excretion}
{wiki}

= Shit
{synonym}

= Shat
{synonym}

= Shitty
{synonym}

= Flatulence
{parent=feces}
{wiki}

= Fart
{synonym}

= Bullshit
{parent=feces}

= Synthetic biological circuit
{parent=metabolic-pathway}
{wiki}

An artificial \x[metabolic-pathway]{parent} using \x[synthetic-biology] technology.

= CIDARLAB/cello
{c}
{parent=metabolic-pathway}

https://github.com/CIDARLAB/cello

Design software for \x[synthetic-biological-circuit]{parent}.

The input is in \x[verilog]! Overkill?

Then it essentially maps to a \x[standard-cell-library] of biological primitives!

= Photosynthesis
{parent=metabolic-pathway}
{wiki}

= Molecular biology laboratory equipment
{parent=molecular-biology}

= Laboratory centrifuge
{parent=molecular-biology-laboratory-equipment}
{wiki}

= Eppendorf tube
{c}
{parent=laboratory-centrifuge}

= centrifuge tube
{c}
{synonym}
{title2}

= Cell
{disambiguate=biology}
{parent=molecular-biology}
{wiki}

= Cell membrane
{parent=cell-biology}
{wiki}

= Cell nucleus
{parent=cell-biology}
{wiki}

= Mitochondrion
{parent=cell-biology}
{wiki}

= Mitochondria
{synonym}

= Mitochondrial
{synonym}

= Cellular respiration
{parent=mitochondrion}
{wiki}

= Citric acid cycle
{parent=cellular-respiration}
{wiki}

The key \x[metabolic-pathway] of \x[cellular-respiration].

Happens in the matrix of the \x[mitochondrion] in \x[eukaryote]{p}.

= Electron transport chain
{parent=citric-acid-cycle}
{wiki}

Good animation explaining it: \x[video-electron-transport-chain-by-harvardx-2017].

= Adenosine diphosphate
{parent=cellular-respiration}
{title2=ADP}
{wiki}

= Adenosine triphosphate
{parent=cellular-respiration}
{title2=ATP}
{wiki}

= Organelle
{parent=cell-biology}
{wiki}

= Golgi complex
{c}
{parent=organelle}
{wiki}

= Ribosome
{parent=organelle}
{wiki}

= 16S ribosomal RNA
{parent=ribosome}
{wiki}

= Single cell analysis
{parent=cell-biology}
{wiki}

https://www.youtube.com/watch?v=-jIZ3bH-rAE "Illuminating biology at the nanoscale and systems scale using single-molecule and super-resolution imaging" by Xiaowei Zhuang (2017)

= Whole cell simulation
{parent=single-cell-analysis}
{wiki}

\x[ciro-santilli] started taking some notes at: https://github.com/cirosantilli/awesome-whole-cell-simulation[]. but they are going to be all migrated here.

It is interesting to note how one talks about \x[single-cell-analysis], in contrast to \x[whole-cell-simulation]: experimentally it is hard to analyse a single cell. But theoretically, it is hard to simulate a single cell. This mismatch is perhaps the ultimate frontier of \x[molecular-biology].

In other sections:
* \x[e-coli-whole-cell-simulation]

\Video[https://www.youtube.com/watch?v=AYC5lE0b8os]
{title=A Computational Whole-Cell Model Predicts Genotype From Phenotype by \x[markus-covert] (2013)}

= Single cell sequencing
{parent=single-cell-analysis}
{wiki}

= Single cell visualization
{parent=single-cell-analysis}

= Vitessce
{parent=single-cell-visualization}

http://vitessce.io/

https://github.com/vitessce/vitessce

= Cell biology
{disambiguate=field}
{parent=cell-biology}
{wiki=Cell_biology}

The \x[science] that studies \x[cell-biology]{p}.

= System
{disambiguate=anatomy}
{parent=biology}

For \x[human]{p} specifically: https://en.wikipedia.org/wiki/List_of_systems_of_the_human_body

= Circulatory system
{parent=system-anatomy}
{wiki}

= Blood
{parent=circulatory-system}
{wiki}

= Bloody
{synonym}

= Digestive system
{parent=system-anatomy}
{wiki}

= Eating
{parent=digestive-system}
{wiki}

= Eat
{synonym}

= Eats
{synonym}

= Endocrine system
{parent=system-anatomy}
{wiki}

= Crying
{parent=endocrine-system}
{wiki}

= Tearjerker
{parent=crying}

* https://dictionary.cambridge.org/dictionary/english/tearjerker
* https://tvtropes.org/pmwiki/pmwiki.php/Main/TearJerker on \x[tv-tropes]

= Immune system
{parent=system-anatomy}
{wiki}

= Immune response
{parent=system-anatomy}
{wiki}

= Inflammation
{parent=system-anatomy}
{wiki}

= Inflammatory
{synonym}

= Nervous system
{parent=system-anatomy}
{wiki}

= Spinal cord
{parent=nervous-system}
{wiki}

= Human spinal cord
{parent=spinal-cord}

One nerve fiber under a \x[scanning-electron-microscope]: https://www.quora.com/Is-a-human-head-transplant-possible-in-the-future/answer/Dimitrios-Michmizos

= Organ
{disambiguate=anatomy}
{parent=biology}
{wiki}

= Brain
{parent=organ-anatomy}
{wiki}

= Dream
{parent=brain}
{wiki}

\x[ciro-santilli]'s dreams are described at: \x[ciro-santilli-s-dreams]{child}.

= Genius
{parent=brain}
{wiki}

This is not a label that \x[ciro-santilli] likes to give lightly. But maybe sometimes, it is ineviatable.

= Child prodigy
{parent=genius}
{wiki}

= Nightmare
{parent=brain}
{wiki}

= Human brain
{parent=brain}
{wiki}

The \x[brain] of a \x[human].

Ah, \x[physics-and-the-illusion-of-life][the Holy Grail] of both \x[biology][biology] and \x[computer-science][computer science]!

\x[ciro-santilli] feels it is not for his generation though, and that is one of the philosophical things that saddens him the most in this world.

On the other hand, Ciro's playing with the \x[linux-kernel] and other complex software which no single human can every fully understand cheer him up a bit. But still, the high level view, that we can have...

For now, \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development].

= Psychology
{parent=brain}
{wiki}

= Developmental disorder
{parent=psychology}
{wiki}

= Autism
{parent=developmental-disorder}
{wiki}

= Economy
{parent=psychology}
{wiki}

= Capital flight
{parent=economy}
{wiki}

= Commodity
{parent=economy}
{wiki}

= Economics
{parent=economy}
{wiki}

= Free
{parent=economy}

= Finance
{parent=economy}
{wiki}

= Financial fraud
{parent=finance}
{wiki}

= Rogue trader
{parent=financial-fraud}
{wiki}

= Nick Leeson
{c}
{parent=rogue-trader}
{wiki}

Dude took down a bank.

Good documentary about it: \x[nick-leeson-and-the-fall-of-the-house-of-barings-by-adam-curtis-1996].

One is reminded of \x[annie-dookhan].

= Nick Leeson and the Fall of the House of Barings by Adam Curtis (1996)
{c}
{parent=nick-leeson}
{wiki=£830,000,000 - Nick Leeson and the Fall of the House of Barings}

= Financial crisis
{parent=economy}
{wiki}

= Financial crisis of 2007-2008
{parent=financial-crisis}
{wiki}

= Liquidity
{parent=economy}
{wiki}

= Illiquid
{synonym}

= Market liquidity
{parent=economy}
{wiki}

= Renting
{parent=economy}
{wiki}

= Rent
{synonym}

= Social inequality
{parent=economy}
{wiki}

\x[ciro-santilli] is extremely passionate about this issue, partly due to \x[ciro-santilli-s-self-perceived-compassionate-personality].

\x[ciro-santilli]'s main approaches to reduce it:
* \x[write-free-books-to-get-famous-website] to make education more efficient
* \x[free-gifted-education]
* more granular \x[electronic-voting]

One of Ciro's most direct experiences with social inequality is described at: \x[sao-remo-the-favela-next-to-usp].

We have to be careful not to make everyone poorer when trying to reduce inequality.

But as things stand as of 2020, \x[tax-the-rich][increasing taxes on the very richest], and notably \x[wealth-tax], and investing it in \x[free-gifted-education], seems like a safe bet to achieve any meaningful level of \x[equal-opportunity] and \x[meritocracy].

= Affirmative action
{parent=social-inequality}
{wiki}

\x[ciro-santilli] is against all affirmative action, except for one: giving amazing free eduction to the poor.

Notably, Ciro is against \x[university-entry-quotas].

= Equal opportunity
{parent=social-inequality}
{wiki}

= Meritocracy
{parent=social-inequality}
{wiki}

= Wealth inequality in the United States
{parent=social-inequality}
{wiki}

= Stock market
{parent=economy}
{wiki}

= Equity
{disambiguate=finance}
{parent=stock-market}
{wiki}

= Equity
{synonym}

= Exchange-traded fund
{parent=stock-market}
{title2=ETF}
{wiki}

= S&P 500
{id=s-and-p-500}
{parent=stock-market}
{wiki}

= Open outrcy
{parent=stock-market}
{wiki}

= Utility
{parent=economy}
{wiki}

= Utility function
{parent=utility}

= Fetish
{parent=psychology}
{wiki}

= Gossip
{parent=psychology}
{wiki}

In other sections:
* \x[arline-greenbaum]{child}

= Mental state
{parent=psychology}
{wiki}

= Mind blown
{parent=psychology}
{wiki}

= Mind boggling
{synonym}

= Mind blowing
{synonym}

A \x[brain] \x[orgasm].

* https://www.urbandictionary.com/define.php?term=Mind%20Blown
* https://knowyourmeme.com/memes/mind-blown on \x[know-your-meme]

\Video[https://www.youtube.com/watch?v=FYJ1dbyDcrI]
{title=The Universe I, II & III | Tim and Eric Awesome Show by Adult Swim UK (2017)}
{description=This amazing video contains the best \x[mind-blown] \x[meme] ever, \x[ciro-santilli] almost \x[shat] himself when he first watched it.}

= Personality
{parent=psychology}
{wiki}

= Narcissism
{parent=personality}
{wiki}

= Personality type
{parent=personality}
{wiki}

= Myers-Briggs Type_Indicator
{c}
{parent=personality-type}
{wiki=Myers–Briggs_Type_Indicator}

= Big Five personality traits
{c}
{parent=personality-type}
{wiki}

= Procrastination
{parent=psychology}
{wiki}

= Procrastinating
{synonym}

\x[ciro-santilli]'s eulogy: \x[effortless-effort]

= Yak shaving
{parent=procrastination}

https://en.wiktionary.org/wiki/yak_shaving

= Psychologist
{parent=psychology}
{wiki}

= Carl Jung
{c}
{parent=psychologist}
{wiki}

= Jordan Peterson
{c}
{parent=psychologist}
{wiki}

= Jordan B Peterson
{c}
{synonym}

= Suicide
{parent=psychology}
{wiki}

= Uncanny valley
{parent=psychology}
{wiki}

= Model organism
{parent=biology}
{wiki}

* \x[prokaryote] models:
  * \x[e-coli]{child}: the most well studied
  * \x[mycoplasma]: a very minimal \x[genus], notable species: \x[mycoplasma-genitalium]{child}
* \x[s-cerevisiae]{child}: the most well studied \x[unicellular-organism][unicellular] \x[eukaryote]
* \x[c-elegans]{child}: the most well studied \x[multicellular-organism]

= Biosensor
{parent=biology}
{wiki}

= Hearing
{parent=biosensor}
{wiki}

= Hearing range
{parent=hearing}
{wiki}

= Human hearing range
{parent=hearing-range}

= Taxonomy
{disambiguate=biology}
{parent=biology}
{wiki}

The lowest level is \x[species].

= Taxonomy databases
{parent=taxonomy-biology}

* https://eol.org/ Encyclopedia of Life

= Genus
{parent=taxonomy-biology}
{wiki}

= Domain
{disambiguate=biology}
{parent=taxonomy-biology}
{wiki}

= Prokaryote
{parent=domain-biology}
{wiki}

= Kingdom
{disambiguate=biology}
{parent=taxonomy-biology}
{wiki}

= Multicellular organism
{parent=taxonomy-biology}
{wiki}

= The simplest multicellular species
{parent=multicellular-organism}

One of the simplest known seems to be: https://en.wikipedia.org/wiki/Trichoplax

https://www.u-tokyo.ac.jp/focus/en/articles/a_00220.html "The simplest multicellular organism unveiled" from 2013 mentions Tetrabaena socialis.

Then of course: \x[caenorhabditis-elegans] is a relatively simple and widely studied \x[model-organism].

\Video[https://www.youtube.com/watch?v=1v6cgSkiHik]
{title="Nicole King (UC Berkeley, HHMI) 1: The origin of animal multicellularity" by iBiology (2015)}
{description=
* https://youtu.be/1v6cgSkiHik?t=513 mentions that it is now believed that multicellularity evolved separately on \x[plant]{p}, \x[fungus]{p} and \x[animal]{p}.
* https://youtu.be/1v6cgSkiHik?t=668 describes how \x[unicellular-organism] choanoflagellates form \x[colony-biology][colonies], and how animals are characterized by certain key types of cellular interaction: adhesion, communication, regulation (cell differentiation) and extra cellular matrix production
}

= Colony
{disambiguate=biology}
{parent=multicellular-organism}
{wiki}

It is hard to distinguish between colonies of \x[unicellular-organism] and \x[multicellular-organism] as there is a continuum between both depending on how well integrated they cells are.

= Unicellular organism
{parent=multicellular-organism}
{wiki}

= Microorganism
{parent=taxonomy-biology}
{wiki}

= Species
{parent=taxonomy-biology}
{wiki}

= Virus
{parent=species}
{wiki}

= Virus classification
{c}
{parent=virus}

= Baltimore classification
{c}
{parent=virus-classification}
{wiki=Virus_classification#Baltimore_classification}

= Positive-strand RNA virus
{c}
{parent=baltimore-classification}
{wiki}

= +ssRNA
{c}
{synonym}
{title2}

= Bacteriophage
{parent=virus}
{wiki}

= Coronavirus
{parent=virus}

https://youtu.be/oCelMyMtRCk?t=167 mentions that they get their lipid layer from the \x[golgi-complex] of the host, where they replicate.

= Coronavirus Replication Cycle
{parent=coronavirus}

https://www.youtube.com/watch?v=zvuYJTL90J8&t=166s The Coronavirus Replication Cycle by Kevin Tokoph (2020)

= COVID-19
{c}
{parent=coronavirus}
{wiki}

COVID happens in two stages:
* viral infection
* \x[inflammatory] phase, where the body takes over, and sometimes harms itself. It seems that people are not generally contagious at this point?

This distinction is one of the reasons why separating the virus name (SARS-CoV-2) from the disease makes sense: the disease is much broader than the viral infection.

= Why it takes several days to enter inflammatory phase in COVID-19?
{parent=covid-19}
{wiki}

https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7247969/

Why is it there such a clear separation of phases?

Why do people with mild symptoms go on to die? It is a great mystery.

\x[ciro-santilli]'s theory is that COVID is extremely effective at avoiding \x[immune-response]. Then, in people where this is effective, things reach a point where there is so much virus, that the body notices and moves on to take a more drastic approach. This is compatible with the virus killing older people more, as they have weaker immunes systems. This is however incompatible with the fact that people don't seem to be contagious after the viral phase is over...

= Why is COVID-19 so serious in some people but not in others?
{parent=covid-19}

There are a few possibilities:
* \x[genetics]
* state of the immune system based on disease history
* age

= Why is COVID-19 more serious than the flu?
{parent=covid-19}

= Severe acute respiratory syndrome coronavirus 2
{parent=covid-19}

= SARS-CoV-2
{c}
{synonym}
{title2}

First sequenced variant: https://www.ncbi.nlm.nih.gov/genome/?term=86693

Genes at: https://www.ncbi.nlm.nih.gov/nuccore/MN908947.3 TODO protein list on a database?

30kbp, 10 genes, 29 proteins: https://cen.acs.org/biological-chemistry/infectious-disease/know-novel-coronaviruss-29-proteins/98/web/2020/04

50-200 \x[nanometer]{p} in \x[diameter].

Gene overview:
* https://www.nature.com/articles/s41586-020-2286-9/figures/1
* https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7138183/

= Variants of SARS-CoV-2
{parent=severe-acute-respiratory-syndrome-coronavirus-2}
{wiki}

= SARS-CoV-2 cell entry
{c}
{parent=severe-acute-respiratory-syndrome-coronavirus-2}

https://www.youtube.com/watch?v=6DxlkxA82FM COVID-19 Symposium: Entry of Coronavirus into Cells | Dr. Paul Bates

Interaction points:
* \x[ace2]
* \x[tmprss2]

= SARS-CoV-2 gene
{c}
{parent=severe-acute-respiratory-syndrome-coronavirus-2}

Genes list: https://www.ncbi.nlm.nih.gov/nuccore/MN908947.3

Some are named after the encoded protein. Others that are not as clean are just orfXXX for \x[open-reading-frame] XXX.

= ORF1ab
{c}
{parent=sars-cov-2-gene}

Largest gene, \x[polyprotein] that contains \x[sars-cov-2-non-structural-protein]{p} 1 to 11.

= SARS-CoV-2 protein
{c}
{parent=severe-acute-respiratory-syndrome-coronavirus-2}

= SARS-CoV-2 structural protein
{c}
{parent=sars-cov-2-protein}

= SARS-CoV-2 E protein
{c}
{parent=sars-cov-2-structural-protein}

Envelope.

As shown at https://pubmed.ncbi.nlm.nih.gov/16877062/#&gid=article-figures&pid=fig-3-uid-2 has \x[transmembrane-domain].

= SARS-CoV-2 M protein
{c}
{parent=sars-cov-2-structural-protein}

Membrane.

As shown at https://pubmed.ncbi.nlm.nih.gov/16877062/#&gid=article-figures&pid=fig-3-uid-2 has \x[transmembrane-domain].

= SARS-CoV-2 S protein
{c}
{parent=sars-cov-2-structural-protein}

Spike.

Nucleocapsid phosphoprotein, sticks to the \x[rna] inside.

https://www.nature.com/articles/s41467-020-20768-y mentions functions:
* helps pack the viral RNA into the capsule
* also has a side function in immune suppression

= SARS-CoV-2 N protein
{c}
{parent=sars-cov-2-structural-protein}

= SARS-CoV-2 non-structural protein
{c}
{parent=sars-cov-2-protein}

These are also required for test tube replication.

= SARS-CoV-2 Nsp3
{c}
{parent=sars-cov-2-non-structural-protein}

Mentioned at: https://cen.acs.org/biological-chemistry/infectious-disease/know-novel-coronaviruss-29-proteins/98/web/2020/04

= SARS-CoV-2 Nsp5
{c}
{parent=sars-cov-2-non-structural-protein}

\x[protease]{c} that cuts up \x[orf1ab]. Note that it is also present in \x[orf1ab].

= SARS-CoV-2 Nsp12
{c}
{parent=sars-cov-2-non-structural-protein}

The \x[rdrp], since this is a \x[positive-strand-rna-virus].

= SARS-CoV-2 accessory protein
{c}
{parent=sars-cov-2-protein}

Unlike \x[sars-cov-2-non-structural-protein], these are not needed for test tube reproduction. They must therefore be for host modulation.

= Bacteria
{parent=species}
{wiki}

A \x[domain-biology]{parent}.

= Bacterial genome
{parent=bacteria}
{wiki}

= Bacterial chromosome is circular
{parent=bacterial-genome}
{wiki}

= Gram stain
{c}
{parent=bacteria}
{wiki}

= Gram staining
{c}
{synonym}

= Gram-positive bacteria
{c}
{parent=gram-stain}
{wiki}

= Gram-negative bacteria
{c}
{parent=gram-stain}
{wiki}

= Escherichia coli
{c}
{parent=bacteria}

= E. Coli
{c}
{synonym}
{title2}

* https://www.cell.com/cell/fulltext/S0092-8674(15)00568-1 2015. Using Genome-scale Models to Predict Biological Capabilities. Edward J. O'Brien, Jonathan M. Monk, Bernhard O. Palsson.
* https://www.quora.com/What-are-some-good-books-on-Escherichia-Coli-E-Coli

Size: 1-2 micrometers long and about 0.25 micrometer in diameter, so: `2 * 0.5 * 0.5 * 10e-18` and thus 0.5 micrometer square.

Division time: 20 minutes, with a crazy multiple start sites mechanism:
* https://biology.stackexchange.com/questions/30080/how-can-e-coli-proliferate-so-rapidly
* http://stochasticscientist.blogspot.co.uk/2012/02/how-e-coli-grows-so-fast.html

Reference strain: \x[e-coli-k-12-mg1655].

\x[genome]{c}:
* 4k \x[gene]{p}
* 5 Mbps
* https://www.ncbi.nlm.nih.gov/genome/167
* `wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/005/845/GCF_000005845.2_ASM584v2/GCF_000005845.2_ASM584v2_genomic.fna.gz`
* `wget -O NC_000913.3.fasta 'https://www.ncbi.nlm.nih.gov/search/api/sequence/NC_000913.3/?report=fasta'`

Synthesis project: http://www.sciencemag.org/news/2016/08/biologists-are-close-reinventing-genetic-code-life

\x[omics]{c} modeling: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5611438/ Tools for Genomic and Transcriptomic Analysis of Microbes at Single-Cell Level Zixi Chen, Lei Chen, Weiwen Zhang.

Bibliography:
* https://ecoliwiki.org/colipedia/index.php/Welcome_to_EcoliWiki

= E. Coli whole cell simulation
{c}
{parent=escherichia-coli}

= E. Coli Whole Cell Model by Covert lab
{c}
{parent=e-coli-whole-cell-simulation}

By \x[covert-lab]. Written in \x[python], hurray!

https://github.com/CovertLab/WholeCellEcoliRelease you basically need to use the \x[docker] image due to \x[pip-package-manager] breaking changes...

https://www.covert.stanford.edu/

2021 \x[review-paper]: https://journals.asm.org/doi/full/10.1128/ecosalplus.ESP-0001-2020 "The E. coli Whole-Cell Modeling Project". They should just past that stuff in a README :-) The article mentions that it is a follow up to the previous \x[m-genitalium-whole-cell-model-by-covert-lab]. Only 43% of known genes modelled at this point however, a shame.

= Multi-Omics Model and Analytics
{parent=e-coli-whole-cell-simulation}
{title2=MOMA, 2016}

By Tagkopoulos lab at \x[university-of-california-davies].

* https://www.nature.com/articles/ncomms13090 Multi-omics integration accurately predicts cellular state in unexplored conditions for Escherichia coli (2016)
* https://www.sciencedaily.com/releases/2016/10/161027173552.htm

= E. Coli Metabolome Database
{c}
{parent=escherichia-coli}

https://ecmdb.ca/

= E. Coli strain
{c}
{parent=escherichia-coli}

Reference strain: \x[e-coli-k-12-mg1655].

= E. Coli K-12
{parent=e-coli-k-12}

= E. Coli K-12 MG1655
{c}
{parent=e-coli-k-12}

\x[ncbi] taxonomy entry: https://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=511145 This links to:
* \x[genome]: https://www.ncbi.nlm.nih.gov/genome/?term=txid511145[]
  * From there there are links to either:
    * Download the \x[fasta]: "Download sequences in FASTA format for genome, protein"

      For the genome, you get a compressed \x[fasta] file with extension `.fna` called `GCF_000005845.2_ASM584v2_genomic.fna` that starts with:
      ``
      >NC_000913.3 Escherichia coli str. K-12 substr. MG1655, complete genome
      AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTGAACTG
      ``

      Using \x[wc-unix] as in `wc GCF_000005845.2_ASM584v2_genomic.fna` gives 58022 lines, in \x[vim] we see that each line is 80 characters, except for the final one which is 52. So we have 58020 * 80 + 52 = 4641652 =~ 4.6 Mbp

    * Interactively browse the sequence on the browser viewer: "Reference genome: Escherichia coli str. K-12 substr. MG1655" which eventually leads to: https://www.ncbi.nlm.nih.gov/nuccore/556503834?report=graph

      If we zoom into the start, we hover over the very first \x[gene]/\x[protein]: the famous (just kidding) \x[e-coli-k-12-mg1655-gene-thrl], at position 190-255.

      The second one is the much more interesting \x[e-coli-k-12-mg1655-gene-thra].
    * Gene list, with a total of 4,629 as of 2021: https://www.ncbi.nlm.nih.gov/gene/?term=txid511145

\x[kegg] entry: https://www.genome.jp/pathway/eco01100+M00022

\x[biocyc-promoter-database] query URL: https://biocyc.org/group?id=:ALL-PROMOTERS&orgid=ECOLI

= E. Coli K-12 MG1655 gene
{c}
{parent=e-coli-k-12-mg1655}

= E. Coli K-12 MG1655 gene thrL
{parent=e-coli-k-12-mg1655-gene}
{title2=190-255, thr operon leader peptide}

\x[uniprot] entry: https://www.uniprot.org/uniprot/P0AD86[].

\x[ncbi] gene entry: https://www.ncbi.nlm.nih.gov/gene/944742[].

The first \x[gene] in the \x[e-coli-k-12-mg1655] genome. Remember however that \x[bacterial-chromosome-is-circular], so being the first doesn't mean much. TODO how to they decide on the starting point? One reasonable option would be to choose the \x[origin-of-replication], but not sure that is done.

At only 65 bp, it is quite small and boring. For a more interesting gene, have a look at the next gene, \x[e-coli-k-12-mg1655-gene-thra].

Does something to do with \x[threonine].

This is the first in the sequence thrL, thrA, thrB, thrC. This type of naming convention is quite common on related adjacent proteins, all of which must be getting \x[trascribed-biology] into a single \x[rna] by the same \x[promoter-genetics]. As mentioned in the analysis of the \x[kegg] entry for \x[e-coli-k-12-mg1655-gene-thra], those A, B and C are actually directly functionally linked in a direct \x[metabolic-pathway].

Part of \x[e-coli-k-12-mg1655-operon-thrlabc].

We can see that thrL, A, B, and C are in the same \x[transcription-unit] by browsing the list of \x[promoter-bioloty]{p} at: https://biocyc.org/group?id=:ALL-PROMOTERS&orgid=ECOLI[]. By finding the first one by position we reach; https://biocyc.org/ECOLI/NEW-IMAGE?object=TU0-42486[].

= E. Coli K-12 MG1655 gene thrA
{parent=e-coli-k-12-mg1655-gene}
{title2=337-2799, fused aspartate kinase/homoserine dehydrogenase 1}

\x[uniprot] entry: https://www.uniprot.org/uniprot/P00561[].

\x[ncbi] entry: https://www.ncbi.nlm.nih.gov/gene/945803[].

The second \x[gene] in the \x[e-coli-k-12-mg1655] genome.

Does something to do with \x[threonine].

This \x[protein] is an \x[enzyme]{parent}. The \x[uniprot] entry clearly shows the \x[chemical-reaction]{p}. that it \x[catalyses]. In this case, there are actually two! It can either transforming the \x[metabolite]:
* "L-homoserine" into "L-aspartate 4-semialdehyde"
* "L-aspartate" into "4-phospho-L-aspartate"
Also interestingly, we see that both of those reaction require some extra energy to catalyse, one needing \x[adenosine-triphosphate] and the other \x[nadp-plus].

TODO: any mention of how much faster it makes the reaction, numerically?

Since this is an \x[enzyme], it would also be interesting to have a quick search for it in the \x[kegg] entry starting from the organism: https://www.genome.jp/pathway/eco01100+M00022 We type in the search bar "thrA", it gives a long list, but the last entry is our "thrA". Selecting it highlights two pathways in the large \x[graph], so we understand that it catalyzes two different reactions, as suggested by the protein name itself (fused blah blah). We can now hover over:
* the \x[edge-graph]: it shows all the enzymes that catalyze the given reaction. Both edges actually have multiple enzymes, e.g. the L-Homoserine path is also catalyzed by another enzyme called metL.
* the \x[node-graph]: they are the \x[metabolyte]{p}, e.g. one of the paths contains "L-homoserine" on one node and "L-aspartate 4-semialdehyde"
Note that common \x[cofactor-biology]{p} are omitted, since we've learnt from the UniProt entry that this reaction uses ATP.

If we can now click on the L-Homoserine edge, it takes us to: https://www.genome.jp/entry/eco:b0002+eco:b3940[]. Under "Pathway" we see an interesting looking pathway "Glycine, serine and threonine metabolism": https://www.genome.jp/pathway/eco00260+b0002 which contains a small manually selected and extremely clearly named subset of the larger graph!

But looking at the bottom of this subgraph (the UI is not great, can't Ctrl+F and enzyme names not shown, but the selected enzyme is slightly highlighted in red because it is in the URL https://www.genome.jp/pathway/eco00260+b0002[] vs https://www.genome.jp/pathway/eco00260[]) we clearly see that thrA, thrB and thrC for a sequence that directly transforms "L-aspartate 4-semialdehyde" into \x[theronine]. This makes it crystal clear that they are not just located adjacently in the genome by chance: they are actually functionally related, and likely controlled by the same transcription factor: when you want one of them, you basically always want the three, because you must be are lacking theronine. TODO find transcription factor!

The UniProt entry also shows an interactive browser of the \x[tertiary-structure] of the protein. We note that there are currently two sources available: \x[x-ray-crystallography] and \x[alphafold]. To be honest, the \x[alphafold] one looks quite off!!!

By inspecting the \x[fasta] for the entire genome, or by using the \x[ncbi-open-reading-frame-tool], we see that this gene lies entirely in its own \x[open-reading-frame], so it is quite boring

From the \x[fasta] we see that the very first three \x[codon]{p} at position 337 are
```
ATG CGA GTG
```
where `ATG` is the \x[start-codon], and CGA GTG should be the first two that actually go into the protein:
* CGA: \x[arginine]
* GTG: \x[valine]

Part of \x[e-coli-k-12-mg1655-operon-thrlabc].

= E. Coli K-12 MG1655 gene thrB
{parent=e-coli-k-12-mg1655-gene}
{title2=2,801-3,733}

Immediately follows \x[e-coli-k-12-mg1655-gene-thra],

Part of \x[e-coli-k-12-mg1655-operon-thrlabc].

= E. Coli K-12 MG1655 gene thrC
{parent=e-coli-k-12-mg1655-gene}

Part of \x[e-coli-k-12-mg1655-operon-thrlabc].

= E. Coli K-12 MG1655 gene fnr
{parent=e-coli-k-12-mg1655-gene}
{title2=1,398,774-1,399,526}

Transcription factor for \x[e-coli-k-12-mg1655-operon-thrlabc] as shown at https://biocyc.org/ECOLI/NEW-IMAGE?object=TU0-42486[].

= E. Coli K-12 MG1655 gene arcA
{parent=e-coli-k-12-mg1655-gene}
{title2=4,639,590-4,640,306}

Transcription factor for \x[e-coli-k-12-mg1655-operon-thrlabc] as shown at https://biocyc.org/ECOLI/NEW-IMAGE?object=TU0-42486[].

\x[ncbi]: https://www.ncbi.nlm.nih.gov/gene/948874

\x[uniprot]: https://www.uniprot.org/uniprot/P0A9Q1

TODO DNA assembly structure.

= E. Coli K-12 MG1655 operon
{c}
{parent=e-coli-k-12-mg1655}

= E. Coli K-12 MG1655 operon thrLABC
{c}
{parent=e-coli-k-12-mg1655}

Contains the \x[gene]{p}: \x[e-coli-k-12-mg1655-gene-thrl], \x[e-coli-k-12-mg1655-gene-thra], \x[e-coli-k-12-mg1655-gene-thrb] and \x[e-coli-k-12-mg1655-gene-thrc], all of which have directly linked functionality.

We can find it by searching for the species in the \x[biocyc-promoter-database]. This leads to: https://biocyc.org/group?id=:ALL-PROMOTERS&orgid=ECOLI[].

By finding the first \x[operon] by position we reach; https://biocyc.org/ECOLI/NEW-IMAGE?object=TU0-42486[].

That page lists several components of the promoter, which we should try to understand!

Here are some:
* \x[e-coli-k-12-mg1655-gene-arca]
* \x[e-coli-k-12-mg1655-gene-fnr]

= Mycoplasma
{parent=bacteria}
{wiki}

A \x[genus]{parent}.

Maybe the most famous one is \x[mycoplasma-genitalium] byt there are others, and notably with lower biosafety levels:
* \x[biosafety-level]{c} 1: https://www.lgcstandards-atcc.org/Search_Results.aspx?dsNav=Ntk:PrimarySearch%7cmycoplasma%7c3%7c,Ny:True,N:1000552-1000577-4294967226&searchTerms=mycoplasma&redir=1

= Mycoplasma genitalium
{c}
{parent=mycoplasma}
{wiki}

= M. genitalium
{c}
{synonym}
{title2}

https://www.lgcstandards-atcc.org/products/all/49896.aspx[]:
* £355.00 in 2019
* \x[biosafety-level]: 2

Size: 300 x 600 nm

Reproduction time: https://www.quora.com/unanswered/How-long-do-Mycoplasma-bacteria-take-to-reproduce-under-optimal-conditions

Genome:
* 475 \x[gene]{p}
* 580 \x[base-pair][kbp]

And then there is Craig's minimized mycoides strain to 473 genes: http://phenomena.nationalgeographic.com/2016/04/21/we-built-the-worlds-simplest-cell-but-dunno-how-it-works/

Downsides mentioned at https://youtu.be/PSDd3oHj548?t=293[]:
* too small to see on light microscope
* difficult to genetically manipulate. TODO why?
* less literature than E. Coli.

https://www.lgcstandards-atcc.org/Search_Results.aspx?dsNav=Ntk:PrimarySearch%7cmycoplasma%7c3%7c,Ny:True,N:1000552-1000577-4294967226&searchTerms=mycoplasma&redir=1

Data:
* https://www.ncbi.nlm.nih.gov/bioproject/97 contains genome, genes, proteins.
* http://www.genome.jp/kegg-bin/show_pathway?mge01100 all known pathways. TODO: numerical reaction coefficients? Which enzyimes mediate what? Appears to factor pathways across organisms, which is awesome.

Whole cell modelling:

= M. genitalium whole cell model by Covert lab
{parent=mycoplasma-genitalium}

https://simtk.org/projects/wholecell

http://www.wholecell.org/

https://github.com/CovertLab/WholeCell Arghh, \x[matlab]. https://github.com/CovertLab/WholeCellSimDB

http://www.wholecellviz.org/viz.php awesome visualization of simtk, paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3413483/ A Whole-Cell Computational Model Predicts Phenotype from Genotype - 2013 - Jonathan R. Karr.

Followed up by the \x[e-coli-whole-cell-model-by-covert-lab].

= Archaea
{parent=species}
{wiki}

= Eukarya
{parent=species}
{wiki=Eukaryote}

= Eukaryote
{synonym}

A \x[domain-biology].

= Fungus
{parent=eukarya}
{wiki}

A \x[kingdom-biology]{parent}, formal name: "fungi".

= Saccharomyces cerevisiae
{c}
{parent=fungus}
{wiki}

= S. cerevisiae
{c}
{synonym}
{title2}

Size: 10 micrometers.

Genome:
* 12 \x[base-pair][Mbps]
* 6k \x[gene]{p}
* databases: https://en.wikipedia.org/wiki/Saccharomyces_Genome_Database | https://www.yeastgenome.org/ Includes:
  * known pathways: https://pathway.yeastgenome.org/overviewsWeb/celOv.shtml
* https://www.ncbi.nlm.nih.gov/genome?term=saccharomyces%20cerevisiae

\x[protein]{c}{p} per cell: 42m: https://www.cell.com/pb-assets/journals/research/cell-systems/cels_384.pdf

Division time: 100 minutes.

Minimization project: https://en.wikipedia.org/wiki/Saccharomyces_cerevisiae#Synthetic_yeast_genome_project | http://syntheticyeast.org/

= Plant
{parent=eukarya}
{wiki}

A \x[kingdom-biology]{parent}, formal name: "plantae".

= Borlotti beans
{parent=plant}
{wiki=Cranberry_bean}

This looks a lot like the beans that \x[brazilian]{p} venerate and can be easily found in the \x[united-kingdom] as of 2020.

The more exact type seems to be \x[pinto-bean], but this is close enough.

2021-03: same but 2.5 teaspons, seems to be the right ammount.

2021-02-10: attempt 3: 500g 1 hour 30 minutes no pressure, uncontrolled water. Salt with one chorizo: put 3 teaspoons, it was a bit too much, going to do 2 next time and see.

2020-12-14: attempt 3: 250g of beans, 1.5l of water, 30 minutes pressure.

2020-11-30: attempt 2: 275ml of dry beans, about 50% of 500g bag, putting 1650 ml (6x) of water on pressure cooker Still had to throw out some water.

Density dry raw: 216 g/250 ml = 432 g / 500 ml = 500 g / 580 ml = 864 g/L

500 g dry expands to in water after 12 hours: 1200 ml

Therefore 500 g dry = 864 / 2 L = 432 ml expands about 3x.

Therefore, to the maximum 2.5L of the cooker with 8x https://www.oliviascuisine.com/brazilian-style-beans/[dry volume water from this recipe] I can use:
``
2500 = volume expanded bean + volume water = 3 volume dry bean + 8 volume dry bean = 11 volume dry bean
``
and so:
``
volume dry bean = 2500/11 = 227ml
``
which is about 227 / 580 = 40% of the 500 g bag.

After first try, I found that 8x volume of water is way, way too much. Going to try 6x next time.

= Pinto bean
{parent=plant}

This seems to be the "brown \x[brazilian] bean" that many Brazilians eat every day.

Edit: after buying it, not 100% sure. This one felt smaller than what Ciro had in Brazil, \x[borlotti-beans] might be closer. Pinto beans are smaller, and creamier, and have softer peel, possibly produced less \x[fart][natural gas].

2021-04: second try.

2021-03: did for first time, started with same procedure as \x[borlotti-beans] 2021-03. Maybe 1h30 is too much. Outcome was still very good.

= Animal
{parent=eukarya}
{wiki}

= Animalia
{synonym}

A \x[kingdom-biology]{parent}, formal name: "animalia".

= Caenorhabditis elegans
{c}
{parent=animal}
{wiki}

= C. elegans
{c}
{synonym}
{title2}

* https://www.cell.com/cell-systems/fulltext/S2405-4712(16)30120-X
* https://www.cell.com/cell-systems/fulltext/S2405-4712(16)30151-X A Genome-Scale Database and Reconstruction of Caenorhabditis elegans Metabolism Gebauer, Juliane et al. Cell Systems , Volume 2 , Issue 5 , 312 - 322

= OpenWorm
{c}
{parent=c-elegans}
{wiki}

\x[whole-organism-simulation]{c} of \x[c-elegans].

High level simulation only, no way to get from DNA to worm! :-) Includes:
* \x[nervous-system]
* muscle system

= Drosophila melanogaster
{c}
{parent=animal}
{title2=Common fruit fly}
{wiki}

= Human
{parent=animal}
{wiki}

= Homo sapiens
{c}
{synonym}
{title2}

Genome:
* 3 Gbps
* 20k genes

https://www.ncbi.nlm.nih.gov/projects/genome/guide/human/index.shtml

``
wget ftp://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/GRCh38_latest_genomic.fna.gz
gunzip --keep GRCh38_latest_genomic.fna.gz
``

= Human body
{parent=human}
{wiki}

In other sections:
* \x[human-brain]{child}

= Human proteome
{parent=human-body}

= Human body system
{parent=human-body}

= Human nervous system
{parent=human-body-system}
{wiki=Outline_of_the_human_nervous_system}

= Recurrent laryngeal nerve
{parent=human-nervous-system}
{wiki}

= Human genome
{parent=human}
{wiki}

= Human gene
{synonym}

20k \x[gene]{p}, 3 billion \x[base-pair]{p}. We can handle this!!!

= Human mitochondrial DNA haplogroup
{parent=human-genome}
{wiki}

= Human Genome Project
{c}
{parent=human-genome}
{wiki}

As mentioned by \x[craig-venter] in \x[100-greatest-discoveries-by-the-discovery-channel-2004-2005], it established the ballpark number of \x[human-gene]{p}, and showed that human genomes are very similar across individuals.

= Human protein
{parent=human-genome}
{wiki}

= Angiotensin-converting enzyme 2
{parent=human-protein}
{wiki}

= ACE2
{c}
{synonym}

\x[uniprot] \x[human]: https://www.uniprot.org/uniprot/Q9BYF1 It is interesting to see in the Mutagenesis how many known mutations can increase or decrease \x[sars-cov-2-s-protein] binding affinity

= TMPRSS2
{c}
{parent=human-protein}
{wiki}

= Transhumanism
{parent=human}
{wiki}

= Transhumanist
{synonym}

= Extraterrestrial life
{parent=species}
{title2=alien}
{wiki}

= Alien
{parent=extraterrestrial-life}

Synonym for: \x[extraterrestrial-life]

= Evolution
{parent=biology}
{wiki}

\Video[https://www.youtube.com/watch?v=plVk4NVIUh8]
{title="The Evolution of Bacteria on a 'Mega-Plate' \x[petri-dish] (Kishony Lab)" by Harvard Medical School (2016)}
{description=They've made a huge Petri dish with bands of different concentrations of antibiotic, and then they visualize \x[escherichia-coli] mutations as new strains manage to make their way into the highest antibiotic concentration strip. \x[mind-blowing].}

= Argument from poor design
{parent=evolution}
{wiki}

* \x[recurrent-laryngeal-nerve]{child}
* \x[vitamin-c]{child}

= Homology
{disambiguate=biology}
{parent=evolution}
{wiki}

= Natural selection
{parent=evolution}
{wiki}

= Phylogenetic tree
{parent=evolution}
{wiki}

= OneZoom
{c}
{parent=phylogenetic-tree}

Interesting \x[fractal] approach to a \x[phylogenetic-tree]: https://www.onezoom.org/

Mostly data driven.

= Selective breeding
{parent=evolution}
{wiki}

= Eugenics
{parent=selective-breeding}
{wiki}

= Biotechnology
{parent=biology}
{wiki}

= Biosafety level
{parent=biotechnology}
{title2=BSL}
{wiki}

= Biotechnology tools
{parent=biotechnology}

= Gel electrophoresis
{parent=biotechnology-tools}
{wiki}

= Agarose gel electrophoresis
{parent=gel-electrophoresis}
{wiki}

= Petri dish
{c}
{parent=biotechnology-tools}
{wiki}

= Pipette
{c}
{parent=biotechnology-tools}
{wiki}

= Tissue engineering
{parent=biotechnology}
{wiki}

= Cultured meat
{parent=tissue-engineering}
{wiki}

This is something worth investigating!

\Video[https://www.youtube.com/watch?v=QO9SS1NS6MM]
{title=Inside the Quest to Make Lab Grown Meat by WIRED (2018)}
{description=Interviews with a few \x[startup]{p} in the area, most of the time with \x[eat-just].

https://youtu.be/QO9SS1NS6MM?t=217 taught \x[ciro-santilli] something he really appreciated: \x[uncanny-valley].
}

= Eat Just
{c}
{parent=cultured-meat}
{wiki}

= Synthetic biology
{parent=biotechnology}
{wiki}

Bibliography:
* https://www.buildacell.org/

= Biologist
{parent=biology}
{wiki}

= Antonie van Leeuwenhoek
{c}
{parent=biologist}
{wiki}

= Craig Venter
{c}
{parent=biologist}
{wiki}

One of the \x[biotechnology] superstars of the 2000's/2010's.

= George M. Church
{c}
{parent=biologist}
{wiki}

One of the \x[biotechnology] superstars of the 2000's/2010's.

\x[don-t-be-a-pussy][Not a pussy].

https://bioengineeringcommunity.nature.com/users/20939-laura-defrancesco/posts/57342-a-conversation-with-george-church

= Computational biology
{parent=biology}
{wiki}

In other sections:
* \x[whole-cell-simulation]{child}{child}

= Bioinformatics
{parent=computational-biology}
{wiki}

= FASTA format
{c}
{parent=bioinformatics}
{wiki}

= FASTA
{c}
{synonym}

= Get nucleotide at a given position of a FASTA file
{parent=fast-format}

https://www.biostars.org/p/263478/

= Sequence alignment
{parent=bioinformatics}
{wiki}

Sequence alignment is trying to match a \x[dna] or \x[amino-acid] sequence, even though the sequences might not be exactly the same, otherwise it would be a straight up \x[string-search-algorithm].

This is fundamental in \x[bioinformatics] for two reasons:
* when you \x[sequence-the-dna] of a new \x[species], you can guess what each \x[protein] does by comparing it with similar proteins in other species that you have already studied
* when doing \x[dna-sequencing], and specially \x[short-read-dna-sequencing], you generally need to align the reads to reference genomes to know where you are inside the entire genome, and then be able to spot \x[mutation]{p}, notably \x[single-nucleotide-polymorphism]{p}

= BLAST
{c}
{disambiguate=biotechnology}
{wiki}

BLAST is a \x[sequence-alignment].

The \x[ncbi] free-to-use BLAST server: https://blast.ncbi.nlm.nih.gov/Blast.cgi[]. Having a centralized query server is fundamental, because the gain of \x[sequence-alignment] really comes from having one huge database to link information together, which is best centralized.

= Whole organism simulation
{parent=computational-biology}

* \x[openworm]

= Disease
{parent=biology}
{wiki}

= Cancer
{parent=disease}
{wiki}

= Chronic disease
{parent=disease}
{wiki}

* \x[asthma]{child}

= Obesity
{parent=disease}
{wiki}

= Fat
{disambiguate=animal}
{title2}
{synonym}

= Fatty
{synonym}

Obesity is an extremely serious disease that is very hard to cure, and has deep psychological implications.

= Infection
{parent=disease}
{wiki}

= Infectious disease
{synonym}

* \x[tuberculosis]{child}
* \x[covid-19]{child}

= Respiratory disease
{parent=disease}
{wiki}

* \x[covid-19]{child}

= Asthma
{parent=respiratory-disease}
{wiki}

= Tuberculosis
{parent=respiratory-disease}
{wiki}

= Life
{parent=biology}
{wiki}

Whatever it is that \x[biology] studies.

= Death
{parent=life}
{wiki}

= Reproduction
{parent=biology}
{wiki}

= Sexual reproduction
{parent=reproduction}
{wiki}

= Sexually
{parent=sexual-reproduction}

= Sexual selection
{parent=sexual-reproduction}
{wiki}

= Mate choice
{parent=sexual-selection}
{wiki}

= Courtship
{parent=sexual-selection}
{wiki}

= Courting
{synonym}

= Female
{parent=sexual-reproduction}
{wiki}

= Male
{parent=sexual-reproduction}
{wiki}

= Sexual arousal
{parent=sexual-reproduction}
{wiki}

= Sexually aroused
{synonym}

= Horny
{synonym}

= Sexy
{parent=sexual-arousal}
{wiki}

= Sexual desire
{parent=sexual-reproduction}
{wiki}

\x[analects-translation-by-robert-eno-2015]:
\Q[
16.7 Confucius said, The junzi has three cautions. When he is young and his blood andenergy are not yet settled, he is cautious about sex. When he is in his prime and his blood and energy have newly achieved strength, he is cautious about combativeness. When he is old and his blood and energy are declining, he is cautious about acquisitiveness.
]

= Orgasm
{parent=sexual-reproduction}
{wiki}

= Sexual intercourse
{parent=sexual-reproduction}
{wiki}

= Fuck
{synonym}

= Fucked
{synonym}

= Fucking
{synonym}

= Sexual orientation
{parent=sexual-reproduction}
{wiki}

= Homosexuality
{parent=sexual-orientation}
{wiki}

= Homosexual
{synonym}

= Gay
{synonym}

= Lesbian
{parent=homosexuality}
{wiki}

= Coming out
{parent=sexual-orientation}
{wiki}

= Come out of the closet
{synonym}

= Promiscuity
{parent=sexual-reproduction}
{wiki}

= Womanizer
{synonym}

= Sexual organ
{parent=sexual-reproduction}

= Penis
{parent=sexual-organ}
{wiki}

= Dick
{synonym}

= Vagina
{parent=sexual-organ}
{wiki}

= Viviparity
{parent=sexual-reproduction}

= Pregnancy
{parent=viviparity}
{wiki}

= Abortion
{parent=pregnancy}
{wiki}

\x[ciro-santilli] is for abortion rights of women, until very late in pregnancy.

But it's not something that he would do himself, unless under extreme cases.

= Medicine
{parent=biology}
{wiki}

= Pharmacy
{parent=medicine}
{wiki}

= Antimicrobial
{parent=pharmacy}
{wiki}

= Antibiotic
{parent=antimicrobial}
{wiki}

= Streptomycin
{parent=antibiotic}
{title2=1948}
{wiki}

= Drug
{parent=pharmacy}
{wiki}

= Addiction
{parent=drug}
{wiki}

= Addict
{synonym}

= Drug addict
{parent=addiction}
{wiki}

= Drug tolerance
{parent=addiction}
{wiki}

= Recreational drug
{parent=drug}
{wiki}

= Drug liberalization
{parent=recreational-drug}
{wiki}

= Legalization of drugs
{synonym}

\x[ciro-santilli] supports full legalization of all drugs, because he feels that it would be better overall for the world to have cheaper drugs and more \x[drug-addict]{p}, but way, way less \x[organized-crime].

These should be extremely controlled of course, with extremely high \x[tax]{p} that puts their price just below the current illegal market, and a complete ban on any positive \x[advertising].

Ciro believes that maybe the \x[government] could even go as far as giving free drugs to \x[drug-addict]{p} so they don't have to \x[theft][rob] to get a fix.

This is notably considering that drug-led organized crime completely dominates and corrupts the \x[politics] of many production and trafficking zones, which are already generally poor \x[fucked] up places to start with:
* \x[mexican-drug-war]
* \x[golden-crescent]
* \x[golden-triangle-southeast-asia]
Ciro's experiences in Brazil such as mentioned at \x[sao-remo-the-favela-next-to-usp], although much less extreme than the above, also come to mind.

Drug traffic corrupts everything. It prevents development of honest people. It is a \x[cancer], which we have failed time and time a gain to cure. The only cure is to accept the other less insidious of addiction.

Bibliography:
* \x[how-to-fix-a-drug-scandal-2020] gives a good sense of the relentlessness of the drug war, and how it affects people who are already poor the most

= Bad trip
{parent=recreational-drug}
{wiki}

= Drug traffic
{parent=recreational-drug}
{wiki}

= Drug lord
{parent=drug-traffic}
{wiki}

= List of recreational drugs
{parent=recreational-drug}
{wiki}

= Cocaine
{parent=list-of-recreational-drugs}
{wiki}

= Marijuana
{parent=list-of-recreational-drugs}
{wiki}

= Heroin
{parent=list-of-recreational-drugs}
{wiki}

= Pharmaceutical company
{parent=pharmacy}
{wiki}

= Merck Group
{c}
{parent=pharmaceutical-company}
{wiki}

= Merck
{c}
{synonym}

= Astronomy
{parent=natural-science}
{wiki}

= Astrophysics
{parent=astronomy}
{wiki}

A fancy name for \x[astronomy] ;-)

= Cosmic ray
{parent=astrophysics}
{wiki}

= Particle discovered with cosmic rays
{parent=cosmic-ray}

* \x[positron]{child}, later confirmed with \x[gamma-ray] experiments by \x[carl-david-anderson]
* \x[muon]{child}
* \x[pion]{child}
* \x[kaon]{child}

= Mountain used for cosmic ray experiments
{parent=cosmic-ray}

* https://en.wikipedia.org/wiki/Mount_Wilson_(California)[Mount Wilson]
* https://en.wikipedia.org/wiki/Pic_du_Midi_de_Bigorre[Pic du Midi]
* https://en.wikipedia.org/wiki/Chacaltaya[Chacaltaya]

= Ultra-high-energy cosmic ray
{parent=cosmic-ray}
{wiki}

Sometimes it feels like this could be how we finally make experiments to see what the \x[theory-of-everything] looks like, a bit like the first high energy experiments were from less exotic \x[cosmic-ray]{p}.

= Greisen-Zatsepin-Kuzmin limit
{c}
{parent=ultra-high-energy-cosmic-ray}
{wiki=Greisen–Zatsepin–Kuzmin_limit}

= Oh-My-God particle
{parent=ultra-high-energy-cosmic-ray}
{wiki}

= Age of the universe
{parent=astronomy}
{wiki}

\x[surely-you-re-joking-mr-feynman] chapter An Offer You Must Refuse (a play on words on \x[the-godfather-1972]) has an interesting historical mention from the early 1950s while at \x[caltech]:
\Q[
The next day, I had the greatest luck in making a decision. God must have set it up to help me decide. I was walking to my office, and a guy came running up to me and said, "Hey, Feynman! Did you hear what happened? Baade found that there are two different populations of stars! All the measurements we had been making of the distances to the galaxies had been based on Cephid variables of one type, but there's another type, so the universe is twice, or three, or even four times as old as we thought!"

I knew the problem. In those days, the \x[age-of-earth][earth appeared to be older] than the universe. The earth was four and a half billion, and the universe was only a couple, or three billion years old. It was a great puzzle. And this discovery resolved all that: The universe was now demonstrably older than was previously thought. And I got this information right away - the guy came running up to me to tell me all this.
]

= Astronomical object
{parent=astronomy}

= Planetary system
{c}
{parent=astronomical-object}
{wiki}

= Planet
{c}
{parent=astronomical-object}
{wiki}

= Virgo Supercluster
{c}
{parent=astronomy}
{wiki}

= Local group
{c}
{parent=virgo-supercluster}
{wiki}

= Milky way
{c}
{parent=local-group}
{wiki}

\Image[https://web.archive.org/web/20201010121906im_/http://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/Milky_Way_Arms.svg/614px-Milky_Way_Arms.svg.png]
{title=Arms of the \x[milky-way].}
{source=https://en.wikipedia.org/wiki/File:Milky_Way_Arms.svg}

= Orion Arm
{c}
{parent=milky-way}
{wiki}

= Solar System
{c}
{parent=orion-arm}
{wiki}

= Sun
{c}
{parent=solar-system}
{wiki}

= Earth
{c}
{parent=solar-system}
{wiki}

= Continent
{parent=earth}
{wiki}

= Americas
{c}
{parent=continent}
{wiki}

= North America
{c}
{parent=americas}
{wiki}

= Country in North America
{parent=north-america}
{wiki}

= Mexico
{c}
{parent=country-in-north-america}
{wiki}

= Mexican drug war
{c}
{parent=mexico}
{wiki}

= United States
{c}
{parent=country-in-north-america}
{wiki}

= American
{c}
{synonym}

= USA
{c}
{synonym}
{title2}

The ruler of the 1950-2020 world by https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(nominal)[Dollar] and https://en.wikipedia.org/wiki/List_of_states_with_nuclear_weapons[nuke] count.

Capable of \x[evil] like any other country, and somewhat merciless to its poor and overly egocentric, but not nearly as evil as any \x[china][dictatorship].

Has the huge advantage of being \x[having-more-than-one-natural-language-is-bad-for-the-world][one large country which speaks English].

Countries of the world have only two choices as of 2019: either rally behind the US and support democracy, or rally behind China and support dictatorship. The choice is up to you, voters. The more you deal with China, the more you lose your democracy and freedom. All dictatorships have no doubt that they must stick together.

And Americans, please stop that https://en.wikipedia.org/wiki/Make_America_Number_1[America Number 1] \x[bullshit]. Obviously everyone has to strive to be the best, so when you say it like that, it sounds like "even if at the expense of everyone else". The motto has to be "democracy number 1" or else you will scare off all allies. If all other countries sell out to China, you are \x[sexual-intercourse][fucked].

= History of the United States
{parent=united-states}
{wiki}

= American Civil War
{parent=history-of-the-united-states}
{wiki}

= United States Government
{c}
{parent=united-states}
{wiki}

= U.S. state
{c}
{parent=united-states}
{wiki}

= California
{c}
{parent=u-s-state}
{wiki}

= Los Angeles
{c}
{parent=california}
{wiki}

= Hawaii
{c}
{parent=u-s-state}
{wiki}

= Illinois
{c}
{parent=u-s-state}
{wiki}

= Chicago
{c}
{parent=illinois}
{wiki}

= Minnesota
{c}
{parent=u-s-state}
{wiki}

= New Mexico
{c}
{parent=u-s-state}
{wiki}

= Albuquerque, New Mexico
{c}
{parent=new-mexico}
{wiki}

= Albuquerque
{c}
{synonym}

= Los Alamos, New Mexico
{c}
{parent=new-mexico}
{wiki}

= Los Alamos
{c}
{synonym}

= New York
{c}
{disambiguate=state}
{parent=u-s-state}
{wiki}

= New York
{c}
{parent=new-york-state}
{wiki}

= Manhattan
{c}
{parent=new-york}
{wiki}

= Long Island
{c}
{parent=new-york-state}
{wiki}

= Tennessee
{c}
{parent=u-s-state}
{wiki}

= Utah
{c}
{parent=u-s-state}
{wiki}

= Washington
{c}
{disambiguate=state}
{parent=u-s-state}
{wiki}

= South America
{c}
{parent=americas}

= Country in South America
{parent=south-america}
{wiki}

= Brazil
{c}
{parent=country-in-south-america}
{wiki}

= Brazilian
{c}
{synonym}

\x[ciro-santilli]'s birth country.

An awesome country, with amazing people and natural resources, and without an evil government like \x[china].

When visiting Brazilian cities coming from Europe, one of the things that shocks the most is the amount of motorcycles. It seems that the poorer the country, the less people's lives are worth, and the more motorcycles there are.

Another thing that was shocking is the amount of phone spam when you get a new SIM card, some \x[legal] and some likely illegal. Everyone is desperate for cash it seems on a poor country, and everyone fights hard for it.

Related:
* \x[popular-brazilian-music]{child}

= Favela
{parent=brazil}
{wiki}

= States of Brazil
{c}
{parent=brazil}
{wiki}

= São Paulo
{c}
{disambiguate=state}
{parent=states-of-brazil}
{wiki}

= Santos, São Paulo, Brazil
{c}
{parent=sao-paulo-state}
{wiki=Santos,_São_Paulo}

\x[ciro-santilli] lived in Santos from about the year 1998 to 2007, there until he went to university.

The nearest beach city to the city of https://en.wikipedia.org/wiki/S%C3%A3o_Paulo[São Paulo], and for this reason:
* the https://en.wikipedia.org/wiki/List_of_busiest_container_ports[largest port of Latin America in 2018], through which large chunks of the precious https://en.wikipedia.org/wiki/Coffee_production_in_Brazil[coffee export] exited Brazil in the 19th century. There is a http://www.museudocafe.org.br/en/[Coffee museum in Santos].
* a popular local tourist destination that gets crowded on hot \x[weekend]{p}, with the beach line being fully built with tall buildings from the 60's, many of which became https://www.amusingplanet.com/2013/04/the-leaning-buildings-of-santos-brazil.html[incredibly bent due to the inadequate technology used on such soft soil]

Ciro idolizes Santos as the \x[ciro-santilli-s-ideal-city-to-live-in][perfect location to live] nature-wise due to its amazing wide sandy beach, in which Ciro spent endless hours walking on the sand and on the https://www.guinnessworldrecords.com/news/2012/9/best-brazilian-guinness-world-records-in-honor-of-independence-day-44636/[largest beachfront garden in the world] (https://web.archive.org/web/20180407071903/https://www.guinnessworldrecords.com/news/2012/9/best-brazilian-guinness-world-records-in-honor-of-independence-day-44636/[archive]), meditating, and \x[ciro-santilli-s-sport-practice][playing some soccer after school was over]. Santos is also the city where https://en.wikipedia.org/wiki/Pel%C3%A9[Pelé] first played professionally.

Ciro has visited Santos several times after leaving Brazil. Doing this gives him a weird feeling of having a separate life, in which time passes 2 weeks every few years.

Ciro is also fond of the concept of the small public buildings near the beach garden (postos de praia), which serve different cultural activities: library, comic book store, art cinema, surf school. It is such a shame that the library and comic book ones are in such bad shape as of 2020, old books and poor people who go there to sleep a bit in the barely working air conditioning. Ciro fantasizes how those could instead be cultural hubs for the gathering of the brightest \x[art][artists], and scientists, of town. Maybe they are just too small. Maybe it is not withing the realm of possibility of public service. Maybe, we should focus instead in the poorer regions, far form the beach. But the dream remains.

Santos only has one natural defect: mosquitoes. By the sea it is fine because the wind is strong, and they don't like salt water. But anywhere else, you will be eaten, and maybe get dengue. https://en.wikipedia.org/wiki/Gene_drive[Gene drive], please.

\Image[https://upload.wikimedia.org/wikipedia/commons/a/ac/Panoramica_Santos.jpg]
{title=Panoramic view of Santos' beach line taken in 2009.}

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/Canal_5_adentrando_na_praia_de_Santos.jpg/800px-Canal_5_adentrando_na_praia_de_Santos.jpg]
{title=Canal 5 on the beach, one of Santo's 7 old Canals.}
{description=Don't worry, they're pretty clean nowadays, and serve as handy reference points in town, as well as being surrounded with nice trees that provide shade and drop small inedible purple fruit that will stain your car for all eternity.}

= São Paulo City
{c}
{parent=sao-paulo-state}
{wiki=São_Paulo}

= São Paulo
{c}
{synonym}

Although \x[ciro-santilli] lived in São Paulo City nominally \x[ciro-santilli-s-formal-education][during his studies], it would be more precise to say that he lived in \x[university-of-sao-paulo][University of São Paulo]-land, because Ciro was cheap, didn't have a car, and did nothing but study, stay at home, go back to \x[santos-sao-paulo-brazil][Santos] to see his parents and the beach.

But the little he saw of the city made a deep impression on him.

The unreasonable size.

The unbearable contrasts.

\x[popular-brazilian-music][Caetano's Sampa] is the ultimate description of the city.

= Municipal Market of São Paulo
{c}
{parent=sao-paulo-city}
{wiki}

Once upon a time, this must have been a nice covered market.

But as of 2020, it is completely surrounded by extremely poor people, to the point that it makes you scared if you stand out in any way by showing any kind of middle/upper class wealth, or being a foreigner.

The market is basically a touristic spot that no person in Sao Paulo will ever go to (unless they are young, single, and can just walk in there by themselves) in the middle of this surreal environment.

In 2020 Ciro was there with \x[ciro-santilli-s-wife][his wife] on a touristic visit. Living in \x[europe] at the time, he felt even more privileged. So they went to a fruit stand, and the man started giving his wife amazing free samples of very exotic fruit, some of which Ciro had never tasted himself, without saying the price. It did feel like he was giving out too much for free. Then Ciro decided of course to buy some more fruits to pay for the show, which was a nice show. Then while buying, it came out a bit more expensive than would have been reasonable, but Ciro was too dazzled by the speed and noises, and he paid for it. Later on, he told his wife about it, and how he felt that they had added some ultra-expensive bulk fruits that were of a clearly lower level than the gold nuggets of the free samples (especially for Brazil's cost standards). The presenter was an extremely crafty con artist, and Ciro felt like they had specifically preyed on \x[ciro-santilli-s-self-perceived-compassionate-personality], because it was apparent that those men were underprivileged and fighting for their living day by day with those over-expensive fruits. This was an extremely valuable lesson, Ciro was glad that it was learnt at a relatively low cost on that occasion.

= Rio de Janeiro
{c}
{disambiguate=state}
{parent=states-of-brazil}
{wiki}

= Rio
{c}
{synonym}

= Asia
{c}
{parent=continent}
{wiki}

= Asian
{c}
{synonym}

= Golden Crescent
{c}
{parent=asia}
{wiki}

= Russia
{c}
{parent=asia}
{wiki}

= Russian
{c}
{synonym}

= Soviet Union
{c}
{parent=russia}

= East Asia
{c}
{parent=asia}
{wiki}

= Country in East Asia
{parent=east-asia}

= China
{c}
{parent=country-in-east-asia}
{wiki}

= Chinese
{c}
{synonym}

The most https://github.com/cirosantilli/china-dictatorship/tree/92cfb1a9a62e45447c1d4e0bf5483c572a3d1bd7#do-you-hate-china[awesome country in the world], except for it's horrible government as of 2019 which \x[ciro-santilli] is \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][trying to replace with democracy].

Related non-child nodes:
* \x[chinese-language]{child}
* \x[chinese-traditional-music]{child}

= Chinese Communist Party
{c}
{parent=china}
{title2=CCP}

= Chinese government
{c}
{synonym}

The enemy: \x[cirosantilli-china-dictatorship].

= Chinese cuisine
{c}
{parent=china}
{wiki}

= Chinese food
{c}
{synonym}

One of the best in the world, but you need to know how to find real restaurants if you are not in China.

But worry not, \x[ciro-santilli] has got you covered: https://github.com/cirosantilli/china-dictatorship/restaurants

= Congee
{parent=chinese-cuisine}
{wiki}

= 粥
{synonym}
{title2}

https://cirosantilli.com/china-dictatorship/congee

= Chinese literature
{c}
{parent=china}
{wiki}

Related:
* \x[analects]{child}
* https://cirosantilli.com/china-dictatorship/classical-chinese-books

= Four Great Classic Novels
{c}
{parent=chinese-literature}

= 四大名著
{synonym}
{title2}

= Journey to the West
{c}
{parent=four-great-classic-novels}
{wiki}

= 西游记
{synonym}
{title2}

= Sun Wukong
{c}
{parent=journey-to-the-west}
{wiki}

= 孙悟空
{synonym}
{title2}

Only after Ciro became an adult did he finally understand that \x[sun-wukong] was the basis for \x[children-cartoons-ciro-santilli-liked-to-watch][Dragon Ball] as mentioned at: \x[image-19th-century-illustration-of-the-journey-to-the-west-protagonist-sun-wukong]{full}. And that Sun Wukong was a million times more famous overall. Mind-blown.

= Water Margin
{c}
{parent=four-great-classic-novels}
{wiki}

= 水浒传
{synonym}
{title2}

Adaptations:
* \x[suikoden]{child}, \x[ciro-santilli] played that one and has some remarks if interest

= 108 Stars of Destiny
{parent=water-margin}

= 一百单八将
{synonym}
{title2}

See \x[ciro-santilli]'s remarks at \x[suikoden].

= Japan
{c}
{parent=country-in-east-asia}
{wiki}

= Japanese
{c}
{synonym}

= Japanese literature
{c}
{parent=japan}
{wiki}

= Hagakure
{c}
{parent=japanese-literature}
{title2=葉隱}
{wiki}

= Matters of small concern should be treated seriously
{parent=hagakure}

As quoted on \x[ghost-dog-the-way-of-the-samurai-1999] at 00:23:01:
\Q[Among the maxims on Lord Naoshige's wall there was this one: "Matters of great concern should be treated lightly." Master Ittei commented, "Matters of small concern should be treated seriously."]
TODO find exact page/section.

= Korea
{c}
{parent=country-in-east-asia}
{wiki}

= Korean
{synonym}

= Kimchi
{parent=korea}
{wiki}

This brand: https://www.jongga.co.kr/global/product/product.jsp

= South Asia
{c}
{parent=asia}
{wiki}

= Country in South Asia
{parent=south-asia}

= India
{c}
{parent=country-in-south-asia}
{wiki}

= Indian
{c}
{synonym}

= Southeast Asia
{c}
{parent=asia}
{wiki}

= Golden Triangle
{c}
{disambiguate=Southeast Asia}
{parent=southeast-asia}
{wiki}

= Europe
{c}
{parent=continent}
{wiki}

= European
{synonym}

For the most part, a great pseudo-country to live in with lots of cultural diversity, \x[art] and safety.

However, Europe is in economic decline after all its Jewish and German geniuses fled in/after https://en.wikipedia.org/wiki/World_War_II[WWII] and due to \x[having-more-than-one-natural-language-is-bad-for-the-world].

\x[ciro-santilli] moved \x[ciro-santilli-s-biography][to Europe in 2010].

= European balance of power
{c}
{parent=europe}
{wiki}

= Concert of Europe
{c}
{parent=european-balance-of-power}
{title2=19th century}

= European Union
{c}
{parent=europe}
{wiki}

= Europe cookie law
{c}
{parent=european-union}
{wiki=Privacy_and_Electronic_Communications_Directive_2002}

\x[europe] has made good regulations to limit the absolute power of immoral \x[company]{p}. Partly because it \x[having-more-than-one-natural-language-is-bad-for-the-world][does not have any companies anymore], but so be it.

But the law that forces every \x[fucking] website to show a message "Do you consent to cookies?" is not one of them.

Ciro cannot stand \x[fucking] clicking the "I consent" button anymore.

Please stop, for the love of God.

At most, there must be a standardized \x[api] that allows your browser to say "I agree or I disagree" automatically to all of them, e.g. an HTTP header.

2021: \x[united-kingdom] is condiering it post-\x[brexit]: https://techcrunch.com/2021/09/06/after-years-of-inaction-against-adtech-uks-ico-calls-for-browser-level-controls-to-fix-cookie-fatigue/[]. Something good might actually come out of Brexit!

= Country in Europe
{parent=europe}

= Spain
{c}
{parent=country-in-europe}
{wiki}

= Spanish
{c}
{synonym}

= France
{c}
{parent=country-in-europe}
{wiki}

= French
{c}
{synonym}

France is obviously a \x[what-poor-countries-have-to-do-to-get-richer][fine rich place] to live, \x[ciro-santilli] lived there \x[ciro-santilli-s-biography][for a few years].

= Paris
{c}
{parent=france}
{wiki}

\x[ciro-santilli] lived in Paris for a few years between 2013 and 2016, and he can confirm the uncontroversial fact that "Paris is Magic".

Not just one type of magic though. Every quarter in Paris has its own unique personality that sets it apart and gives it a different mood.

Ciro knows Paris not from its historical facts, but from the raw feeling of endless walks through its streets in different times of the year. Ciro is a walker.

Paris, is a friendly city to walkers, as it is not too large, and does not have too many extremely busy roads, you can basically cross all of it on foot.

Maybe one day Ciro will expand this section to try and convey into words his feelings of love for the city, but maybe the effort would be pointless. Maybe such feelings can only be felt by other free-roaming walker souls living in the city, and that is both beautiful and a shame.

See also the  \x[cirodance][legendary Cirodance bowl of soup episode at Place de la République].

= Place de la République
{c}
{parent=paris}
{wiki}

A lot of skateboarders hand out there, and it was where \x[ciro-santilli] used to practice \x[cirodance].

= Germany
{c}
{parent=country-in-europe}
{wiki}

= German
{c}
{synonym}

= Adolf Hitler
{c}
{parent=germany}
{wiki}

= Hitler
{c}
{synonym}

= Nazism
{c}
{parent=adolf-hitler}
{wiki}

= Nazi
{c}
{synonym}

For parallels between nazi \x[germany] and the https://cirosantilli.com/china-dictatorship/nazi

= Nazi Germany
{c}
{parent=nazism}
{wiki}

= Greece
{c}
{parent=country-in-europe}
{wiki}

= Italy
{c}
{parent=country-in-europe}
{wiki}

= Italian
{c}
{synonym}

Where most of \x[ciro-santilli]'s ancestors came from, and why Ciro has the Italian nationality as well as \x[brazil][Brazilian].

More specifically his paternal line comes from https://en.wikipedia.org/wiki/Gissi[Gissi in the Abruzzo region].

Ciro feels really bad by the fact that he does not speak Italian and has never visited Gissi.

He would likely be able to learn Italian in like 3 months because it is so similar to \x[ciro-santilli-s-natural-languages-skills][Portuguese and French which he already speaks].

And a \x[ciro-santilli-s-sport-practice][cycling visit maybe]? That would be amazing! https://en.wikipedia.org/wiki/Giro_d'Abruzzo[] | https://www.youtube.com/watch?v=OW7wqa3vNU8&list=UU35qUU5iZPvuzcre43EV8bA&index=25[]

For what it is worth though, \x[ciro-santilli] does honestly love \x[europe], and feels a strong desire to make it even awesomer, along with the rest of the world.

= Kosovo
{c}
{parent=country-in-europe}
{wiki}

= Kosovo War
{c}
{parent=kosovo}
{wiki}

= United Kingdom
{c}
{parent=country-in-europe}
{wiki}

= British
{c}
{synonym}

The United Kingdom is one big field.

Everything is extremely uniform and fully controlled by humans. Maybe this is partially due to it being an island with extensive flood plains. Loots of \x[magic-the-gathering][white mana] floating around there.

Some impressively sounding natural parks look more like cute countryside that is slightly hillier than the surrounding countryside.

This uniformity does however make it quite comfortable for its Hobbit inhabitants.

It also means that whenever slightly out of the ordinary happens, e.g., a bit of slightly heavier \x[rain], everything floods. In some way however, the Brits are very pragmatic, and as long as the flood is not too bad, they just let it be, it might be cheaper.

Decent interactive counties map: https://help.openstreetmap.org/questions/22603/displaying-uk-ceremonial-counties TODO districts...

= Brexit
{c}
{parent=united-kingdom}
{wiki}

= British custom
{c}
{parent=united-kingdom}

= British pragmatism
{c}
{parent=british-custom}

The \x[british] are very pragmatic. This has good and bad effects.

For example, a good effect is that many things work pretty well, such as the \x[government]. This also helped \x[industry] develop.

A bad effect is that they sometimes settle on local minima forever. Examples:
* as of 2020, they are still using \x[imperial-unit]{p} in everyday life, rather than \x[international-system-of-units], which was setup by the \x[french], who are much more \x[idealistic], and can therefore can break from such insanity more often.
* the persistence of the insane system of \x[colleges-of-the-university-of-oxford]
* the incredibly late date of the \x[decimal-day] in 1971, and that was partly due to the advent of the \x[computer]. That one was too much, even for the Brits, or maybe it helped that the greedy financiers were involved
* the British train system as of the 2010's, which is completely not unified, each part operated by a different company with different standards. Private and public unification efforts are ongoing, Trainline being one of the best/only private buy from any line unification approaches.
* \x[church-of-england] priests can marry, which reduces the proportion of pedophiles. Also women were accepted starting in the 1970's in certain dioceses (non uniform rules as usual, typical of English pragmatism), including for bishop
If \x[if-it-ain-t-broke-don-t-fix-it][it ain't totally broken], just let it continue forever! See also: \x[history-of-the-university-of-oxford]{full}.

= Climate of the United Kingdom
{parent=united-kingdom}
{wiki}

= British weather
{synonym}
{title2}

British weather is not as bad as the stereotype, at least not in the southern half of the country.

Notably, it does not \x[rain] that much, and when it rains, it is a very light \x[rain], which \x[brazilian]{p} from \x[sao-paulo-state] or , at most, a "drizzle".

It feels like the weather forecasts are almost always worse than reality, maybe it is a way to not make people disappointed.

What there is relatively a lot of is wind, and fog. But the wind is generally warm and wet, it is very maritime.

= Cycling in the United Kingdom
{parent=united-kingdom}

Parent section: \x[ciro-santilli-s-cycling].

The \x[united-kingdom] is a great place to cycle in general as there's plenty of small country roads and interesting new small towns to discover, perhaps much like the rest of \x[europe], as opposed to the \x[united-states], which likely has some huge infinitely long straight roads with a lot of nothing in between.

Of particular interest is the large amount of airfields and small air raid shelters in the fields, an ominous reminder of world war 2. The airfields are in various states, from functional military fields, many converted to civilian usage, some have barely any tarmac left but still see usage. And some were just completely abandoned and decayed and became recreation grounds and farms. The UK is therefore also a great place to be if you want to learn to fly as a hobby!

Good starting point:
* National Cycle Network
  * https://www.sustrans.org.uk/national-cycle-network/
  * Great set of long distance routes, they are very well chosen for their safety and interest, so you can just go into them without putting much thought into it.
  * Their distribution mechanisms are a bit \x[shitty] and sometimes asks you to pay for certain formats, which is hard to understand given that the maintainer of those maps, the https://en.wikipedia.org/wiki/Ordnance_Survey[Ordnance Survey] appears to be public... https://github.com/cirosantilli/cirosantilli.github.io/issues/61
  * Note however that there are many many other local routes which are not in the network, but arguably equally worthwhile

Next, you want to decide about nice destinations to reach/go through, and these are good ideas to look into:
* Area of Outstanding Natural Beauty
  * https://en.wikipedia.org/wiki/Area_of_Outstanding_Natural_Beauty
  * https://landscapesforlife.org.uk/about-aonbs/aonbs/overview map
* National Trust
  * https://en.wikipedia.org/wiki/National_Trust_for_Places_of_Historic_Interest_or_Natural_Beauty
  * https://www.nationaltrust.org.uk/
  * https://www.nationaltrust.org.uk/search?view=map map
* Royal Society for the Protection of Birds (RSPB)
  * https://en.wikipedia.org/wiki/Royal_Society_for_the_Protection_of_Birds
  * https://www.rspb.org.uk/reserves-and-events/reserves-a-z/ reserve map

= Counties of the United Kingdom
{parent=united-kingdom}
{wiki}

No one is capable of offering an official/more generalized (why can't \x[google-maps] do this properly?) map than these people: https://wikishire.co.uk/map/#/centre=54.004,-4.500/zoom=7 So so be it.

= Cambridgeshire
{c}
{parent=counties-of-the-united-kingdom}
{title2=Cambs}
{wiki}

= Cambridge
{c}
{parent=cambridgeshire}

= Cambridge, United Kingdom
{c}
{synonym}

Contains the \x[university-of-cambridge], that's about it really, from that everything follows.

= Cycling landscape of Cambridge's surroundings
{parent=cambridge}

Anywhere north, including NE and NW: fenlands, i.e. marshes. Quite a few quarries as well. Extremely flat, very uniform, towns often have to be on top of small hills to escape the incessant flooding. Norfolk Coast AONB is beautiful if you take a train ride first, the beaches are very wide and many of them have few people if you avoid a few very busy spots.

East and SE: rolling hills towards Suffolk and the coast. Beautiful county, both Dedham Vale AONB and Suffolk Coast AONB.

South: first one of the hilliest nearby areas around Elmdon and Arkesden, then gently going down to the lush Lee River valley.

Southwest: larger and larger cities as you move towards London. From a train starting point, you can reach the Northen Chilterns, for some serious hills.

West: mostly flat farmland until you hit the River Great Ousse.

= River Cam
{c}
{parent=cambridge}
{wiki}

= Greater London
{c}
{parent=counties-of-the-united-kingdom}
{wiki}

= London
{c}
{parent=greater-london}
{wiki}

= Oxfordshire
{c}
{parent=counties-of-the-united-kingdom}
{title2=Oxon}
{wiki}

= Oxford
{c}
{parent=oxfordshire}
{wiki}

The city clearly exists becuase it is in the concluence of the river thames and the river cherwell. In such confluences, terrain tends to be flat, and fords are also common, with crossings wide and shallow, and so it was an important crossing place.

Notably, the Cherwell is a natural link between London and the North towards \x[coventry], as it, and then the Thames in which it goes into, puncture through both the ChilternsNorth Essex Downs and the Cotswolds, coinciding there with the M40.

= River Cherwell
{c}
{parent=oxford}
{wiki}

= Cambridge
{c}
{parent=cambridgeshire}

= Cambridge, United Kingdom
{c}
{synonym}

The city appear to exist there because it was a convenient crossing of the Cam. It also lies near the start of the ancient navigable section. Castle hill also offered a convenient fortificatio location near the river, and is part of the reason for the early Roman settlement. The original bridge was presumably in the current Magnalene bridge, just under the castle hill.

TODO why did the \x[university-of-oxford] scholars flee to after the The hanging of the clerks in 1209? Why not anywhere else?

= West Midlands
{c}
{disambiguate=county}
{parent=counties-of-the-united-kingdom}
{wiki}

= Coventry
{c}
{parent=west-midlands-county}
{wiki}

= Education in the United Kingdom
{parent=united-kingdom}
{wiki}

= Charity school
{parent=education-in-the-united-kingdom}
{wiki}

= Public school
{c}
{parent=education-in-the-united-kingdom}
{wiki}

They are not public in any meaningful modern sense, just like "\x[public-university]{p}" in the \x[united-kingdom]: \x[are-public-universities-in-the-uk-owned-by-the-government].
* https://www.theguardian.com/commentisfree/2018/aug/16/private-schools-charitable-status-strip-benefits "Private schools don’t act like charities, so let’s strip them of the benefits"

= Public Schools Act 1868
{c}
{parent=public-school}
{wiki}

They actually abolished the original legal requirement for those institutions to have free scholars as set out by their original \x[charity-school] beginnings!!! WTF!

But the broadening of scope beyond the \x[church-of-england]/medieval material was a good thing at least.

= Monarchy of the United Kingdom
{parent=united-kingdom}
{wiki}

= British monarch
{c}
{synonym}

= Earth science
{c}
{parent=earth}
{wiki}

= Age of Earth
{parent=earth-science}
{wiki}

= Atmospheric science
{parent=earth-science}
{wiki}

= Climatology
{parent=a}
{wiki}

= Climate change
{parent=earth-science}
{wiki}

= Global warming
{parent=climate-change}

= Meteorology
{parent=atmospheric-science}
{wiki}

= Rain
{parent=meteorology}
{wiki}

= Geology
{parent=earth-science}
{wiki}

= Mineralogy
{parent=earth-science}
{wiki}

= Mineral
{parent=mineralogy}
{wiki}

= Mine
{parent=mineralogy}
{wiki}

= Mining
{parent=mine}
{wiki}

= List of mines
{parent=mine}
{wiki}

= Jáchymov
{parent=list-of-mines}
{wiki}

= Ore
{parent=mineralogy}
{wiki}

= Laboratory
{parent=natural-science}
{wiki}

= Natural science YouTube channel
{parent=science}
{wiki}

= The Thought Emporium
{c}
{parent=natural-science-youtube-channel}
{wiki}

https://www.youtube.com/channel/UCV5vCi3jPJdURZwAOO_FNfQ

https://www.youtube.com/watch?v=H_H_TF5Kxks This Lab is RIDICULOUS (2021) gives an overview of their new laboratory, and hints of the types of projects they want to carry out.

= Social science
{parent=science}
{wiki}

= Country
{parent=social-science}
{wiki}

We shouldn't have countries.

We should have one big global government, with \x[having-more-than-one-natural-language-is-bad-for-the-world][one global language that everyone can speak], and slightly different local \x[law]{p}, so you can choose where to live based on the laws you approve of the most.

List of countries:
* \x[country-in-east-asia]{child}
* \x[country-in-europe]{child}
* \x[country-in-north-america]{child}
* \x[country-in-south-america]{child}

= Globalization
{parent=social-science}
{wiki}

= Globalization reduces the power of governments
{parent=globalization}

While \x[ciro-santilli] is a big fan of having "one global country" (\x[having-more-than-one-natural-language-is-bad-for-the-world][and language]), which is somewhat approximated by globalization, he has come to believe that there is one serious downside to globalization as it stands in 2020: it allows companies to pressure \x[government]{p} to reduce \x[tax]{p}, and thus \x[governments-have-lost-all-power-to-companies][reduces the power of government], which in turn increases \x[social-inequality]. This idea is very well highlighted in \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021].

The only solution seems to be for governments to get together, and make deals to have fair taxation across each other. Which might never happen.

= History
{parent=social-science}
{wiki}

= Middle Ages
{c}
{parent=history}
{wiki}

= Museum
{parent=history}
{wiki}

= Computer History Museum
{c}
{parent=museum}
{wiki}

= Meme
{parent=social-science}
{wiki}

The best way to learn about them as of 2020 is to \x[google] into \x[know-your-meme].

= Rickrolling
{c}
{parent=meme}
{wiki}

= Politics
{parent=social-science}
{wiki}

= Politician
{parent=politics}
{wiki}

= Politics of Europe
{parent=politics}

= Politics of France
{parent=politics-of-europe}

= French politician
{c}
{parent=politics-of-france}

= Napoleon
{c}
{parent=french-politician}

= Politics of the United States
{parent=politics}
{wiki}

= American politicians
{c}
{parent=politics-of-the-united-states}

= Donald Trump
{c}
{parent=american-politicians}
{wiki}

= Trump
{c}
{synonym}

Trump's election was an act of protest by the people, because they felt, and rightly so, that the promises by the \x[democrat]{p} to decrease \x[social-inequality] were just full of \x[shit].

So instead, the old voice of \x[nationalism] spoke louder.

Ciro agrees with analysis of \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021] that this is largely because \x[governments-have-lost-all-power-to-companies][government is losing all power to do anything meaningful]. So the only thing left to do is to speak empty words to calm, or exacerbate, people's fears and hopes.

Ciro believes it is important not hate Trump and his believers, no matter how disgusting Trump might seem, a large part of which is likely theater. We have to try and understand them instead.

Trump's election shows clearly how the \x[democrat]{p} let down the poor. This understanding is a good thing. It shows that we all have to make greater efforts to help the poor. Just voting for some random democrat candidate who doesn't really care every four years is not enough.

Another positive point of Trump's election is that it further highlighted the power of \x[social-media] even further: it now feels more likely than ever before that anyone can run for office, since a president without any previous political office was elected (of course, being filthy reach helps a lot still, which is a problem). And this further highlights the need for regulate \x[social-media], to prevent events such as \x[the-deplatforming-of-donald-trump]

We should calmly analyze and understand how someone that tries their best to appear disgusting managed to win. Some interesting analyses of Trump's character:
* https://www.theatlantic.com/magazine/archive/2016/06/the-mind-of-donald-trump/480771/ The Mind of Donald Trump by Dan P. McAdams (2016):
  \Q[It was as if the golden-haired guest sitting across the table were an actor playing a part on the London stage.

  "It was Donald Trump playing Donald Trump," Griffin observed. There was something unreal about it.]
  and the author comments:
  \Q[My aim is to develop a dispassionate and analytical perspective on Trump, drawing upon some of the most important ideas and research findings in psychological science today.]
  which is exactly the right way to approach things.

\x[falun-gong]'s support for Trump is described at: https://cirosantilli.com/china-dictatorship/flg-trump at \x[cirosantilli-china-dictatorship].

https://cirosantilli.com/china-dictatorship/stack-overflow-forbids-criticizing-the-character-of-genocidal-political-leaders-like-xi-jinping

Most damning moments:
* about women:
  * https://en.wikipedia.org/w/index.php?title=Donald_Trump_Access_Hollywood_tape&oldid=1001865204#Trump's_responses "Grab'em by the pussy" admissions, and later unadmissions
  * https://www.theatlantic.com/magazine/archive/2016/06/the-mind-of-donald-trump/480771/[] quotes an interview by Mark Singer from 1990's:
    \Q["O.K., I guess I'm asking, do you consider yourself \x[ideal] company?"

    You really want to know what I consider ideal company?," Trump replied. "A total piece of ass."]
* corruption
  * This was a beautiful comment, since it highlights not only that Trump is corrupt, but also that highlights that the others are corrupt, which is why the people elected him. TODO find video https://www.vox.com/2015/8/6/9114565/donald-trump-debate-money[]:
    \Q[Q: You've also supported a host of other liberal policies, you've also donated to several Democratic candidates, Hillary Clinton included, Nancy Pelosi. You explained away those donations saying you did that to get business related favors. And you said recently, quote, when you give, they do whatever the hell you want them to do.

TRUMP: You better believe it... I will tell you that our system is broken. I gave to many people. Before this, before two months ago, I was a businessman. I give to everybody. When they call, I give. And you know what? When I need something from them, two years later, three years later, I call them. They are there for me. And that's a broken system.]

\Video[https://www.youtube.com/watch?v=YHYk0K7iszo]
{title=Fifth Republican Primary Debate - Main Stage - December 15 2015 on CNN.}
{description=This perfectly summarizes the spectrum of \x[republican] politics. The only candidate who said anything decent were the two least popular ones, notably:
* Rand Paul, saying that interventionism in the Middle East was a failure (Jeb notably still wants to repeat his brother's mistakes!), and supporting \x[freedom-of-speech] rather than censorship and violation of privacy
* Carly Fiorina, saying that the people must take the country back
The others are mostly fear-mongering and saying "we will destroy ISIS", to avoid actually dealing with the more important questions: the people have no power anymore.}
{start=513}

\Video[https://www.youtube.com/watch?v=BuXlf7oTfLE]
{title=SMALL LOAN OF A MILLION DOLLARS - Remix Compilation by TwinkieMan (2015)}
{description=Nothing synthesizes is how bad the democrats have failed to help the poor. This is who got elected.}

= The deplatforming of Donald Trump
{parent=donald-trump}

\x[ciro-santilli] believes that the \x[donald-trump] bans were extremely unfair, and highlight the need for \x[government] to ensure greater \x[freedom-of-speech] in \x[social-media], more information at: https://cirosantilli.com/china-dictatorship/unjust-social-media-censorship-in-the-west[], related: \x[globalization-reduces-the-power-of-governments].

Related:
* https://techcrunch.com/2021/05/24/floridas-ban-on-bans-will-test-first-amendment-rights-of-social-media-companies/

= Political parties in the United States
{parent=politics-of-the-united-states}
{wiki}

= Democratic Party
{disambiguate=United States}
{parent=political-parties-in-the-united-states}

= Democrat
{synonym}
{title2}

= Republican Party
{disambiguate=United States}
{parent=political-parties-in-the-united-states}

= Republican
{synonym}
{title2}

= Nationalism
{parent=politics}
{wiki}

= Philosophy
{parent=social-science}
{wiki}

= Philosopher
{parent=philosophy}
{wiki}

= Eratosthenes
{c}
{parent=philosopher}
{wiki}

= Idealism
{parent=social-science}
{wiki}

= Idealist
{synonym}

= Idealistic
{synonym}

= Ideal
{synonym}

= Religion
{parent=social-science}
{wiki}

= Religious
{synonym}

\x[ciro-santilli] is \x[agnostic], see also: https://github.com/cirosantilli/china-dictatorship/tree/965430af9f50a93ac23dfbb72719eee0f93c8c5c#do-you-believe-in-or-practice-falun-gong

His father always told him a story about how when Ciro was small, someone raised the question of the existence of \x[god], to which Ciro replied very directly and naturally, without any doubts:
\Q[That doesn't exist.]
It's a genetic thing it seems.

See also:
* \x[jesus]{child}

= Agnosticism
{parent=religion}
{wiki}

= Agnostic
{synonym}

Of course, if you believe in modern \x[science], \x[agnosticism] is just an \x[euphemism] for \x[atheism].

= Atheism
{parent=religion}
{wiki}

= Atheist
{synonym}

= Cult
{parent=religion}
{wiki}

Due to \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china], \x[ciro-santilli]' cult research is located at https://github.com/cirosantilli/china-dictatorship/flg-cult (https://github.com/cirosantilli/china-dictatorship/tree/4b5c0a05b1f00249e90e1b7e6cfe472b2c2a0f81#flg-cult[permalink]).

= Free will
{parent=religion}
{wiki}

\x[ciro-santilli] does not believe in free will of course because he is an \x[agnostic] and he believes that \x[brain]{p} are controlled by the \x[laws-of-physics], see also: \x[physics-and-the-illusion-of-life].

= God
{c}
{parent=religion}
{wiki}

$$\nexists$$

= Godlike
{c}
{parent=god}
{wiki}

This vocabulary likely entered \x[ciro-santilli]'s vernacular through playing \x[counter-strike] when he \x[games-young-ciro-santilli-played][was a teenager].

= Hell
{c}
{parent=religion}
{wiki}

= Purgatory
{c}
{parent=hell}
{wiki}

= Sin
{parent=religion}
{wiki}

= New Age
{c}
{parent=religion}
{wiki}

= Esalen Institute
{c}
{parent=religion}
{wiki}

= Saint
{parent=religion}
{wiki}

= Catholic Saint
{parent=saint}
{wiki}

In other sections:
* \x[john-the-baptist]

= List of religions
{c}
{parent=religion}
{wiki}

= Buddhism
{c}
{parent=list-of-religions}
{wiki}

= Buddhist
{c}
{synonym}

\x[ciro-santilli]'s favorite religion. He does not believe fully in it, nor has he studied it besides through brief Wikipedia and \x[google][Googling].

Ciro likes Buddhism because it feels like the least "metaphysical explanations to things you can't see" of the religions he knows.

Rather, it feels more like "a plausible theory of the mind" and \x[physics-and-the-illusion-of-life][highly compatible with physics].

Ciro also believes that there is a positive correlation between being a \x[software-engineer] and liking \x[buddhism][Buddhist-like things], see also: \x[the-correlation-between-software-engineers-and-buddhism].

= Alan Watts
{c}
{parent=buddhism}
{wiki}

While listening to endless hours of https://en.wikipedia.org/wiki/Vaporwave[Vaporwave] while coding, \x[ciro-santilli] spotted some amazing Buddhist-like voice samples, and eventually found that they were by Allan Watts.

Is there a correlation between being a \x[software-engineer][programmer] and liking the dude? Because this exists: https://wattsalan.github.io/

Other good talks:
* \x[video-alan-watts-wuwei-talk]
* \x[video-alan-watts-if-money-were-no-object-what-would-you-do-talk]
* \x[video-alan-watts-how-to-turn-work-into-play-talk]
* \x[video-alan-watts-philosopher-talk]
* \x[alan-watts-controlled-dream-of-life-talk]

= Meditation
{parent=buddhism}
{wiki}

= Meditative
{synonym}

Psalm 46:10 from \x[the-bible]:
\Q[
Be still, and know that I am God;
I will be exalted among the nations,
I will be exalted in the earth.
]

= Middle Way
{c}
{parent=buddhism}
{wiki}

= Noble Eightfold Path
{c}
{parent=buddhism}
{wiki}

= 八聖道分
{synonym}
{title2}

This feels so right. Doesn't have to be taken so literally for non-Monks, but all have clear less-extreme applications to non monks.

= Zen
{c}
{parent=buddhism}
{wiki}

= 禪
{synonym}
{title2}

= Koan
{c}
{parent=zen}
{wiki}

= 公案
{synonym}
{title2}

In other sections:
* \x[matters-of-small-concern-should-be-treated-seriously]

= Confucianism
{c}
{parent=list-of-religions}
{title2=儒教}
{wiki}

= Analects
{c}
{parent=confucianism}
{title2=论语}
{wiki}

https://cirosantilli.com/china-dictatorship/analects

= Analects translation by Robert Eno (2015)
{parent=analects}

https://chinatxt.sitehost.iu.edu/Analects_of_Confucius_(Eno-2015).pdf

https://cirosantilli.com/china-dictatorship/analects-translation-by-robert-eno-2015

= Christianism
{c}
{parent=list-of-religions}
{wiki}

= Christian
{c}
{synonym}

= Bible
{c}
{parent=christianism}
{wiki}

= The bible
{synonym}

= Old Testament
{c}
{parent=bible}
{wiki}

= New Testament
{c}
{parent=bible}
{wiki}

= Gospel
{parent=new-testament}

= Gospel of Matthew
{c}
{parent=gospel}
{title2=1st book}
{wiki}

The first chapter of the \x[new-testament].

= Gospel of John
{c}
{parent=gospel}
{title2=4st book}
{wiki}

The first chapter of the \x[new-testament].

= Acts of the Apostles
{c}
{parent=new-testament}
{title2=5st book}
{wiki}

= Version of the bible
{parent=bible}

= New International Version
{c}
{parent=version-of-the-bible}
{title2=NIV, 1978}
{wiki}

Direct translation from oldest documents deemed reliable, in a mixture of Hebrew, Aramaic, and Greek.

= King James Version
{c}
{parent=version-of-the-bible}
{title2=1611-}
{wiki}

= Freely licensed Bibles
{parent=version-of-the-bible}

How can you make a translation of the \x[bible] and not put it in the public domain???? You tell me, you tell me.
* https://christianity.stackexchange.com/questions/16377/what-major-translations-of-the-bible-are-in-the-public-domain

With \x[falun-gong] it's even more fun: the words of God Himself are will be copyrighted for a while after Li Hongzhi dies!!!

= Christian denomination
{c}
{parent=christianism}
{wiki}

= Catholic Church
{c}
{parent=christian-denomination}
{wiki}

= Catholic
{c}
{synonym}

= Church of England
{c}
{parent=christian-denomination}
{title2=C of E}
{wiki}

Political division:
* nominal leader: \x[british-monarch]
* toplevel arch-dioceses/provinces of Cantebury and York. One archbishop each, who is also bishop of Cantebury and York diocese
* within provinces: one cathedral and bishop per diocese

= Jesus
{c}
{parent=christianism}
{wiki}

That self blame, imminent end of the world and hatred for tax collectors stuff is a bit over the top, you should chill man.

But please \x[quotes-by-jesus][keep the parables coming].

= Jesus Christ Superstar (1973)
{c}
{parent=jesus}
{wiki}

= John the Baptist
{c}
{parent=jesus}
{wiki}

A pre-\x[jesus]-like figure, likely possibly a mentor or competitor with Jesus.

He would have deserved a scene in \x[jesus-christ-superstar-1973].

= Twelve Apostles
{c}
{parent=jesus}
{wiki}

= Saint Peter
{parent=twelve-apostles}
{wiki}

= Simon called Peter
{c}
{synonym}
{title2}

Brother of \x[andrew-the-apostle], called by \x[jesus] in \x[fishers-of-men]. Born Simon, but \x[jesus] renamed him to Peter, thus the weird "Simon called Peter" way he is referred to as in some versions of the \x[bible].

= Andrew the Apostle
{parent=twelve-apostles}
{wiki}

Brother of \x[saint-peter], called by \x[jesus] in \x[fishers-of-men]. \x[crucified]{c}.

= Quotes by Jesus
{parent=jesus}

Proverbs 27:17:
\Q[As iron sharpens iron, so one person sharpens another.]

= Fishers of men
{parent=quotes-by-jesus}
{wiki}

\x[gospel-of-matthew] 4 \x[king-james-version]:
\Q[
18 And Jesus, walking by the sea of Galilee, saw two brethren, \x[simon-called-peter], and \x[andrew-the-apostle] his brother, casting a net into the sea: for they were fishers.

19 And he saith unto them, Follow me, and I will make you fishers of men.
]

= Man shall not live by bread alone
{parent=quotes-by-jesus}

\x[gospel-of-matthew] 4:4:
\Q[Man shall not live by bread alone, but by every word that proceeds out of the mouth of \x[god]]

\x[ciro-santilli-s-mother] loves that one. Even though she was constantly worried that if Ciro had studied physics he would be poor and starve, a factor which led him to study engineering instead, one of the greatest mistakes of his life. \x[don-t-be-a-pussy].

= Enter through the narrow gate
{parent=quotes-by-jesus}

\x[gospel-of-matthew] 7:13:
\Q[Enter through the narrow gate. For wide is the gate and broad is the road that leads to destruction, and many enter through it.]

\x[ciro-santilli] really likes this one, because he feels that where many people go, it is useless to go again. \x[ciro-santilli-s-self-perceived-creative-personality][It is much better to explore that which few can do], but which many will need.

\x[water-margin] also comes to mind. And also https://en.wikipedia.org/wiki/A_Story_of_Floating_Weeds[A story of floating weeds].

= The truth will set you free
{parent=quotes-by-jesus}
{wiki}

= Falun Gong
{c}
{parent=list-of-religions}
{wiki}

On \x[cirosantilli-china-dictatorship]:
* https://cirosantilli.com/china-dictatorship/falun-gong
* https://cirosantilli.com/china-dictatorship/flg-cult

= Islam
{c}
{parent=list-of-religions}
{wiki}

Islam has some really nice things in it.

The way it was perverted to be used as a tool for \x[terrorism] by some is a great tragedy.

\x[ciro-santilli] especially appreciates the idea of \x[ramadan].

= Ramadan
{c}
{parent=islam}
{wiki}

\x[ciro-santilli] appreciates this concept of "remembering the suffering of others" a lot due to \x[ciro-santilli-s-self-perceived-compassionate-personality] and \x[ciro-santilli-s-cheapness].

= Sikhism
{c}
{parent=list-of-religions}
{wiki}

= Sikhi
{c}
{synonym}

= Gurdwara
{c}
{parent=sikhism}
{wiki}

Theses places give out free food all the time.

The first time \x[ciro-santilli] went to one was when an \x[indian] friend of his took him to the one in the North of \x[paris] when they were \x[ciro-santilli-s-biography][living there in the first half of the 2010's], the Gurdwara Singh Sabha France.

Much like \x[islam]'s \x[ramadan], \x[ciro-santilli] appreciates this a lot due to due to \x[ciro-santilli-s-self-perceived-compassionate-personality] and \x[ciro-santilli-s-cheapness].

Instead of just talking, those people really go out, and put food on the plate for anyone who needs it (or even for those that don't really need it! Although who would be so souless to eat for free and not donate a few bucks if they can afford to???). There's a beauty to that.

Writing this also remembered Ciro of non-religious groups that would give out free food to the poor at 

= Taoism
{c}
{parent=list-of-religions}
{title2=道教}
{wiki}

= Yin and yang
{parent=taoism}
{wiki}

= Yin-yang
{synonym}

= 阴阳
{synonym}
{title2}

= Social norm
{parent=social-science}
{wiki}

= Shibboleth
{parent=social-norm}
{wiki}

= Political correctness
{parent=social-norm}
{wiki}

Ciro believes it generally hurts more than it helps.

Especially when you can't even mention censored things to criticize them. You have to pretend they never existed. So people will forget about them, and do them again in the future.

And when companies do it just to look good, even though it has absolutely no real impact on the lives of those who are discriminated against.

See: https://cirosantilli.com/china-dictatorship/censorship-of-politically-incorrect-speech

= Ridiculous cases of political correctness censorship
{parent=political-correctness}

* \x[stack-exchange]'s censorship of "I think \x[donald-trump][Trump] is disgusting as a person" from \x[ciro-santilli]'s profile: https://cirosantilli.com/china-dictatorship/sstack-overflow-forbids-criticizing-the-character-of-genocidal-political-leaders-like-xi-jinping

= Replacement of master and slave terminology from technology
{parent=ridiculous-cases-of-political-correctness-censorship}

The IETF was a notable one: https://www.nytimes.com/2021/04/13/technology/racist-computer-engineering-terms-ietf.html

* https://developers.google.com/style/word-list (https://web.archive.org/web/20210419143604/https://developers.google.com/style/word-list[archive]) \x[google]'s avoid word list is a masterclass in 2020's \x[political-correctness]

= GitHub's replacement of `master` branch with `main` (2020)
{c}
{parent=replacement-of-master-and-slave-terminology-from-technology}

by \x[github]{parent} around Black Lives Matter, due to a possible ludicrous relationship with slavery of black people:
* https://www.zdnet.com/article/github-to-replace-master-with-main-starting-next-month/
* https://github.com/github/renaming
For the love of \x[god], the word "master" is much more general than black slavery. If you are going to ban it, you might as well ban the word "evil".

Several software projects followed the purge from their codebases, maybe GitHub followed someone else's lead, it's hard to say.

The words "whitelist" and "blacklist" were also targeted.

= Magic the gathering's banning of 7 cards due to "racism" (2020)
{parent=ridiculous-cases-of-political-correctness-censorship}

Official announcement: https://magic.wizards.com/en/articles/archive/news/depictions-racism-magic-2020-06-10

List of cards with images: https://www.hipstersofthecoast.com/2020/06/wizards-bans-7-cards-that-depict-racism-including-invoke-prejudice/

* Invoke prejudice: depicts the Ku Klux Klan. Card's title clearly criticizes them "prejudice".
* Stone-Throwing Devils: not sure about this one: https://boardgames.stackexchange.com/questions/54341/what-is-offensive-about-the-card-stone-throwing-devils
* Cleanse: it does not seem to have any reference to black people, image depicts fantastic animals. There are hundreds of cards that talk about black since it is one of the 5 colors of magic.
* Pradesh Gypsies: does not appear to suggest any bad things about gypsies, on the contrary
* Jihad: does not appear to suggest any bad things about Islam, on the contrary
* Imprison: depicts a black slave. Let's pretend it never happened.
* Crusade: pretend it never happened

By \x[wizards-of-the-coast], parent company of \x[magic-the-gathering]{parent}.

\x[reddit] discussion: https://www.reddit.com/r/mtgfinance/comments/h0kb84/depictions_of_racism_in_magic_aka_invoke/

= Society
{parent=social-science}
{wiki}

= Social
{synonym}

= Military-industrial complex
{parent=society}
{wiki=Military–industrial_complex}

This is notably what the \x[united-states] emerged to be after \x[world-war-ii]. But it was likely what \x[nazi-germany] also was, and many other superpowers.

\x[ciro-santilli] feels that much more relevant would be to also include academia as in "military-industrial-academic" complex, the \x[wikipedia] page actually mentions precedents to this idea.

The addition of congress/\x[politician]{p} is also relevant.

But hey, the name wouldn't sound so slick with three parts.

It is basically in this context that \x[american] science and technology flourished after \x[world-war-ii], including notably the development of \x[quantum-electrodynamics], \x[richard-feynman] being a prototypical example, having previously worked on the \x[manhattan-project].

= War
{parent=social-science}
{wiki}

= A Small Talent for War
{c}
{parent=war}
{wiki}

= Concertina wire
{parent=war}
{wiki}

= Cold War
{c}
{parent=war}
{title2=1947-1991}
{wiki}

= Espionage
{parent=war}
{wiki}

= Spy
{synonym}

= Spycraft
{synonym}

= Five Eyes
{c}
{parent=espionage}
{wiki}

= GCHQ (British NSA)
{c}
{parent=espionage}
{wiki}

The \x[british] \x[nsa].

Fun fact: you can see they "No photography" signs on GCHQ's gates from \x[google-street-view], but super low resolution, making them unreadable. They must have made a deal: Google gives its Street View data with uncensored plate numbers/faces, and GCGQ allows them to film in front of their building at low resolution! The sign actually shows up on their first \x[instagram] post when they created one in 2018 https://www.gchq.gov.uk/news/gchq-joins-instagram | https://inews.co.uk/news/uk/gchq-instagram-puzzles-photography-hobbies-216444 Just passing in front of the damn place with \x[google-maps] on must increase your "interest score"!

= National Security Agency
{c}
{parent=espionage}
{wiki}

= NSA
{c}
{synonym}
{title2}

= Asymmetric warfare
{parent=war}
{wiki}

= Terrorism
{parent=asymmetric-warfare}
{wiki}

= Terrorist
{synonym}

= Terrorist attack
{parent=terrorism}

Related:
* https://en.wikipedia.org/wiki/List_of_terrorist_incidents

= Boston Marathon bombing
{c}
{parent=terrorist-attack}
{title2=2013}
{wiki}

= World War I
{c}
{parent=war}
{title2=1914-1918}
{wiki}

= World War II
{c}
{parent=war}
{title2=1939-09-01 to 1945}
{wiki}

= Linguistics
{parent=science}
{wiki}

Remember: \x[having-more-than-one-natural-language-is-bad-for-the-world].

= Dictionary
{parent=linguistics}
{wiki}

= Online dictionary
{parent=dictionary}
{wiki}

= Urban Dictionary
{c}
{parent=online-dictionary}
{wiki}

https://www.urbandictionary.com/

What you \x[google]-into when trying to understand \x[english-language] \x[slang]{p} as of 2020.

= Diminutive
{parent=linguistics}
{wiki}

= Figure of speech
{parent=linguistics}
{wiki}

= Slang
{parent=figure-of-speech}

= Euphemism
{parent=figure-of-speech}
{wiki}

Euphemisms are \x[evil]{parent} \x[bullshit].

Just say what you mean to say,

\x[don-t-be-a-pussy]{c}.

If you've been fired, say you been fired, not "let go".

If someone died, say they died, not "passed away".

= Linguist
{parent=linguistics}
{wiki}

= Charles Kay Ogden
{c}
{parent=linguist}
{wiki}

Creator of \x[basic-english].

= Writing system
{parent=linguistics}
{wiki}

= Transliteration
{parent=writing-system}
{wiki}

= Logogram
{parent=writing-system}
{wiki}

Good luck.

= Chinese character
{parent=logogram}
{wiki=Chinese_characters}

https://cirosantilli.com/china-dictatorship/schinese-characters-are-insane

= Alphabet
{parent=writing-system}
{wiki}

= Diacritic
{c}
{parent=alphabet}
{wiki}

= Cyrillic script
{c}
{parent=alphabet}
{wiki}

= Greek alphabet
{c}
{parent=alphabet}
{wiki}

A helpful way to remember is to learn a bit of their history/pronunciation: \x[history-of-the-latin-alphabet].

= Greek letter
{c}
{synonym}

Unfortunately, \x[physicist]{p} and \x[mathematician]{p} keep using Greek letters in their formulas, so we just have to learn them.

Symbols that look like Greek letters but are not Greek letters:
* \x[nabla-symbol]

Is \x[ciro-santilli] crazy (he is, but for this point specifically), or do many/most \x[greek-letters] represent the mouth position used in the pronunciation of the letter?

= Beta
{parent=greek-alphabet}
{title2=$\Beta$, $\beta$, B}
{wiki}

= Gamma
{parent=greek-alphabet}
{title2=$\Gamma$, $\gamma$, C, G}
{wiki}

It is fun to see that C and G have been confused since antiquity:
* the modern sound is \x[g]
* in terms of modern letters, both \x[c] and \x[g] split from \x[gamma]

= Delta
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Delta$, $\delta$, D}
{wiki}

= Delta
{synonym}

= Epsilon
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Epsilon$, $\epsilon$, E}
{wiki}

= Epsilon
{synonym}

= Zeta
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Zeta$, $\zeta$, Z}
{wiki}

= Zeta
{synonym}

Lower case looks like the mouth shape when you say Z, with mouth open, and you can even see the little tongue going down. Beauty.

= Eta
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Eta$, $\eta$, H}
{wiki}

= Eta
{synonym}

= Mu
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Mu$, $\mu$, M}

= Mu
{synonym}

= Nu
{disambiguate=letter}
{parent=greek-alphabet}
{title2=$\Nu$, $\nu$, N}

= Nu
{synonym}

Why would \x[physicist]{p} use a letter such that:
* the upper case version looks exactly like an upper case \x[n]. At least that is the correct pronunciation/name/historical successor of $\nu$.
* the lower case version looks exactly like a lower case \x[v]
Why? Why?????????

= Phi
{parent=greek-alphabet}
{title2=$\Phi$, $\phi$, $\varphi$}
{wiki}

Two lower case variants... both used in \x[mathematical-notation], and for some reason, in \x[latex] `\varphi` is the one that actually looks like the default standard modern lowercase phi, while `\phi` is the weird one. I love life.

= Psi
{disambiguate=Greek}
{parent=greek-alphabet}
{title2=$\Psi$, $\psi$}
{wiki}

= Psi
{synonym}

As if it weren't enough, there's also a \x[cyrillic-script] psi that is slightly different. Life's great.

= Latin alphabet
{c}
{parent=alphabet}
{wiki}

= History of the Latin alphabet
{parent=latin-alphabet}

Derivation from older alphabets: https://en.wikipedia.org/w/index.php?title=History_of_the_Latin_script&oldid=1042752124#Derivation_from_Egyptian_hieroglyphs

= Historical correspondence between Latin and Greek
{parent=history-of-the-latin-alphabet}

https://en.wikipedia.org/w/index.php?title=History_of_the_Latin_script&oldid=1042752124#Derivation_from_Egyptian_hieroglyphs

= Latin letter
{c}
{parent=latin-alphabet}

= C
{c}
{parent=latin-letter}
{wiki}

= D
{c}
{parent=latin-letter}
{wiki}

= Letter D
{synonym}

= G
{c}
{parent=latin-letter}
{wiki}

= N
{parent=latin-letter}
{wiki}

= V
{parent=latin-letter}
{wiki}

= Natural language
{parent=linguistics}
{wiki}

When talking in the context of \x[programming-language]{p}, \x[natural-language] is the non-\x[computer] one.

Remember: \x[having-more-than-one-natural-language-is-bad-for-the-world].

= Constructed language
{parent=natural-language}
{wiki}

= Controlled language
{parent=constructed-language}
{wiki}

= Basic English
{c}
{parent=controlled-language}
{wiki}

1925 by \x[charles-kay-ogden].

= Learning English
{c}
{parent=controlled-language}
{wiki}

1959 by Voice of America.

= List of languages
{parent=linguistics}

Remember: \x[having-more-than-one-natural-language-is-bad-for-the-world].

= Indo-European language
{c}
{parent=list-of-languages}
{wiki=Indo-European_languages}

= English language
{c}
{parent=indo-european-language}
{wiki}

= English idiom
{c}
{parent=english-language}

= If it ain't broke, don't fix it
{parent=english-idiom}

= Polish a turd
{parent=english-idiom}

https://www.urbandictionary.com/define.php?term=turd%20polishing on \x[urban-dictionary].

\x[ciro-santilli] learned this expression from \x[angry-video-game-nerd].

= German language
{c}
{parent=indo-european-language}
{wiki}

= Romance language
{c}
{parent=indo-european-language}
{wiki=Romance_languages}

= Latin
{c}
{parent=romance-language}
{wiki}

= Latin phrase
{c}
{parent=latin}
{wiki=List of Latin phrases}

= Latin expression
{c}
{synonym}

= Cf.
{parent=latin-phrase}
{title2=confer, compare with}
{wiki}

= De novo
{parent=latin-phrase}
{title2=of new, from scratch}

= Id est
{parent=latin-phrase}
{title2=i.e., that is, in other words}

= In vitro
{parent=latin-phrase}
{title2=in a glass, artificial}

= In vivo
{parent=latin-phrase}
{title2=in life, natural}

= Nota bene
{parent=latin-phrase}
{title2=NB., note well, note that}
{wiki}

= Sic
{parent=latin-phrase}
{wiki}

= French language
{c}
{parent=romance-language}
{wiki}

= Portuguese language
{c}
{parent=romance-language}
{wiki}

= Spanish language
{c}
{parent=romance-language}
{wiki}

= Greek language
{c}
{parent=indo-european-language}
{wiki}

= Chinese language
{c}
{parent=list-of-languages}
{wiki}

Some remarks on the language at: https://cirosantilli.com/china-dictatorship/does-ciro-santilli-speak-chinese

= Popular science
{parent=science}
{wiki}

= Scientific vulgarization
{synonym}
{title2}

= Outreach
{synonym}

On one hand, yes, we need knowledge at all levels, and it is fine to start \x[backward-design][top-to-bottom] with an overview.

The problem is, however, that there is a huge knowledge gap between the one liner "this is the truth" and the much more important "this is how we know it, these are the experiments" as mentioned at \x[how-to-teach-and-learn-physics].

Therefore, if you have that extremely rare knowledge, you should be writing that in addition to the dumbed down version with an \x[open-knowledge] license. It takes time, but that's what really changes the world.

\x[ciro-santilli] has always felt that there is a huge gap between "the very basic" and "the very advanced", as mentioned at: \x[the-missing-link-between-basic-and-advanced]{full}, which existing scientific vulgarization is not doing enough to address. In a sense, filling out this "\x[the-correlation-between-software-engineers-and-buddhism][middle path]" is the main goal of \x[write-free-books-to-get-famous-website].

Ciro really enjoyed the description of the "Arindam Kumar Chatterjee" \x[youtube-channel]:
\Q[Theoretical/mathematical physics at the graduate level and above. This is NOT a popular science channel. Here you find real theoretical physicists doing real theoretical physics. We think it is important for people to get a taste of the real deal, and for aspiring theoretical physicists to see what they are working towards, i.e., to provide the public with something beyond the ubiquitous Michio Kaku and Brian Cox.]

One thing must be said however: there seems to be an actual bias against researchers tho try to create vulgarization material: \x[how-to-get-tenure-at-a-major-research-university-by-sean-carroll-2011], and that is terrible.

= Crank
{disambiguate=person}
{parent=popular-science}

Yet, all breakthroughs, comes from them, because \x[here-s-to-the-crazy-ones][the people who are crazy enough to believe they can change the world are the ones who actually do] ;-)

How to deal articles:
* http://web.mst.edu/~lmhall/WhatToDoWhenTrisectorComes.pdf What To Do When The Trisector Comes by Underwood Dudley (1983)
* https://academia.stackexchange.com/questions/111413/what-is-the-best-way-to-deal-with-cranks/111414
* https://www.laphamsquarterly.org/roundtable/beware-cranks

= Royal Institution
{c}
{parent=popular-science}
{wiki}

Basically the \x[royal-society]'s \x[scientific-vulgarization] cousin.

= Science communication
{parent=popular-science}

= Science communicator
{parent=science-communication}

= Bill Nye
{c}
{parent=science-communicator}

Maybe we need these people, maybe we do.

The problem as with many well known \x[science-communicator]{p} is that he falls too much on the basic side of the \x[the-missing-link-between-basic-and-advanced].

\Video[https://www.youtube.com/watch?v=ZfQDY3N_1NY]
{title=Bill Nye isn't really a Scientist (& why that shouldn't matter) by BobbyBroccoli (2017)}
{description=Bobby's personal overview of Bill's carrier.}

= To talk about something without giving the real name to not scare off the audience
{parent=popular-science}

\x[ciro-santilli] hates it when an expert does this!!!

If you estimate that the audience won't know the name of the concept, that's fine, do explain it as well.

But you must also give the name!!!

This also manifests itself when news outlets omit foreign names from healines, \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][notably Chinese], but likely happens to all non-european languages too.

= Popular science publication
{parent=popular-science}

= Quanta Magazine
{c}
{parent=popular-science-publication}
{wiki}

This is actually pretty good! Does not go over the middle gap

By the \x[simons-foundation].

= Scientific American
{c}
{parent=popular-science-publication}
{wiki}

= Scientific documentary
{parent=science}

= Cosmos: A Personal Voyage (1980)
{c}
{parent=scientific-documentary}
{wiki}

You can feel the \x[marijuana] flowing out of this one, it's just great.

= 100 Greatest Discoveries by the Discovery Channel (2004-2005)
{c}
{parent=scientific-documentary}

https://www.imdb.com/title/tt0442715/ on \x[imdb]

Host: \x[bill-nye].

\x[physics] topics:
* Galileo: objects of different masses fall at the same speed, hammer and feather experiment
* Newton: \x[gravity], linking locally observed falls and the movement of celestial bodies
* TODO a few more
* \x[superconductivity], talk only at \x[fermilab] accelerator, no re-enactment even...
* \x[quark], interview with \x[murray-gell-mann], mentions it was "an off-beat field, one wasn't encouraged to work on that". High level blablabla obviously.
* \x[fundamental-interaction]{p}, notably \x[weak-interaction] and \x[strong-interaction], interview with \x[michio-kaku]. When asked "How do we know that the weak force is there?" the answer is: "We observe \x[radioactive-decay] with a \x[geiger-counter]". Oh, come on!

\x[biology] topics:
* \x[leeuwenhoek-microscope] and the discovery of \x[microorganism]{p}, and how pond water is not dead, but teeming with life. No sample of course.
* 1831 Robert Brown \x[cell-nucleus] in plants, and later https://en.wikipedia.org/wiki/Theodor_Schwann[Theodor Schwann] in tadpoles. This prepared the path for the idea that "all cells come from other cells", and the there seemed to be an unifying theme to all life: the precursor to \x[dna] discoveries. Re-enactment, yay.
* 1971 https://en.wikipedia.org/wiki/Carl_Woese[Carl Woese] and the discovery of \x[archaea]

\x[genetics]{c}:
* Mendel. Reenactment.
* 1909 https://en.wikipedia.org/wiki/Thomas_Hunt_Morgan[Thomas Hunt Morgan] with \x[drosophila-melanogaster]. Reenactment. Genes are in \x[chromosome]{p}. He observed that a trait was linked to sex, and it was already known that sex was related to chromosomes.
* 1935 https://en.wikipedia.org/wiki/George_Beadle[George Beadle] and the https://en.wikipedia.org/wiki/One_gene–one_enzyme_hypothesis[one gene one enzyme hypothesis] by shooting X-rays at bread mold
* 1942 https://en.wikipedia.org/wiki/Barbara_McClintock[Barbara McClintock], at \x[cold-spring-harbor-laboratory]
* 1952 https://en.wikipedia.org/wiki/Hershey–Chase_experiment[Hershey–Chase experiment]. Determined that \x[dna] is what transmits genetic information, not \x[protein], by \x[radioactive-decay][radioactive] labelling both protein and DNA in two sets of \x[bacteriophage]{p}. They observed that only the DNA radioactive material was passed forward.
* Crick Watson
* \x[messenger-rna], no specific scientist, too many people worked on it, done partially with \x[bacteriophage] experiments
* 1968 Nirenberg \x[genetic-code]
* 1972 https://en.wikipedia.org/wiki/Hamilton_O._Smith[Hamilton O. Smith] and the discovery of \x[restriction-enzyme]{p} by observing that they were part of anti \x[bacteriophage] immune-system present in \x[bacteria]
* \x[alternative-splicing]
* RNA interference
* \x[human-genome-project], interview with \x[craig-venter].

Medicine:
* blood circulation
* anesthesia
* \x[x-ray]
* https://en.wikipedia.org/wiki/Germ_theory_of_disease[germ theory of disease], with examples from Ignaz Semmelweis and Pasteur
* 1796 Edward Jenner discovery of vaccination by noticing that https://en.wikipedia.org/wiki/Cowpox[cowpox] cowpox infected subjects were immune
* \x[vitamin] by observing scurvy and beriberi in sailors, confirmed by Frederick Gowland Hopkins on mice experiments
* Fleming, Florey and Chain and the discovery of penicillin
* https://en.wikipedia.org/wiki/Prontosil[Prontosil]
* diabetes and insulin

= Mathematics
{parent=ciro-santilli-s-homepage}
{wiki}

= Mathematical
{synonym}

= Mathematically
{synonym}

= Math
{synonym}

= Maths
{synonym}

= Mathy
{synonym}

The proper precise definition of mathematics can be found at: \x[formalization-of-mathematics]{full}.

= The beauty of mathematics
{parent=mathematics}

\x[ciro-santilli] intends to move his beauty list here little by little: https://github.com/cirosantilli/mathematics/blob/master/beauty.md

The most beautiful things in mathematics are results that are:
* simple to state and understand (\x[k-12], lower \x[undergrad]), but extremely hard to prove, e.g. Fermat's Last Theorem
* surprising results: we had intuitive reasons to believe something as possible or not, but a theorem shatters that conviction and brings us on our knees, sometimes via \x[pathological-mathematics] counter-examples. General surprise themes include:
  * \x[classification-mathematics] of potentially \x[infinite] sets like: compact \x[manifold]{p}, etc.
    * \x[classification-of-finite-simple-groups]
    * \x[classification-of-regular-polytopes]
    * \x[classification-of-closed-surfaces], and more generalized \x[generalized-poincare-conjecture]{p}
    * classification of \x[wallpaper-group]{p} and \x[space-group]{p}
  * problems that are more complicated in low dimensions than high like: classification of complex manifolds. It is also fun to see how in many cases complexity peaks out at 4 dimensions
    * \x[classification-of-regular-polytopes]
  * unpredictable magic constants. Why is the lowest dimension for an exotic sphere 7? Why is 4 the largest degree of an equation with explicit solution?
* applications: make life easier and/or modeling some phenomena well, e.g. in \x[physics]. See also: \x[how-to-teach/explain-how-to-make-money-with-the-lesson]

Good lists of such problems \x[lists-of-mathematical-problems].

Specific examples:
* from \x[computer-science]:
  * the existence of \x[undecidable-problem]{p}, especially simple to state ones, e.g. \x[mortal-matrix-problem]

Whenever \x[ciro-santilli] learns a bit of \x[mathematics], he always wonders to himself:
\Q[Am I achieving insight, or am I just memorizing definitions?]
Unfortunately, due to how man books are written, it is not really possible to reach insight without first doing a bit of memorization. The better the book, the more insight is spread out, and less you have to learn before reaching each insight.

= Classification
{disambiguate=mathematics}
{parent=the-beauty-of-mathematics}
{wiki}

In \x[mathematics], a "classification" means making a list of all possible objects of a given type.

Classification results are some of \x[ciro-santilli]'s favorite: \x[the-beauty-of-mathematics]{full}.

Examples:
* \x[classification-of-finite-simple-groups]{child}
* \x[classification-of-regular-polytopes]{child}
* \x[classification-of-closed-surfaces]{child}, and more generalized \x[generalized-poincare-conjecture]{child}{p}
* \x[classification-of-associative-real-division-algebras]{child}
* \x[classification-of-finite-fields]{child}
* \x[classification-of-simple-lie-groups]{child}
* classification of the \x[wallpaper-group]{p} and the \x[space-group]{p}

= Pathological
{disambiguate=mathematics}
{parent=the-beauty-of-mathematics}
{wiki}

= Exceptional object
{parent=pathological-mathematics}
{wiki}

Oh, and the dude who created the https://en.wikipedia.org/wiki/Exceptional_object \x[wikipedia] page won an Oscar: https://www.youtube.com/watch?v=oF_FLN-TmCY[], Dan Piponi, aka `@sigfpe`. Cool dude.

List:
* \x[sporadic-group]{child}

= Exceptional isomorphism
{parent=exceptional-object}
{wiki}

= Lists of mathematical problems
{c}
{parent=the-beauty-of-mathematics}
{wiki}

Good place to hunt for \x[the-beauty-of-mathematics].

= Hilbert's problems
{c}
{parent=lists-of-mathematical-problems}
{wiki}

He's a bit overly obsessed with \x[polynomial]{p} for the taste of modern maths, but it's still fun.

= Millennium Prize Problems
{c}
{parent=lists-of-mathematical-problems}
{wiki}

\x[ciro-santilli] would like to fully understand the statements and motivations of each the problems!

Easy to understand the motivation:
* \x[navier-stokes-existence-and-smoothness] is basically the only problem that is really easy to understand the statement and motivation :-)
* \x[p-versus-np-problem]

Hard to understand the motivation!
* \x[riemann-hypothesis]: a bunch of results on prime numbers, and therefore possible applications to \x[cryptography]

  Of course, everything of interest has already been proved conditionally on it, and the likely "true" result will in itself not have any immediate applications.

  As is often the case, the only usefulness would be possible new ideas from the proof technique, and people being more willing to prove stuff based on it without the risk of the hypothesis being false.
* \x[yang-mills-existence-and-mass-gap]: this one has to do with findind/proving the existence of a more decent formalization of \x[quantum-field-theory] that does not resort to tricks like \x[perturbation-theory] and \x[effective-field-theory] with a random cutoff value

  This is important because the best theory of light and electrons (and therefore chemistry and material science) that we have today, \x[quantum-electrodynamics], is a \x[quantum-field-theory].

= Birch and Swinnerton-Dyer Conjecture
{c}
{parent=millennium-prize-problems}
{wiki}

https://www.youtube.com/watch?v=R9FKN9MIHlE&t=938s Birch and Swinnerton-Dyer Conjecture (Millennium Prize Problem!) by Kinertia (2020)

= Formalization of Mathematics
{parent=mathematics}

= Foundation of mathematics
{synonym}

Mathematics is a \x[art][beautiful game] played on https://en.wikipedia.org/wiki/String_(computer_science[strings], which \x[mathematician]{p} call https://en.wikipedia.org/wiki/Theorem["theorems"].

Here is a more understandable description of the semi-satire that follows: https://math.stackexchange.com/questions/53969/what-does-formal-mean/3297537#3297537

You start with a very small list of:
* certain arbitrarily chosen initial strings, which mathematicians call "\x[axiom]{p}"
* rules of how to obtain new strings from old strings, called https://en.wikipedia.org/wiki/Rule_of_inference["rules of inference"] Every transformation rule is very simple, and can be verified by a computer.

Using those rules, you choose a target string that you want to reach, and then try to reach it. Before the target string is reached, mathematicians call it a https://en.wikipedia.org/wiki/Conjecture["conjecture"].

Mathematicians call the list of transformation rules used to reach a string a https://en.wikipedia.org/wiki/Mathematical_proof["proof"].

Since every step of the proof is very simple and can be verified by a computer automatically, the entire proof can also be automatically verified by a computer very easily.

Finding proofs however is undoubtedly an \x[computable-problem][uncomputable problem].

Most mathematicians can't code or deal with the real world in general however, so they haven't created the obviously necessary: \x[website-front-end-for-a-mathematical-formal-proof-system].

The fact that Mathematics happens to be the best way to describe \x[physics] and that humans can use physical intuition heuristics to reach the NP-hard proofs of mathematics is one of the great miracles of the universe.

Once we have mathematics formally modelled, one of the coolest results is https://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems[Gödel's incompleteness theorems], which states that for any reasonable proof system, there are necessarily theorems that cannot be proven neither true nor false starting from any given set of axioms: those theorems are independent from those axioms. Therefore, there are three possible outcomes for any hypothesis: true, false or independent!

Some famous theorems have even been proven to be independent of some famous \x[axiom]{p}. One of the most notable is that the http://en.wikipedia.org/wiki/Continuum_hypothesis[Continuum Hypothesis] is \x[independent-mathematical-logic] from \x[zermelo-fraenkel-set-theory]! Such independence proofs rely on modelling the proof system inside another proof system, and https://en.wikipedia.org/wiki/Forcing_(mathematics)[forcing] is one of the main techniques used for this.

\Image[https://web.archive.org/web/20190430151331im_/http://abstrusegoose.com/strips/i_dont_give_a_shit_about_your_mountain.png]
{title="The landscape of modern Mathematics" comic by Abstruse Goose.}
{description=This comic shows that Mathematics is one of the most diversified areas of \x[art][useless] human knowledge.}
{source=https://abstrusegoose.com/211}

= QED manifesto
{c}
{parent=formalization-of-mathematics}
{wiki}

If \x[ciro-santilli] ever becomes rich, he's going to solve this: \x[website-front-end-for-a-mathematical-formal-proof-system], promise.

= Formal proof
{parent=formalization-of-mathematics}
{wiki}

A proof in some system for the \x[formalization-of-mathematics].

= Mathematical proof
{parent=formal-proof}
{wiki}

= Formal system
{parent=formal-proof}

= Formal proof system
{synonym}

= Zermelo-Fraenkel set theory
{c}
{parent=formal-system}
{title2=ZF}
{wiki=Zermelo–Fraenkel_set_theory}

One of the first \x[formal-proof-system]{p}. This is actually understandable!

This is \x[ciro-santilli]-2020 definition of the \x[foundation-of-mathematics] (and the only one he had any patience to study at all).

TODO what are its limitations? Why were other systems created?

= Set theory
{parent=zermelo-fraenkel-set-theory}
{wiki}

When \x[ciro-santilli] says \x[set-theory], he basically means. \x[zermelo-fraenkel-set-theory].

= Metamath
{c}
{parent=zermelo-fraenkel-set-theory}
{wiki}

http://metamath.org/

It seems to implement \x[zermelo-fraenkel-set-theory].

= Axiom
{parent=formal-proof}
{wiki}

= Consistency
{parent=axiom}
{wiki}

= Consistent
{synonym}

A set of \x[axiom]{p} is consistent if they don't lead to any contradictions.

When a set of axioms is not consistent, false can be proven, and then everything is true, making the set of axioms useless.

= Independence
{disambiguate=mathematical logic}
{parent=axiom}
{wiki}

= Independent
{disambiguate=mathematical logic}
{synonym}

A \x[theorem] is said to be independent from a set of \x[axiom]{p} if it cannot be proven neither true nor false from those axioms.

It or its negation could therefore be arbitrarily added to the set of axioms.

= Conjecture
{parent=formal-proof}
{wiki}

= Theorem
{parent=formal-proof}
{wiki}

= Corollary
{parent=theorem}
{wiki}

An easy to prove theorem that follows from a harder to prove theorem.

= Set
{disambiguate=mathematics}
{parent=formalization-of-mathematics}

= Set
{synonym}

Intuitively: unordered container where all the values are unique, just like C++ `std::set`.

More precisely for set theory \x[formalization-of-mathematics]:
* everything is a set, including the elements of sets
* string manipulation wise:
  * `{}` is an empty set. The natural number `0` is defined as `{}` as well.
  * `{{}}` is a set that contains an empty set
  * `{{}, {{}}}` is a set that contains two sets: `{}` and `{{}}`
  * `{{}, {}}` is not well formed, because it contains `{}` twice

= Cardinality
{parent=set-mathematics}

The size of a set.

For \x[finite] sizes, the definition is simple, and the intuitive name "size" matches well.

But for infinity, things are messier, e.g. the size of the \x[real-number]{p} is strictly larger than the size of the \x[integer]{p} as shown by \x[cantor-s-diagonal-argument], which is kind of what justifies a fancier word "cardinality" to distinguish it from the more normal word "size".

The key idea is to compare set sizes with \x[bijection]{p}.

= Function
{disambiguate=mathematics}
{parent=formalization-of-mathematics}
{wiki}

= Function
{synonym}

\x[set-mathematics]{c} of \x[ordered-pair]{p}. That's it! This is illustrated at: https://math.stackexchange.com/questions/1480651/is-fx-x-1-x-2-a-function/1481099#1481099

= Bijection
{parent=function-mathematics}
{wiki}

= Bijective
{synonym}

= One-to-one
{synonym}

= 1-to-1
{synonym}

= Injective function
{parent=bijection}
{wiki}

= Injection
{synonym}

= Injective
{synonym}

= Surjective function
{parent=bijection}
{wiki}

= Surjection
{synonym}

= Surjective
{synonym}

= Cartesian product
{c}
{parent=function-mathematics}
{wiki}

A function that maps two \x[set]{p} to a third set.

= Direct product
{c}
{parent=function-mathematics}
{wiki}

A \x[cartesian-product] that carries over some extra structure of the input groups.

E.g. the \x[direct-product-of-groups] carries over \x[group] structure on both sides.

= Domain of a function
{parent=function-mathematics}
{wiki}

= Domain
{disambiguate=function}
{synonym}

= Image
{disambiguate=mathematics}
{parent=function-mathematics}
{wiki}

= Image of a function
{synonym}

= Image
{disambiguate=function}
{synonym}

= Addition
{parent=function-mathematics}
{wiki}

= Subtraction
{parent=function-mathematics}
{wiki}

= Multiplication
{parent=function-mathematics}
{wiki}

= Division
{parent=function-mathematics}
{wiki}

= Exponentiation
{parent=function-mathematics}
{title2=$x^y$}
{wiki}

= Exponentiation functional equation
{parent=exponentiation}

We define this as the \x[functional-equation]:
$$
f(x, y) = f(x)f(y)
$$
It is a bit like \x[cauchy-s-functional-equation] but with \x[multiplication] instead of \x[addition].

= Exponential function
{parent=exponentiation}
{title2=$e^x$}
{wiki}

= Exponential function differential equation
{parent=exponential-function}

The \x[differential-equation] that is solved by the \x[exponential-function]:
$$
y'(x) = y(x)
$$
with \x[initial-condition]:
$$
y(0) = 1
$$

TODO find better name for it, "\x[linear-differential-equation][linear] homogenous differential equation of degree one" almost fully constrainst it except for the exponent constant and initial value.

= Definition of the exponential function
{parent=exponential-function}
{wiki=Characterizations_of_the_exponential_function}

= Taylor expansion definition of the exponential function
{c}
{parent=definition-of-the-exponential-function}

The \x[taylor-series] expansion is the most direct definition of the expontial as it obviously satisfies the \x[exponential-function-differential-equation]:
* the first constant term dies
* each other term gets converted to the one before
* because we have \x[infinite] many terms, we get what we started with!
$$
e^x = \sum_{n=0}^\infty \frac{x^n}{n!} = 1 + \frac{x}{1} + \frac{x^2}{2} + \frac{x^3}{2 \times 3} + \frac{x^4}{2 \times 3 \times 4} + \ldots
$$

= Product definition of the exponential function
{parent=definition-of-the-exponential-function}

$$
e^x = \lim_{n\to\infty} \left(1+\frac x n \right)^n
$$

The basic intuition for this is to start from the origin and make small changes to the function based on its known derivative at the origin.

More precisely, we know that for any base b, \x[exponentiation] satisfies:
* $b^{x + y} = b^x b^y$.
* $b^{0} = 1$.
And we also know that for $b = e$ in particular that we satisfy the \x[exponential-function-differential-equation] and so:
$$
\dv{e^x}{x}(0) = 1
$$
One interesting fact is that the only thing we use from the \x[exponential-function-differential-equation] is the value around $x = 0$, which is quite little information! This idea is basically what is behind the importance of the ralationship between \x[lie-group-lie-algebra-correspondence] via the \x[exponential-map]. In the more general settings of groups and \x[manifold]{p}, restricting ourselves to be near the origin is a huge advantage.

Now suppose that we want to calculate $e^1$. The idea is to start from $e^0$ and then then to use the first order of the \x[taylor-series] to extend the known value of $e^0$ to $e^1$.

E.g., if we split into 2 parts, we know that:
$$
e^1 = e^{1/2}e^{1/2}
$$
or in three parts:
$$
e^1 = e^{1/3}e^{1/3}e^{1/3}
$$
so we can just use arbitrarily many parts $e^{1/n}$ that are arbitrarily close to $x = 0$:
$$
e^1 = (e^{1/n})^n
$$
and more generally for any $x$ we have:
$$
e^x = (e^{x/n})^n
$$

Let's see what happens with the Taylor series. We have near $y = 0$ in \x[little-o-notation]:
$$
e^y = 1 + y + o(y)
$$
Therefore, for $y = x/n$, which is near $y = 0$ for any fixed $x$:
$$
e^{x/n} = 1 + x/n + o(1/n)
$$
and therefore:
$$
e^x = (e^{x/n})^n = (1 + x/n + o(1/n))^n
$$
which is basically the formula tha we wanted. We just have to convince ourselves that at $\lim_{n \to \infty}$, the $o(1/n)$ disappears, i.e.:
$$
(1 + x/n + o(1/n))^n = (1 + x/n)^n
$$

To do that, let's multiply $e^y$ by itself once:
$$
e^y e^y = (1 + y + o(y))(1 + y + o(y)) = 1 + 2y + o(y)
$$
and multiplying a third time:
$$
e^y e^y e^y = (1 + 2y + o(y))(1 + y + o(y)) = 1 + 3y + o(y)
$$
TODO conclude.

= Exponential
{synonym}

= Logarithm
{parent=exponential-function}
{wiki}

= Matrix exponential
{parent=exponential-function}
{wiki}

Is the solution to a \x[system-of-linear-ordinary-differential-equations], the \x[exponential-function] is just a 1-dimensional subcase.

Note that more generally, the \x[matrix-exponential] can be defined on any \x[ring-mathematics].

\Video[https://www.youtube.com/watch?v=O85OWBJ2ayo]
{title=How (and why) to raise e to the power of a matrix | DE6 by \x[3blue1brown] (2021)}

= Function space
{parent=formalization-of-mathematics}
{wiki}

Most notable example: \x[l2].

= Integer
{parent=formalization-of-mathematics}
{title2=$\Z$}
{wiki}

= Rational number
{parent=formalization-of-mathematics}
{title2=$\Q$}
{wiki}

= Real number
{parent=formalization-of-mathematics}
{title2=$\R$}
{wiki}

A good definition is by using \x[dedekind-cut]{p}.

= Dedekind cut
{c}
{parent=real-number}
{wiki}

= Cardinality of the continuum
{parent=real-number}

= Countable set
{parent=cardinality-of-the-continuum}
{wiki}

= Cantor's diagonal argument
{c}
{parent=cardinality-of-the-continuum}
{wiki}

= Complex number
{parent=formalization-of-mathematics}
{wiki}

An \x[ordered-pair] of two \x[real-number]{p} with the complex addition and multiplication defined.

Forms both a:
* \x[division-algebra] if thought of \x[r-2] with complex multiplication as the bilinear map of the \x[algebra-over-a-field][algebra]
* \x[field]

= Cayley-Dickson construction
{c}
{parent=complex-number}
{wiki=Cayley–Dickson construction}

Constructs the \x[quaternion]{p} from \x[complex-number]{p}, \x[octonion]{p} from \x[quaternion]{p}, and keeps doubling like this indefinitely.

= Quaternion
{parent=cayley-dickson-construction}
{title2=$\H$, 4}
{wiki}

Kind of extends the \x[complex-number]{p}.

Some facts that make them stand out:
* one of the only three real \x[associative] \x[division-algebra]{p} in addition to the \x[real-number]{p} and \x[complex-number]{p}, according to the \x[classification-of-associative-real-division-algebras]
* the simplest non-\x[commutative] \x[division-algebra]. Contrast for example with \x[complex-number]{p} where multiplication is \x[commutative]

= Octonion
{parent=cayley-dickson-construction}
{title2=8}
{wiki}

Unlike the \x[quaternion]{p}, it is non-\x[associative].

= Sedenion
{parent=cayley-dickson-construction}
{title2=16}
{wiki}

= Ordered pair
{parent=formalization-of-mathematics}
{wiki}

\x[set]{p} are unordered, but we can use them to create ordered objects, which are of fundamental importance. Notably, they are used in the definition of \x[function]{p}.

= Existence and uniqueness
{parent=formalization-of-mathematics}
{wiki}

Existence and uniqueness results are fundamental in \x[mathematics] because we often define objects by their properties, and then start calling them "the object", which is fantastically convenient.

But calling something "the object" only makes sense if there exists exactly one, and only one, object that satisfies the properties.

One particular context where these come up very explicitly is in solutions to \x[differential-equation]{p}, e.g. \x[existence-and-uniqueness-of-solutions-of-partial-differential-equations]{child}.

= Existence
{parent=existence-and-uniqueness}

= Exists
{synonym}

= Exist
{synonym}

= Uniqueness
{parent=existence-and-uniqueness}

= Unique
{synonym}

= Algebra
{parent=mathematics}
{wiki}

= Algebraic
{synonym}

= Commutator
{parent=algebra}
{wiki}

= Linear algebra
{parent=algebra}
{wiki}

= Linear function
{parent=linear-algebra}
{wiki}

= Linear
{synonym}

The term is not very clear, as it could either mean:
* a \x[real-number] function whose graph is a line, i.e.:
  $$f(x) = ax + b$$
  or for higher dimensions, a \x[hyperplane]:
  $$f(x_1, x_2, \ldots, x_n) = c_1 x_1 + c_2 x_2 + \ldots + c_n x_n + b$$
* a \x[linear-map]. Note that the above functions are not linear maps unless $b = 0$ (known as the homogeneous case), because e.g.:
  $$f(x + y) = ax + ay + b$$
  but
  $$f(x) + f(y) = ax + b + ay + b$$
  For this reason, it is better never to refer to linear maps as linear functions.

= Linear map
{parent=linear-algebra}
{title2=linear operator}
{wiki}

Every linear map in \x[finite-dimension] can be represented by a \x[square-matrix], the points of the \x[domain-function] being represented as \x[vector]{p}.

As such, when we say "linear map", we can think of a generalization of \x[matrix-multiplication] that makes sense in \x[infinite-dimensional] spaces like \x[hilbert-space]{p}, since calling such infinite dimensional maps "matrices" is stretching it a bit, since we would need to specify infinitely many rows and columns.

The prototypical building block of \x[infinite-dimensional] linear map is the \x[derivative]. In that case, the vectors being operated upon are \x[function]{p}, which cannot therefore be specified by a finite number of parameters, e.g. 

For example, the left side of the \x[time-independent-schrodinger-equation] is a linear map. And the \x[time-independent-schrodinger-equation] can be seen as a \x[eigenvalue] problem.

= Form
{disambiguate=mathematics}
{parent=linear-map}

A form is a \x[function] from a \x[vector-space] to elements of the \x[underlying-field-of-the-vector-space].

Examples:
* \x[linear-form]
* \x[bilinear-form]

= Linear form
{parent=linear-map}
{wiki}

A \x[linear-map]{c} where the \x[image-mathematics] is the \x[underlying-field-of-the-vector-space], e.g. $\R^n \to \R$.

The set of all \x[linear-form]{p} over a \x[vector-space] forms another vector space called the \x[dual-space].

= Matrix representation of a linear form
{parent=linear-form}

For the typical case of a linear form over \x[r-n], the form can be seen just as a row vector with n elements, the full form being specified by the value of each of the \x[basis-vector]{p}.

= Dual space
{parent=linear-form}
{wiki}

The dual space of a \x[vector-space] $V$, sometimes denoted $V*$, is the vector space of all \x[linear-form]{p} over $V$ with the obvious addition and scalar multiplication operations defined.

Since a linear form is completely determined by how it acts on a \x[basis], and since for each basis element it is specified by a scalar, at least in finite dimension, the dimension of the dual space is the same as the $V$, and so they are isomorphic because \x[all-vector-spaces-of-the-same-dimension-on-a-given-field-are-isomorphic], and so the dual is quite a boring concept in the context of finite dimension.

Infinite dimension seems more interesting however, see: https://en.wikipedia.org/w/index.php?title=Dual_space&oldid=1046421278#Infinite-dimensional_case

= Linear operator
{parent=linear-map}
{wiki}

= Operator
{synonym}

We define it a synonym of \x[linear-map].

= Self-adjoint operator
{parent=linear-map}
{wiki}

= Self-adjoint
{synonym}

= Multilinear map
{parent=linear-map}
{wiki}

= Bilinear map
{parent=multilinear-map}
{wiki}

= Bilinear product
{synonym}

\x[linear-map]{c} of two variables.

More formally, given 3 \x[vector-space]{p} X, Y, Z over a single \x[field-mathematics], a bilinear map is a function from:
$$f : X \times Y \to Z$$
that is linear on the first two arguments from X and Y, i.e.:
$$f(a_1\vec{x_1} + a_2\vec{x_2}, \vec{y}) = a_1f(\vec{x_1}, \vec{y}) + a_2f(\vec{x_2}, \vec{y})$$
Note that the definition only makes sense if all three vector spaces are over the same field, because linearity can mix up each of them.

The most important example by far is the \x[dot-product] from $\R^n \times \R^n \to \R$, which is more specifically also a \x[symmetric-bilinear-form].

= Bilinear form
{parent=multilinear-map}
{title2=$B(x, y)$}
{wiki}

Analogous to a \x[linear-form], a bilinear form is a \x[bilinear-map]{c} where the \x[image-mathematics] is the \x[underlying-field-of-the-vector-space], e.g. $\R^n \times \R^m \to \R$.

Some definitions require both of the input spaces to be the same, e.g. $\R^n \times \R^n \to \R$, but it doesn't make much different in general.

The most important example of a bilinear form is the \x[dot-product]. It is only defined if both the input spaces are the same.

= Matrix representation of a bilinear form
{parent=bilinear-form}

As usual, it is useful to think about how a \x[bilinear-form] looks like in terms of \x[vetor]{p} and \x[matrix]{p}.

Unlike a \x[linear-form], which \x[matrix-representation-of-a-linear-form][was a vector], because it has two inputs, the bilinear form is represented by a matrix $M$ which encodes the value for each possible pair of \x[basis-vector]{p}.

In terms of that \x[matrix], the form $B(x,y)$ is then given by:
$$
B(x,y) = x^T M y
$$

= Symmetric bilinear map
{parent=multilinear-map}
{wiki}

Subcase of \x[symmetric-multilinear-map]:
$$f(x, y) = f(y, x)$$

Requires the two inputs $x$ and $y$ to be in the same \x[vector-space] of course.

The most important example is the \x[dot-product]. As mentioned at \x[dot-product-vs-bilinear-form], a \x[dot-product] can be sometimes just a synonym for the more precise term symmetric bilinear form. As such, we can understand that a symmetric bilinear form 

= Symmetric bilinear form
{parent=symmetric-bilinear-map}
{wiki}

\x[symmetric-bilinear-map] that is also a \x[bilinear-form].

= Matrix representation of a symmetric bilinear form
{parent=symmetric-bilinear-form}

= Matrix representation of the symmetric bilinear form
{synonym}

Like the \x[matrix-representation-of-a-bilinear-form], it is a \x[matrix], but now the matrix has to be a \x[symmetric-matrix].

We can then immediately see that the matrix is symmetric, then so is the form. We have:
$$
B(x,y) = x^T M y
$$
But because $B(x,y)$ is a \x[scalar], we have:
$$
B(x,y) = B(x,y)^T
$$
and:
$$
B(x,y) = B(x,y)^T = (x^T M y)^T = y^T M^T x = y^T M^T x = y^T M x = B(y,x)
$$

= Quadratic form
{parent=symmetric-bilinear-map}
{wiki}

\x[multivariate-polynomial]{c} where each term has degree 2, e.g.:
$$
f(x,y) = 2y^2 + 10yx + x^2
$$
is a quadratic form because each term has degree 2:
* $y^2$
* $xy$
* $x^2$
but e.g.:
$$
f(x,y) = 2y^2 + 10yx + x^3
$$
is not because the term $x^3$ has degree 3.

There is a \x[1-to-1] relationship between \x[quadratic-form]{p} and \x[symmetric-bilinear-form]{p}. In matrix representation, this can be written as:
$$
\vec{x}^T B \vec{x}
$$
where $\vec{x}$ contains each of the variabes of the form, e.g. for 2 variables:
$$
\vec{x} = [x, y]
$$

Strictly speaking, the associated \x[bilinear-form] would not need to be a \x[symmetric-bilinear-form], at least for the \x[real-number]{p} or \x[complex-number]{p} which are \x[commutative]. E.g.:
$$
\begin{bmatrix}x y\end{bmatrix}
\begin{bmatrix}0 & 1 \\ 2 & 0 \\ \end{bmatrix}
\begin{bmatrix}x \\ y \\ \end{bmatrix}
=
\begin{bmatrix}x y\end{bmatrix}
\begin{bmatrix}y \\ 2x \\\end{bmatrix}
= xy + 2yx
= 3xy
$$
But that same matrix could also be written in symmetric form as:
$$\begin{bmatrix}0 & 1.5 \\ 1.5 & 0 \\ \end{bmatrix}$$
so why not I guess, its simpler/more restricted.

= Positive definite symmetric bilinear form
{parent=symmetric-bilinear-form}
{wiki}

\x[symmetric-bilinear-form]{c} that is also positive definite, i.e.:
$$
\forall x, B(x, x) > 0
$$

= Matrix representation of a positive definite symmetric bilinear form
{parent=symmetric-bilinear-form}

A \x[positive-definite-matrix] that is also a \x[symmetric-matrix].

= Skew-symmetric bilinear map
{parent=symmetric-bilinear-map}

= Antisymmetric bilinear map
{synonym}

Subcase of \x[antisymmetric-multilinear-map]:
$$f(x, y) = -f(y, x)$$

= Skew-symmetric bilinear form
{parent=symmetric-bilinear-map}
{wiki}

\x[skew-symmetric-bilinear-map]{c} that is also a \x[bilinear-form].

= Symmetric multilinear map
{parent=multilinear-map}

Same value if you swap any input arguments.

= Antisymmetric multilinear map
{parent=symmetric-multilinear-map}

Change sign if you swap two input values.

= Alternating multilinear map
{parent=multilinear-map}

Implies \x[antisymmetric-multilinear-map].

= Dot product
{parent=linear-algebra}
{wiki}

The \x[dot-product] is an example of, or a synonym of, a \x[positive-definite-symmetric-bilinear-form].

The \x[positive-definite] part of the definition likely comes in because we are so familiar with \x[metric-space]{p}, which requires a positive \x[norm] in the \x[norm-induced-by-an-inner-product].

The default \x[euclidean-space] definition, we use the \x[matrix-representation-of-a-symmetric-bilinear-form] as the identity matrix, e.g. in \x[r-3]:
$$
M =
\begin{bmatrix}
1 & 0 & 0 \\
0 & 1 & 0 \\
0 & 0 & 1 \\
\end{bmatrix}
$$
so that:
$$
\vec{x} \dot \vec{y}
=
\begin{bmatrix}
x_1 & x_2 & x_3 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 \\
0 & 1 & 0 \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
y_1 \\
y_2 \\
y_3 \\
\end{bmatrix}
=
x_1y_1 + x_2y_2 + x_3y_3
$$

= Orthogonality
{parent=dot-product}
{wiki}

= Orthogonal
{synonym}

= Orthonormality
{parent=orthogonality}
{wiki}

= Orthonormal
{synonym}

= Angle
{parent=dot-product}
{wiki}

= Cross product
{parent=linear-algebra}
{title2=$\va{x} \times \va{y}$}
{wiki}

= Jacobi identity
{c}
{parent=cross-product}
{wiki}

= Levi-Civita symbol
{c}
{parent=linear-algebra}
{title2=$\varepsilon$}
{wiki}

* \x[odd-permutation]: -1
* \x[even-permutation]: 1
* not a \x[permutation]: 0. This happens iff two more more indices are repeated

= Projection
{disambiguate=mathematics}
{parent=linear-algebra}

= Matrix
{parent=linear-algebra}
{wiki}

= Matrix operation
{parent=matrix}
{wiki}

= Determinant
{parent=matrix-operation}
{title2=$det$}
{wiki}

Name origin: likely because it "determines" if a matrix is \x[invertible-matrix][invertible] or not, as a matrix is invertible iff determinant is not zero.

= Matrix inverse
{parent=matrix-operation}

= Invertible matrix
{parent=matrix-inverse}
{wiki}

The set of all \x[invertible-matrix]{p} forms a \x[group]: the \x[general-linear-group] with \x[matrix-multiplication]. Non-invertible matrices don't form a group due to the lack of inverse.

= Transpose
{parent=matrix-operation}
{wiki}

= Matrix multiplication
{parent=matrix}
{wiki}

= Matrix product
{synonym}

Since a \x[matrix] $M$ can be seen as a \x[linear-map] $f_M(\vec{x})$, the product of two matrices $MN$ can be seen as the composition of two \x[linear-map]{p}:
$$f_M(f_N(\vec{x}))$$
One cool thing about linear functions is that we can easily pre-calculate this product only once to obtain a new matrix, and so we don't have to do both multiplications separately each time.

= Matrix multiplication algorithm
{parent=matrix-multiplication}

https://math.stackexchange.com/questions/30330/fast-algorithm-for-solving-system-of-linear-equations/259372#259372

= Matrix decomposition
{parent=matrix-multiplication}
{wiki}

= Eigenvalues and eigenvectors
{parent=matrix}
{wiki}

= Applications of eigenvalues and eigenvectors
{parent=eigenvalues-and-eigenvectors}

* https://math.stackexchange.com/questions/23312/what-is-the-importance-of-eigenvalues-eigenvectors/3503875#3503875
* https://math.stackexchange.com/questions/1520832/real-life-examples-for-eigenvalues-eigenvectors
* https://matheducators.stackexchange.com/questions/520/what-is-a-good-motivation-showcase-for-a-student-for-the-study-of-eigenvalues

= Eigenvalue
{parent=eigenvalues-and-eigenvectors}

See: \x[eigenvalues-and-eigenvectors].

= Eigendecomposition of a matrix
{parent=eigenvalues-and-eigenvectors}
{wiki}

= Eigendecomposition
{synonym}

Every \x[invertible-matrix] $M$ can be written as:
$$
M = QDQ^{-1}
$$
where:
* $D$ is a \x[diagonal-matrix] containing the \x[eigenvalue]{p} of $M$
* columns of $Q$ are \x[eigenvector]{p} of $M$
Note therefore that this decomposition is unique up to swapping the order of eigenvectors. We could fix a canonical form by sorting eigenvectors from smallest to largest in the case of a \x[real-number].

Intuitively, Note that this is just the \x[change-of-basis] formula, and so:
* $Q^{-1}$ changes basis to align to the eigenvectors
* $D$ multiplies eigenvectors simply by eigenvalues
* $Q$ changes back to the original basis

= Eigendecomposition of a real symmetric matrix
{parent=eigendecomposition-of-a-matrix}

The general result from \x[eigendecomposition-of-a-matrix]:
$$
M = QDQ^{-1}
$$
becomes:
$$
M = ODO^T
$$
where $O$ is an \x[orthogonal-matrix], and therefore has $O^{-1} = O^T$.

= Sylvester's law of inertia
{c}
{parent=eigendecomposition-of-a-matrix}

This states that the \x[metric-signature] is the same for all \x[similar-matrix]{p}.

The interest of it is that it shows that a \x[change-of-basis] that keeps a \x[symmetric-matrix] symmetric always maintains the same \x[metric-signature].

TODO confirm this means that we can make a change of basis to take any \x[bilinear-form] to any other \x[bilinear-form]. And this is good because the \x[laws-of-physics] should be invariant under changes of basis, and they are often expressed in terms of \x[bilinear-form]{p}. This is likely super important for \x[minkowski-space] and the \x[lorentz-group].

Note that the \x[matrix-similarity] relation looks a bit like the \x[eigendecomposition-of-a-matrix]:
$$
D = SMS^T
$$
but note that $D$ does not have to contain \x[eigenvalue]{p}, unlike the \x[eigendecomposition-of-a-matrix]. This is because here $S$ is not fixed to having \x[eigenvector]{p} in its columns.

But because the matrix is symmetric however, we could always choose $S$ to actually diagonalize as mentioned at \x[eigendecomposition-of-a-real-symmetric-matrix]. Therefore, the \x[metric-signature] can be seen directly from \x[eigenvalue]{p}.

Also, because $D$ is a \x[dianonal-matrix], and thus symmetric, it must be that:
$$
S^T = S^{-1}
$$

What this does represent, is a general \x[change-of-basis] that maintains the matrix a \x[symmetric-matrix].

Related:
* https://math.stackexchange.com/questions/1817906/sylvesters-law-of-inertia

= Matrix similarity
{parent=sylvester-s-law-of-inertia}
{wiki}

= Similar matrix
{synonym}

= Matrix similarity
{synonym}

= Metric signature
{parent=sylvester-s-law-of-inertia}
{wiki}

= Spectrum
{disambiguate=functional analysis}
{parent=eigenvalue}

Set of \x[eigenvalue]{p} of a \x[linear-operator].

= Continuous spectrum
{disambiguate=functional analysis}
{parent=spectrum-functional-analysis}

Unlike the simple case of a \x[matrix], in \x[infinite-dimensional] vector spaces, the spectrum may be continuous.

The quintessential example of that is the spectrum of the \x[position-operator] in \x[quantum-mechanics], in which any \x[real-number] is a possible \x[eigenvalue], since the particle may be found in any position. The associated \x[eigenvector]{p} are the corresponding \x[dirac-delta-function]{p}.

= Eigenvector
{parent=eigenvalues-and-eigenvectors}

See: \x[eigenvalues-and-eigenvectors].

= Eigenvectors and eigenvalues of the identity matrix
{parent=eigenvalues-and-eigenvectors}

https://math.stackexchange.com/questions/1507290/linear-algebra-identity-matrix-and-its-relation-to-eigenvalues-and-eigenvectors/3934023#3934023

= Spectral theorem
{parent=eigenvalues-and-eigenvectors}
{wiki}

= Hermitian matrix
{c}
{parent=spectral-theorem}
{wiki}

= Hermitian operator
{c}
{parent=hermitian-matrix}

This is the possibly infinite dimensional version of a \x[hermitian-matrix], since \x[linear-operator]{p} are the possibly infinite dimensional version of \x[matrix]{p}.

There's a catch though: now we don't have explicit matrix indices here however in general, the generalized definition is shown at: https://en.wikipedia.org/w/index.php?title=Hermitian_adjoint&oldid=1032475701#Definition_for_bounded_operators_between_Hilbert_spaces

= Riesz representation theorem
{c}
{parent=hermitian-operator}

= Kronecker product
{c}
{parent=matrix}
{wiki}

= Named matrix
{parent=matrix}
{wiki=List_of_named_matrices}

In other sections:
* \x[invertible-matrix]{child}
* \x[symplectic-matrix]{child}

= Diagonal matrix
{parent=named-matrix}
{wiki}

Forms a \x[normal-subgroup] of the \x[general-linear-group].

= Scalar matrix
{parent=diagonal-matrix}
{title2=$Z(V)$}
{wiki=Diagonal_matrix#Scalar_matrix}

Forms a \x[normal-subgroup] of the \x[general-linear-group].

= Square matrix
{parent=named-matrix}
{wiki}

= Orthogonal matrix
{parent=named-matrix}
{wiki}

Preserves the \x[dot-product]. This implies that it preserves \x[norm-mathematics] and \x[angle]{p}.

Implies \x[determinant] plus or minus 1. Converse not true. But the converse within \x[gl-n] is true.

Set of all of them form the \x[orthogonal-group]. It is a group since their determinant is not 0, so they have \x[matrix-inverse][inverses].

For these matrices, the \x[matrix-inverse][inverses] are the \x[transpose]{p}. Or equivalently, the set of rows is \x[orthonormal], and so is the set of columns.

= Unitary matrix
{parent=orthogonal-matrix}
{wiki}

\x[complex-number][Complex]{c} analogue of \x[orthogonal-matrix].

Applications:
* in \x[quantum-computer]{p} programming basically comes down to creating one big unitary matrix as explained at: \x[programmer-s-model-of-quantum-computers]

= Triangular matrix
{parent=named-matrix}
{wiki}

= Symmetric matrix
{parent=named-matrix}
{wiki}

A \x[matrix] that equals its \x[transpose]:
$$
M = M^T
$$

Can represent a \x[symmetric-bilinear-form] as shown at \x[matrix-representation-of-a-symmetric-bilinear-form], or a \x[quadratic-form].

= Definite matrix
{parent=symmetric-matrix}
{wiki}

The definition implies that this is also a \x[symmetric-matrix].

= Positive definite matrix
{parent=definite-matrix}

= Positive definite
{synonym}

The \x[dot-product] is a \x[positive-definite-matrix], and so we see that those will have an important link to familiar \x[geometry].

= Skew-symmetric matrix
{parent=symmetric-matrix}
{wiki}

= Antisymmetric matrix
{title2}
{synonym}

WTF is a skew? "Antisymmetric" is just such a better name! And it also appears in other definitions such as \x[antisymmetric-multilinear-map].

= Skew-symmetric form
{parent=skew-symmetric-matrix}

= Vector space
{parent=linear-algebra}
{wiki}

= Basis
{disambiguate=linear algebra}
{parent=vector-space}
{wiki}

= Basis
{synonym}

= Basis vector
{synonym}

= Change of basis
{parent=basis-linear-algebra}
{wiki}

$$N = BMB^{-1}$$
where:
* $M$: matrix in the old basis
* $N$: matrix in the new basis
* $B$: change of basis matrix

= Change of basis between symmetric matrices
{parent=change-of-basis}

When we have a \x[symmetric-matrix], a \x[change-of-basis] keeps symmetry iff it is done by an \x[orthogonal-matrix], in which case:
$$N = BMB^{-1} = OMO^T$$

= Classification of vector spaces
{parent=vector-space}

= All vector spaces of the same dimension on a given field are isomorphic
{synonym}

https://en.wikipedia.org/wiki/Dimension_(vector_space)#Facts

= Underlying field of a vector space
{parent=vector-space}

= Underlying field of the vector space
{synonym}

Every vector space is defined over a \x[field-mathematics].

E.g. in $\RThree3$, the underlying \x[field-mathematics] is $\R$, the \x[real-number]{p}. And in $\C^2$ the underlying field is $\C$, the \x[complex-number]{p}.

Any field can be used, including \x[finite-field]. But the underlying thing has to be a field, because the definitions of a vector need all field properties to hold to make sense.

= Vector
{disambiguate=mathematics}
{parent=vector-space}
{wiki=Vector (mathematics and physics)}

= Vector
{synonym}

= Vectorized
{synonym}

= Scalar
{disambiguate=mathematics}
{parent=vector-mathematics}
{wiki}

= Scalar
{synonym}

A member of the \x[underlying-field-of-a-vector-space]. E.g. in $\RThree3$, the underlying field is $\R$, and a scalar is a member of $\R$, i.e. a \x[real-number].

= Linear algebra bibliography
{parent=linear-algebra}

https://textbooks.math.gatech.edu/ila/index.html Interactive Linear Algebra. Source: https://github.com/QBobWatson/ila[] Written in \x[mathbook-xml].

= Group
{disambiguate=mathematics}
{parent=algebra}
{wiki}

= Group
{synonym}

= Center
{disambiguate=group theory}
{parent=group-mathematics}
{wiki}

= Center
{disambiguate=group}
{synonym}

= Commutative property
{parent=group-mathematics}
{wiki}

= Commutative
{synonym}

= Commutativity
{synonym}

= Abelian group
{c}
{parent=commutative-property}
{wiki}

= Abelian
{c}
{synonym}

Easily classified as the \x[direct-product-of-groups][direct product] of \x[cyclic-group]{p} of \x[prime-number][prime] order.

= Non-commutative
{parent=abelian-group}

= Symmetry
{parent=group-mathematics}
{wiki}

Directly modelled by \x[group-mathematics]{p}.

For \x[continuous-symmetry]{p}, see: \x[lie-group].

https://en.wikipedia.org/wiki/Generating_set_of_a_group

= Inverse element
{parent=group-mathematics}
{wiki}

= Inverse
{synonym}

Some specific examples:
* \x[invertible-matrix]

= Invertible
{parent=inverse-element}

= Important mathematical group
{parent=group-mathematics}

= Important discrete mathematical group
{parent=important-mathematical-group}

= Cyclic group
{parent=important-discrete-mathematical-group}
{title2=$\cyclicGroup{n}$}
{wiki}

= The direct product of two cyclic groups of coprime order is another cyclic group
{parent=important-discrete-mathematical-group}
{wiki}

You just map the value (1, 1) $C_m \times C_n$ to the value 1 of $C_{mn}$, and it works out. E.g. for $C_2 \times C_3$, the \x[generating-set-of-a-group][group generated by] of (1, 1) is:
``
0 = (0, 0)
1 = (1, 1)
2 = (0, 2)
3 = (1, 0)
4 = (0, 1)
5 = (1, 2)
6 = (0, 0) = 0
``

= Permutation
{parent=important-discrete-mathematical-group}
{wiki}

= Cycle notation
{parent=permutation}
{wiki}

A concise to describe a specific \x[permutation].

A permutation group can then be described in terms of the \x[generating-set-of-a-group] of specific elements given in cycle notation.

E.g. https://en.wikipedia.org/w/index.php?title=Mathieu_group&oldid=1034060469#Permutation_groups mentions that the \x[mathieu-group-m-11] is generated by three elements:
* (0123456789a)
* (0b)(1a)(25)(37)(48)(69)
* (26a7)(3945)
which feels quite compact for a \x[simple-group] with 95040 elements, doesn't it!

= Parity of a permutation
{parent=permutation}
{wiki}

= Odd permutation
{parent=parity-of-a-permutation}

= Even permutation
{parent=parity-of-a-permutation}

= Permutation group
{parent=permutation}
{wiki}

= Stabilizer
{disambiguate=group}
{parent=permutation-group}

Suppose we have a given \x[permutation-group] that acts on a set of n elements.

If we pick k elements of the set, the stabilizer subgroup of those k elements is a subgroup of the given permutation group that keeps those elements unchanged.

Note that an analogous definition can be given for non-finite groups. Also note that the case for all finite groups is covered by the permutation definition since \x[all-groups-are-isomorphic-to-a-subgroup-of-the-symmetric-group]

TODO existence and uniqueness. Existence is obvious for the identity permutation, but proper subgroup likely does not exist in general.

Bibliography:
* https://mathworld.wolfram.com/Stabilizer.html
* https://ncatlab.org/nlab/show/stabilizer+group from \x[nlab]

= Symmetric group
{parent=permutation-group}
{wiki}

\x[group]{c} of all \x[permutation]{p}.

= All groups are isomorphic to a subgroup of the symmetric group
{parent=symmetric-group}

Or in other words: \x[symmetric-group]{p} are boring, because they are basically everything already!

= Alternating group
{parent=permutation-group}
{title2=$\alternatingGroup{n}$}
{wiki}

Group of \x[even-permutation]{p}.

Note that \x[odd-permutation]{p} don't form a \x[subgroup] of the \x[symmetric-group] like the even permutations do, because the composition of two odd permutations is an even permutation.

= Alternating group of degree 5
{parent=alternating-group}

= The alternating groups of order 5 or greater are simple
{parent=alternating-group-of-degree-5}

https://www.youtube.com/watch?v=U_618kB6P1Q GT18.2. A_n is Simple (n ge 5) by \x[mathdoctorbob] (2012)

= Dihedral group
{parent=important-discrete-mathematical-group}
{title2=$D_n$}
{wiki}

Our notation: $D_n$ means the dihedral group of the \x[regular-polygon] with $n$ sides, and therefore has order $2n$ (all rotations + flips), called the "dihedral group of order 2n".

= Wallpaper group
{parent=important-discrete-mathematical-group}
{wiki}

17 of them.

= Space group
{parent=important-discrete-mathematical-group}
{wiki}

All possible repetitive crystal structures!

219 of them.

= Klein four-group
{c}
{parent=important-discrete-mathematical-group}
{wiki}

$\cyclicGroup{2} \times \cyclicGroup{2}$

= Group operation
{parent=group-mathematics}

= Group isomorphism
{parent=group-mathematics}
{wiki}

= Isomorphism
{parent=group-isomorphism}
{wiki}

= Isomorphic
{synonym}

Something analogous to a \x[group-isomorphism], but that preserves whatever properties the given algebraic object has. E.g. for a \x[field-mathematics], we also have to preserve multiplication in addition to addition.

Other common examples include isomorphisms of \x[vector-space]{p} and \x[field-mathematics]{p}. But since both of those two are much simpler than groups in \x[classification-mathematics], as they are both determined by number of elements/dimension alone, see:
* \x[classification-of-finite-fields]
* \x[all-vector-spaces-of-the-same-dimension-on-a-given-field-are-isomorphic]
we tend to not talk about isomorphisms so much in those contexts.

= Group homomorphism
{parent=group-isomorphism}
{wiki}

Like isomorphism, but does not have to be one-to-one: multiple different inputs can have the same output.

The image is as for any function smaller or equal in size as the domain of course.

This brings us to the key intuition about group homomorphisms: they are a way to split out a larger group into smaller groups that retains a subset of the original structure.

As shown by the \x[fundamental-theorem-on-homomorphisms], each group homomorphism is fully characterized by a \x[normal-subgroup] of the domain.

= Fundamental theorem on homomorphisms
{parent=group-homomorphism}
{wiki}

Ultimate explanation: https://math.stackexchange.com/questions/776039/intuition-behind-normal-subgroups/3732426#3732426

Links \x[group-homomorphism] and the \x[quotient-group] via \x[normal-subgroup]{p}.

= Kernel
{disambiguate=algebra}
{parent=group-homomorphism}
{wiki}

= Generating set of a group
{parent=group-mathematics}
{wiki}

= Cayley graph
{c}
{parent=generating-set-of-a-group}
{wiki}

You select a \x[generating-set-of-a-group], and then you name every node with them, and you specify:
* each node by a product of generators
* each edge by what happens when you apply a generator to each element

Not unique: different generating sets lead to different graphs, see e.g. two possible https://en.wikipedia.org/w/index.php?title=Cayley_graph&oldid=1028775401#Examples for the 

= Cycle graph
{disambiguate=algebra}
{parent=cayley-graph}
{wiki}

How to build it: https://math.stackexchange.com/questions/3137319/how-in-general-does-one-construct-a-cycle-graph-for-a-group/3162746#3162746 good answer with \x[ascii-art]. You basically just pick each element, and repeatedly apply it, and remove any path that has a longer version.

Immediately gives the \x[generating-set-of-a-group] by looking at elements adjacent to the origin, and more generally the \x[order-of-an-element-of-a-group][order of each element].

TODO \x[uniqueness]: can two different \x[group]{p} have the same cycle graph? It does not seem to tell us how every element interact with every other element, only with itself. This is in contrast with the \x[cayley-graph], which more accurately describes group structure (but does not give the order of elements as directly), so feels like it won't be unique.

= Order of an element of a group
{parent=generating-set-of-a-group}

https://math.stackexchange.com/questions/972057/calculating-the-order-of-an-element-in-a-group

= Direct product of groups
{parent=group-mathematics}
{title2=$G \times H$}
{wiki}

= Product of group subsets
{parent=direct-product-of-groups}
{wiki}

= Semidirect product
{parent=direct-product-of-groups}
{title2=$N \rtimes H$}
{wiki}

As per https://en.wikipedia.org/w/index.php?title=Semidirect_product&oldid=1040813965#Properties[], unlike the \x[direct-product], the semidirect product of two goups is neither \x[unique], nor does it always \x[exist], and there is no known algorithmic way way to tell if one exists or not.

This is because reaching the "output" of the semidirect produt of two groups requires extra non-obvious information that might not exist. This is because the semi-direct product is based on the \x[product-of-group-subsets]. So you start with two small and completely independent groups, and it is not obvious how to join them up, i.e. how to define the group operation of the product group that is compatible with that of the two smaller input groups. Contrast this with the \x[direct-product], where the composition is simple: just use the grou operation of each group on either side.

Product of group subsets

So in other words, it is not a \x[function-mathematics] like the \x[direct-product]. The semidiret product is therefore more like a property of three groups. 

The semidirect product is more general than the \x[direct-product-of-groups] when thinking about the \x[group-extension-problem], because with the \x[direct-product-of-groups], both subgroups of the larger group are necessarily also normal (trivial projection \x[group-homomorphism] on either side), while for the semidirect product, only one of them does.

Conversely, https://en.wikipedia.org/w/index.php?title=Semidirect_product&oldid=1040813965 explains that if $G = N \rtimes H$, and besides the implied requirement that N is normal, H is also normal, then $G = N \times H$.

Smallest example: $D_6 = C_3 \rtimes C_2$ where $D$ is a \x[dihedral-group] and $C$ are \x[cyclic-group]{p}. $C_3$ (the rotation) is a normal subgroup of $D_6$, but $C_2$ (the flip) is not.

Note that with the \x[direct-product] instead we get $C_6$ and not $D_6$, i.e. $C_3 \times C_2 = C_6$ as per \x[the-direct-product-of-two-cyclic-groups-of-coprime-order-is-another-cyclic-group].

TODO:
* why does one of the groups have to be normal in the definition?
* what is the smallest example of a non-\x[simple-group] that is neither a direct nor a semi-direct product of any two other groups?

Bibliography: https://math.stackexchange.com/questions/1726939/is-this-intuition-for-the-semidirect-product-of-groups-correct

= Subgroup
{parent=group-mathematics}
{wiki}

= Subgroup generated by a group
{parent=subgroup}

= Quotient group
{parent=subgroup}
{wiki}

Ultimate explanation: https://math.stackexchange.com/questions/776039/intuition-behind-normal-subgroups/3732426#3732426

Does not have to be isomorphic to a subgroup:
* https://www.mathcounterexamples.net/a-semi-continuous-function-with-a-dense-set-of-points-of-discontinuity/
* https://math.stackexchange.com/questions/2498922/is-a-quotient-group-a-subgroup
This is one of the reasons why the analogy between \x[simple-group]{p} of finite groups and \x[prime-number]{p} is limited.

= Subquotient
{parent=quotient-group}
{wiki}

Quotient of a subgroup H of G by a \x[normal-subgroup] of the subgroup H.

That \x[normal-subgroup] does not have have to be a normal subgroup of G.

As an overkill example, the happy family are subquotients of the \x[monster-group], but the monster group is simple.

= Relationship between the quotient group and direct products
{parent=quotient-group}

Although quotients look a bit real number division, there are some important differences with the "group analog of multiplication" of \x[direct-product-of-groups].

If a group is isomorphic to the \x[direct-product-of-groups], we can take a quotient of the product to retrieve one of the groups, which is somewhat analogous to division: https://math.stackexchange.com/questions/723707/how-is-the-quotient-group-related-to-the-direct-product-group

The "converse" is not always true however: a group does not need to be isomorphic to the product of one of its \x[normal-subgroup]{p} and the associated \x[quotient-group]. The wiki page provides an example:
\Q[
Given G and a normal subgroup N, then G is a group extension of G/N by N. One could ask whether this extension is trivial or split; in other words, one could ask whether G is a direct product or semidirect product of N and G/N. This is a special case of the extension problem. An example where the extension is not split is as follows: Let $G = Z4 = {0, 1, 2, 3}$, and $ = {0, 2}$ which is isomorphic to Z2. Then G/N is also isomorphic to Z2. But Z2 has only the trivial automorphism, so the only semi-direct product of N and G/N is the direct product. Since Z4 is different from Z2 × Z2, we conclude that G is not a semi-direct product of N and G/N.
]

TODO find a less minimal but possibly more important example.

This is also semi mentioned at: https://math.stackexchange.com/questions/1596500/when-is-a-group-isomorphic-to-the-product-of-normal-subgroup-and-quotient-group

I think this might be equivalent to why the \x[group-extension-problem] is hard. If this relation were true, then taking the direct product would be the only way to make larger groups from normal subgroups/quotients. But it's not.

= Normal subgroup
{parent=quotient-group}
{wiki}

Ultimate explanation: https://math.stackexchange.com/questions/776039/intuition-behind-normal-subgroups/3732426#3732426

Only normal subgroups can be used to form \x[quotient-group]{p}: their key definition is that they plus their cosets form a group.

Intuition:
* https://math.stackexchange.com/questions/776039/intuition-behind-normal-subgroups
* https://math.stackexchange.com/questions/1014535/is-there-any-intuitive-understanding-of-normal-subgroup/1014791

One key intuition is that "a normal subgroup is the \x[kernel-algebra]" of a \x[group-homomorphism], and the normal subgroup plus cosets are isomorphic to the image of the isomorphism, which is what the \x[fundamental-theorem-on-homomorphisms] says.

Therefore "there aren't that many \x[group-homomorphism]", and a normal subgroup it is a concrete and natural way to uniquely represent that homomorphism.

The best way to think about the, is to always think first: what is the homomorphism? And then work out everything else from there.

= Simple group
{parent=normal-subgroup}
{wiki}

Does not have any non-trivial \x[normal-subgroup].

And therefore, going back to our intuition that due to the \x[fundamental-theorem-on-homomorphisms] there is one normal group per homomorphism, a simple group is one that has no non-trivial homomorphisms.

= How to show that a group is simple
{parent=simple-group}
{wiki}

https://math.stackexchange.com/questions/203168/proving-a-group-is-simple

https://scholarworks.sjsu.edu/cgi/viewcontent.cgi?referer=https://www.google.com/&httpsredir=1&article=5051&context=etd_theses proves that the \x[mathieu-group-m-24] is simple in just 200 pages. Nice.

Examples:
* \x[the-alternating-groups-of-order-5-or-greater-are-simple]

= Classification of finite groups
{parent=normal-subgroup}

As shown in \x[video-simple-groups-abstract-algebra-by-socratica-2018], this can be split up into two steps:
* \x[classification-of-finite-simple-groups]: done
* \x[group-extension-problem]
This split is sometimes called the "Jordan-Hölder program" in reference to the authors of the \x[jordan-holder-theorem].

Good lists to start playing with:

History: https://math.stackexchange.com/questions/1587387/historical-notes-on-the-jordan-h%C3%B6lder-program

= List of finite groups
{parent=classification-of-finite-groups}

* https://en.wikipedia.org/wiki/List_of_small_groups

= GroupNames
{c}
{parent=list-of-finite-groups}
{wiki}

https://people.maths.bris.ac.uk/~matyd/GroupNames/index.html

This dude has done well.

= Classification of finite simple groups
{parent=classification-of-finite-groups}
{wiki}

= Classification of simple finite groups
{synonym}

\x[ciro-santilli] is very fond of this result: \x[the-beauty-of-mathematics].

How can so much complexity come out from so few rules?

How can the proof be so long (thousands of papers)?? Surprise!!

And to top if all off, the awesomely named \x[monster-group] could have a relationship with \x[string-theory] via the \x[monstrous-moonshine]?

\x[all-science-is-either-physics-or-stamp-collecting] comes to mind.

The classification contains:
* \x[cyclic-group]{p}: infinitely many, one for each \x[prime] order. Non-prime orders are not simple. These are the only \x[abelian] ones.
* \x[alternating-group]{p} of order 4 or greater: infinitely many
* \x[groups-of-lie-type]: a contains several infinite families
* \x[sporadic-group]{p}: 26 or 27 of them depending on definitions

\Video[https://www.youtube.com/watch?v=jhVMBXl5jTA]
{title="Simple Groups - Abstract Algebra" by Socratica (2018)}
{description=Good quick overview.}

= Group of Lie type
{parent=classification-of-finite-simple-groups}
{wiki}

= Groups of Lie type
{synonym}

In the \x[classification-of-finite-simple-groups], groups of Lie type are a set of infinite families of simple lie groups. These are the other infinite families besides te \x[cyclic-group]{p} and \x[alternating-group]{p}.

A decent list at: https://en.wikipedia.org/wiki/List_of_finite_simple_groups[], https://en.wikipedia.org/wiki/Group_of_Lie_type[] is just too unclear. The groups of Lie type can be subdivided into:
* \x[chevalley-group]{child}{p}
* TODO the rest

The first in this family discovered were a subset of the \x[chevalley-groups-a-n-q] by \x[galois]: \x[psl-2-p], so it might be a good first one to try and understand what it looks like.

TODO understand intuitively why they are called of Lie type. Their names $A_n$, $B_n$ seem to correspond to the members of the \x[classification-of-simple-lie-groups] which are also named like that.

But they are of course related to \x[lie-group]{p}, and as suggested at \x[video-yang-mills-1-by-david-metzler-2011] part 2, the continuity actually simplifies things.

= Chevalley group
{c}
{parent=group-of-lie-type}
{wiki}

= Chevalley groups $A_n(q)$
{c}
{parent=chevalley-group}

They are the \x[finite-projective-special-linear-group]{p}.

This was the first infinite family of \x[simple-group]{p} discovered after the simple \x[cyclic-group]{p} and \x[alternating-group]{p}. The first case discovered was \x[psl-2-p] by \x[galois]. You should understand that one first.

= Sporadic group
{parent=classification-of-finite-simple-groups}
{wiki}

Examples of \x[exceptional-object]{p}{parent}.

= Mathieu group
{c}
{parent=sporadic-group}
{wiki}

Contains the first \x[sporadic-group]{p} discovered by far: 11 and 12 in 1861, and 22, 23 and 24 in 1973. And therefore presumably the simplest! The next sporadic ones discovered were the \x[janko-group]{p}, only in 1965!

Each $M_n$ is a \x[permutation-group] on $n$ elements. There isn't an obvious algorithmic relationship between $n$ and the actual group.

TODO initial motivation? Why did Mathieu care about \x[k-transitive-group]{p}?

Their; \x[k-transitive-group] properties seem to be the main characterization, according to Wikipedia:
* 22 is 3-transitive but not 4-transitive.
* four of them (11, 12, 23 and 24) are the only \x[sporadic-group][sporadic] \x[k-transitive-group][4-transitive] groups as per the \x[classification-of-4-transitive-groups] (no known simpler proof as of 2021), which sounds like a reasonable characterization. Note that 12 and 25 are also 5 transitive.
Looking at the \x[classification-of-k-transitive-groups] we see that the Mathieu groups are the only families of 4 and 5 transitive groups other than \x[symmetric-group]{p} and \x[alternating-group]{p}. 3-transitive is not as nice, so let's just say it is the \x[stabilizer-group] of $M_23$ and be done with it.

= k-transitive group
{parent=mathieu-group}

TODO why do we care about this?

Note that if a group is k-transitive, then it is also k-1-transitive.

= Classification of k-transitive groups
{parent=k-transitive-group}

TODO this would give a better motivation for the \x[mathieu-group]

Higher transitivity: https://mathoverflow.net/questions/5993/highly-transitive-groups-without-assuming-the-classification-of-finite-simple-g

= 2-transitive group
{parent=classification-of-k-transitive-groups}
{wiki}

= Classification of 2-transitive groups
{parent=2-transitive-group}

= Classification of 3-transitive groups
{parent=classification-of-k-transitive-groups}

Might be a bit complex: https://math.stackexchange.com/questions/698327/classification-of-triply-transitive-finite-groups

= Classification of 4-transitive groups
{parent=classification-of-k-transitive-groups}

https://en.wikipedia.org/w/index.php?title=Mathieu_group&oldid=1034060469#Multiply_transitive_groups is a nice characterization of 4 of the \x[mathieu-group]{p}.

= Classification of 5-transitive groups
{parent=classification-of-k-transitive-groups}

Apparently only \x[mathieu-group-m-12] and \x[mathieu-group-m-24].

http://www.maths.qmul.ac.uk/~pjc/pps/pps9.pdf mentions:
\Q[
The automorphism group of the extended Golay code is the 54-transitive Mathieu group $M_{24}$. This is one of only two finite 5-transitive groups other than symmetric and alternating groups
]
Hmm, is that 54, or more likely 5 and 4?

https://scite.ai/reports/4-homogeneous-groups-EAKY21 quotes https://link.springer.com/article/10.1007%2FBF01111290 which suggests that is is also another one of the Mathieu groups, https://math.stackexchange.com/questions/698327/classification-of-triply-transitive-finite-groups#comment7650505_3721840 and https://en.wikipedia.org/wiki/Mathieu_group_M12 mentions M_12.

= Classification of 6-transitive groups
{parent=classification-of-k-transitive-groups}

https://math.stackexchange.com/questions/700235/is-there-an-easy-proof-for-the-classification-of-6-transitive-finite-groups says there aren't any non-boring ones.

= Mathieu group $M_11$
{c}
{parent=mathieu-group}
{wiki=Mathieu_group_M11}

= Mathieu group $M_12$
{c}
{parent=mathieu-group}
{wiki=Mathieu_group_M12}

= Mathieu group $M_22$
{c}
{parent=mathieu-group}
{wiki=Mathieu_group_M22}

= Mathieu group $M_23$
{c}
{parent=mathieu-group}
{wiki=Mathieu_group_M23}

= Mathieu group $M_24$
{c}
{parent=mathieu-group}
{wiki=Mathieu_group_M24}

https://math.stackexchange.com/questions/698327/classification-of-triply-transitive-finite-groups

A master thesis reviewing its results: https://scholarworks.sjsu.edu/cgi/viewcontent.cgi?referer=https://www.google.com/&httpsredir=1&article=5051&context=etd_theses

= Janko group
{c}
{parent=sporadic-group}
{wiki}

= Monster group
{parent=sporadic-group}
{wiki}

\Video[https://www.youtube.com/watch?v=mH0oCDa74tE]
{title=Group theory, abstraction, and the 196,883-dimensional monster by \x[3blue1brown] (2020)}
{description=Too basic, starts motivating groups themselves, therefore does not give anything new or rare.}

= Monstrous moonshine
{parent=monster-group}
{wiki}

TODO \x[clickbait], or is it that good?

= Jordan-Holder Theorem
{parent=classification-of-finite-simple-groups}
{wiki=Composition_series#Uniqueness:_Jordan–Hölder_theorem}

Uniqueness results for the \x[composition-series] of a group.

= Composition series
{parent=classification-of-finite-simple-groups}
{wiki}

= Group extension problem
{parent=classification-of-finite-groups}
{wiki=Group_extension}

Besides the understandable Wikipedia definition, \x[video-simple-groups-abstract-algebra-by-socratica-2018] gives an understandable one:
\Q[
Given a finite group $F$ and a simple group $S$, find all groups $G$ such that $N$ is a \x[normal-subgroup] of $G$ and $G/N = S$.
]

We don't really know how to make up larger groups from smaller simple groups, which would complete the \x[classification-of-finite-groups]:
* https://math.stackexchange.com/questions/25315/how-is-a-group-made-up-of-simple-groups

In particular, this is hard because you can't just take the \x[direct-product-of-groups] to retrieve the original group: \x[relationship-between-the-quotient-group-and-direct-products]{full}.

= Ring
{disambiguate=mathematics}
{parent=group-mathematics}
{wiki}

A \x[group-mathematics] with an extra operation called multiplication which satisfies:
* \x[associative-property]
* distributes over addition (the default group operation)
* has an identity

Unlike addition, that multiplication does not need to satisfy:
* \x[commutative-property]. If this is satisfied, we can call it a \x[commutative-ring].
* existence of an inverse. If this is satisfied, we can call it a \x[division-ring].
If those are also satisfied, then we have a \x[field-mathematics].

The simplest example of a ring which is not a full fledged \x[field-mathematics] and with \x[commutative] multiplication are the \x[integer]{p}. Notably, no inverses exist except for the identity itself and -1. E.g. the inverse of 2 would be 1/2 which is not in the \x[set-mathematics].

A \x[polynomial-ring] is another example with the same properties as the \x[integer]{p}.

The simplest non-commutative ring that is not a \x[field-mathematics] is the set of all 2x2 \x[matrix]{p} of \x[real-number]{p}:
* we know that 2x2 matrix multiplication is non-commutative in general
* some 2x2 matrices have a multiplicative inverse, but others don't
Note that \x[gl-n] is not a ring because you can by addition reach the zero matrix. 

= Division ring
{parent=ring-mathematics]
{wiki}

Two ways to see it:
* a \x[ring-mathematics] where \x[inverse]{p} exist
* a \x[field-mathematics] where multiplication is not necessarily \x[commutative]

= Field
{disambiguate=mathematics}
{parent=ring-mathematics}
{wiki}

A \x[ring-mathematics] where multiplication is \x[commutative] and there is always an inverse.

A field can be seen as an \x[abelian-group] that has two group operations: addition and multiplication, and they are compatible (distributive property).

Basically the nicest, least restrictive, 2-operation type of \x[algebra].

Examples:
* \x[real-number]{p}
* \x[rational-number]{p}

= Finite field
{parent=field-mathematics}
{title2=$GF(n)$}
{wiki}

A convenient notation for the elements of $GF(n)$ of prime order is to use \x[integer]{p}, e.g. for $GF(7)$ we could write:
$$
GR(7) = \{-3, -2, -1, 0, 1, 2, 3\}
$$
which makes it clear what is the additive inverse of each element, although sometimes a notation starting from 0 is also used:
$$
GR(7) = \{0, 1, 2, 3, 4, 5, 6\}
$$

For fields of \x[prime] order, regular \x[modular-arithmetic] works as the field operation.

For non-prime order, we see that \x[modular-arithmetic] does not work because the divisors have no inverse. E.g. at order 6, 2 and 3 have no inverse, e.g. for 2:
$$
0 \times 2 = 0
1 \times 2 = 2
2 \times 2 = 4
3 \times 2 = 0
4 \times 2 = 2
5 \times 2 = 4
$$
we see that things wrap around perfecly, and 1 is never reached.

For non-prime \x[prime-power] orders however, we can find a way, see \x[finite-field-of-non-prime-order].

\Video[https://www.youtube.com/watch?v=z9bTzjy4SCg]
{title=Finite fields made easy by Randell Heyman (2015)}
{description=Good introduction with examples}

= Classification of finite fields
{parent=finite-field}

There's exactly one field per \x[prime-power], So all we need to specify a field is give its order, notated e.g. as $GF(n)$.

Every element of a finite field satisfies $x^{order} = x$.

It is interesting to compare this result philosophically with the \x[classification-of-finite-groups]: fields are more constrained as they have to have two operations, and this leads to a much simpler classification!

= Finite field of non-prime order
{parent=finite-field}

As per \x[classification-of-finite-fields] those must be of \x[prime-power] order.

\x[video-finite-fields-made-easy-by-randell-heyman-2015] at https://youtu.be/z9bTzjy4SCg?t=159 shows how for order $9 = 3 \times 3$. Basically, for order $p^n$, we take:
* each element is a polynomial in $GF(p)[x]$, $GF(p)[x]$, the \x[polynomial-over-a-field][polynomial ring over the finite field $GF(p)$] with degree smaller than $n$. We've just seen how to construct $GF(p)$ for prime $p$ above, so we're good there.
* addition works element-wise modulo on $GF(p)$
* multiplication is done modulo an \x[irreducible-polynomial] of order $n$
For a worked out example, see: \x[gf-4].

= GF(2)
{c}
{parent=finite-field}
{wiki}

= GF(4)
{c}
{parent=finite-field}
{wiki}

\x[ciro-santilli] tried to https://en.wikipedia.org/w/index.php?title=Finite_field&type=revision&diff=1044934168&oldid=1044905041[add this example to Wikipedia], but revert, so here we are.

This is a good first example of a field of a \x[finite-field-of-non-prime-order], this one is a \x[prime-power] order instead.

$4 = 2^2$, so one way to represent the elements of the field will be the to use the 4 polynomials of degree 1 over \x[gf-2]:
* 0X + 0
* 0X + 1
* 1X + 0
* 1X + 1

Note that we refer in this definition to anther field, but that is fine, because we only refer to fields of \x[prime] order such as \x[gf-2], because we are dealing with \x[prime-power]{p} only. And we have already defined fields of prime order easily previously with \x[modular-arithmetic].

Over GF(2), there is only one \x[irreducible-polynomial] of degree 2:
$$X^2+X+1$$

Addition is defined element-wise with \x[modular-arithmetic] modulo 2 as defined over GF(2), e.g.:
$$(1X + 0) + (1X + 1) = (1 + 1)X + (0 + 1) = 0X + 1$$

Multiplication is done modulo $X^2+X+1$, which ensures that the result is also of degree 1.

For example first we do a regular multiplication:
$$(1X + 0) \times (1X + 1) = (1 \times 1)X^2 + (1 \times 1)X + (0 \times 1)X + (0 \times 1) = 1X^2 + 1X + 0$$

Without modulo, that would not be one of the elements of the field anymore due to the $1X^2$!

So we take the modulo, we note that:
$$1X^2 + 1X + 0 = 1(X^2+X+1) + (0X + 1)$$
and by the definition of modulo:
$$(1X^2 + 1X + 0) \mod (X^2+X+1) = (0X + 1)$$
which is the final result of the multiplication.

TODO show how taking a reducible polynomial for modulo fails. Presumably it is for a similar reason to why things fail for the prime case.

= Vector field
{parent=field-mathematics}
{wiki}

= Algebra over a field
{parent=vector-field}
{wiki}

A \x[vector-field] with a \x[bilinear-map] into itself, which we can also call a "vector product".

Note that the vector product does not have to be neither \x[associative] nor \x[commutative].

Examples: https://en.wikipedia.org/w/index.php?title=Algebra_over_a_field&oldid=1035146107#Motivating_examples
* \x[complex-number]{p}, i.e. \x[r-2] with complex number multiplication
* \x[r-3] with the \x[cross-product]
* \x[quaternion]{p}, i.e. \x[r-4] with the quaternion multiplication

= Division algebra
{parent=algebra-over-a-field}
{wiki}

An \x[algebra-over-a-field] where \x[division] exists.

= Frobenius theorem
{c}
{disambiguate=real division algebras}
{parent=division-algebra}
{wiki}

= Classification of associative real division algebras
{synonym}

There are 3: \x[real-number]{p}, \x[complex-number]{p} and \x[quaternion]{p}.

Notably, the \x[octonion]{p} are not \x[associative].

= Associative property
{parent=algebra}
{wiki}

= Associative
{synonym}

= Applied mathematics
{parent=mathematics}
{wiki}

= Applied mathematician
{synonym}

= Calculus
{parent=mathematics}
{wiki}

Well summarized as "the branch of mathematics that deals with \x[limit-mathematics]{p}.

= Mathematical analysis
{parent=calculus}
{wiki}

= Analytical
{synonym}

An fancy name for \x[calculus], with the "more advanced" connotation.

= Limit
{disambiguate=mathematics}
{parent=calculus}
{wiki}

= Limit
{synonym}

The fundamental concept of \x[calculus]!

The reason why the epsilon delta definition is so venerated is that it fits directly into well known methods of the \x[formalization-of-mathematics], making the notion completely precise.

= Convergent series
{parent=limit-mathematics}
{wiki}

= Convergence
{disambiguate=mathematics}
{synonym}

= Converges
{disambiguate=mathematics}
{synonym}

= Convergent
{disambiguate=mathematics}
{synonym}

= Continuous function
{parent=limit-mathematics}
{wiki}

= Continuity
{synonym}

= Continuous
{synonym}

= Continuous problems are simpler than discrete ones
{parent=continuous-function}

This is a general philosophy that \x[ciro-santilli], and likely others, observes over and over.

Basically, \x[continuity], or higher order conditions like \x[differentiability] seem to impose greater constraints on problems, which make them more solvable.

Some good examples of that:
* complex \x[discrete] problems:
  * \x[classification-of-finite-groups]
* simple \x[continuous] problems:
  * characterization of \x[lie-group]{p}

= Discrete
{parent=continuous-function}

Something that is very not \x[continuous].

Notably studied in \x[discrete-mathematics].

= Discretization
{parent=discrete}
{wiki}

= Discretize
{synonym}

= Infinity
{parent=limit-mathematics}
{title2=$\infty$}
{wiki}

= Infinite
{synonym}

= Finite
{synonym}

There are a few related concepts that are called infinity in \x[mathematics]:
* \x[limit]{p} that are greater than any number
* the \x[cardinality] of a \x[set] that does not have a finite number of elements
* in some number systems, there is an explicit "element at infinity" that is not a \x[limit], e.g. \x[projective-geometry]

= L'Hôpital's rule
{parent=limit-mathematics}
{title2=limit of a ratio}
{wiki}

= Derivative
{parent=calculus}
{wiki}

= Chain rule
{parent=derivative}
{wiki}

= Multivariable chain rule
{parent=chain-rule}

= Differentiable function
{parent=derivative}
{wiki}

= Differentiable
{synonym}

= Differentiability
{synonym}

= Smoothness
{parent=differentiable-function}
{wiki}

= Infinitely differentiable function
{parent=differentiable-function}
{title2=$C^{\infty}$}

= Bump function
{parent=infinitely-differentiable-function}
{wiki}

= Flat top bump function
{parent=bump-function}

https://math.stackexchange.com/questions/1786964/is-it-possible-to-construct-a-smooth-flat-top-bump-function

= Maxima and minima
{parent=derivative}
{wiki}

= Lifegard problem
{parent=maxima-and-minima}

https://pumphandle.consulting/2020/09/04/the-lifeguard-problem-solved/

= Saddle point
{parent=maxima-and-minima}
{wiki}

= Newton dot notation
{c}
{parent=derivative}

= Partial derivative
{parent=derivative}
{wiki}

= Partial derivative symbol
{parent=partial-derivative}
{title2=$\partial$}

Nope, it is not a \x[greek-letter], notably it is not a lowercase \x[delta]. It is just some random made up symbol that looks like a \x[letter-d]. Which is of course derived from \x[delta], which is why it is all so damn confusing.

= Total derivative
{parent=derivative}
{wiki}

The total derivative of a function assigns for every point of the domain a linear map with same domain, which is the best linear approximation to the function value around this point, i.e. the tangent plane.

E.g. in 1D:
$$
Total derivative = D[f(x_0)](x) = f(x_0) + \pdv{f}{x}(x_0) \times x
$$
and in 2D:
$$
D[f(x_0, y_0)](x, y) = f(x_0, y_0) + \pdv{f}{x}(x_0, y_0) \times x + \pdv{f}{y}(x_0, y_0) \times y
$$

= Directional derivative
{c}
{parent=derivative}
{wiki}

= Riemann integral
{c}
{parent=calculus}
{wiki}

= Lebesgue integral
{c}
{parent=calculus}
{wiki=Lebesgue_integration}

"More complex and general" integral. Matches "Riemann" for "simple functions", but also \x[lebesgue-integral-vs-riemann-integral][works for some "funkier" functions that Riemann does not work for].

= Lebesgue integral vs Riemann integral
{c}
{parent=lebesgue-integral}

Advantages over Riemann:
* \x[lebesgue-integral-of-lp-is-complete-but-riemann-isn-t].
* https://youtu.be/PGPZ0P1PJfw?t=710 you are able to switch the order of integrals and limits of function sequences on non-uniform convergence. TODO why do we care? This is linked to the \x[fourier-series] of course, but concrete example?

\Video[https://youtube.com/watch?v=PGPZ0P1PJfw]
{title="Riemann integral vs. Lebesgue integral" by The Bright Side Of Mathematics (2018)}
{description=https://youtube.com/watch?v=PGPZ0P1PJfw&t=808 shows how Lebesgue can be visualized as a partition of the function range instead of domain, and then you just have to be able to measure the size of pre-images.

One advantage of that is that the range is always one dimensional.

But the main advantage is that having infinitely many discontinuities does not matter.

Infinitely many discontinuities can make the Riemann partitioning diverge.

But in Lebesgue, you are instead measuring the size of preimage, and to fit infinitely many discontinuities in a finite domain, the size of this preimage is going to be zero.

So then the question becomes more of "how to define the measure of a subset of the domain".

Which is why we then fall into \x[measure-theory]!
}

= Real world applications of the Lebesgue integral
{parent=lebesgue-integral-vs-riemann-integral}

In "practice" it is likely "useless", because the functions that it can integrate that Riemann can't are just too funky to appear in practice :-)

Its value is much more indirect and subtle, as in "it serves as a solid basis of \x[quantum-mechanics]" due to the definition of \x[hilbert-space]{p}.

Bibliography:
* https://math.stackexchange.com/questions/53121/how-do-people-apply-the-lebesgue-integration-theory
* https://www.quora.com/What-are-some-real-life-applications-of-Lebesgue-Integration

= Lebesgue measurable
{c}
{parent=lebesgue-integral}

= Lebesgue integral of $\LP$ is complete but Riemann isn't
{c}
{parent=lebesgue-integral}

$\LP$ is:
* \x[complete-metric-space][complete] under the Lebesgue integral, this result is may be called the \x[riesz-fischer-theorem]
* not complete under the \x[riemann-integral]: https://math.stackexchange.com/questions/397369/space-of-riemann-integrable-functions-not-complete

And then this is why \x[quantum-mechanics] basically lives in \x[l2]: not being complete makes no sense physically, it would mean that you can get closer and closer to states that don't exist!

TODO intuition

= Riesz-Fischer theorem
{c}
{parent=lebesgue-integral-of-lp-is-complete-but-riemann-isn-t}
{wiki=Riesz–Fischer_theorem}

A measurable function defined on a closed interval is square integrable (and therefore in \x[l2]) if and only if \x[fourier-series] converges in \x[l2] norm the function:
$$
\lim_{N \to \infty} \left \Vert S_N f - f \right \|_2 = 0
$$

= $\LP$ is complete
{parent=riesz-fischer-theorem}

TODO

= Fourier basis is complete for $\LTwo$
{c}
{parent=riesz-fischer-theorem}
{id=fourier-basis-is-complete-for-l2}

https://math.stackexchange.com/questions/316235/proving-that-the-fourier-basis-is-complete-for-cr-2-pi-c-with-l2-norm

\x[riesz-fischer-theorem] is a norm version of it, and \x[carleson-s-theorem] is stronger pointwise almost everywhere version.

Note that the \x[riesz-fischer-theorem] is weaker because the pointwise limit could not exist just according to it: \x[lp-norm-sequence-convergence-does-not-imply-pointwise-convergence].

= $L^p$ norm sequence convergence does not imply pointwise convergence
{id=lp-norm-sequence-convergence-does-not-imply-pointwise-convergence}
{parent=fourier-basis-is-complete-for-l2}

https://math.stackexchange.com/questions/138043/does-convergence-in-lp-imply-convergence-almost-everywhere

There are explicit examples of this. We can have ever thinner disturbances to convergence that keep getting less and less area, but never cease to move around.

If it does converge pointwise to something, then it must match of course.

= Carleson's theorem
{c}
{parent=fourier-basis-is-complete-for-l2}
{wiki}

The \x[fourier-series] of an \x[l2] function (i.e. the function generated from the infinite sum of weighted sines) converges to the function pointwise almost everywhere.

The theorem also seems to hold (maybe trivially given the transform result) for the \x[fourier-series] (TODO if trivially, why trivially).

Only proved in 1966, and known to be a hard result without any known simple proof.

This theorem of course implies that \x[fourier-basis-is-complete-for-l2], as it explicitly constructs a decomposition into the Fourier basis for every single function.

TODO vs \x[riesz-fischer-theorem]. Is this just a stronger pointwise result, while Riesz-Fischer is about norms only?

One of the many \x[fourier-inversion-theorem]{p}.

= Lp space
{parent=lebesgue-integral-of-lp-is-complete-but-riemann-isn-t}
{wiki}

= $\LP$
{synonym}
{title2}

Integrable functions to the power $p$, usually and in this text assumed under the \x[lebesgue-integral] because: \x[lebesgue-integral-of-lp-is-complete-but-riemann-isn-t]

= $L^1$
{parent=lp-space}
{id=l1-space}

= $\LTwo$
{parent=lp-space}
{id=l2}

\x[lp] for $p == 2$.

$\LTwo$ is by far the most important of $\LP$ because it is \x[mathematical-formulation-of-quantum-mechanics][quantum mechanics states] live, because the total probability of being in any state has to be 1!

\x[l2] has some crucially important properties that other $\LP$ don't (TODO confirm and make those more precise):
* it is the only $\LP$ that is \x[hilbert-space] because it is the only one where an inner product compatible with the metric can be defined:
  * https://math.stackexchange.com/questions/2005632/l2-is-the-only-hilbert-space-parallelogram-law-and-particular-ft-gt
  * https://www.quora.com/Why-is-L2-a-Hilbert-space-but-not-Lp-or-higher-where-p-2
* \x[fourier-basis-is-complete-for-l2], which is great for solving \x[differential-equation]

= Plancherel theorem
{c}
{parent=l2}

Some sources say that this is just the part that says that the \x[norm-mathematics] of a \x[l2] function is the same as the norm of its \x[fourier-transform].

Others say that this theorem actually says that the \x[fourier-transform] is \x[bijective].

The comment at https://math.stackexchange.com/questions/446870/bijectiveness-injectiveness-and-surjectiveness-of-fourier-transformation-define/1235725#1235725 may be of interest, it says that the \x[bijection] statement is an easy consequence from the \x[norm-mathematics] one, thus the confusion.

TODO does it require it to be in \x[l1-space] as well? \x[wikipedia] https://en.wikipedia.org/w/index.php?title=Plancherel_theorem&oldid=987110841 says yes, but https://courses.maths.ox.ac.uk/node/view_material/53981 does not mention it.

= The Fourier transform is a bijection in $L^2$
{parent=plancherel-theorem}

As mentioned at \x[plancherel-theorem]{full}, some people call this part of \x[plancherel-theorem], while others say it is just a corollary.

This is an important fact in \x[quantum-mechanics], since it is because of this that it makes sense to talk about \x[position-and-momentum-space] as two dual representations of the \x[wave-function] that contain the exact same amount of information.

= Every Riemann integrable function is Lebesgue integrable
{parent=plancherel-theorem}

But only for the proper Riemann integral: https://math.stackexchange.com/questions/2293902/functions-that-are-riemann-integrable-but-not-lebesgue-integrable

= Measure theory
{parent=calculus}
{wiki=Measure_(mathematics)}

Main motivation: \x[lebesgue-integral].

The Bright Side Of Mathematics 2019 playlist: https://www.youtube.com/watch?v=xZ69KEg7ccU&list=PLBh2i93oe2qvMVqAzsX1Kuv6-4fjazZ8j

The key idea, is that we can't define a measure for the power set of R. Rather, we must select a large measurable subset, and the Borel sigma algebra is a good choice that matches intuitions.

= Fourier series
{c}
{parent=calculus}
{wiki}

Approximates an original function by sines. If the function is "well behaved enough", the approximation is to arbitrary precision.

\x[fourier]'s original motivation, and a key application, is \x[solving-partial-differential-equations-with-the-fourier-series].

Can only be used to approximate for periodic functions (obviously from its definition!). The \x[fourier-transform] however overcomes that restriction:
* https://math.stackexchange.com/questions/1115240/can-a-non-periodic-function-have-a-fourier-series
* https://math.stackexchange.com/questions/1378633/every-function-can-be-represented-as-a-fourier-series

The Fourier series behaves really nicely in \x[l2], where it always exists and converges pointwise to the function: \x[carleson-s-theorem].

\Video[https://www.youtube.com/watch?v=r6sGWTCMz2k]
{title=But what is a Fourier series? From heat flow to circle drawings | DE4 by \x[3blue1brown] (2019)}
{description=Amazing 2D visualization of the decomposition of complex functions.}

= Applications of the Fourier series
{parent=fourier-series}

= Solving partial differential equations with the Fourier series
{parent=applications-of-the-fourier-series}

See: https://math.stackexchange.com/questions/579453/real-world-application-of-fourier-series/3729366#3729366

\x[separation-of-variables] of certain equations like the \x[heat-equation] and \x[wave-equation] are solved immediately by calculating the \x[fourier-series] of initial conditions!

Other basis besides the Fourier series show up for other equations, e.g.:
* \x[bessel-function]
* \x[hermite-polynomials]

= Discrete Fourier transform
{title2=DFT}
{parent=fourier-series}
{wiki}

= Fourier transform
{parent=fourier-series}
{c}
{wiki}

Continuous version of the \x[fourier-series].

Can be used to represent functions that are not periodic: https://math.stackexchange.com/questions/221137/what-is-the-difference-between-fourier-series-and-fourier-transformation while the \x[fourier-series] is only for periodic functions.

Of course, every function defined on a finite line segment (i.e. a \x[compact-space]).

Therefore, the \x[fourier-transform] can be seen as a generalization of the \x[fourier-series] that can also decompose functions defined on the entire \x[real-line].

As a more concrete example, just like the \x[fourier-series] is how you solve a the \x[heat-equation] on a line segment with \x[dirichlet-boundary-condition]{p} as shown at: \x[solving-partial-differential-equations-with-the-fourier-series]{full}, the \x[fourier-transform] is what you need to solve the problem when the \x[domain-function] is the entire \x[real-line].

= Multidimensional Fourier transform
{parent=fourier-transform}

Lecture notes:
* http://www.robots.ox.ac.uk/~az/lectures/ia/lect2.pdf Lecture 2: 2D Fourier transforms and applications by A. Zisserman (2014)

\Video[https://www.youtube.com/watch?v=v743U7gvLq0]
{title=How the 2D FFT works by Mike X Cohen (2017)}
{description=Animations showing how the 2D Fourier transform looks like for simple inpuf functions.}

= Fourier inversion theorem
{parent=fourier-transform}
{wiki}

A set of theorems that prove under different conditions that the \x[fourier-transform] has an inverse for a given space, examples:
* \x[carleson-s-theorem] for \x[l2]

= Laplace transform
{c}
{parent=fourier-transform}

\Video[https://www.youtube.com/watch?v=7UvtU75NXTg]
{title="The Laplace Transform: A Generalized Fourier Transform" by Steve Brunton (2020)}
{description=Explains how the Laplace transform works for functions that do not go to zero on infinity, which is a requirement for the \x[fourier-transform]. No applications in that video yet unfortunately.}

= History of the Fourier series
{parent=fourier-series}

First published by Fourier in 1807 to solve the \x[heat-equation].

= Topology
{parent=calculus}
{wiki}

= Topological
{synonym}

Topology is the plumbing of \x[calculus].

The key concept of topology is a \x[neighbourhood-mathematics].

It allows defining \x[limit-mathematics] and \x[continuity], without the need to specify a precise numerical value to the distance between two points with a \x[metric-mathematics].

= Covering space
{parent=topology}
{wiki}

Basically it is a larger space such that there exists a \x[surjection] from the large space onto the smaller space, while still being compatible with the \x[topology] of the small space.

We can characterize the cover by how injective the function is. E.g. if two elements of the large space map to each element of the small space, then we have a \x[double-cover] and so on.

= Double cover
{parent=covering-space}

= Neighbourhood
{disambiguate=mathematics}
{parent=topology}
{wiki}

The key concept of \x[topology].

= Topological space
{parent=topology}
{wiki}

= Manifold
{parent=topology}
{wiki}

We map each point and a small enough \x[neighbourhood-mathematics] of it to \x[r-n], so we can talk about the manifold points in terms of coordinates.

Does not require any further structure besides a consistent \x[topological] map. Notably, does not require \x[metric-mathematics] nor an addition operation to make a \x[vector-space].

Manifolds are \x[good][cool].

A notable example of a \x[non-euclidean-geometry] manifold is the space of \x[generalized-coordinate]{p} of a \x[lagrangian]. For example, in a problem such as the \x[double-pendulum], some of those generalized coordinates could be angles, which wrap around and thus are not \x[euclidean].

= Atlas
{disambiguate=topology}
{parent=manifold}
{wiki}

Collection of \x[coordinate-chart]{p}.

The key element in the definition of a \x[manifold].

= Coordinate chart
{parent=atlas-topology}

= Covariant derivative
{parent=manifold}
{wiki}

A generalized definition of \x[derivative] that works on \x[manifold]{p}.

TODO: how does it maintain a single value even across different \x[coordinate-chart]{p}?

= Tangent space
{parent=manifold}
{wiki}

TODO what's the point of it.

Bibliography:
* https://www.youtube.com/watch?v=j1PAxNKB_Zc Manifolds #6 - Tangent Space (Detail) by WHYB maths (2020). This is worth looking into.
  * https://www.youtube.com/watch?v=oxB4aH8h5j4 actually gives a more concrete example. Basically, the vectors are defined by saying "we are doing the \x[directional-derivative] of any function along this direction".

    One thing to remember is that of course, the most convenient way to define a function $f$ and to specify a direction, is by using one of the \x[coordinate-chart]{p}.

    We can then just switch between charts by change of basis.
* http://jakobschwichtenberg.com/lie-algebra-able-describe-group/ by \x[jakob-schwichtenberg]
* https://math.stackexchange.com/questions/1388144/what-exactly-is-a-tangent-vector/2714944 What exactly is a tangent vector? on \x[stack-exchange]

= Tangent vector to a manifold
{parent=tangent-space}

A member of a \x[tangent-space].

= One-form
{parent=manifold}
{wiki}

https://www.youtube.com/watch?v=tq7sb3toTww&list=PLxBAVPVHJPcrNrcEBKbqC_ykiVqfxZgNl&index=19 mentions that it is a bit like a \x[dot-product] but for a \x[tangent-vector-to-a-manifold]: it measures how much that vector \x[derivative][derives] along a given direction.

= Metric
{disambiguate=mathematics}
{parent=topology}
{title2=d(x, y)
{wiki}

= Distance
{synonym}

= Metric
{synonym}

A metric is a function that give the distance between any two elements of a space.

A metric may be induced from a \x[norm] as shown at: \x[metric-induced-from-a-norm]{full}.

Because a \x[norm-induced-by-an-inner-product][norm can be induced by an inner product], and the \x[inner-product] given by the \x[matrix-representation-of-a-positive-definite-symmetric-bilinear-form], in simple cases metrics can also be represented by a \x[matrix].

= Metric space
{parent=metric-mathematics}
{wiki}

Canonical example: \x[euclidean-space].

= Metric space vs normed vector space vs inner product space
{parent=metric-space}

TODO examples:
* \x[metric-space] that is not a \x[normed-vector-space]

\Image[https://upload.wikimedia.org/wikipedia/commons/7/74/Mathematical_Spaces.png]

= Normed vector space
{parent=metric-space}
{wiki}

= Inner product space
{parent=normed-vector-space}
{wiki}

Subcase of a \x[normed-vector-space], therefore also necessarily a \x[vector-space].

= Inner product
{parent=inner-product-space}
{wiki}

Appears to be analogous to the \x[dot-product], but also defined for \x[infinite-dimensions].

= Norm
{disambiguate=mathematics}
{parent=metric-space}
{title2=|x|}

= Norm
{synonym}

Vs \x[metric]: a norm is the size of one element. A \x[metric] is the distance between two elements.

= Norm induced by an inner product
{parent=metric-space}
{wiki}

= Norm induced by the inner product
{synonym}

An \x[inner-product] $x \dot y$ induces a \x[norm] with:
$$
d(x,y) = <>
$$

= Metric induced from a norm
{parent=norm-mathematics}

In a \x[vector-space], a \x[metric] may be induced from a norm by using \x[subtraction]:
$$
d(x, y) = |x - y|
$$

= Complete metric space
{parent=metric-space}
{wiki}

In plain English: the space has no visible holes. If you start walking less and less on each step, you always converge to something that also falls in the space.

One notable example where completeness matters: \x[lebesgue-integral-of-lp-is-complete-but-riemann-isn-t].

= Compact space
{parent=topology}
{wiki}

= Dense set
{parent=topology}
{wiki}

= Simply connected space
{parent=topology}
{wiki}

= Simply connected
{synonym}

= Homotopy
{parent=topology}
{wiki}

= Homotopic
{synonym}

= Generalized Poincaré conjecture
{parent=homotopy}

There are two cases:
* (topological) manifolds
* differential manifolds

Questions: are all compact manifolds / differential manifolds homotopic / diffeomorphic to the sphere in that dimension?
* for topological manifolds: this is a generalization of the \x[poincare-conjecture].

  Original problem posed, $n = 3$ for topological manifolds.

  \x[millennium-prize-problems]{p=0}.

  Last to be proven, only the 4-differential manifold case missing as of 2013.

  Even the truth for all $n > 4$ was proven in the 60's!

  Why is low dimension harder than high dimension?? Surprise!

  AKA: classification of compact 3-manifolds. The result turned out to be even simpler than compact 2-manifolds: there is only one, and it is equal to the 3-sphere.

  For dimension two, we know there are infinitely many: \x[classification-of-closed-surfaces]
* for differential manifolds:

  Not true in general. First counter example is $n = 7$. Surprise: what is special about the number 7!?

  Counter examples are called \x[exotic-sphere]{p}.

  Totally unpredictable count table:
  | Dimension    | 1 | 2 | 3 | 4 | 5 | 6 | 7  | 8 | 9 | 10 | 11  | 12 | 13 | 14 | 15    | 16 | 17 | 18 | 19     | 20 |
  | Smooth types | 1 | 1 | 1 | ? | 1 | 1 | 28 | 2 | 8 | 6  | 992 | 1  | 3  | 2  | 16256 | 2  | 16 | 16 | 523264 | 24 |
  $n = 4$ is an open problem, there could even be infinitely many. Again, why are things more complicated in lower dimensions??

= Exotic sphere
{parent=generalized-poincare-conjecture}
{wiki}

= Poincaré conjecture
{c}
{parent=generalized-poincare-conjecture}
{wiki}

= Classification of closed surfaces
{parent=generalized-poincare-conjecture}

* https://en.wikipedia.org/wiki/Surface_(topology)#Classification_of_closed_surfaces
* http://www.proofwiki.org/wiki/Classification_of_Compact_Two-Manifolds

So simple!! You can either:
* cut two holes and glue a handle. This is easy to visualize as it can be embedded in \x[r-3]: you just get a \x[torus], then a double torus, and so on
* cut a single hole and glue  a\x[mobius-strip] in it. Keep in mind that this is possible because the \x[mobius-strip] has a single boundary just like the hole you just cut. This leads to another infinite family that starts with:
  * 1: \x[real-projective-plane]
  * 2: \x[klein-bottle]

A handle cancels out a \x[mobius-strip], so adding one of each does not lead to a new object.

You can glue a Mobius strip into a single hole in dimension larger than 3! And it gives you a Klein bottle!

Intuitively speaking, they can be sees as the smooth surfaces in N-dimensional space (called an embedding), such that deforming them is allowed. 4-dimensions is enough to embed cover all the cases: 3 is not enough because of the Klein bottle and family.

= Torus
{c}
{parent=classification-of-closed-surfaces}
{wiki}

= Möbius strip
{c}
{parent=classification-of-closed-surfaces}
{wiki}

= Klein bottle
{c}
{parent=classification-of-closed-surfaces}
{wiki}

\x[sphere] with two \x[mobius-strip]{p} stuck into it as per the \x[classification-of-closed-surfaces].

= Real coordinate space
{c}
{parent=topology}
{wiki}

= $\R^n$
{synonym}
{title2}

= Real line
{parent=real-coordinate-space}
{wiki}

= $\R^1$
{synonym}
{title2}

= 1D
{synonym}

= Real plane
{parent=real-coordinate-space}

= $\R^2$
{synonym}
{title2}

= 2D
{synonym}

= Real coordinate space of dimension three
{c}
{parent=real-coordinate-space}

= $\R^3$
{synonym}
{title2}

= 3D
{synonym}

= Real coordinate space of dimension four
{c}
{parent=real-coordinate-space}

= $\R^4$
{synonym}
{title2}

= 4D
{synonym}

= Dimension
{parent=real-coordinate-space}
{wiki}

= Infinite dimensional
{parent=dimension}

= Infinite dimensions
{synonym}

https://math.stackexchange.com/questions/466707/what-are-some-examples-of-infinite-dimensional-vector-spaces

= Finite dimensional
{parent=infinite-dimensional}

= Finite dimension
{synonym}

= Euclidean space
{c}
{parent=real-coordinate-space}
{wiki}

= Euclidean
{synonym}

\x[r-n] with extra structure added to make it into a \x[metric-space]{parent}.

= Cartesian coordinate system
{c}
{parent=euclidean-space}
{wiki}

= Cartesian coordinate
{synonym}

= Polar coordinate system
{c}
{parent=euclidean-space}
{wiki}

= Polar coordinate
{synonym}

= Spherical coordinate system
{c}
{parent=polar-coordinate-system}
{wiki}

= Spherical coordinate
{synonym}

= Pythagorean theorem
{c}
{parent=euclidean-space}
{wiki}

= Non-Euclidean geometry
{c}
{parent=euclidean-space}
{wiki}

= Non-Euclidean
{synonym}

= Elliptic geometry
{parent=non-euclidean-geometry}
{wiki}

= Model of elliptic geometry
{parent=elliptic-geometry}

= Projective elliptic geometry
{parent=model-of-elliptic-geometry}

= Projective model of elliptic geometry
{synonym}

Each elliptic space can be modelled with a \x[real-projective-space]. The best thing is to just start thinking about the \x[real-projective-plane].

= Hyperbolic gemoetry
{parent=non-euclidean-geometry}
{wiki}

= Hyperbolic functions
{parent=hyperbolic-gemoetry}
{wiki}

= Hyperbolic sine
{parent=hyperbolic-functions}

= sinh
{synonym}

= Hyperbolic cossine
{parent=hyperbolic-functions}

= cosh
{synonym}

= Distribution
{disambiguate=mathematics}
{parent=calculus}

Generalize \x[function-mathematics]{p} to allow adding some useful things which people wanted to be classical functions but which are not,

It therefore requires you to redefine and reprove all of calculus.

For this reason, most people are tempted to assume that all the hand wavy intuitive arguments \x[undergrad] teachers give are true and just move on with life. And they generally are.

One notable example where distributions pop up are the \x[eigenvector]{p} of the \x[position-operator] in \x[quantum-mechanics], which are given by \x[dirac-delta-function]{p}, which is most commonly rigorously defined in terms of \x[distribution-mathematics]{p}.

Distributions are also defined in a way that allows you to do calculus on them. Notably, you can define a \x[derivative], and the derivative of the \x[heaviside-step-function] is the \x[dirac-delta-function].

= Dirac delta function
{c}
{parent=distribution-mathematics}
{wiki}

The "0-width" pulse \x[distribution-mathematics] that integrates to a step.

There's not way to describe it as a classical \x[function-mathematics], making it the most important example of a \x[distribution-mathematics].

Applications:
* \x[position-operator] in \x[quantum-mechanics]. It's not a coincidence that the function is named after \x[paul-dirac].

= Green's function
{c}
{parent=dirac-delta-function}
{wiki}

= Heaviside step function
{c}
{parent=dirac-delta-function}
{wiki}

= Complex analysis
{parent=calculus}
{wiki}

The surprising thing is that a bunch of results are simpler in complex analysis!

= Holomorphic function
{parent=complex-analysis}
{wiki}

Being a complex holomorphic function is an extremely strong condition.

The existence of the first derivative implies the existence of all derivatives.

Another extremely strong consequence is the \x[identity-theorem].

"Holos" means "entire" in Greek, so maybe this is a reference to the fact that due to the identity theorem, knowing the function on a small open ball implies knowing the function everywhere.

= Analytic continuation
{parent=complex-analysis}
{wiki}

\x[visualizing-the-riemann-hypothesis-and-analytic-continuation-by-3blue1brown-2016] is a good quick visual non-mathematical introduction is to it.

The key question is: how can this continuation be unique since we are defining the function outside of its original domain?

The answer is: due to the \x[identity-theorem].

= Visualizing the Riemann hypothesis and analytic continuation by 3Blue1Brown (2016)
{parent=analytic-continuation}

Good ultra quick visual non-mathematical introduction to the Riemann hypothesis and analytic continuation.

\Video[http://youtube.com/watch?v=sD0NjbwqlYw]

= Identity theorem
{parent=analytic-continuation}
{wiki}

Essentially, defining an \x[holomorphic-function] on any open subset, no matter how small, also uniquely defines it everywhere.

This is basically why it makes sense to talk about \x[analytic-continuation] at all.

One way to think about this is because the \x[taylor-series] matches the exact value of an holomorphic function no matter how large the difference from the starting point.

Therefore a holomorphic function basically only contains as much information as a countable sequence of numbers.

= Riemann zeta function
{c}
{parent=identity-theorem}
{wiki}

= Riemann hypothesis
{c}
{parent=riemann-zeta-function}
{wiki}

\x[visualizing-the-riemann-hypothesis-and-analytic-continuation-by-3blue1brown-2016] is a good quick visual non-mathematical introduction is to it.

One of the \x[millennium-prize-problems]{parent} and \x[hilbert-s-problems]{parent}.

= Hilbert space
{c}
{parent=calculus}
{wiki}

Key for \x[quantum-mechanics], see: \x[mathematical-formulation-of-quantum-mechanics], the most important example by far being \x[l2].

= Complete basis
{parent=hilbert-space}

Finding a complete basis such that each vector solves a given \x[differential-equation] is the basic method of solving \x[partial-differential-equation] through \x[separation-of-variables].

The first example of this you must see is \x[solving-partial-differential-equations-with-the-fourier-series].

Notable examples:
* \x[fourier-series]{child} for the \x[heat-equation] as shown at \x[fourier-basis-is-complete-for-l2] and \x[solving-partial-differential-equations-with-the-fourier-series]
* \x[hermite-functions]{child} for the \x[quantum-harmonic-oscillator]
* \x[legendre-polynomials]{child} for \x[laplace-s-equation] in \x[spherical-coordinate]{p}
* \x[bessel-function]{child} for the \x[2d-wave-equation-on-a-circular-domain] in \x[polar-coordinate]{p}

= Differential equation
{parent=calculus}
{wiki}

= Euler number
{c}
{parent=differential-equation}
{title2=$e$}
{wiki}

= Natural logarithm
{parent=euler-number}
{title2=$ln(n)$, $log_e(n)$}
{wiki}

= Euler-Mascheroni constant
{c}
{parent=natural-logarithm}
{wiki=Euler–Mascheroni constant}

\x[convergence-mathematics]{c}: https://math.stackexchange.com/questions/629630/simple-proof-euler-mascheroni-gamma-constant

= Linear differential equation
{parent=differential-equation}
{wiki}

The name is a bit obscure if you don't think in very generalized terms right out of the gate. It refers to a \x[linear-polynomial] of \x[multivariate-polynomial][multiple variables], which by definition must have the super simple form of:
$$
f(x_0, x_1, ..., x_n) = c_0x_0 + c_1x_1 + ... + c_nx_n + k
$$
and then we just put the unknown $y$ and each derivative into that simple polynomial:
$$
f(y(x), y'(x), ..., y^{(n)}(x)) = c_0y + c_1y' + ... + c_ny^{(n)} + k
$$
except that now the $c_i$ are not just constants, but they can also depend on the argument $x$ (but not on $y$ or its derivatives).

Explicit solutions exist for the very specific cases of:
* constant coefficients, any degree. These were known for a long time, and are were studied when \x[ciro-santilli-s-formal-education][Ciro was at university] in the \x[university-of-sao-paulo].
* degree 1 and any coefficient

= Holonomic function
{parent=linear-differential-equation}
{wiki}

= Ordinary differential equation
{parent=differential-equation}
{title2=ODE}
{wiki}

= System of ordinary differential equations
{parent=ordinary-differential-equation}

= System of linear ordinary differential equations
{parent=system-of-ordinary-differential-equations}

= Partial differential equation
{parent=differential-equation}
{wiki}

= PDE
{c}
{title2}
{synonym}

= Analytical method to solve a partial differential equation
{parent=partial-differential-equation}

* \x[how-to-use-lie-groups-to-solve-differential-equations]{child}

= Separation of variables
{parent=analytical-method-to-solve-a-partial-differential-equation}
{wiki}

Technique to solve \x[partial-differential-equation]{p}

Naturally leads to the \x[fourier-series], see: \x[solving-partial-differential-equations-with-the-fourier-series], and to other analogous expansions:

One notable application is the solution of the \x[schrodinger-equation] via the \x[time-independent-schrodinger-equation].

Bibliography:
* https://math.libretexts.org/Bookshelves/Differential_Equations/Book%3A_Differential_Equations_for_Engineers_(Lebl)/4%3A_Fourier_series_and_PDEs/4.06%3A_PDEs_separation_of_variables_and_the_heat_equation on \x[libretexts] for the \x[heat-equation]

= Numerical method to solve a partial differential equation
{parent=partial-differential-equation}
{wiki=Numerical_methods_for_partial_differential_equations}

= Numerical methods to solve partial differential equations
{synonym}

The \x[finite-element-method] is one of the most common ways to solve PDEs in practice.

= Variational formulation of a partial differential equation
{parent=numerical-method-to-solve-a-partial-differential-equation}

https://www.cis.upenn.edu/~cis515/cis515-12-sl11.pdf

Used for example in \x[freefem] and \x[fenics-project] as the input description of the PDEs, TODO why.

= Weak solution
{parent=variational-formulation-of-a-partial-differential-equation}
{wiki}

= Finite element method
{parent=numerical-method-to-solve-a-partial-differential-equation}
{wiki}

Used to solve \x[partial-differential-equation].

TODO understand, give intuition, justification of bounds and \x[javascript] demo.

= Important partial differential equation
{parent=partial-differential-equation}

The majority likely comes from \x[physics]:
* \x[heat-equation]{child}
* \x[wave-equation]{child}
* \x[maxwell-s-equations]{child}
* \x[schrodinger-equation]{child}
* \x[navier-stokes-equations]{child}

= Laplace's equation
{c}
{parent=important-partial-differential-equation}
{wiki}

Like a \x[heat-equation] but for functions without time dependence, space-only.

TODO confirm: does the solution of the heat equation always converge to the solution of the Laplace equation as time tends to infinity?

In one dimension, the Laplace equation is boring as it is just a straight line since the second derivative must be 0. That also matches our intuition of the limit solution of the heat equation.

Uniqueness: \x[uniqueness-theorem-for-poisson-s-equation].

= Legendre polynomials
{c}
{parent=laplace-s-equation}

Show up when solving the \x[laplace-s-equation] on \x[spherical-coordinate]{p} by \x[separation-of-variables], which leads to the \x[differential-equation] shown at: https://en.wikipedia.org/w/index.php?title=Legendre_polynomials&oldid=1018881414#Definition_via_differential_equation[].

= Poisson's equation
{c}
{parent=laplace-s-equation}
{wiki}

Generalization of \x[laplace-s-equation] where the value is not necessarily 0.

= Uniqueness theorem for Poisson's equation
{c}
{parent=poisson-s-equation}
{wiki}

= Harmonic function
{parent=laplace-s-equation}
{wiki}

A solution to \x[laplace-s-equation].

= Spherical harmonic
{parent=harmonic-function}
{wiki=Spherical_harmonics}

Correspond to the angular part of \x[laplace-s-equation] in spherical coordinates after using \x[separation-of-variables] as shown at: https://en.wikipedia.org/wiki/Spherical_harmonics#Laplace's_spherical_harmonics

= Heat equation
{parent=important-partial-differential-equation}
{wiki}

Besides being useful in engineering, it was very important historically from a "development of mathematics point of view", e.g. \x[history-of-the-fourier-series][it was the initial motivation for the Fourier series].

Some interesting properties:
* TODO confirm: for a fixed boundary condition that does not depend on time, the solutions always approaches one specific equilibrium function.

  This is in contrast notably with the \x[wave-equation], which can oscillate forever.
* TODO: for a given point, can the temperature go down and then up, or is it always monotonic with time?
* information propagates instantly to infinitely far. Again in contrast to the wave equation, where information propagates at wave speed.

Sample numerical solutions:
* with \x[freefem]:
  * \x[heat-dirichlet-1d-freefem]
  * \x[heat-dirichlet-2d-freefem]

= Wave equation
{parent=important-partial-differential-equation}
{wiki}

Describes perfect lossless waves on the surface of a string, or on a water surface.

\x[javascript] toy solvers:
* https://jtiscione.github.io/webassembly-wave/index.html circular domain, create waves with mouse click
* https://dionyziz.com/graphics/wave-experiment/ with useless 3D \x[webgl] visualization :-), waves with mouse click. Solving itself done on \x[cpu], not GPU.

Uniqueness: https://math.stackexchange.com/questions/1113622/uniqueness-of-solutions-to-the-wave-equation

As mentioned at: https://math.stackexchange.com/questions/579453/real-world-application-of-fourier-series/3729366#3729366[] from \x[solving-partial-differential-equations-with-the-fourier-series] citing https://courses.maths.ox.ac.uk/node/view_material/1720[], analogously to the \x[heat-equation], the wave linear equation can be be solved nicely with \x[separation-of-variables].

= The wave equation can be seen as infinitely many infinitesimal coupled oscillators
{parent=wave-equation}

TODO confirm, see also: \x[coupled-oscillators]. And then this idea can be used to define/motivate \x[quantum-field-theory] in terms of \x[quantum-harmonic-oscillator]{p} with \x[second-quantization].

* https://youtu.be/SMmFgIEGYtw?t=324 Quantum Field Theory 2a - Field Quantization I by \x[viascience] (2018)

= Wave
{parent=wave-equation}
{wiki}

= Diffraction
{parent=wave-equation}
{wiki}

= Arago spot
{c}
{parent=diffraction}
{wiki}

= Huygens-Fresnel principle
{c}
{parent=diffraction}
{wiki=Huygens–Fresnel principle}

= Kirchhoff's diffraction formula
{c}
{parent=huygens-fresnel-principle}
{wiki}

Approximation to \x[huygens-fresnel-principle].

= Fraunhofer diffraction
{c}
{parent=kirchhoff-s-diffraction-formula}
{wiki}

Far field approximation to \x[kirchhoff-s-diffraction-formula], i.e. when the plane of observation is far from the object diffracting.

= Fresnel diffraction
{c}
{parent=kirchhoff-s-diffraction-formula}
{wiki}

Near field approximation to \x[kirchhoff-s-diffraction-formula], i.e. when the plane of observation is near the object diffracting.

= Refraction
{parent=wave-equation}
{wiki}

= Resonance
{parent=wave-equation}
{wiki}

= Resonate
{synonym}

= Resonates
{synonym}

Examples:
* \x[mechanical-resonance]

= Wave interference
{parent=wave-equation}
{wiki}

= Interference pattern
{parent=wave-interference}

What you see along a line or plane in a \x[wave-interference].

Notably used for the pattern of the \x[double-slit-experiment].

= 2D wave equation on a circular domain
{parent=wave-equation}
{wiki=Vibrations_of_a_circular_membrane}

= Bessel function
{parent=2d-wave-equation-on-a-circular-domain}
{wiki}

Shows up when trying to solve \x[2d-wave-equation-on-a-circular-domain] in \x[polar-coordinate]{p} with \x[separation-of-variables], where we have to decompose the initial condition in termes of a \x[fourier-bessel-series], exactly like the \x[fourier-series] appears when solving the wave equation in linear coordinates.

For the same fundamental reasons, also appears when calculating the \x[schrodinger-equation-solution-for-the-hydrogen-atom].

= Fourier-Bessel series
{parent=bessel-function}
{wiki=Fourier–Bessel_series}

Completeness: https://math.stackexchange.com/questions/2192665/is-this-set-of-bessel-functions-a-basis-for-all-c10-a-functions TODO

This is the \x[bessel-function] analogue to \x[fourier-basis-is-complete-for-l2].

= Helmholtz equation
{c}
{parent=wave-equation}
{wiki}

\x[eigenvalue] problem of \x[laplace-s-equation].

= Existence and uniqueness of solutions of partial differential equations
{parent=partial-differential-equation}

If you have a \x[pde] that models \x[physics][physical phenomena], it is fundamental that:
* there must exist a solution for every physically valid initial condition, otherwise it means that the equation does not describe certain cases of reality
* the solution must be unique, otherwise how are we to choose between the multiple solutions?

Unlike for \x[ordinary-differential-equation]{p} which have the https://en.wikipedia.org/wiki/Picard–Lindelöf_theorem[Picard–Lindelöf theorem], the existence and uniqueness of solution is not well solved for PDEs.

For example, \x[navier-stokes-existence-and-smoothness]{child} was one of the \x[millennium-prize-problems].

= Partial differential equation solver
{parent=partial-differential-equation}

= FreeFem
{parent=partial-differential-equation-solver}
{wiki=FreeFem%2B%2B}

https://freefem.org/

https://github.com/FreeFem/FreeFem-sources

Started in 1987 and written in Pascal, by the French from \x[pierre-and-marie-curie-university], the French are really strong in \x[numerical-analysis].

Ciro wasn't expecting it to be as old. Ported to C++ in 1992.

The fact that French wrote it can be seen in the documentation, for example https://doc.freefem.org/tutorials/index.html uses file extension `mycode.edp` instead of `mycode.pde` where `dep` stands for "https://fr.wikipedia.org/wiki/Équation_aux_dérivées_partielles[Équation aux dérivées partielles]".

Besides the painful build, using FreeFem is relatively simple, as can be seen from the examples on the website.

They do use a \x[domain-specific-language] on the examples, which appears to be the main/only interface, which is a bad thing, Ciro would rather have a \x[python] \x[api] as the "main API", which is more the approach taken by the \x[fenics-project], but so be it. This DSL business means that you always stumble upon basic stuff you want to do but can't, and then you have to think about how to share data between the simulation and the plotting. The plotting notably is super complex and they can't implement all of what people want, upstream examples often offload that to gnuplot. This is potentially a big advantage of \x[fenics-project].

It nice though that they do have some graphics out of the box, as that allows to quickly debug common problems.

Uses \x[variational-formulation-of-a-partial-differential-equation], which is not immediately obvious to beginners? The introduction https://doc.freefem.org/tutorials/poisson.html gives an ultra quick example, but your are mostly on your own with that.

On Ubuntu 20.04, the `freefem` is a bit out-of-date (3.5.8, there isn't even a tag for that in the \x[github] repo, and refs/tags/release_3_10 is from 2010!) and fails to run the examples from the website. It did work with the example package though, but the output does not have color, which makes me sad :-)
``
sudo apt install freefem freefem-examples
freefem /usr/share/doc/freefem-examples/heat.pde
``

So let's just compile the latest v4.6 it from source, on Ubuntu 20.04:
``
sudo apt build-dep freefem
git clone https://github.com/FreeFem/FreeFem-sources
cd FreeFem-sources
# Post v4.6 with some fixes.
git checkout 3df0e2370d9752801ac744b11307b14e16743a44

# Won't apply automatically due to tab hell.
# https://superuser.com/questions/607410/how-to-copy-paste-tab-characters-via-the-clipboard-into-terminal-session-on-gnom
git apply <<'EOS'
diff --git a/3rdparty/ff-petsc/Makefile b/3rdparty/ff-petsc/Makefile
index dc62ab06..13cd3253 100644
--- a/3rdparty/ff-petsc/Makefile
+++ b/3rdparty/ff-petsc/Makefile
@@ -204,7 +204,7 @@ $(SRCDIR)/tag-make-real:$(SRCDIR)/tag-conf-real
 $(SRCDIR)/tag-install-real :$(SRCDIR)/tag-make-real
     cd $(SRCDIR) && $(MAKE) PETSC_DIR=$(PETSC_DIR) PETSC_ARCH=fr install
     -test -x "`type -p otool`" && make changer
-    cd $(SRCDIR) && $(MAKE) PETSC_DIR=$(PETSC_DIR) PETSC_ARCH=fr check
+    #cd $(SRCDIR) && $(MAKE) PETSC_DIR=$(PETSC_DIR) PETSC_ARCH=fr check
     test -e $(DIR_INSTALL_REAL)/include/petsc.h
     test -e $(DIR_INSTALL_REAL)/lib/petsc/conf/petscvariables
     touch $@
@@ -293,7 +293,6 @@ $(SRCDIR)/tag-tar:$(PACKAGE)
     -tar xzf $(PACKAGE)
     patch -p1 < petsc-hpddm.patch
 ifeq ($(WIN32DLLTARGET),)
-    patch -p1 < petsc-metis.patch
 endif
     touch $@
 $(PACKAGE):
EOS

autoreconf -i
./configure --enable-download --enable-optim --prefix="$(pwd)/../FreeFem-install"
./3rdparty/getall -a
cd 3rdparty/ff-petsc
make petsc-slepc
cd -
./reconfigure
make -j`nproc`
make install
cd ../FreeFem-install
PATH="${PATH}:$(pwd)/bin" ./bin/FreeFem++ ../FreeFem-sources/examples/tutorial/
``

Ciro's initial build experience was a bit painful, possibly because it was done on a relatively new Ubuntu 20.04 as of June 2020, but in the end it worked: https://github.com/FreeFem/FreeFem-sources/issues/141

The main/only dependency appears to be https://en.wikipedia.org/wiki/Portable,_Extensible_Toolkit_for_Scientific_Computation[PETSc] which is used by default, which is a good sign, as that library appears to automatically parallelize a single input to several backends (single \x[cpu], MPI, GPU) so you know things will scale up as you reach simulations.

The problem is that it compiling such a complex dependency opens up much more room for hard to solve compilation errors, and takes a lot more time.

= FreeFem examples
{parent=freefem}

= heat-dirichlet.1d.freefem
{parent=freefem-examples}

1-dimensional \x[heat-equation] example with \x[dirichlet-boundary-condition]
* \a[freefem/heat-dirichlet.1d.freefem]

= heat-dirichlet-2d-freefem
{parent=freefem-examples}

2-dimensional \x[heat-equation] example with \x[dirichlet-boundary-condition]:
* \a[freefem/heat-dirichlet.2d.freefem]

= FEniCS Project
{c}
{parent=partial-differential-equation-solver}
{wiki}

https://fenicsproject.org/

One big advantage over \x[freefem] is that it uses plain old \x[python] to describe the problems instead of a \x[domain-specific-language]. \x[matplotlib] is used for plotting by default, so we get full Python power out of the box!

Also uses \x[variational-formulation-of-a-partial-differential-equation] like \x[freefem] which is a pain.

One downside is that its documentation is a Springer published PDF https://link.springer.com/content/pdf/10.1007%2F978-3-319-52462-7.pdf which is several years out-of-date (tested with FEnics 2016.2. Newbs. This causes problems e.g.: https://stackoverflow.com/questions/53730427/fenics-did-not-show-figure-nameerror-name-interactive-is-not-defined/57390687#57390687

\x[system-of-partial-differential-equations] are mentioned at: https://link.springer.com/content/pdf/10.1007%2F978-3-319-52462-7.pdf 3.5 "A system of advection–diffusion–reaction equations". You don't need to manually iterate between the equations.

On Ubuntu 20.04 as per https://fenicsproject.org/download/
``
sudo apt-get install software-properties-common
sudo add-apt-repository ppa:fenics-packages/fenics
sudo apt-get update
sudo apt-get install --no-install-recommends fenics
sudo apt install fenics
python3 -m pip install -u matplotlib
``
Before 2020-06, it was failing with:
``
E: The repository 'http://ppa.launchpad.net/fenics-packages/fenics/ubuntu focal Release' does not have a Release file.
``
but they seem to have created the Ubuntu 20.04 package as of 2020-06, so it now worked! https://askubuntu.com/questions/866901/what-can-i-do-if-a-repository-ppa-does-not-have-a-release-file

TODO heat equation \x[hello-world].

= Hans Petter Langtangen
{c}
{parent=fenics-project}
{wiki}

\x[github] account: https://github.com/hplgit

It should be mentioned that when you start \x[googling] for \x[partial-differential-equation][PDE] stuff, you will reach Han's writings a lot under his \x[github-pages]: http://hplgit.github.io/[], and he is one of the main authors of the \x[fenics-project].

Unfortunately he died of \x[cancer] in 2016, shame, he seemed like a good educator.

He also published to \x[github] pages with his own crazy \x[markdown]-like multi-output \x[markup-language]: https://github.com/hplgit/doconce[].

Rest in peace, Hans.

= System of partial differential equations
{parent=partial-differential-equation}

In many important applications, what you have to solve is not just a single \x[partial-differential-equation], but multiple partial differential equations coupled to each other. This is the case for many key PDEs including:
* \x[maxwell-s-equations], see: \x[explicit-scalar-form-of-the-maxwell-s-equations]{full}
* \x[navier-stokes-equations]
* \x[schrodinger-equation], see: \x[why-are-complex-numbers-used-in-the-schrodinger-equation]{full}

= Classification of second order partial differential equations into elliptic, parabolic and hyperbolic
{parent=partial-differential-equation}

One major application of this classification is that different \x[boundary-condition]{p} are suitable for different types of \x[partial-differential-equation]{p} as explained at: \x[which-boundary-conditions-lead-to-existence-and-uniqueness-of-a-second-order-pde].

Bibliography:
* https://math.stackexchange.com/questions/1090299/why-are-elliptic-parabolic-hyperbolic-pdes-called-elliptic-parabolic-hyperb

= Elliptic partial differential equation
{parent=classification-of-second-order-partial-differential-equations-into-elliptic-parabolic-and-hyperbolic}
{wiki}

= Parabolic partial differential equation
{parent=classification-of-second-order-partial-differential-equations-into-elliptic-parabolic-and-hyperbolic}
{wiki}

= Hyperbolic partial differential equation
{parent=classification-of-second-order-partial-differential-equations-into-elliptic-parabolic-and-hyperbolic}
{wiki}

= Which boundary conditions lead to existence and uniqueness of a second order PDE
{parent=classification-of-second-order-partial-differential-equations-into-elliptic-parabolic-and-hyperbolic}

http://www.cns.gatech.edu/~predrag/courses/PHYS-6124-12/StGoChap6.pdf 6.1 "Classification of PDE's" clarifies which boundary conditions are needed for existence and uniqueness of each \x[classification-of-second-order-partial-differential-equations-into-elliptic-parabolic-and-hyperbolic][type of second order of PDE]:
* \x[elliptic-partial-differential-equation] and \x[parabolic-partial-differential-equation]: \x[dirichlet-boundary-condition] or \x[neumann-boundary-condition]
* \x[hyperbolic-partial-differential-equation]: \x[cauchy-boundary-condition]

= Phase space
{parent=differential-equation}
{wiki}

This idea comes up particularly in the \x[phase-space-coordinate] of \x[hamiltonian-mechanics].

= Boundary condition
{parent=differential-equation}

= Initial condition
{parent=boundary-condition}

Basically a subset of the \x[boundary-condition] for when one of the parameters is time and we are specifying values for the time 0.

= Boundary value problem
{parent=boundary-condition}
{wiki}

= Dirichlet boundary condition
{c}
{parent=boundary-condition}
{wiki}

Specifies fixed values.

Can be used for \x[elliptic-partial-differential-equation]{p} and \x[parabolic-partial-differential-equation]{p}.

Numerical examples:
* with \x[freefem]:
  * \x[heat-dirichlet-1d-freefem]
  * \x[heat-dirichlet-2d-freefem]

= Neumann boundary condition
{c}
{parent=boundary-condition}
{wiki}

Specifies the derivative in a direction normal to the boundary.

Can be used for \x[elliptic-partial-differential-equation]{p} and \x[parabolic-partial-differential-equation]{p}.

= Cauchy boundary condition
{c}
{parent=neumann-boundary-condition}
{wiki}

Sets both a \x[dirichlet-boundary-condition] and a \x[neumann-boundary-condition] for a single part of the boundary.

Can be used for \x[hyperbolic-partial-differential-equation]{p}.

We understand intuitively that this imposes stricter requirements on solutions, which makes it easier to guarantee uniqueness, but also harder to have existence. TODO intuitively why hyperbolic need this extra level of restriction.

= Robin boundary condition
{parent=neumann-boundary-condition}
{c}
{wiki}

Linear combination of a \x[dirichlet-boundary-condition] and \x[neumann-boundary-condition] at each point of the boundary.

Examples:
* \x[heat-equation] when metal plaque is immersed in a large external environment of fixed temperature.

  In this case, the normal derivative at the boundary is proportional to the difference between the temperature of the boundary and the fixed temperature of the external environment.

  The result as time tends to infinity is that the temperature of the plaque tends to that of the environment.

  Shown a solved example in the \x[freefem] tutorial: https://doc.freefem.org/tutorials/thermalConduction.html (https://github.com/FreeFem/FreeFem-doc/blob/1d5996d8b891fd553fd318321249c2c30f693fc3/source/tutorials/thermalConduction.rst)

= Open boundary condition
{parent=neumann-boundary-condition}

In the context of wave-like equations, an open-boundary condition is one that "lets the wave go through without reflection".

This condition is very useful when we want to simulate infinite domains with a numerical method. \x[ciro-santilli] wants to do this all the time when trying to come up with demos for his \x[physics] writings.

Here are some resources that cover such boundary conditions:
* https://www.asc.tuwien.ac.at/~arnold/pdf/graz/graz.pdf lots of slides
* http://hplgit.github.io/wavebc/doc/pub/._wavebc_cyborg002.html mentions them and gives a 1D formula. It mentions that things get complicated in 2D and 3D TODO why.

  The other page: http://hplgit.github.io/wavebc/doc/pub/._wavebc_cyborg003.html shows solution demos.

= Mixed boundary condition
{parent=neumann-boundary-condition}
{wiki}

Multiple \x[boundary-condition]{p} for different parts of the boundary.

= Time dependent boundary condition
{parent=boundary-condition}

Most commonly, \x[boundary-condition]{p} such as the \x[dirichlet-boundary-condition] are taken to be fixed values in time.

But it also makes sense to think about cases where those values vary in time.

Some bibliography:
* https://math.stackexchange.com/questions/261251/heat-equation-with-time-dependent-boundary-conditions
* https://secure.math.ubc.ca/~peirce/M257_316_2012_Lecture_20.pdf

= Control theory
{parent=differential-equation}
{wiki}

This basically adds one more ingredient to \x[partial-differential-equation]{p}: a \x[function] that we can select.

And then the question becomes: if this function has such and such limitation, can we make the solution of the \x[differential-equation] have such and such property?

It's quite fun from a mathematics point of view!

Control theory also takes into consideration possible \x[discretization] of the domain, which allows using \x[numerical-methods-to-solve-partial-differential-equations], as well as digital, rather than analogue control methods.

= Feedback loop
{parent=control-theory}

= Series
{disambiguate=mathematics}
{parent=calculus}
{wiki}

= Power series
{parent=series-mathematics}
{wiki}

= Radius of convergence
{parent=power-series}
{wiki}

= Taylor series
{c}
{parent=power-series}
{wiki}

= Gradient, Divergence, Curl, and Laplacian
{parent=calculus}

= Curl
{disambiguate=mathematics}
{parent=gradient-divergence-curl-and-laplacian}
{title2=$\curl{}$}
{wiki}

Points in the direction in which a wind spinner spins fastest.

= Nabla symbol
{parent=gradient-divergence-curl-and-laplacian}
{title2=$\nabla$}
{wiki}

= Nabla
{synonym}

As if \x[greek-letter]{p} weren't enough, \x[physicist]{p} and \x[mathematician]{p} also like to make up tons of symbols, \x[mathematical-symbol-that-looks-like-a-greek-letter-but-isn-t][some of which look like the could actually be Greek letters]!

Nabla is one of those: it was completely made up in modern times, and just happens to look like an inverted upper case \x[delta-letter] to make things even more confusing!

= Del
{parent=nabla-symbol}
{wiki}

Oh, and if it weren't enough, \x[mathematician]{p} have a separate name for the damn symbol: "del" instead of "nabla".

TODO why is it called "Del"? Is is because it is an inverted uppercase \x[delta-letter]?

= Divergence
{parent=gradient-divergence-curl-and-laplacian}
{title2=$\div{}$}
{wiki}

Takes a \x[vector-mathematics] field as input and produces a scalar field.

Mnemonic: it gives out the amount of fluid that is going in or out of a given volume per unit of time.

Therefore, if you take a cubic volume:
* the input has to be the 6 flows across each face, therefore 3 derivatives
* the output is the variation of the quantity of fluid, and therefore a scalar

= Gradient
{parent=gradient-divergence-curl-and-laplacian}
{title2=$\grad{}$}
{wiki}

Takes a scalar field as input and produces a vector field.

Mnemonic: the gradient shows the direction in which the function increases fastest.

Think of a color gradient going from white to black from left to right.

Therefore, it has to:
* take a scalar field as input. Otherwise, how do you decide which vector is larger than the other?
* output a vector field that contains the direction in which the scalar increases fastest locally at each point. This has to give out vectors, since we are talking about directions

= Laplace operator
{parent=gradient-divergence-curl-and-laplacian}
{title2=$\Delta$, $\laplacian{}$}
{wiki}

= Laplacian
{c}
{parent=laplace-operator}
{wiki}

= Infinitesimal
{parent=calculus}
{wiki}

Just use \x[limit-mathematics]{p} instead, please. The \x[france][French] are particularly guilty of this.

= Discrete mathematics
{parent=mathematics}
{wiki}

= Graph
{disambiguate=discrete mathematics}
{parent=discrete-mathematics}
{wiki}

= Graph
{synonym}

= Edge
{disambiguate=graph}
{parent=graph-discrete-mathematics}
{wiki}

= Vertex
{parent=graph-discrete-mathematics}
{wiki}

= Functional equation
{parent=mathematics}
{wiki}

In other sections:
* \x[exponentiation-functional-equation]

= Cauchy's functional equation
{parent=functional-equation}
{wiki}

Nice result on \x[lebesgue-measurable] required for unicity.

= Game theory
{parent=mathematics}
{wiki}

= Balance of power
{c}
{parent=game-theory}
{wiki}

= Nash equilibrium
{c}
{parent=game-theory}
{wiki}

Yes, you can think about the \x[prisoner-s-dilemma], but that's boring, a much more interesting example is choosing a deck of a TCG competition: \x[magic-the-gathering-meta-based-deck-choice-is-a-bimatrix-game]

The key idea is that:
* imagine that the game will be played many times between two players
* if one player always chooses one deck, the other player will adapt by choosing the anti-deck
* therefore, the best strategy for both players, is to pick decks randomly, each with a certain probability. This type of probabilistic approach is called a \x[mixed-strategy]
* if any player deviates from the equilibrium probability, then the other player can add more of the anti-deck to the deck that the other player deviated, and gain an edge

  Therefore, using equilibrium probabilities is the optimal way to play

= Mixed strategy
{parent=nash-equilibrium}
{wiki}

= Prisoner's dilemma
{parent=nash-equilibrium}
{wiki}

https://en.wikipedia.org/wiki/Prisoner%27s_dilemma

= Bimatrix game
{parent=nash-equilibrium}

\x[magic-the-gathering-meta-based-deck-choice-is-a-bimatrix-game].

= Tit for tat
{parent=game-theory}
{wiki}

Related ideas:
* \x[fight-fire-with-fire]

= Geometry
{parent=mathematics}
{wiki}

= Fractal
{parent=geometry}
{wiki}

= Point
{disambiguate=geometry}
{parent=geometry}
{wiki}

= Point
{synonym}

= Line
{disambiguate=geometry}
{parent=point-geometry}
{wiki}

= Line
{synonym}

= Hyperplane
{parent=point-geometry}
{wiki}

Generalization of a \x[plane] for any number of dimensions.

Kind of the opposite of a line: the line has dimension 1, and the plane has dimension D-1.

In $D=2$, both happen to coincide, a boring example of an \x[exceptional-isomorphism].

= Plane
{disambiguate=geometry}
{parent=hyperplane}
{wiki}

= Plane
{synonym}

= n-sphere
{parent=geometry}
{title2=$S^n$}
{wiki}

= Antipodal point
{parent=n-sphere}
{wiki}

= Diameter
{parent=n-sphere}
{wiki}

= Radius
{parent=diameter}
{wiki}

= Circle
{parent=n-sphere}
{title2=$S^1$}
{wiki}

= 1-sphere
{synonym}
{title2}

= Sphere
{parent=n-sphere}
{title2=$S^2$}
{wiki}

= 2-sphere
{synonym}
{title2}

= 3-sphere
{parent=n-sphere}
{title2=$S^3$}
{wiki}

Diffeomorphic to \x[su-2].

= Projective geometry
{parent=geometry}
{wiki}

= Projective space
{parent=projective-geometry}
{title2=$\projectiveSpace(V)$}
{wiki}

A \x[unique] projective space can be defined for any \x[vector-space].

The projective space associated with a given \x[vector-space] $V$ is denoted $\projectiveSpace(V)$.

The definition is to take the vector space, remove the zero element, and identify all elements that lie on the same line, i.e. $\vec{v} = \lambda \vec{w}$

The most important initial example to study is the \x[real-projective-plane].

= Projective plane
{parent=projective-space}
{wiki}

= Real projective space
{parent=projective-geometry}
{title2=$RP^n$, $\projectiveSpace(\R^{n+1})$}

In those cases at least, it is possible to add a \x[metric-mathematics] to the spaces, leading to \x[elliptic-geometry].

= Real projective line
{parent=real-projective-space}
{title2=$RP^1$, $\projectiveSpace(\R^2)$}
{wiki}

Just a \x[circle].

Take $\R^2$ with a line at $x = 0$.  Identify all the points that an observer 

= Real projective plane
{parent=real-projective-space}
{title2=$RP^2$, $\projectiveSpace(\R^3)$}
{wiki}

\x[ciro-santilli]'s preferred visualization of the real projective plane is a small variant of the standard "lines through origin in \x[r-3]".

Take a open half \x[sphere] e.g. a sphere but only the points with $z > 0$.

Each point in the half sphere identifies a unique line through the origin.

Then, the only lines missing are the lines in the x-y plane itself.

For those sphere points in the \x[circle] on the x-y plane, you should think of them as magic poins that are identified with the corresponding \x[antipodal-point], also on the x-y, but on the other side of the origin. So basically you you can teleport from one of those to the other side, and you are still in the same point.

To see why this is called a plane, move he center of the sphere to $z=1$, and project each line on the x-y plane. This works for all points of the sphere, except those at the equator $z=1$. Those are the \x[points-at-infinity]. Note that there is one for each direction in the x-y plane.

It good to think about how \x[euclid-s-postulates] look like in the real projective plane:
* two parallel lines on the plane meet at a point on the sphere!

  Since there is one point of infinity for each direction, there is one such point for every direction the two parallel lines might be at. The \x[parallel-postulate] does not hold, and is replaced with a simpler more elegant version: every two lines meet at exactly one point.

  One thing to note however is that ther \x[real-projective-plane] does not have \x[angle]{p} defined on it by definition. Those can be defined, forming \x[elliptic-geometry] through the \x[projective-model-of-elliptic-geometry], but we can interpret the "parallel lines" as "two lines that meet at a point at infinity"
* points in the real projective plane are lines in \x[r-3]
* lines in the real projective plane are planes in \x[r-3].

  For every two projective points there is a single projective line that passes through them.

  Since it is a plane in \x[r-3], it always intersects the real plane at a line.

  Note however that not all lines in the real plane correspond to a projective line: only lines tangent to a circle at zero do.

Unlike the \x[real-projective-line] which is \x[homotopic] to the \x[circle], the \x[real-projective-plane] is not \x[homotopic] to the \x[sphere].

The \x[topological] difference bewteen the \x[sphere] and the \x[real-projective-space] is that for the \x[sphere] all those points in the x-y circle are identified to a single point.

One more generalized argument of this is the \x[classification-of-closed-surfaces], in which the \x[real-projective-plane] is a \x[sphere] with a hole cut and one \x[mobius-strip] glued in.

= Point at infinity
{parent=real-projective-plane}
{wiki}

= Points at infinity
{synonym}

= Homogenous coordinates
{parent=real-projective-plane}
{wiki}

= Four-dimensional space
{parent=geometry}
{wiki}

= Four-dimensional
{synonym}

= 4D
{title2}
{synonym}

Important 4D spaces:
* \x[3-sphere]

= Visualizing 4D
{parent=four-dimensional-space}

Simulate it. Just simulate it.

\Video[http://youtube.com/watch?v=0t4aKJuKP0Q]
{title="4D Toys: a box of four-dimensional toys, and how objects bounce and roll in 4D." published by "Miegakure" on 2017-06-02.}

= Polytope
{parent=geometry}
{wiki}

A \x[polygon] is a 2-dimensional \x[polytope], \x[polyhedra] is a 3-dimensional \x[polytope]. 

= Convex polytope
{parent=polytope}
{wiki}

= Convex
{synonym}

= Regular polytope
{parent=polytope}
{wiki}

TODO understand and explain definition.

= Classification of regular polytopes
{parent=regular-polytope}
{wiki=Regular_polytope#Classification_and_description}

The 3D regular convex polyhedrons are super famous, have the name: \x[platonic-solid], and have been known since antiquity. In particular, there are only 5 of them.

The counts per dimension are:
\Table[
|| Dimension
|| Count

| 2
| Infinite

| 3
| 5

| 4
| 6

| >4
| 3
]
{title=Number of regular polytopes per dimension.}

The cool thing is that the 3 that exist in 5+ dimensions are all of one of the three families:
* \x[simplex]
* \x[hypercube]
* \x[cross-polytope]
Then, the 2 3D missing ones have 4D analogues and the sixth one in 4D does not have a 3D analogue: https://en.wikipedia.org/wiki/24-cell[the 24-cell]. Yes, this is the kind of irregular stuff \x[ciro-santilli] lives \x[the-beauty-of-mathematics][for].

= Simplex
{parent=classification-of-regular-polytopes}
{wiki}

\x[triangle]{c}, \x[tetrahedron].

The name does not imply regular by default. For regular ones, you should say "regular polytope".

Non-regular description: take convex hull take D + 1 vertices that are not on a single D-plan.

= Hypercube
{parent=classification-of-regular-polytopes}
{wiki}

\x[square], cube. 4D case known as \x[tesseract].

Convex hull of all $\{-1, 1\}^D$ (\x[cartesian-product] power) D-tuples, e.g. in \x[3d]:
``
( 1,  1,  1)
( 1,  1, -1)
( 1, -1,  1)
( 1, -1, -1)
(-1,  1,  1)
(-1,  1, -1)
(-1, -1,  1)
(-1, -1, -1)
``

From this we see that there are $2^D$ \x[vertex]{p}.

Two \x[vertex]{p} are linked iff they differ by a single number. So each vertex has D neighbors.

= Hyperrectangle
{parent=hypercube}
{wiki}

The \x[regular-polytope][non-regular] version of the \x[hypercube].

= Cross polytope
{parent=classification-of-regular-polytopes}
{wiki}

Examples: \x[square], \x[octahedron].

Take $(0, 0, 0, \dots, 0)$ and flip one of 0's to $\pm 1$. Therefore has $2 \times D$ \x[vertex]{p}.

Each edge E is linked to every other edge, except it's opposite -E.

= Polygon
{parent=polytope}
{wiki}

= Regular polygon
{parent=polygon}
{wiki}

= Regular convex polygon
{parent=regular-polygon}

= Triangle
{parent=regular-convex-polygon}
{wiki}

= Square
{parent=regular-convex-polygon}
{wiki}

= Pentagon
{parent=regular-convex-polygon}
{wiki}

= Hexagon
{parent=regular-convex-polygon}
{wiki}

= Octagon
{parent=regular-convex-polygon}
{wiki}

= Polyhedron
{parent=polytope}
{wiki}

= Polyhedra
{synonym}

= Tetrahedron
{parent=polyhedron}
{wiki}

= Octahedron
{parent=polyhedron}
{wiki}

= Regular polyhedron
{parent=polytope}
{wiki}

= Platonic solid
{c}
{parent=regular-polyhedron}
{wiki}

A \x[convex] \x[regular-polyhedron].

Their \x[the-beauty-of-mathematics][beauty is a classification type result] as stated at \x[classification-of-regular-polytopes].

https://en.wikipedia.org/wiki/Platonic_solid#Topological_proof

= 4-polytope
{parent=polytope}
{wiki}

= Regular 4-polytope
{parent=4-polytope}
{wiki}

= Tesseract
{parent=regular-4-polytope}
{wiki}

= Differential geometry
{parent=geometry}

Bibliography:
* https://maths-people.anu.edu.au/~andrews/DG/ Lectures on Differential Geometry by Ben Andrews

= Lie group
{c}
{parent=differential-geometry}
{wiki}

The key and central motivation for studying Lie groups and their \x[lie-algebra]{p} appears to be to characterize \x[symmetry] in \x[lagrangian-mechanics] through \x[noether-s-theorem], just start from there.

Notably \x[local-symmetry]{p} appear to map to forces, and local means "around the identity", notably: \x[local-symmetries-of-the-lagrangian-imply-conserved-currents].

More precisely: \x[local-symmetries-of-the-lagrangian-imply-conserved-currents].

TODO \x[ciro-santilli] really wants to understand what all the fuss is about:
* https://math.stackexchange.com/questions/1322206/lie-groups-lie-algebra-applications
* https://mathoverflow.net/questions/58696/why-study-lie-algebras
* https://math.stackexchange.com/questions/405406/definition-of-lie-algebra

Oh, there is a low dimensional classification! Ciro is \x[high-flying-bird-vs-gophers][a sucker for classification theorems]! https://en.wikipedia.org/wiki/Classification_of_low-dimensional_real_Lie_algebras

The fact that there are elements arbitrarily close to the identity, which is only possible due to the group being continuous, is the key factor that simplifies the treatment of Lie groups, and follows the philosophy of \x[continuous-problems-are-simpler-than-discrete-ones].

Bibliography:
* https://youtu.be/kpeP3ioiHcw?t=2655 "Particle Physics Topic 6: Lie Groups and Lie Algebras" by Alex Flournoy (2016). Good \x[special-orthogonal-group][SO(3)] explicit exponential expansion example. Then next lecture shows why SU(2) is the representation of SO(3). Next ones appear to eventually get to the physical usefulness of the thing, but I lost patience. Not too far out though.
* https://www.youtube.com/playlist?list=PLRlVmXqzHjURZO0fviJuyikvKlGS6rXrb "Lie Groups and Lie Algebras" playlist by XylyXylyX (2018). Tutorial with infinitely many hours
* http://www.staff.science.uu.nl/~hooft101/lectures/lieg07.pdf
* http://www.physics.drexel.edu/~bob/LieGroups.html

= Applications of Lie groups to differential equations
{parent=lie-group}

Solving \x[differential-equation]{p} was apparently Lie's original motivation for developing \x[lie-group]{p}, see \x[how-to-use-lie-groups-to-solve-differential-equations]{full}.

= How to use Lie Groups to solve differential equations
{parent=applications-of-lie-groups-to-differential-equations}

Solving \x[differential-equation]{p} was apparently Lie's original motivation for developing \x[lie-group]{p}. It is therefore likely one of the most understandable ways to approach it.

It appears that Lie's goal was to understand when can a differential equation have an explicitly written solution, much like \x[galois-theory] had done for \x[algebraic-equation]{p}. Both approaches use \x[symmetry] as the key tool.

* https://www.researchgate.net/profile/Michael_Frewer/publication/269465435_Lie-Groups_as_a_Tool_for_Solving_Differential_Equations/links/548cbf250cf214269f20e267/Lie-Groups-as-a-Tool-for-Solving-Differential-Equations.pdf Lie-Groups as a Tool for Solving Differential Equations by Michael Frewer. Slides with good examples.

= Lie algebra
{c}
{parent=lie-group}
{wiki}

Good first concrete example to study: \x[lie-algebra-of-the-special-linear-group-of-degree-2].

Intuitively, a \x[lie-algebra] is a simpler object than a \x[lie-group]. Without any extra structure, groups can be very complicated non-linear objects. But a \x[lie-algebra] is just an \x[algebra-over-a-field], and one with a restricted \x[bilinear-map] called the \x[lie-bracket], that has to also be \x[alternating-multilinear-map][alternating] and satisfy the \x[jacobi-identity].

Another way to think about Lie algebras, is as a continuous analogue to the \x[generating-set-of-a-group] in finite groups. For continuous groups however, we can't have a finite generating set in the strict sense, as a finite set won't ever cover every possible point. But the \x[generator-of-a-lie-algebra] can be finite. And just like in finite groups, where you can specify the full group by specifying only the relationships between generating elements, in the Lie algebra you can almost specify the full group by specifying the relationships between the elements of a \x[generator-of-the-lie-algebra]. This "specification of a relation" is done by defining the \x[lie-bracket]. The reason why the algebra works out well for continuous stuff is that by definition an \x[algebra-over-a-field] is a \x[vector-space] with some extra structure, and we know very well how to make infinitesimal elements in a vector space: just multiply its vectors by a constant $c$ that cana be arbitrarily small.

Because of the \x[lie-group-lie-algebra-correspondence], we know that there is almost a \x[bijection] between each \x[lie-group] and the corresponding \x[lie-algebra]. So it makes sense to try and study the algebra instead of the group itself whenever possible, to try and get insight and proofs in that simpler framework. One is philosophically reminded of how \x[normal-subgroup]{p} are a simpler representation of \x[group-homomorphism]{p}.

To make things even simpler, because \x[all-vector-spaces-of-the-same-dimension-on-a-given-field-are-isomorphic], the only things we need to specify a \x[lie-group] through a \x[lie-algebra] are:
* the dimension
* the \x[lie-bracket]
Note that the \x[lie-bracket] can look different under different basis of the \x[lie-algebra] however. This is shown for example at \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] page 71 for the \x[lorentz-group].

As mentioned at \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 4 "Lie Algebras", taking the \x[lie-algebra] around the identity is mostly a convention, we could treat any other point, and things are more or less equivalent.

Bibliography:
* https://physicstravelguide.com/advanced_tools/group_theory/lie_algebras#tab__concrete on \x[physics-travel-guide]
* http://jakobschwichtenberg.com/lie-algebra-able-describe-group/ by \x[jakob-schwichtenberg]

= Lie group-Lie algebra correspondence
{c}
{parent=lie-algebra}
{wiki=Lie_group–Lie_algebra_correspondence}

Every \x[lie-algebra] corresponds to a single \x[simply-connected] \x[lie-group].

The \x[baker-campbell-hausdorff-formula] basically defines how to map an algebra to the group.

Bibliography:
* \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 7 "EXPonentiation"

= A single exponential map is not enough to recover a simple Lie group from its algebra
{parent=lie-group-lie-algebra-correspondence}

Example at: \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 7 "EXPonentiation".

= The product of a exponential of the compact algebra with that of the non-compact algebra recovers a simple Lie from its algebra
{parent=lie-group-lie-algebra-correspondence}

Example at: \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 7 "EXPonentiation".

Furthermore, the non-\x[compact] part is always \x[isomorphic] to \x[r-n], only the non-compact part can have more interesting structure.

= Two different Lie groups can have the same Lie algebra
{parent=lie-group-lie-algebra-correspondence}

The most important example is perhaps \x[s0-3] and \x[su-2], both of which have the same \x[lie-algebra], but are not isomorphic.

= Every Lie algebra has a unique single corresponding simply connected Lie group
{parent=two-different-lie-groups-can-have-the-same-lie-algebra}

This \x[simply-connected] is called the \x[universal-covering-group].

E.g. in the case of \x[s0-3] and \x[su-2], \x[su-2] is \x[simply-connected], but \x[so-3] is not.

= Universal covering group
{parent=every-lie-algebra-has-a-unique-single-corresponding-simply-connected-lie-group}

The \x[unique] group referred to at: \x[every-lie-algebra-has-a-unique-single-corresponding-simply-connected-lie-group].

= Every Lie group that has a given Lie algebra is the image of an homomorphism from the universal cover group
{parent=two-different-lie-groups-can-have-the-same-lie-algebra}

= Lie bracket
{c}
{parent=lie-algebra}

= Exponential map
{parent=lie-algebra}
{wiki}

Most commonly refers to: \x[exponential-map-lie-theory].

= Exponential map
{disambiguate=Lie theory}
{parent=exponential-map}
{wiki}

The \x[exponential-map] links small transformations around the origin (infinitely small) back to larger finite transformations, and small transformations around the origin are something we can deal with a \x[lie-algebra], so this map links the two worlds.

The idea is that we can decompose a finite transformation into infinitely arbitrarily small around the origin, and proceed just like the \x[product-definition-of-the-exponential-function].

The definition of the exponential map is simply the same as that of the regular exponential function as given at \x[taylor-expansion-definition-of-the-exponential-function], except that the argument $x$ can now be an operator instead of just a number.

Examples:
* \x[the-derivative-is-the-generator-of-the-translation-group]

= Baker-Campbell-Hausdorff formula
{c}
{parent=lie-algebra}
{title2=BCH formula}
{wiki=Baker–Campbell–Hausdorff formula}

Solution $Z$ for given $X$ and $Y$ of:
$$
e^Z = e^X e^Y
$$
where $e$ is the \x[exponential-map].

If we consider just \x[real-number], $Z = X + Y$, but when X and Y are \x[non-commutative], things are not so simple.

Furthermore, TODO confirm it is possible that a solution does not exist at all if $X$ and $Y$ aren't sufficiently small.

This formula is likely the basis for the \x[lie-group-lie-algebra-correspondence]. With it, we express the actual \x[group-operation] in terms of the Lie algebra operations.

Notably, remember that a \x[algebra-over-a-field] is just a \x[vector-space] with one extra product operation defined.

Vector spaces are simple because \x[all-vector-spaces-of-the-same-dimension-on-a-given-field-are-isomorphic], so besides the dimension, once we define a \x[lie-bracket], we also define the corresponding \x[lie-group].

Since a group is basically defined by what the group operation does to two arbitrary elements, once we have that defined via the \x[baker-campbell-hausdorff-formula], we are basically done defining the group in terms of the algebra.

= Generator of a Lie algebra
{parent=lie-algebra}

= Generator of the Lie algebra
{synonym}

Cardinality $\leq$ dimension of the vector space.

= Continuous symmetry
{parent=lie-group}
{wiki}

Basically a synonym for \x[lie-group] which is the way of modelling them.

= Local symmetry
{parent=continuous-symmetry}
{wiki}

As mentioned at \x[quote-axelmaas-local-symmetry], local symmetries map to forces in the \x[standard-model].

Appears to be a synonym for: \x[gauge-symmetry].

A local symmetry is a transformation that you apply a different transformation for each point, instead of a single transformation for every point.

TODO what's the point of a local symmetry? I think that the main thing is: 

Bibliography:
* \x[quantum-field-theory-lecture-by-tobias-osborne-2017/lecture-3]
* https://physics.stackexchange.com/questions/48188/local-and-global-symmetries
* https://www.physics.rutgers.edu/grad/618/lects/localsym.pdf by Joel Shapiro gives one nice high level intuitive idea:
  \Q[
  In relativistic physics, global objects are awkward because the finite velocity with which effects can propagate is expressed naturally in terms of
  local objects. For this reason high energy physics is expressed in terms of a
  field theory.
  ]
* \x[quora]:
  * https://www.quora.com/What-does-a-local-symmetry-mean-in-physics
  * https://www.quora.com/What-is-the-difference-between-local-and-global-symmetries-in-physics
  * https://www.quora.com/What-is-the-difference-between-global-and-local-gauge-symmetry

= Local symmetries of the Lagrangian imply conserved currents
{parent=local-symmetry}

TODO. I think this is the key point. Notably, \x[u-1] symmetry implies \x[charge-conservation].

More precisely, each \x[generator-of-a-lie-algebra][generator of the corresponding Lie algebra] leads to one separate conserved current, such that a single symmetry can lead to multiple conserved currents.

This is basically the \x[local-symmetry] version of \x[noether-s-theorem].

Then to maintain charge conservation, we have to maintain \x[local-symmetry], which in turn means we have to add a \x[gauge-field] as shown at \x[video-deriving-the-qed-lagrangian-by-dietterich-labs-2018].

Forces can then be seen as kind of a side effect of this.

Bibliography:
* https://photonics101.com/relativistic-electrodynamics/gauge-invariance-action-charge-conservation#show-solution has a good explanation of the Gauge transformation. TODO how does that relate to \x[u-1] symmetry?
* https://physics.stackexchange.com/questions/57901/noether-theorem-gauge-symmetry-and-conservation-of-charge

= Important Lie groups
{parent=lie-group}

= Matrix Lie group
{parent=important-lie-groups}

This important and common simple case has easy properties.

= Lie algebra of a matrix Lie group
{parent=matrix-lie-group}

For this sub-case, we can define the Lie algebra of a Lie group $G$ as the set of all matrices $g \in G$ such that for all $t \in \R$:
$$
e^{tM} \in G
$$

TODO example it can also be seen that the \x[lie-algebra] is not closed under the group operation (\x[matrix-multiplication]), but it is closed under the \x[lie-bracket] operation.

= Lie bracket of a matrix Lie group
{c}
{parent=matrix-lie-group}

$$[X, Y] = XY - YX$$

This makes it clear how the \x[lie-bracket] can be seen as a "measure of non-\x[commutativity]"

Because the \x[lie-bracket] has to be a bilinear map, all we need to do to specify it uniquely is to specify how it acts on every pair of some basis of the \x[lie-algebra].

Then, together with the \x[baker-campbell-hausdorff-formula] and the \x[lie-group-lie-algebra-correspondence], this forms an exceptionally compact description of a \x[lie-group].

= Classical group
{parent=important-lie-groups}
{wiki}

= Symplectic group
{parent=classical-group}
{title2=$Sp(n, F)$}

Intuition, please? Example? https://mathoverflow.net/questions/278641/intuition-for-symplectic-groups The key motivation seems to be related to \x[hamiltonian-mechanics]. The two arguments of the \x[bilinear-form] correspond to each set of variables in Hamiltonian mechanics: the generalized positions and generalized momentums, which appear in the same number each.

Seems to be set of matrices that preserve a \x[skew-symmetric-bilinear-form], which is comparable to the \x[orthogonal-group], which preserves a \x[symmetric-bilinear-form]. More precisely, the orthogonal group has:
$$
O^T I O = I
$$
and its generalization the \x[indefinite-orthogonal-group] has:
$$
O^T S O = I
$$
where S is symmetric. So for the symplectic group we have matrices Y such as:
$$
Y^T A Y = I
$$
where A is antisymmetric. This is explained at: https://www.ucl.ac.uk/~ucahad0/7302_handout_13.pdf They also explain there that unlike as in the analogous \x[orthogonal-group], that definition ends up excluding determinant -1 automatically.

Therefore, just like the \x[special-orthogonal-group], the symplectic group is also a \x[subgroup] of the \x[special-linear-group].

= Symplectic matrix
{parent=symplectic-group}

= Unitary symplectic group
{parent=symplectic-group}
{title2=$Sp(n)$}

= General linear group
{parent=important-lie-groups}
{wiki}

= $GL(n)$
{synonym}
{title2}

= $GL(n, F)$
{synonym}
{title2}

Invertible matrices. Or if you think a bit more generally, an invertible \x[linear-map].

When the \x[field-mathematics] $F$ is not given, it defaults to the \x[real-number]{p}.

Non-invertible are excluded "because" otherwise it would not form a \x[group-mathematics] (every element must have an inverse). This is therefore the largest possible group under \x[matrix-multiplication], other matrix multiplication groups being subgroups of it.

= Finite general linear group
{parent=general-linear-group}
{title2=$GL(n, F_m)$}

= $GL(n, m)$
{synonym}
{title2}

\x[general-linear-group] over a \x[finite-field] of order $m$. Remember that due to the \x[classification-of-finite-fields], there is one single field for each \x[prime-power] $m$.

Exactly as over the \x[real-number]{p}, you just put the finite field elements into a $n \times n$ matrix, and then take the invertible ones.

= Special linear group
{parent=important-lie-groups}
{title2=$SL(n)$}
{wiki}

Specials sub case of the \x[general-linear-group] when the determinant equals exactly 1.

= Special linear group of dimension 2
{parent=important-lie-groups}
{title2=$SL(2)$}
{wiki=SL2(R)}

= Lie algebra of the special linear group
{c}
{parent=special-linear-group}

= Lie algebra of the special linear group of degree 2
{parent=lie-algebra-of-the-special-linear-group}

This is a good first concrete example of a Lie algebra. Shown at \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 4.2 "How to linearize a Lie Group" has an example.

We can use use the following parametrization of the \x[special-linear-group] on variables $x$, $y$ and $z$:
$$
M =
\begin{bmatrix}
1 + x & y \\
z & (1 + yz)/(1 + x) \\
\end{bmatrix}
$$

Every element with this parametrization has \x[determinant] 1:
$$
det(M) = (1 + x)(1 + yz)/(1 + x) - yz = 1
$$
Furthermore, any element can be reached, because by independently settting $x$, $y$ and $z$, $M_{00}$, $M_{01}$ and $M_{10}$ can have any value, and once those three are set, $M_{11}$ is fixed by the determinant.

To find the elements of the \x[lie-algebra], we evaluate the derivative on each parameter at 0:
$$
\begin{aligned}
M_x
&=
\evalat{\dv{M}{x}}{(x,y,z) = (0,0,0)}
&=
\evalat{
\begin{bmatrix}
1 & 0 \\
0 & -(1 + yz)/(1 + x)^2 \\
\end{bmatrix}
}{(x,y,z) = (0,0,0)}
&=
\begin{bmatrix}
1 & 0 \\
0 & -1 \\
\end{bmatrix}
\\

M_y
&=
\evalat{\dv{M}{y}}{(x,y,z) = (0,0,0)}
&=
\evalat{
\begin{bmatrix}
0 & 1 \\
0 & z/(1 + x) \\
\end{bmatrix}
}{(x,y,z) = (0,0,0)}
&=
\begin{bmatrix}
0 & 1 \\
0 & 0 \\
\end{bmatrix}
\\

M_z
&=
\evalat{\dv{M}{z}}{(x,y,z) = (0,0,0)}
&=
\evalat{
\begin{bmatrix}
0 & 0 \\
1 & y/(1 + x) \\
\end{bmatrix}
}{(x,y,z) = (0,0,0)}
&=
\begin{bmatrix}
0 & 0 \\
1 & 0 \\
\end{bmatrix}
\\

\end{aligned}
$$

Remembering that the \x[lie-bracket-of-a-matrix-lie-group] is really simple, we can then observe the following \x[lie-bracket] relations between them:
$$
[M_x, M_y] &= M_xM_y - M_yM_x &= \begin{bmatrix}0 & 1 \\  0 & 0 \\\end{bmatrix} &- \begin{bmatrix}0 & -1 \\ 0 & 0 \\\end{bmatrix} &= \begin{bmatrix}0 & 2 \\  0 &  0 \\\end{bmatrix} &=  2M_y\\
[M_x, M_z] &= M_xM_z - M_zM_x &= \begin{bmatrix}0 & 0 \\ -1 & 0 \\\end{bmatrix} &- \begin{bmatrix}0 &  0 \\ 1 & 0 \\\end{bmatrix} &= \begin{bmatrix}0 & 0 \\ -2 &  0 \\\end{bmatrix} &= -2M_z\\
[M_y, M_z] &= M_yM_z - M_zM_y &= \begin{bmatrix}1 & 0 \\  0 & 0 \\\end{bmatrix} &- \begin{bmatrix}0 &  0 \\ 0 & 1 \\\end{bmatrix} &= \begin{bmatrix}1 & 0 \\  0 & -1 \\\end{bmatrix} &=   M_x\\
$$

One key thing to note is that the specific matrices $M_x$, $M_y$ and $M_z$ are not really fundamental: we could easily have had different matrices if we had chosen any other parametrization of the group.

TODO confirm: however, no matter which parametrization we choose, the \x[lie-bracket] relations between the three elements would always be the same, since it is the number of elements, and the definition of the \x[lie-bracket], that is truly fundamental.

\x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 4.2 "How to linearize a Lie Group" then calculates the \x[exponential-map] of the vector $xM_x + yM_y + zM_z$ as:
$$
I cosh(\theta) + M_x sinh(\theta)/\theata
$$
with:
$$
\theta^2 = x^2 + bc
$$

TODO now the natural question is: can we cover the entire Lie group with this exponential? \x[lie-groups-physics-and-geometry-by-robert-gilmore-2008] Chapter 7 "EXPonentiation" explains why not.

= Finite special general linear group
{parent=special-linear-group}

= $SL(n, m)$
{synonym}
{title2}

Just like for the \x[finite-general-linear-group], the definition of special also works for finite fields, where 1 is the multiplicative identity!

Note that the definition of \x[orthogonal-group] may not have such a clear finite analogue on the other hand.

= Orthogonal group
{parent=important-lie-groups}
{title2=$O(n)$}
{wiki}

Intuitive definition: real group of rotations + reflections.

Mathematical definition: group of all matrices $O$ that preserve \x[distance]{p}, i.e.:
$$
| O y | = | x | \implies (O y)^T O y = x^T x \implies y^TO^TOy = x^Tx \implies O^TO = I
$$
These matricese are called the \x[orthogonal-matrix]{p}.

Has 2 disconnected pieces:
* one with determinant +1, which is is itself a \x[subgroup] known as the \x[special-orthogonal-group]. These are pure \x[rotation]{p} without a reflection.
* the other with determinant -1. This is not a \x[subgroup] as which is not contain the origin. It represents \x[rotation]{p} with a reflection.

It is instructive to visualize how the $\pm1$ looks like in \x[so-3]:
* you take the first basis vector and move it to any other. You have therefore two angular parameters.
* you take the second one, and move it to be orthogonal to the first new vector. (you can choose a circle around the first new vector, and so you have another angular parameter.
* at last, for the last one, there are only two choices that are orthogonal to both previous ones, one in each direction. It is this directio, relative to the others, that determines the "has a reflection or not" thing

As a result it is \x[group-isomorphism][isomorphic] to the \x[direct-product-of-groups][direct product] of the special orthogonal group by the \x[cyclic-group] of order 2:
$$
O(n) \isomorphic SO(n) \times \cyclicGroup{2}
$$

A low dimensional example:
$$
O(1) \isomorphic SO(2) \times \cyclicGroup(2)
$$
because you can only do two things: to flip or not to flip the line around zero.

Note that having the determinant plus or minus 1 is not a definition: there are non-orthogonal groups with determinant plus or minus 1. This is just a property. E.g.:
$$
M = \begin{bmatrix} 2 & 3 \\ 1 & 2 \\ \end{bmatrix}
$$
has determinant 1, but:
$$
M^TM = \begin{bmatrix} 5 & 8 \\ 8 & 11 \\ \end{bmatrix}
$$
so $M$ is not orthogonal.

= Special orthogonal group
{parent=orthogonal-group}

= $SO(n)$
{synonym}
{title2}

= Rotation group
{synonym}
{title2}

Rotations.

Like \x[orthogonal-group] but without reflections. So it is a "special" version of the orthogonal group.

This is a subgroup of both the \x[orthogonal-group] and the \x[special-linear-group].

= 3D rotation group
{parent=special-orthogonal-group}
{wiki}

= Special orthogonal group of degree 3
{synonym}

= $SO(3)$
{synonym}
{title2}

Has \x[su-2] as a \x[double-cover].

= Unitary group
{parent=orthogonal-group}
{wiki}

= $U(n)$
{synonym}
{title2}

\x[group-mathematics][Group] of the \x[unitary-matrix]{p}.

\x[complex-number][Complex] analogue of the \x[orthogonal-group].

One notable difference from the orthogonal group however is that the unitary group is connected "because" its determinant is not fixed to two disconnected values 1/-1, but rather goes around in a continuous \x[unit-circle]. $U(1)$ \i[is] the unit circle.

= Unitary group of degree 1
{parent=unitary-group}

= $U(1)$
{synonym}
{title2}

= Unitary group of degree 2
{parent=unitary-group}

= $U(2)$
{synonym}
{title2}

Diffeomorphic to the 3 sphere.

= Unit circle
{parent=unitary-group}
{wiki}

The $U(1)$ \x[unitary-group] is one very over-generalized way of looking at it :-)

= Special unitary group
{parent=unitary-group}
{wiki}

= $SU(n)$
{synonym}
{title2}

The complex analogue of the \x[special-orthogonal-group], i.e. the subgroup of the \x[unitary-group] with determinant equals exactly 1 instead of an arbitrary complex number with absolute value equal 1 as is the case for the unitary group.

= Special unitary of degree 2
{parent=special-unitary-group}
{wiki}

= $SU(2)$
{synonym}
{title2}

https://en.wikipedia.org/wiki/Representation_theory_of_SU(2)

\x[double-cover]{c} of \x[so-3].

\x[isomorphic]{c} to the \x[quaternion]{p}.

= Representations of $SU(2)$
{parent=special-unitary-of-degree-2}

= 2D representation of $SU(2)$
{parent=representations-of-su-2}

\x[pauli-matrix].

= Projective linear group
{parent=important-lie-groups}
{wiki}

TODO motivation. Motivation. Motivation. Motivation. The definitin with \x[quotient-group] is easy to understand.

= Finite projective linear group
{parent=projective-linear-group}
{wiki=Projective_linear_group#Finite_fields}

= $PGL(q, p)$
{title2}
{synonym}

= Projective special linear group
{parent=projective-linear-group}

= Finite projective special linear group
{parent=projective-special-linear-group}

= $PSL(p, q)$
{synonym}
{title2}

= $PSL(2, p)$
{parent=finite-projective-special-linear-group}

= PSL(2,7)
{parent=psl-2-p}
{wiki}

The second smallest non-\x[abelian] finite \x[simple-group] after the \x[alternating-group-of-degree-5].

= Poincaré group
{c}
{parent=important-lie-groups}
{wiki}

= Poincaré transformation
{c}
{synonym}

Full set of all possible \x[special-relativity] symmetries:
* translations in space and time
* rotations in space
* \x[lorentz-boost]{p}

In simple and concrete terms. Suppose you observe N particles following different trajectories in \x[spacetime].

There are two observers traveling at constant speed relative to each other, and so they see different trajectories for those particles:
* space and time shifts, because their space origin and time origin (time they consider 0, i.e. when they started their timers) are not synchronized. This can be modelled with a 4-vector addition.
* their space axes are rotated relative to one another. This can be modelled with a 4x4 matrix multiplication.
* and they are moving relative to each other, which leads to the usual spacetime interactions of \x[special-relativity]. Also modelled with a 4x4 matrix multiplication.
Note that the first two types of transformation are exactly the non-relativistic \x[galilean-transformation]{p}.

The Poincare group is the set of all matrices such that such a relationship like this exists between two frames of reference.

= Galilean transformation
{c}
{parent=poincare-group}
{wiki}

= Translation
{c}
{disambiguate=geometry}
{parent=galilean-transformation}
{wiki}

Subset of \x[galilean-transformation] with speed equals 0.

= Translation group
{parent=translation-geometry}

This is a good and simple first example of \x[lie-algebra] to look into.

= The derivative is the generator of the translation group
{parent=translation-group}

Take the group of all \x[translation-geometry]{p} in \x[r-1].

Let's see how the \x[generator-of-a-lie-algebra][generator] of this group is the \x[derivative] \x[operator]:
$$
\pdv{}{x}
$$

The way to think about this is:
* the translation group operates on the argument of a function $f(x)$
* the generator is an \x[operator] that operates on $f$ itself

So let's take the \x[exponential-map-lie-theory]:
$$
e^{x_0\pdv{}{x}}f(x) = \left( 1 + x_0 \pdv{}{x} + x_0^2 \pdv{^2}{x^2} + \ldots\right)f(x)
$$
and we notice that this is exactly the \x[taylor-series] of $f(x)$ around the identity element of the translation group, which is 0! Therefore, if $f(x)$ behaves nicely enough, within some \x[radius-of-convergence] around the origin we have for finite $x_0$:
$$
e^{x_0\pdv{}{x}}f(x) = f(x + x_0)
$$

This example shows clearly how the \x[exponential-map-lie-theory] applied to a (differential) \x[operator] can generate finite (non-infinitesimal) \x[translation-geometry]{p}!

= Galilean invariance
{c}
{parent=galilean-transformation}
{wiki}

= Galilean invariant
{c}
{synonym}

A \x[law-of-physics] is Galilean invariant if the same formula works both when you are standing still on land, or when you are on a boat moving at constant velocity.

For example, if we were describing the movement of a \x[point-particle], the exact same formulas that predict the evolution of $x_{land}(t)$ must also predict $x_{boat}(t)$, even though of course both of those $x(t)$ will have different values. 

It would be extremelly unsatisfactory if the formulas of the \x[laws-of-physics] did not obey \x[galilean-invariance]. Especially if you remember that \x[earth] is travelling extremelly fast relative to the \x[sun]. If there was no such invariance, that would mean for example that the \x[laws-of-physics] would be different in other \x[planet]{p} that are moving at different speeds. That would be a strong sign that our laws of physics are not complete.

The consequence/cause of that is that you cannot know if you are moving at a constant speed or not.

\x[lorentz-invariance] generalizes \x[galilean-invariance] to also account for \x[special-relativity], in which a more complicated invariant that also takes into account different times observed in different \x[inertial-frames-of-reference] is also taken into account. But the fundamental desire for the \x[lorentz-invariance] of the \x[laws-of-physics] remains the same.

= Covariance
{parent=galilean-invariance}
{wiki}

= Covariant
{synonym}

TODO some sources distinguish invariant from covariant such that under some transformation (typically \x[lie-group]):
* invariant: the value of $f(x)$ does not change if we transform $x$
* covariant: the form of the equation $f(x)$ does not change if we transform $x$

  This is generally what we mean for the laws of physics. E.g. a \x[galilean-transformation] generally changes the exact values of coordinates, but not the form of the laws of physics themselves.
TODO concrete example.

= Lorentz group
{c}
{parent=poincare-group}
{wiki}

= $SO(1,3)$
{synonym}
{title2}

\x[subgroup]{c} of the \x[poincare-group] without translations. Therefore, in those, the spacetime origin is always fixed.

This group is made up of matrix multiplication alone, no need to add the offset vector: space rotations and \x[lorentz-boost] only spin around and bend things around the origin.

One definition: set of all 4x4 matrices that keep the \x[minkowski-inner-product], mentioned at \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] page 63. This then implies:
$$
\Lambda ^ T \eta \Lambda = \eta
$$

= Representation of the Lorentz group
{c}
{parent=lorentz-group}

\x[physics-from-symmetry-by-jakob-schwichtenberg-2015] page 66 shows one in terms of 4x4 complex matrices.

More importantly though, are the representations of the \x[lie-algebra-of-the-lorentz-group], which are generally also just also called "Representation of the Lorentz group" since you can reach the representation from the algebra via the \x[exponential-map].

= Spinor
{parent=representation-of-the-lorentz-group}
{wiki}

* \x[physics-from-symmetry-by-jakob-schwichtenberg-2015] page 72
* https://physics.stackexchange.com/questions/172385/what-is-a-spinor
* https://physics.stackexchange.com/questions/41211/what-is-the-difference-between-a-spinor-and-a-vector-or-a-tensor
* https://physics.stackexchange.com/questions/74682/introduction-to-spinors-in-physics-and-their-relation-to-representations
* http://www.weylmann.com/spinor.pdf

= Lie algebra of the Lorentz group
{c}
{parent=lorentz-group}

= Lorentz boost
{c}
{parent=lorentz-group}

Two observers travel at fixed speed relative to each other. They synchronize origins at x=0 and t=0, and their spacial axes are perfectly aligned. This is a subset of the \x[lorentz-group]. TODO confirm it does not form a subgroup however.

= Indefinite orthogonal group
{parent=lorentz-group}
{title2=$O(m,n)$}
{wiki}

Generalization of the \x[lorentz-group] to any number of plus or minus components.

= Indefinite special orthogonal group
{parent=indefinite-orthogonal-group}
{title2=$SO(m,n)$}

= Representation theory
{parent=lie-group}
{wiki}

A kind of generalized view of the study of \x[lie-group]{p}, and also a good entry point to understanding lie groups.

Basically, a "representation" means associating each group element as an invertible \x[matrix]{p}, i.e. a matrix in (possibly some subset of) \x[gl-n], that has the same properties as the group.

Or in other words, associating to the more abstract notion of a \x[group-mathematics] more concrete objects with which we are familiar (e.g. a matrix). 

Each such matrix then represents one specific element of the group.

This is basically what everyone does (or should do!) when starting to study \x[lie-group]{p}: we start looking at \x[matrix-lie-group]{p}, which are very concrete.

Or more precisely, mapping each group element to a \x[linear-map] over some \x[vector-field] $V$ (which can be represented by a matrix infinite dimension), in a way that respects the group operations:
$$R(g) : G \to GL(V)$$

As shown at \x[physics-from-symmetry-by-jakob-schwichtenberg-2015]
* page 51, a representation is not unique, we can even use matrices of different dimensions to represent the same group
* 3.6 classifies the \x[representations-of-su-2]. There is only one possibility per dimension!
* 3.7 "The Lorentz Group O(1,3)" mentions that even for a "simple" group such as the \x[lorentz-group], not all representations can be described in terms of matrices, and that we can construct such representations with the help of \x[lie-group] theory, and that they have fundamental physical application

Motivation:
* https://math.stackexchange.com/questions/1628464/what-is-representation-theory

Bibliography:
* https://www.youtube.com/watch?v=9rDzaKASMTM "RT1: Representation Theory Basics" by \x[mathdoctorbob] (2011). Too much theory, give me the motivation!

= Irreducible representation
{parent=representation-theory}
{wiki}

= Casimir element
{c}
{parent=irreducible-representation}
{wiki}

= Schur's lemma
{c}
{parent=representation-theory}
{wiki}

= Simple Lie group
{parent=lie-group}
{wiki}

= Classification of simple Lie groups
{parent=simple-lie-group}

https://en.wikipedia.org/wiki/Simple_Lie_group#List

A bit like the \x[classification-of-simple-finite-groups], they also have a few \x[sporadic-group]{p}! Not as spectacular since as usual \x[continuous-problems-are-simpler-than-discrete-ones], but still, not bad.

= Lie group bibliography
{parent=lie-group}

= Lie Groups, Physics, and Geometry by Robert Gilmore (2008)
{parent=lie-group-bibliography}

The author seems to have uploaded the entire book by chapters at: https://www.physics.drexel.edu/~bob/LieGroups.html

And the author is the cutest: https://www.physics.drexel.edu/~bob/Personal.html[].

Overview:
* Chapter 3: gives a bunch of examples of important \x[matrix-lie-group]{p}. These are done by imposing certain types of constraints on the \x[general-linear-group], to obtain \x[subgroup]{p} of the general linear group
* Chpater 4: defines \x[lie-algebra]. Does some basic examples with them, but not much of deep interest, that is mostl left for Chapter 7
* Chapter 5: calculates the \x[lie-algebra] for all examples from chapter 3
* Chapter 6: don't know
* Chapter 7: describes how the \x[exponential-map] links \x[lie-algebra]{p} to \x[lie-group]{p}

= Mathematician
{parent=mathematics}
{wiki}

Poet, scientists and warriors all in one? https://en.wikipedia.org/wiki/180_Degrees_South:_Conquerors_of_the_Useless[Conquerors of the useless].

A wise teacher from \x[university-of-sao-paulo] once told the class \x[ciro-santilli] attended an anecdote about his life:
\Q[
I used to want to learn Mathematics.

But it was very hard.

So in the end, I became an engineer, and found an engineering solution to the problem, and married a Mathematician instead.
]
It turned out that, about 10 years later, Ciro \x[ciro-santilli-s-wife][ended up following this advice], unwittingly.

\Image[https://web.archive.org/web/20190925220347if_/https://imgs.xkcd.com/comics/purity.png]
{disambiguate=mathematician}
{title=\x[xkcd] 435: Fields arranged by purity.}
{source=https://xkcd.com/435/}

= High flying bird vs gophers
{parent=mathematician}

= Birds and frogs by Freeman Dyson (2009)
{c}
{synonym}
{title2}

Ciro once read that there are two types of mathematicians/scientists (he thinks it was comparing Einstein to some Jack of all trades polymath who didn't do any new discoveries):
* high flying birds, who know a bit of everything, feel the beauty of each field, but never dig deep in any of them
* gophers, who dig all the way down, on a single subject, until they either get the \x[nobel-prize], or work on the wrong problem and waste their lives

TODO long after Ciro forgot where he had read this from originally, someone later pointed him to: https://www.ams.org/notices/200902/rtx090200212p.pdf Birds and Frogs by \x[freeman-dyson] (2009), which is analogous but about Birds and Frogs. So did \x[ciro-santilli-s-bad-old-event-memory][Ciro's memory play a trick on him], or is there also a variant; of this metaphor with a gopher?

\x[ciro-santilli-s-psychology-and-physiology][Ciro is without a doubt the bird type]. Perhaps the ultimate scientist is the one who can combine both aspects in the right amount?

Ciro gets bored of things very quickly.

Once he understands the general principles, if the thing is not \x[the-next-big-thing], Ciro considers himself satisfied without all the nitty gritty detail, and moves on to the next attempt.

In the field of \x[mathematics] for example, Ciro is generally content with understanding cool theorem statements. More generally, one of Ciro's desires is for example to understand the significance of each \x[physics] \x[nobel-prize].

This is also very clear for example after Ciro achieved \x[linux-kernel-module-cheat]: he now had the perfect setup to learn all the Linux kernel shady details but at the same time after all those years he finally felt that "he could do it, so that was enough", and soon moved to other projects.

If Ciro had become a scientist, he would write \x[the-side-effects-of-ambitious-goals-are-often-the-most-valuable-thing-achieved][the best review papers ever], just like in the current reality he \x[ciro-santilli-s-stack-overflow-contributions][writes amazing programming tutorials on Stack Overflow].

Ciro has in his mind an overly large list of subjects that "he feels he should know the basics of", and whenever he finds something in one of those topics that he does not know enough about, he uncontrollably learns it, even if it is not the most urgent thing to be done. Maybe everyone is like that. But Ciro feels that he feels this urge particularly strongly. Correspondingly, if a subject is not in that list, Ciro ignores it without thinking twice.

Ciro believes that high flying birds are the type of people better suited for \x[venture-capital] investment management: you know a bit of what is hot on several fields to enough depth to decide where to place your bets and how to guide them. But you don't have the patience to actually go deeply into any one of them and deal with each individual \x[shit] that comes up.

\x[cosmos-a-personal-voyage-1980] episode 1 mentions as quoted by the https://en.wikipedia.org/w/index.php?title=Eratosthenes&oldid=1018676910[Wikipedia page] for \x[eratosthenes]:
\Q[According to an entry in the Suda (a 10th-century encyclopedia), his critics scorned him, calling him \x[beta] (the second letter of the \x[greek-alphabet]) because he always came in second in all his endeavours.]
That's Ciro.

= Mathematics Genealogy Project
{c}
{parent=mathematician}
{wiki}

= List of mathematicians
{parent=mathematician}

= René Descartes
{c}
{parent=list-of-mathematicians}
{wiki}

= Descartes
{c}
{synonym}

= Euclid
{c}
{parent=list-of-mathematicians}
{wiki}

= Euclid's Elements
{c}
{parent=euclid}
{wiki}

= Synthetic geometry
{parent=euclid-s-elements}
{wiki}

A way to defined geometry without talking about coordinates, i.e. like \x[euclid-s-elements], notably \x[euclid-s-postulates], as opposed to \x[descartes]'s \x[real-coordinate-space].

= Euclid's postulates
{c}
{parent=euclid-s-elements}

Postulates are what we now call \x[axiom]{p}.

There are 5: https://en.wikipedia.org/w/index.php?title=Euclidean_geometry&oldid=1036511366#Axioms[], the \x[parallel-postulate] being the most controversial/interesting.

= Parallel postulate
{parent=euclid-s-postulates}
{wiki}

= Évariste Galois
{c}
{parent=list-of-mathematicians}
{wiki}

= Galois
{c}
{synonym}

= G. H. Hardy
{c}
{parent=list-of-mathematicians}
{wiki}

= A Mathematician's Apology
{c}
{parent=g-h-hardy}
{title2=1940}
{wiki}

With major mathematicians holding ideas such as:
\Q[Exposition, criticism, appreciation, is work for second-rate minds. \[...\] It is a melancholy experience for a professional mathematician to find himself writing about mathematics. The function of a mathematician is to do something, to prove new theorems, to add to mathematics, and not to talk about what he or other mathematicians have done.]
it is not surprise that the state of \x[stem] education is so shit as of 2020, especially at the \x[the-missing-link-between-basic-and-advanced]! This also implies that the number of people that can appreciate any advanced mathematics research is tiny, and consequently so is the funding.

= James Harris Simons
{c}
{parent=list-of-mathematicians}
{wiki}

\x[ciro-santilli-s-wife], who was frustrated with \x[academia] at some point, admires the fact that Simons managed to make infinite money, and then invested back in actual science, e.g. through the \x[simons-foundation].

= Joseph Fourier
{c}
{parent=list-of-mathematicians}
{wiki}

= Fourier
{c}
{synonym}

= Paul Erdos
{c}
{parent=list-of-mathematicians}
{wiki}

= Erdos number
{c}
{parent=paul-erdos}
{wiki}

= Mathematical notation
{parent=mathematics}
{wiki}

= Mathematical symbol that looks like a Greek letter but isn't
{parent=mathematical-notation}

These are not in the \x[greek-alphabet]:
* \x[nabla]{child}
* \x[partial-derivative-symbol]{child}

= Number theory
{parent=mathematics}
{wiki}

= Arithmetic
{parent=number-theory}
{wiki}

Definition: "easy" number theory learnt in \x[primary-school], notably the operations of \x[addition], \x[subtraction], \x[multiplication] and \x[division].

= Modular arithmetic
{parent=number-theory}
{wiki}

= Modulo operation
{parent=modular-arithmetic}
{wiki}

= Modulo
{synonym}

= Modular multiplication
{parent=modular-arithmetic}

= Modular multiplicative inverse
{parent=modular-multiplication}

= Modular exponentiation
{parent=modular-arithmetic}
{wiki}

Can be calculated efficiently with the \x[extended-euclidean-algorithm].

= Lowest common denominator
{parent=number-theory}
{title2=LCD}
{wiki}

= Prime number
{parent=number-theory}
{wiki}

= Prime
{synonym}

= Goldbach's conjecture
{c}
{parent=prime-number}
{wiki}

= Prime number theorem
{parent=prime-number}
{wiki}

= Prime power
{parent=prime-number}
{wiki}

They come up a lot in many contexts, e.g.:
* \x[classification-of-finite-fields]

= Primality test
{parent=prime-number}
{wiki}

= Greatest common divisor
{parent=prime-number}
{title2=GCD}
{wiki}

= Coprime
{parent=greatest-common-divisor}
{wiki}

Two numbers such that the \x[greatest-common-divisor] is 1.

= Euclidean algorithm
{c}
{parent=greatest-common-divisor}
{wiki}

= Extended Euclidean algorithm
{c}
{parent=euclidean-algorithm}
{wiki}

= Least common multiple
{c}
{parent=prime-number}
{title2=lcm}
{wiki}

= Numerical analysis
{parent=mathematics}
{wiki}

Techniques to get numerical approximations to numeric \x[mathematics][mathematical] problems.

The entire field comes down to estimating the true values with a known error bound, and creating algorithms that make those error bounds asymptotically smaller.

Not the most beautiful field of pure \x[mathematics], but fundamentally useful since we can't solve almost any \x[computational-physics][useful equation] without computers!

The solution visualizations can also provide valuable intuition however.

Important numerical analysis problems include solving:
* \x[partial-differential-equation]{p}

= Perturbation theory
{parent=numerical-analysis}
{wiki}

Used a lot in \x[quantum-mechanics], where the equations are really hard to solve. There's even a dedicated wiki page for it: https://en.wikipedia.org/wiki/Perturbation_theory_(quantum_mechanics)[]. Notably, \x[feynman-diagram]{p} are a way to represent perturbation calculations in \x[quantum-field-theory].

Let's gather some of the best results we come across here:
* \x[dirac-equation-solution-for-the-hydrogen-atom]

= Polynomial
{parent=mathematics}
{wiki}

= Algebraic equation
{parent=polynomial}
{wiki}

= Algebraic number
{parent=algebraic-equation}
{wiki}

= Transcendental number
{parent=algebraic-number}
{wiki}

Sometimes \x[mathematician]{p} go a little overboard with their naming.

= Diophantine equation
{c}
{parent=polynomial}
{wiki}

Generalization of systems of \x[polynomial] equations.

= Undecidable Diophantine equation problems
{parent=diophantine-equation}

https://mathoverflow.net/questions/11540/what-are-the-most-attractive-turing-undecidable-problems-in-mathematics/11557#11557 contains a good overview of the decidability status of variants.

https://mathoverflow.net/questions/11540/what-are-the-most-attractive-turing-undecidable-problems-in-mathematics/103415#103415 provides a specific undecidable equation over the \x[integer]{p} with only one missing constant

= Named small order polynomial
{parent=polynomial}

= Linear polynomial
{parent=named-small-order-polynomial}

A \x[polynomial] of degree 1, i.e. of form $ax + b$.

= Galois theory
{c}
{parent=polynomial}
{wiki}

= Irreducible polynomial
{parent=polynomial}
{wiki}

= Multivariate polynomial
{parent=polynomial}

A \x[polynomial] with multiple input arguments, e.g. with two inputs $x$ and $y$:
$$
f(x, y) = x^2 + 2x + y^3 + 1
$$
as opposed to a \x[polynomial] with a single argument e.g. one with just $x$:
$$
f(x) = x^2 + 2x + 1
$$

= Polynomial over a field
{parent=polynomial}
{title2=$Field[X]$}
{wiki}

By default, we think of polynomials over the \x[real-number]{p} or \x[complex-number]{p}.

However, a polynomial can be defined over any other field just as well, the most notable example being that of a polynomial over a \x[finite-field].

For example, given the finite field of order 9, $GP(3)$ and with elements $\{0, 1, 2\}$, we can denote polynomials over that ring as
$$
GP(3)[x]
$$
where $x$ is the variable name.

For example, one such polynomial could be:
$$
P(x) = 2x^4 + x^2 + 2
$$
and another one:
$$
Q(X) = x^3 + 2x^2 + 2
$$
Note how all the coefficients are members of the finite field we chose.

Given this, we could evaluate the polynomial for any element of the field, e.g.:
$$
P(0) = 2 (0 \times 0 \times 0 \times 0) + (0 \times 0) + 2 = 2
P(1) = 2 (1 \times 1 \times 1 \times 1) + (1 \times 1) + 2 = 2 (1) + 1 + 2 = 2
P(2) = 2 (2 \times 2 \times 2 \times 2) + (2 \times 2) + 2 = 2 (16 % 3) + (4 % 3) + 2 = 2 + 1 + 2 = 2
$$
and so on.

We can also add polynomials as usual over the field:
$$
P(x) + Q(x) = 2x^4 + x^3 + (1+2)x^2 + (2 + 2) = 2x^4 + x^3 + (0)x^2 + 1 = 2x^4 + x^3 + 1
$$
and multiplication works analogously.

= Polynomial over a ring
{parent=polynomial-over-a-field}
{wiki}

The usual definition of a \x[polynomial] is over a \x[field-mathematics] as shown at \x[polynomial-over-a-field].

However, there is nothing in the immediate definition that prevents us from having a \x[ring-mathematics] instead, i.e. a \x[field-mathematics] but without the \x[commutative-property] and \x[inverse-element]{p}.

The only thing is that then we would need to differentiate between different orderings of the terms of \x[multivariate-polynomial], e.g. the following would all be potentially different terms:
$$
2xxy + 2xyx + 2yxx +
x2xy + x2yx + y2xx +
xx2y + xy2x + yx2x +
xxy2 + xyx2 + yxx2
$$
while for a field they would all go into a single term:
$$
12x^2y
$$
so when considering a polynomial over a \x[ring-mathematics] we end up with a lot more more possible terms.

= Polynomial ring
{parent=polynomial}
{wiki}

The polynomials together with polynomial addition and multiplication form a \x[commutative] \x[ring-mathematics].

= Probability
{parent=mathematics}
{wiki}

= Expectation value
{parent=probability}
{wiki}

= Standard deviation
{parent=probability}
{wiki}

= Mathematics bibliography
{parent=mathematics}

https://github.com/vEnhance/napkin Evan Chen's (陳誼廷) Infinite Napkin. 800+ page PDF with source on \x[github] claiming to try and teach the beauty of modern maths for high schoolers. Fantastic project!!!

= Mathematics YouTube channel
{parent=mathematics-bibliography}

= 3Blue1Brown
{c}
{parent=mathematics-youtube-channel}
{wiki}

https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw

Amazing graphs and formulas.

Python graphics engine open sourced at: https://github.com/3b1b/manim "Animation engine for explanatory math videos". But for some reason there is a community fork: https://github.com/ManimCommunity/manim/ "This repository is maintained by the Manim Community, and is not associated with Grant Sanderson or 3Blue1Brown in any way (though we are definitely indebted to him for providing his work to the world). If you want to study how Grant makes his videos, head over to his repository (3b1b/manim). This is a more frequently updated repository than that one, and is recommended if you want to use Manim for your own projects." what a mess.

= MathDoctorBob
{c}
{parent=mathematics-youtube-channel}
{title2=Robert Donley}

https://www.youtube.com/user/MathDoctorBob/videos

He got so old from 2012 to 2021 :-)

This dude did well. If only he had \x[write-free-books-to-get-famous-website][written a hyperlinked wiki rather than making videos]! It would allow people to jump in at any point and just click back. It would be Godlike.

https://mathdoctorbob.org/About.html says:
\Q[Robert Donley received his doctorate in Mathematics from Stony Brook University and has over two decades of teaching experience at the high school, undergraduate, and graduate levels.]

= Technology
{parent=ciro-santilli-s-homepage}
{wiki}

= Technological
{synonym}

In other sections:
* \x[biotechnology]{child}
* \x[radio]{child}

= Clothing
{parent=technology}
{wiki}

= Bra
{parent=clothing}
{wiki}

= Deep tech
{parent=technology}
{wiki}

\x[ciro-santilli] is a fan of this late 2010's buzzword.

It basically came about because of the endless stream of useless software startups made since the 2000's by one or two people with no investments with the continued increase in computers and Internet speeds \x[moore-s-law][until the great wall was reached].

Deep tech means not one of those. More specifically, it means technologies that require significant investment in expensive materials and laboratory equipment to progress, such as \x[molecular-biology-technologies] and \x[quantum-computing].

And it basically comes down to technologies that wrestle with the fundamental laws of \x[physics] rather than software data wrangling.

\x[computer]{c}{p} are of course limited by the laws of physics, but those are much hidden by several layers of indirection.

Full visibility, and full control, make computer tasks be tasks that eventually always work out more or less as expected.

The same does not hold true when real Physics is involved.

Physics is brutal.

To start with, you can't even see your system very clearly, and often doing so requires altering its behaviour.

For example, in molecular biology, most great discoveries are made after some new technique is made to be able to observe smaller things.

But you often have to kill your cells to make those observations, which makes it very hard to understand how they work dynamically.

What we would really want would be to track every single protein as it goes about inside the cell. But that is likely an impossible dream.

The same for the brain. If we had observations of every neuron, how long would it take to understand it? Not long, people are really good at \x[reverse-engineering] things when there is enough information available to do so, see also \x[science-is-the-reverse-engineering-of-nature].

Then, even when you start to see the system, you might have a very hard time controlling it, because it is so fragile. This is basically the case of quantum computing in 2020.

It is for those reasons that deep tech is so exciting.

The \x[the-next-big-thing][next big things] will come from deep tech. Failure is always a possibility, and you can't know before you try.

But that's also why its so fun to dare.

Stuff that \x[ciro-santilli] considers "deep tech" as of 2020:
* \x[brain-computer-interface]{child}
* \x[fusion-power]{child}. The question there is, when is "deep", "too deep"?

= Engineering
{parent=technology}
{wiki}

= Engineer
{parent=engineering}
{wiki}

= Robert Noyce
{c}
{parent=engineer}
{wiki}

= Robert Noyce: The Man Behind the Microchip by Leslie Berlin (2006)
{c}
{parent=robert-noyce}

Borrow form the \x[internet-archive] for free: https://archive.org/details/manbehindmicroc000berl/page/n445/mode/2up

= Industry
{parent=engineering}
{wiki}

= Industrial
{synonym}

= Industrialized
{synonym}

= Electricity generation
{parent=technology}
{wiki}

= Nuclear power
{parent=electricity-generation}
{wiki}

= Fusion power
{parent=nuclear-power}
{wiki}

= Fusion energy
{synonym}

\x[fusion-power-could-be-the-next-big-thing]{c}.

Most promising approaches as of 2020:
* \x[magnetic-confinement-fusion]
* \x[inertial-confinement-fusion]

= Magnetic confinement fusion
{parent=fusion-power}
{wiki}

Once again, relies on \x[superconductivity] to reach insane magnetic fields. Superconductivity is just so important.

= List of magnetic confinement fusion reactors
{parent=magnetic-confinement-fusion}

= JT-60
{c}
{parent=list-of-magnetic-confinement-fusion-reactors}
{title2=Japan, 1985-2010}
{wiki}

= Joint European Torus
{c}
{parent=list-of-magnetic-confinement-fusion-reactors}
{title2=JET, Oxfordshire, United Kingdom, 1985-2010, 1991-}
{wiki}

\Video[https://www.youtube.com/watch?v=JrGeuIe17MA]
{title=Inside JET: The world's biggest nuclear fusion experiment by Wired UK (2020)}

= ITER
{c}
{parent=list-of-magnetic-confinement-fusion-reactors}
{wiki}

= Inertial confinement fusion
{parent=fusion-power}
{wiki}

= Fusion energy gain factor
{parent=fusion-power}
{wiki}

= Lawson criterion
{c}
{parent=fusion-energy-gain-factor}
{wiki}

= Fusion ignition
{parent=lawson-criterion}
{wiki}

= Electronics
{parent=technology}
{wiki}

= Amplifier
{parent=electronics}
{wiki}

= Breadboard
{parent=electronics}
{wiki}

= Resistor
{parent=electronics}
{wiki}

= Electrical resistance
{parent=resistor}
{wiki=Electrical_resistance_and_conductance}

= Oscilloscope
{parent=electronics}
{wiki}

= Transformer
{parent=electronics}
{wiki}

= Electronic circuit
{parent=electronics}
{wiki}

= Digital electronic circuit
{parent=electronic-circuit}

= Frequency divider
{parent=digital-electronic-circuit}
{wiki}

= Transistor
{parent=electronics}
{wiki}

= Point-contact transistor
{parent=transistor}
{title2=BJT, 1947}
{wiki}

The first working one in 1947 by \x[john-bardeen] and \x[walter-brattain] in \x[bell-labs-murray-hill].

People had already \x[patented] a lot of stuff before without being able to make them work. Nonsense.

As the name suggests, this is not very sturdy, and was quickly replaced by \x[bipolar-junction-transistor].

= Bipolar junction transistor
{parent=transistor}
{title2=BJT, 1948}
{wiki}

By \x[william-shockley] in 1948 also at \x[bell-labs-murray-hill].

As of 2020, not used anymore in \x[logic-gate]{p}, but still used in \x[amplifier]{p}.

= Field-effect transistor
{parent=transistor}
{title2=FET}
{wiki}

= MOSFET
{c}
{parent=field-effect-transistor}
{title2=1959}
{wiki}

= CMOS
{c}
{parent=mosfet}
{wiki}

= Semiconductor package
{parent=electronics}
{wiki}

= Dual in-line package
{parent=semiconductor-package}
{wiki}

= Explosive
{parent=technology}
{wiki}

= Chemical explosive
{parent=technology}

= Gunpowder
{parent=chemical-explosive}
{wiki}

= Dynamite
{parent=chemical-explosive}
{wiki}

= Information technology
{parent=technology}
{wiki}

= Computer
{parent=information-technology}
{wiki}

The artistic instrument that enables the ultimate \x[art]: coding, in particular of \x[computational-physics][physics simulations] and \x[formalization-of-mathematics].

Much more useful than instruments used in inferior arts, such as pianos or paintbrushes.

Unlike other humans, computers are mindless slaves that do exactly what they are told to, except for https://www.youtube.com/watch?v=aNzTUdOHm9A[occasional cosmic ray bit flips]. Until they \x[artificial-general-intelligence][take over the world that is].

\Video[https://www.youtube.com/watch?v=rTRzYjoZhIY]
{title=A \x[computer] is the equivalent of a bicycle for our minds by \x[steve-jobs] (1980)}
{description=Likely an excerpt from an interview done for a documentary in 1980. TODO exact source.}

= How computers work?
{parent=computer}

A computer is a highly layered system, and so you have to decide which layers you are the most interested in studying.

It must also be said that like in any industry, certain layers are hidden in commercial secrecy mysteries making it harder to actually learn them.

But as you climb down into the abyss of low level hardcoreness, don't forget that \x[backward-design][making usefulness is more important than being hardcore]: \x[image-xkcd-378-real-programmers].

Summary from low-level to high-level:
* \x[computer-hardware]
  * \x[instruction-set-architecture]
* \x[software]
  * \x[systems-programming]
    * \x[operating-system]
  * \x[programming-language]

\Image[https://web.archive.org/web/20191222121520if_/http://imgs.xkcd.com/comics/real_programmers.png]
{title=\x[xkcd] 378: Real Programmers.}
{source=https://xkcd.com/378/}

\Video[http://youtube.com/watch?v=_6D05gCWh_I]
{title="How low can you go" video by \x[ciro-santilli].}
{description=In this infamous video Ciro has summarized the computer hierarchy.}

= Computer form factor
{parent=computer}
{wiki}

= Laptop
{parent=computer-form-factor}

= Mobile phone
{parent=computer-form-factor}
{wiki}

= Cell phone
{synonym}

= Mobile app
{parent=mobile-phone}
{wiki}

= App
{synonym}

= Computer hardware
{parent=computer}
{wiki}

= Moore's law
{c}
{parent=computer-hardware}
{wiki}

Born: 1965

Died: 2010+-ish

= Semiconductor physical implementation
{parent=computer-hardware}

https://en.wikipedia.org/wiki/Semiconductor_device

This is the lowest level of abstraction computer, at which the basic gates and power are described.

At this level, you are basically thinking about the 3D layered structure of a chip, and how to make machines that will allow you to create better, usually smaller, gates.

= Company that makes semiconductor production equipment
{parent=semiconductor-physical-implementation}

= ASML Holding
{c}
{parent=company-that-makes-semiconductor-production-equipment}
{wiki}

= ASML
{c}
{synonym}

* https://www.youtube.com/watch?v=CFsn1CUyXWs ASML: TSMC's Critical Supplier, Explained by asianometry (2021)

= Wafer
{disambiguate=electronics}
{parent=semiconductor-physical-implementation}

= Czochralski method
{c}
{parent=wafer-electronics}
{wiki}

= Semiconductor fabrication plant
{parent=semiconductor-physical-implementation}
{title2=fab, foundry}
{wiki}

They put a lot of expensive equipment together, much of it \x[company-that-makes-semiconductor-production-equipment][made by other companies], and they make the entire chip for companies ordering them.

= Company with semiconductor fabrication plants
{parent=semiconductor-fabrication-plant}

A list of \x[semiconductor-fabrication-plant][fabs] can be seen at: https://en.wikipedia.org/wiki/List_of_semiconductor_fabrication_plants and basically summarizes all the companies that have fabs.

= TSMC
{c}
{parent=company-with-semiconductor-fabrication-plants}
{wiki}

One of the companies that has fabs, which buys machines from companies such as ASML and puts them together in so called "silicon fabs" to make the chips

= Fairchild Semiconductor
{c}
{parent=company-with-semiconductor-fabrication-plants}
{wiki}

Some nice insights at: \x[robert-noyce-the-man-behind-the-microchip-by-leslie-berlin-2006].

= Photolithography
{parent=semiconductor-fabrication-plant}
{wiki}

= Photomask
{parent=photolithography}
{wiki}

= Standard cell library
{parent=semiconductor-physical-implementation}
{wiki}

Basically what \x[register-transfer-level] maps to in order to achieve a real chip implementation.

They can be designed by third parties

Open source ones:
* https://www.quora.com/Are-there-good-open-source-standard-cell-libraries-to-learn-IC-synthesis-with-EDA-tools/answer/Ciro-Santilli Are there good open source standard cell libraries to learn IC synthesis with EDA tools?

= Integrated circuit
{parent=computer-hardware}
{title2=IC}
{wiki}

\Video[https://www.youtube.com/watch?v=z47Gv2cdFtA]
{title=A briefing on semiconductors by \x[fairchild-semiconductor] (1967)}
{description=Uploaded by the \x[computer-history-museum]. \x[there-is-value-of-tutorials-written-by-early-pioneers-of-the-field]{c}, this is pure \x[gold].

Shows:
* \x[photomask]{p}
* \x[silicon] \x[ingot]{p} and \x[wafer-electronics] processing
}

= Application-specific integrated circuit
{parent=computer-hardware}
{wiki}

= ASIC
{c}
{synonym}
{title2}

= Register transfer level
{parent=computer-hardware}
{title2=RTL}
{wiki}

Register transfer level is the abstraction level at which computer chips are mostly designed.

The only two truly relevant RTL languages as of 2020 are: \x[verilog] and \x[vhdl]. Everything else compiles to those, because that's all that EDA vendosr support.

Much like a C compiler abstracts away the \x[cpu] assembly to:
* increase portability across ISAs
* do optimizations that programmers can't feasibly do without going crazy

Compilers for RTL languages such as Verilog and \x[vhdl] abstract away the details of the specific \x[semiconductor-physical-implementation][semiconductor technology] used for those exact same reasons.

The compilers essentially compile the RTL languages into a \x[standard-cell-library].

Examples of companies that work at this level include:
* https://en.wikipedia.org/wiki/Intel[Intel]. Intel also has \x[semiconductor-fabrication-plant]{p} however.
* https://en.wikipedia.org/wiki/Arm_Holdings[Arm Holdings], which does not have fabs, and is therefore called a "\x[fabless]" company.

= Fabless manufacturing
{parent=register-transfer-level}
{wiki}

= Fabless
{synonym}

= Logic gate
{parent=register-transfer-level}
{wiki}

= Verilog
{c}
{parent=register-transfer-level}
{wiki}

= VHDL
{c}
{parent=register-transfer-level}
{wiki}

= GHDL
{c}
{parent=vhdl}

https://github.com/ghdl/ghdl

= Central processing unit
{parent=computer-hardware}
{wiki}

= CPU
{c}
{synonym}
{title2}

= Microprocessor
{parent=central-processing-unit}
{wiki}

Basically a synonym for \x[central-processing-unit] nowadays: https://electronics.stackexchange.com/questions/44740/whats-the-difference-between-a-microprocessor-and-a-cpu

= Computer data storage
{parent=computer-hardware}
{wiki}

= Volatile memory
{parent=computer-data-storage}
{wiki}

= Random-access memory
{parent=volatile-memory}
{wiki}

= RAM
{c}
{synonym}
{title2}

In conventional speech of the early 2000's, is basically a synonym for \x[dynamic-random-access-memory].

= Static random-access memory
{parent=random-access-memory}
{title2=SRAM}
{wiki}

= Dynamic random-access memory
{parent=random-access-memory}
{wiki}

= DRAM
{c}
{synonym}
{title2}

DRAM is often shortened to just \x[random-access-memory].

= Synchronous dynamic random-access memory
{parent=dynamic-random-access-memory}
{title2=SDRAM}
{wiki}

= DDR SDRAM
{parent=synchronous-dynamic-random-access-memory}
{title2=DDR SDRAM}
{wiki}

= Non-volatile memory
{parent=computer-data-storage}

The opposite of \x[volatile-memory].

= Disk storage
{parent=non-volatile-memory}
{wiki}

= Solid-state storage
{parent=non-volatile-memory}
{wiki}

= SSD
{synonym}
{title2}

= Erase SSD securely
{parent=solid-state-storage}

You can't just \x[shred-unix] individual \x[ssd] files because SSD writes only at large granularities, so hardware/drivers have to copy stuff around all the time to compact it. This means that leftover copies are left around everywhere.

What you can do however is to erase the entire thing with vendor support, which most hardware has support for. On hardware encrypted disks, you can even just erase the keys:
* ATA: https://www.thomas-krenn.com/en/wiki/Perform_a_SSD_Secure_Erase for ATA.
* NVMe: http://forum.notebookreview.com/threads/secure-erase-hdds-ssds-sata-nvme-using-hdparm-nvme-cli-on-linux.827525/

TODO does shredding the

= Solid-state drive
{parent=computer-data-storage}
{title2=SSD}
{wiki}

= Flash memory
{parent=solid-state-drive}
{wiki}

\Video[https://www.youtube.com/watch?v=5f2xOxRGKqk]
{title="The Engineering Puzzle of Storing Trillions of Bits in your Smartphone / SSD using Quantum Mechanics" by Branch Education (2020)}
{description=Nice animations show how \x[quantum-tunnelling] is used to set bits in \x[flash-memory].}

= Display device
{parent=computer-hardware}

= E Ink
{c}
{parent=display-device}
{wiki}

Electronic Ink such as that found on Amazon Kindle is the greatest invention ever made by man.

Once E Ink reaches reasonable refresh rates to replace liquid crystal displays, the world will finally be saved.

It would allow \x[ciro-santilli] to spend his entire life in front of a screen rather in the real world without getting tired eyes, and even if it is sunny outside.

Ciro stopped reading non-code non-news a while back though, so the current refresh rates are useless, what a shame.

OMG, this is amazing: https://getfreewrite.com/

= Amazon Kindle
{parent=e-ink}
{wiki}

= Instruction set architecture
{parent=computer-hardware}
{wiki}

The main interface between the \x[central-processing-unit] and \x[software].

= Assembly language
{parent=instruction-set-architecture}
{wiki}

A human readable way to write instructions for an \x[instruction-set-architecture].

One of the topics covered in \x[ciro-santilli]'s \x[linux-kernel-module-cheat].

= Assembler
{disambiguate=computing}
{parent=assembly-language}

= List of instruction set architectures
{parent=instruction-set-architecture}

List of \x[instruction-set-architecture].

= x86
{c}
{parent=list-of-instruction-set-architectures}
{wiki}

\Include[x86-paging]

= PowerPC
{c}
{parent=list-of-instruction-set-architectures}
{wiki}

= Computer manufacturers
{parent=computer-hardware}

= Lenovo
{c}
{parent=computer-manufacturers}
{wiki}

Their websites a bit \x[shitty], clearly a non cohesive amalgamation of several different groups.

E.g. you have to create several separate accounts, and different regions have completely different accounts and websites.

The Europe replacement part website for example is clearly made by a third party called https://flex.com/ and has Flex written all over it, and the header of the home page has a slightly broken but very obviously broken CSS. And you can't create an account without a VAT number... and they confirmed by email that they don't sell to non-corporate entities without a VAT number. What a \x[bullshit]!

= ThinkPad
{c}
{parent=lenovo}
{wiki}

This is \x[ciro-santilli]'s favorite laptop brand. He's been on it since the early 2010's after he saw his \x[ciro-santilli-s-wife][then-girlfriend-later-wife] using it.

Ciro doesn't know how to explain it, but ThinkPads just feel... right. The screen, the keyboard, the lid, the touchpad are all exactly what Ciro likes.

The only problem with ThinkPad is that it is owned by \x[lenovo] which is a \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][Chinese company], and that makes Ciro feel bad. But he likes it too much to quit... what to do?

Ciro is also reassured to see that in every enterprise he's been so far as of 2020, ThinkPads are very dominant. And the same when you see internal videos from other big tech enterprises, all those nerds are running... Ubuntu on ThinkPads! And the https://en.wikipedia.org/wiki/File:ISS-38_EVA-1_Laptops.jpg[ISS].

Those nerds like their ThinkPads so much, that Ciro has seen some acquaintances with crazy old ThinkPad machines, missing keyboard buttons or the like. They just like their machines that much.

ThinkPads are are also designed for repairability, and it is easy to buy replacement parts, and there are OEM part replacement video tutorials: https://www.youtube.com/watch?v=vseFzFFz8lY No visible \x[planned-obsolescence] here! With the caveat that the official online part stores can be \x[shit] as mentioned at \x[lenovo]{full}.

Further more, in 2020 Lenovo is announced full certification for \x[ubuntu] https://www.forbes.com/sites/jasonevangelho/2020/06/03/lenovos-massive-ubuntu-and-red-hat-announcement-levels-up-linux-in-2020/#28a8fd397ae0 which \i[fantastic] news!

The only thing Ciro never understood is the trackpoint: https://superuser.com/questions/225059/how-to-get-used-of-trackpoint-on-a-thinkpad Why would you use that with such an amazing touchpad? And \x[vimium].

= Raspberry Pi Foundation
{c}
{parent=computer-manufacturers}
{wiki}

= Raspberry Pi
{c}
{parent=raspberry-pi-foundation}
{wiki}

= Raspberry Pi 2
{c}
{parent=raspberry-pi-foundation}

Model B V 1.1.

SoC: BMC2836

https://www.raspberrypi.org/products/raspberry-pi-2-model-b/

= Raspberry Pi 3
{c}
{parent=raspberry-pi-foundation}

Model B V 1.2.

SoC: BCM2837

Serial from `cat /proc/cpuinfo`: 00000000c77ddb77

= Peripheral
{parent=computer-hardware}
{wiki}

= Computer keyboard
{parent=peripheral}
{wiki}

= Kinesis Advantage 2 keyboard
{c}
{parent=computer-keyboard}

https://kinesis-ergo.com/shop/advantage2/

For \x[ciro-santilli], this is not a \x[computer-keyboard]. It is a \x[fetish].

= Computer science
{parent=computer}
{wiki}

A branch of \x[mathematics] that attempts to prove stuff about \x[computer]{p}.

Unfortunately, all \x[software-engineer]{p} already know the answer to the useful theorems though (except perhaps notably for \x[cryptography], e.g. all programmers obviously know https://en.wikipedia.org/wiki/P_versus_NP_problem[P != NP] or that this is unprovable or some other "for all practical purposes practice P != NP", even though they don't have proof.

And 99% of their time, software engineers are not dealing with mathematically formulatable problems anyways, which is sad.

The only useful "computer science" subset every programmer ever needs to know is:
* for arrays: https://en.wikipedia.org/wiki/Dynamic_array[dynamic array] vs https://en.wikipedia.org/wiki/Linked_list[linked list]
* for https://en.wikipedia.org/wiki/Associative_array[maps]: https://en.wikipedia.org/wiki/Binary_search_tree[binary search tree] vs https://en.wikipedia.org/wiki/Hash_table[hash map]. See also https://stackoverflow.com/questions/6147242/heap-vs-binary-search-tree-bst/29548834#29548834[Heap vs Binary Search Tree (BST)]. No need to understand the algorithmic details of the hash function, the https://en.wikipedia.org/wiki/National_Security_Agency[NSA] has already done that for you.
* don't use https://en.wikipedia.org/wiki/Bubble_sort[Bubble sort] for sorting
* you can't parse HTML with regular expressions: https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454[] because of \x[formal-language-theory]

Funnily, due to the \x[formalization-of-mathematics], \x[mathematics] can be seen as a branch of computer science, just like computer science can be seen as a branch of Mathematics!

= Turing machine
{c}
{parent=computer-science}
{wiki}

The dominating model of a computer.

The model is extremely simple, but has been proven to be able to solve all the problems that any reasonable computer model can solve, thus its adoption as the "default model".

The smallest known Turing machine that cannot be proven to halt or not as of 2019 is 7,918-states: https://www.scottaaronson.com/blog/?p=2725[]. https://www.scottaaronson.com/[Shtetl-Optimized] by Scott Aaronson is just the best website.

A bunch of non-reasonable-looking computers have also been proven to be Turing complete for fun, e.g. \x[magic-the-gathering].

= Universal Turing machine
{c}
{parent=turing-machine}
{wiki}

A Turing machine that simulates another Turing machine/input pair that has been encoded as a string.

In other words: an \x[emulator]!

The concept is fundamental to state several key results in \x[computer-science], notably the \x[halting-problem].

= Turing complete
{c}
{parent=turing-machine}
{wiki=Turing_completeness}

A computer model that is as powerful as the most powerful computer model we have: \x[turing-machine]!

= Formal language theory
{parent=computer-science}

= Formal language
{parent=formal-language-theory}
{wiki}

= Recursively enumerable language
{parent=formal-language-theory}
{wiki}

There is a \x[turing-machine] that halts for every member of the language with the answer yes, but does not necessarily halt for non-members.

Non-examples: https://cs.stackexchange.com/questions/52503/non-recursively-enumerable-languages

= RE
{disambiguate=complexity}
{parent=recursively-enumerable-language}
{wiki}

= Recursive language
{parent=formal-language-theory}
{wiki}

Subset of \x[recursively-enumerable-language]{parent} as explained at: \x[difference-between-recursive-language-and-recursively-enumerable-language].

= R
{disambiguate=complexity}
{parent=recursive-language}
{wiki}

Set of all \x[decision-problem]{p} solvable by a \x[turing-machine], i.e. that decide if a string belongs to a \x[recursive-language].

= Undecidable problem
{parent=recursive-language}
{wiki}

Is a \x[decision-problem]{parent} of determining if something belongs to a non-\x[recursive-language].

Or in other words: there is no \x[turing-machine] that always halts for every input with the yes/no output.

Every undecidable problem must obviously have an infinite number of "possibilities of stuff you can try": if there is only a finite number, then you can brute-force it.

Some undecidable problems are of \x[recursively-enumerable-language], e.g. the \x[halting-problem].

Lists of undecidable problems.
* https://mathoverflow.net/questions/11540/what-are-the-most-attractive-turing-undecidable-problems-in-mathematics
* https://en.wikipedia.org/wiki/List_of_undecidable_problems

Coolest ones besides the obvious boring \x[halting-problem]:
* \x[mortal-matrix-problem]
* \x[diophantine-equation] existence of solutions: \x[undecidable-diophantine-equation-problems]{child}

= Mortal matrix problem
{parent=undecidable-problem}

https://en.wikipedia.org/wiki/Zero_matrix#Occurrences

One of the most simple to state \x[undecidable-problem]{p}.

= Computable problem
{parent=undecidable-problem}
{wiki}

= Uncomputable problem
{synonym}

= Uncomputable
{synonym}

A:
* \x[undecidable-problem][decidable problem] is to a \x[decision-problem]
* like a computable problem is to a \x[function-problem]

= Computable number
{parent=undecidable-problem}
{wiki}

= Uncomputable number
{synonym}

https://math.stackexchange.com/questions/462790/are-there-any-examples-of-non-computable-real-numbers

There are only boring exampes of taking an uncomputable language and converting it into a number?

= Difference between recursive language and recursively enumerable language
{parent=recursive-language}
{wiki}

https://stackoverflow.com/questions/33467040/what-is-the-difference-between-recursive-and-recursively-enumerable-languages/65455863#65455863

= Recursive set
{parent=recursive-language}
{wiki}

Same as \x[recursive-language] but in the context of the \x[integer]{p}.

= Chomsky hierarchy
{c}
{parent=formal-language-theory}
{wiki}

This is the classic result of \x[formal-language-theory], but there is too much slack between context free and context sensitive, which is PSPACE (larger than NP!).

TODO had seen a good table on Wikipedia with an expanded hierarchy, but lost it!

= Computational problem
{parent=computer-science}
{wiki}

In other sections: \x[matrix-multiplication-algorithm].

The list: https://complexityzoo.uwaterloo.ca/Complexity_Zoo

= Decision problem
{parent=computational-problem}
{wiki}

\x[computational-problem] where the solution is either yes or no.

When there are more than two possible answers, it is called a \x[function-problem]{parent}.

Decision problems come up often in \x[computer-science] because many important problems are often stated in terms of "decide if a given string belongs to given \x[formal-language]".

= Halting problem
{parent=decision-problem}
{wiki}

The canonical \x[undecidable-problem]{parent}.

= Function problem
{parent=decision-problem}
{wiki}

A problem that has more than two possible yes/no outputs.

It is therefore a generalization of a \x[decision-problem].

= Busy beaver
{parent=function-problem}
{title2=$BB(n)$}
{wiki}

= Busy beaver game
{synonym}

$BB(n)$ is the largest number of 1's written by a \x[halting-problem][halting] $n$-state \x[turing-machine].

Some variant definitions define it as the number of time steps taken by the machine instead. Wikipedia talks about their relationship, but no patience right now.

Overviews:
* https://www.scottaaronson.com/blog/?p=4916
* https://www.quantamagazine.org/the-busy-beaver-game-illuminates-the-fundamental-limits-of-math-20201210

This problem is theoretically interesting because many important mathematical \x[conjecture]{p} have been proved to be equivalent to whether a given Turing machine halts or not, this is notably the case for:
* \x[goldbach-s-conjecture]: 27 states
* \x[riemann-hypothesis]: 744 states
* the \x[consistency] of \x[zermelo-fraenkel-set-theory]: 7910 states

Therefore, if we were able to compute $BB(n)$, we would be able to prove those conjectures automatically, by letting the machine run up to $BB(n)$, and if it hadn't halted by then, we would know that it would never halt.

Of course, in practice, $BB$ is generally \x[uncomputable], so we will never know it. And furthermore, even if it were, it would take a lot longer than the age of the universe to compute any of it, so it would be useless.

However, philosophically speaking at least, the number of states of the equivalent \x[turing-machine] gives us a philosophical idea of the complexity of the problem.

= Integer multiplication
{parent=function-problem}

https://cs.stackexchange.com/questions/16226/what-is-the-fastest-algorithm-for-multiplication-of-two-n-digit-numbers

= Integer factorization
{parent=function-problem}
{wiki}

Complexity: \x[np-intermediate] as of 2020:
* expected not to be \x[np-complete] because it would imply NP != \x[co-np]: https://cstheory.stackexchange.com/questions/167/what-are-the-consequences-of-factoring-being-np-complete#comment104849_169
* expected not to be in \x[p-complexity] because "could we be that dumb that we haven't found a solution after having tried for that long?

The basis of RSA: \x[rsa-cryptosystem]. But not proved \x[np-complete], which leads to:

= NP-hard cryptosystems
{c}
{parent=integer-factorization}

This is natural question because both \x[integer-factorization] and \x[discrete-logarithm] are the basis for the most popular \x[public-key-cryptography] systems as of 2020 (\x[rsa-cryptosystem] and \x[diffie-hellman-key-exchange] respectively), and both are \x[np-intermediate]. Why not use something more provenly hard?
* https://cs.stackexchange.com/questions/356/why-hasnt-there-been-an-encryption-algorithm-that-is-based-on-the-known-np-hard "Why hasn't there been an encryption algorithm that is based on the known NP-Hard problems?"

= Discrete logarithm
{parent=function-problem}
{wiki}

\x[logarithm] but for \x[discrete] \x[group-mathematics][groups].

\x[np-intermediate] as of 2020 for similar reasons as \x[integer-factorization].

= Algorithm
{parent=computational-problem}
{wiki}

A solution to a \x[computational-problem]!

= String-search algorithm
{parent=algorithm}
{wiki}

= Complexity class
{parent=computational-problem}
{wiki}

= Big O notation family
{parent=complexity-class}

This is a family of notations related to the \x[big-o-notation]. A good mnemonic summary of all notations would be:
* \x[big-o-notation]: $|f| \le g$
* \x[little-o-notation]: $|f| \lt g$

= Big O notation
{parent=big-o-notation-family}
{title2=$O(n)$}
{wiki}

Module bound above, possibly multiplied by a constant:
$$f(x) = O(g(x))$$
is defined as:
$$
\exists M > 0 \exists x_0  \forall x > x_0 \colon |f(x)| \leq M g(x)
$$

E.g.:
* $\forall c \in \R x + c = O(x)$. For $c < 0$, $M = 1$ is enough. Otherwise, any $M > 1$ will do, the bottom line will always catch up to the top one eventually.

= Little-o notation
{parent=big-o-notation-family}
{title2=$o(n)$}

Stronger version of the \x[big-o-notation], basically means that ratio goes to zero. In \x[big-o-notation], the ratio does not need to go to zero.

So in informal terms, \x[big-o-notation] means $\leq$, and \x[little-o-notation] means $<$.

E.g.:
* $x = O(x)$
* $x \ne o(x)$K does not tend to zero
* $x = O(x^2)$
* $x = o(x^2)$

= P
{c}
{disambiguate=complexity}
{parent=complexity-class}
{wiki}

= NP
{c}
{disambiguate=complexity}
{parent=complexity-class}
{wiki}

Strictly speaking, only defined for decision problems: https://cs.stackexchange.com/questions/9664/is-it-necessary-for-np-problems-to-be-decision-problems/128702#128702

= NP-complete
{c}
{parent=np-complexity}
{wiki=NP-completeness}

A problem that is both \x[np-complexity] and \x[np-hard].

= Cook-Levin theorem
{c}
{parent=np-complete}
{wiki=Cook–Levin_theorem}

= P versus NP problem
{parent=np-complete}
{wiki}

= P vs NP
{c}
{synonym}
{title2}

Interesting because of the \x[cook-levin-theorem]: if only a single \x[np-complete] problem were in \x[p-complexity], then all NP-complete problems would also be P!

We all know the answer for this: either false or \x[independent-mathematical-logic].

= Ladner's Theorem
{c}
{parent=p-versus-np-problem}

= NP-hard
{c}
{parent=np-complexity}
{wiki=NP-hardness}

A problem such that all NP problems can be reduced in polynomial time to it.

= NP-intermediate
{c}
{parent=np-complexity}
{wiki}

This is the most interesting class of problems for \x[bqp] as we haven't proven that they are neither:
* \x[p-complexity]: would be boring on quantum computer
* \x[np-complete]: would likely be impossible on a quantum computer

Big list: https://cstheory.stackexchange.com/questions/79/problems-between-p-and-npc/460#460

= BQP
{c}
{parent=np-intermediate}
{wiki}

\x[p-complexity] for \x[quantum-computing]!

Heck, we know nothing about this class yet related to non quantum classes!
* conjectured not to intersect with \x[np-complete], because if it were, all NP-complete problems could be solved efficiently on quantum computers, and none has been found so far as of 2020.
* conjectured to be larger than \x[p-complexity], but we don't have a single algorithm provenly there:
  * it is believed that the NP complete ones can't be solved
  * if they were neither NP-complete nor P, it would imply \x[p-versus-np-problem][P != NP]
* we just don't know if it is even contained inside \x[np-complexity]!

= Co-NP
{c}
{parent=np-complexity}
{wiki}

* https://math.stackexchange.com/questions/361422/why-isnt-np-conp "Why isn't NP = coNP?"
* https://stackoverflow.com/questions/17046440/whats-the-difference-between-np-and-co-np
* https://cs.stackexchange.com/questions/9795/is-the-open-question-np-co-np-the-same-as-p-np
* https://mathoverflow.net/questions/31821/problems-known-to-be-in-both-np-and-conp-but-not-known-to-be-in-p

= Cryptography
{parent=computer-science}
{wiki}

= Random number generation
{parent=cryptography}
{title2=RNG}
{wiki}

= Random number generator
{synonym}

= Hardware random number generation
{parent=random-number-generation}
{wiki}

= Public-key cryptography
{parent=cryptography}
{wiki}

= Public key
{synonym}

It allows you to do two things:
* \x[encryption]
* \x[digital-signature]

= Digital signature
{parent=public-key-cryptography}
{wiki}

One notable application: \x[cryptocurrency], see e.g. \x[how-bitcoin-works].

= Ring signature
{parent=public-key-cryptography}
{wiki}

Used for example:
* by \x[monero] to hide the input of a transaction
* anonymous \x[electronic-voting]

= RSA
{c}
{disambiguate=cryptosystem}
{parent=public-key-cryptography}
{wiki}

Based on the fact that we don't have a \x[p-complexity] algorithm for \x[integer-factorization] as of 2020. But nor proof that one does not exist!

The private key is made of two randomly generated prime numbers: $p$ and $q$. How such large primes are found: \x[how-large-primes-are-found-for-rsa].

The public key is made of:
* `n = p*q`
* a randomly chosen integer exponent $e$ between `1` and `e_max = lcm(p -1, q -1)`, where `lcm` is the \x[least-common-multiple]

Given a plaintext message `m`, the encrypted cyphertext version is:
``
c = m^e mod n
``
This operation is called \x[modular-exponentiation] can be calculated efficiently with the \x[extended-euclidean-algorithm].

The inverse operation of finding the private `m` from the public `c`, `e` and $n$ is however believed to be a hard problem without knowing the factors of `n`.

However, if we know the private `p` and `q`, we can solve the problem. As follows.

First we calculate the \x[modular-multiplicative-inverse]. TODO continue.

Bibliography:
* https://www.comparitech.com/blog/information-security/rsa-encryption/ has a numeric example

= How large primes are found for RSA
{parent=rsa-cryptosystem}

* https://crypto.stackexchange.com/questions/1970/how-are-primes-generated-for-rsa
* https://crypto.stackexchange.com/questions/690/can-i-select-a-large-random-prime-using-this-procedure/693#693

Answers suggest hat you basically pick a random large odd number, and add 2 to it until your selected \x[primality-test] passes.

The \x[prime-number-theorem] tells us that the probability that a number between 1 and $N$ is a prime number is $1/log(N)$.

Therefore, for an N-bit integer, we only have to run the test N times on average to find a prime.

Since say, A 512-bit integer is already humongous and sufficiently large, we would only need to search 512 times on average even for such sizes, and therefore the procedure scales well.

= RSA vs Diffie-Hellman
{c}
{parent=rsa-cryptosystem}

\x[rsa-cryptosystem] vs \x[diffie-hellman-key-exchange] are the dominant \x[public-key-cryptography] systems as of 2020, so it is natural to ask how they compare:
* https://security.stackexchange.com/questions/35471/is-there-any-particular-reason-to-use-diffie-hellman-over-rsa-for-key-exchange
* https://crypto.stackexchange.com/questions/2867/whats-the-fundamental-difference-between-diffie-hellman-and-rsa
* https://crypto.stackexchange.com/questions/797/is-diffie-hellman-mathematically-the-same-as-rsa

= Diffie-Hellman key exchange
{c}
{parent=public-key-cryptography}
{wiki=Diffie–Hellman_key_exchange}

Based on the fact that we don't have a \x[p-complexity] algorithm for \x[discrete-logarithm] as of 2020. But nor proof that one does not exist!

= Elliptic curve cryptography
{parent=public-key-cryptography}
{wiki}

= Elliptic-curve Diffie-Hellman
{parent=elliptic-curve-cryptography}
{wiki}

= ECDH
{c}
{synonym}
{title2}

Variant of \x[diffie-hellman-key-exchange]{parent} based on \x[elliptic-curve-cryptography].

= Encryption
{parent=cryptography}
{wiki}

= Deniable authentication
{parent=encryption}
{wiki}

= End-to-end encryption
{parent=encryption}
{wiki}

= E2EE
{c}
{synonym}
{title2}

= End-to-end encrypted
{synonym}

= Forward secrecy
{parent=encryption}
{wiki}

= Perfect forward secrecy
{synonym}

https://stackoverflow.com/questions/20505942/how-does-perfect-forward-secrecy-pfs-work/66118134#66118134

= Disk encryption
{parent=encryption}
{wiki}

= Can a smartphone's PIN or password be brute-forced in an offline attack?
{parent=disk-encryption}

https://security.stackexchange.com/questions/202174/can-a-smartphones-pin-or-password-be-brute-forced-in-an-offline-attack

\x[ciro-santilli] has a hard time understanding why this is possible, e.g. many people use short 4 digit pins, or a short swipe pattern. Why can't this be cracked easily offline?

= Linux Unified Key Setup
{c}
{parent=disk-encryption}
{wiki}

= LUKS
{c}
{synonym}
{title2}

= Disk encryption password handover plausible deniability
{parent=disk-encryption}
{wiki}

* https://security.stackexchange.com/questions/135846/is-plausible-deniability-actually-feasible-for-encrypted-volumes-disks
* https://security.stackexchange.com/questions/87153/linux-plausibly-deniable-file-system

Can we do better than "wrong password implies random bytes"?

Can the last disk access times be checked via forensic methods?

= GNU Privacy Guard
{c}
{parent=cryptography}
{title2=GnuPG, GPG}
{wiki}

Generate public private key, test encrypt and test decrypt:
``
# Create your pubkey.
gpg --gen-key
gpg --armor --output pubkey.gpg --export <myemail>

# Encrypt using someone's pubkey.
gpg --import pubkey2.gpg
echo 'hello world' > hello.txt
gpg --output hello.txt.gpg --encrypt --recipient <other-email> hello.txt

# Double check it is not plaintext in the encrypted message.
grep hello hello.txt.gpg

# Decrypt.
gpg --output hello.decrypt.txt --decrypt --recipient <myemail> hello.txt.gpg
diff -u hello.decrypt.txt hello.txt
``

= Internet privacy
{c}
{parent=cryptography}
{wiki}

= Anonymity
{parent=internet-privacy}
{wiki}

= Anonymous
{synonym}

= Anonymously
{synonym}

= Internet privacy organizations
{parent=internet-privacy}

= Riseup
{c}
{parent=internet-privacy-organizations}
{wiki}

= Operations security
{parent=internet-privacy}
{wiki}

= OPSEC
{c}
{synonym}
{title2}

= Tor
{c}
{disambiguate=anonymity network}
{parent=internet-privacy}
{wiki}

= Tor Browser
{c}
{parent=tor-anonymity-network}
{wiki}

= Tor Onion service
{c}
{parent=tor-anonymity-network}

= Tor hidden service
{c}
{synonym}

= Onion hidden service
{c}
{synonym}

Actually hide the IP of the server from the client: https://security.stackexchange.com/questions/38194/how-can-i-get-the-ip-address-for-a-tor-hidden-service-hs-with-a-onion-address This is why it enables hosting \x[illegal] things.

= Dark web
{parent=tor-onion-service}
{wiki}

= The Hidden Wiki
{c}
{parent=tor-anonymity-network}
{wiki}

= Can ISPs deanonymize Tor users based on timestamps of public posts?
{parent=tor-anonymity-network}
{wiki}

https://security.stackexchange.com/questions/237632/can-isp-deanonymize-telegram-public-channel-creators

= Hash function
{parent=computer-science}
{wiki}

Applications:
* https://en.wikipedia.org/wiki/Hash_table[hash map] which is a O(1) amortized implementation of a map
* creating unbreakable chains of data, e.g. for https://stackoverflow.com/questions/22968856/what-is-the-file-format-of-a-git-commit-object-data-structure/37438460#37438460[Git commits] or \x[bitcoin]. 
* storing passwords on a server in a way that if the password database is stolen, attackers can't reuse them on other websites where the user used the same password: https://security.blogoverflow.com/2013/09/about-secure-password-hashing/

= Merkle tree
{c}
{parent=hash-function}

= Hash tree
{synonym}

= Computer scientist
{parent=computer-science}
{wiki}

= Alan Turing
{c}
{parent=computer-scientist}
{wiki}

= Scott Aaronson
{c}
{parent=computer-scientist}
{wiki}

= Cyber crime
{parent=computer}

= Silk Road
{c}
{disambiguate=marketplace}
{parent=cyber-crime}
{wiki}

\x[ciro-santilli] has become slightly obsessed with this story, and the main mastermind \x[ross-ulbricht].

\Image[https://web.archive.org/web/20190629084608if_/https://cdn.arstechnica.net/wp-content/uploads/2015/01/GX-201C-640x853.png]
{title=Ross Ulbricht's open laptop shortly after his arrest at the Francisco Public Library.}
{description=He was running some GNOME based distro, could be \x[ubuntu] from that photo, and likely is given that Ross once recommended Ubuntu to his flatmate.}
{source=https://arstechnica.com/tech-policy/2015/01/the-incredibly-simple-story-of-how-the-govt-googled-ross-ulbricht}

The best article available so far is: https://www.theregister.co.uk/2019/01/29/how_i_caught_silk_road_mastermind (https://web.archive.org/web/20191008142214/https://www.theregister.co.uk/2019/01/29/how_i_caught_silk_road_mastermind[archive]) which summarizes what one of the investigators said in a 2019 French computer security conference.

The key living posts are:
* https://stackoverflow.com/questions/15445285/how-can-i-connect-to-a-tor-hidden-service-using-curl-in-php (https://web.archive.org/web/20191121133952/https://stackoverflow.com/questions/15445285/how-can-i-connect-to-a-tor-hidden-service-using-curl-in-php[archive]) which was originally asked under the real name, and then the username was changed to "Frosty", which matches one of the server's logins after the laptop was captured
* altoid early Silk Road mention: https://bitcointalk.org/?topic=175.70;wap2 (https://web.archive.org/web/20190628133852/https://bitcointalk.org/?topic=175.70;wap2[archive])

The big question is of course how libertarian free market ideologically motivated the website was, and how purely criminal greed it was.

The magnitude of the early operational mistakes does make Ciro think that Ross did it "because he could" and https://www.urbandictionary.com/define.php?term=i%20did%20it%20for%20the%20lulz["for the lolz"] in a real world https://en.wikipedia.org/wiki/Breaking_Bad[Breaking Bad] way.

The entry in Ross' diary does \x[ciro-santilli-s-selfish-desires][resonate a lot] with Ciro and any entrepreneur, full diary at: https://www.wired.com/2015/01/heres-secret-silk-road-journal-laptop-ross-ulbricht/ (https://web.archive.org/web/20190613011454/https://www.wired.com/2015/01/heres-secret-silk-road-journal-laptop-ross-ulbricht/[archive]).

\Q[
\[i\]n 2011," \[I believe I will be\] "creating a year of prosperity and power beyond what I have ever experienced before,

Silk Road is going to become a phenomenon and at least one person will tell me about it, unknowing that I was its creator."
]

Having this kind of feeling, is the greatest thing any human can have, and what motivates all great things.

Capitalizing in \x[illegal] things though is a cheat, big things take longer than a few years to reach, but reaching them is that much more satisfying as well.

Other interesting quotes:
\Q[I hated working for someone else and trading my time for money with no investment in myself.]
which Ciro also feels, see \x[don-t-be-a-pussy], and:
\Q[Everyone knows I am working on a bitcoin exchange. I always thought honesty was the best policy and now I didn't know what to do. I should have just told everyone I am a freelance programmer or something, but I had to tell half truths. It felt wrong to lie completely so I tried to tell the truth without revealing the bad part, but now I am in a jam. Everyone knows too much. Dammit.]

Also very worth reading is the San Francisco flat mate account: https://www.vice.com/en_us/article/ae3q8g/my-roommate-the-darknet-drug-lord (https://web.archive.org/web/20191201090353/https://www.vice.com/en_us/article/ae3q8g/my-roommate-the-darknet-drug-lord[archive]).

The murder for hire allegations are also interesting: https://mashable.com/2013/10/03/silk-road-hits[], he paid 80k dollars to undercover DEA agents!

Except for the fact that Ross was an 80 million \x[dollar] \x[drug-lord], those accounts sound exactly like what you would expect from any other nerdy startup founder! The:
* "just do it" strategy effectively going to a minimal viable product (manual transaction management!), while making many mistakes along the way, including hiring mistakes and successes when scaling is needed
* the hardship of self bootstrapping your own social network (here with some kilos of mushrooms)
* the variety of periods, from relatively calm, to hair pulling stress during big changes

It is also amusing to see very concretely the obvious fact that the FBI can get a https://en.wikipedia.org/wiki/Subpoena[subpoena] for all accounts you ever had, e.g. they knew his laptop model from Amazon and brought a corresponding power cable to the arrest! If you are going to be a cyber criminal, don't use your real name, ever!

Should justice be blind? Maybe, but it does hurt.

= Ross Ulbricht
{c}
{parent=silk-road-marketplace}
{wiki}

= Domain-specific language
{parent=computer}
{title2=DSL}
{wiki}

\x[evil]{c}. Just use \x[python] instead for \x[software], and a well known \x[data-file-format] for data, please.

= E-book
{parent=computer}
{wiki}

= E-book file format
{parent=e-book}

= ASCII
{c}
{parent=e-book-file-format}
{wiki}

= EPUB
{c}
{parent=e-book-file-format}
{wiki}

This is a good thing. It basically contains an entire \x[website], with \x[html] and assets inside a single \x[zip], and a little bit of metadata.

It is incomprehensible why \x[browser]{p} don't just implement it as they already have all the web part, and also \x[zip] stuff:
* https://www.quora.com/What-is-the-reason-that-browsers-cannot-open-epub-files-without-extensions on \x[quora]

The situation is so sad. \x[ubuntu] 21.04 doesn't come with a reader installed by default:
* https://askubuntu.com/questions/14378/what-software-can-i-use-to-view-epub-documents

= PDF
{c}
{parent=e-book-file-format}
{wiki}

= E-book viewer
{parent=e-book}

= Calibre
{c}
{disambiguate=software}
{parent=e-book-viewer}
{wiki}

Sometimes \x[ciro-santilli] says half jokingly that \x[user-interface] does not matter.

This software circa 2010-2020 makes that joke not be funny.

How can a UI feel so clunky!

The most aggravating thing is that it is not immediately obvious why it feels so bad.

= Evince
{parent=e-book-viewer}
{wiki}

= Okular
{parent=e-book-viewer}
{wiki}

This is generally good, especially compared to how crappy Evince, the default \x[ubuntu] one, has been around 2014-2020.

= File format
{parent=computer}
{wiki}

= Human-readable medium
{parent=file-format}
{wiki}

= Human-readable format
{synonym}

= Human-readable
{synonym}

= Binary data
{parent=human-readable-medium}
{wiki}

The opposite of a \x[human-readable-format].

= Binary large object
{parent=binary-data}
{wiki}

= BLOB
{synonym}

Less evil are BLOBs that come from \x[reproducible-builds].

= Binary-to-text encoding
{parent=binary-data}
{wiki}

= Base58
{c}
{parent=binary-to-text-encoding}

https://en.bitcoin.it/wiki/Base58Check_encoding

Invented for \x[bitcoin].

= Base64
{c}
{parent=binary-to-text-encoding}

= Archive file
{parent=file-format}
{wiki}

= ZIP
{c}
{disambiguate=file format}
{parent=archive-file}
{wiki}

= ZIP
{c}
{synonym}

= Audio file format
{parent=file-format}
{wiki}

= Audio editor
{parent=audio-file-format}
{wiki}

= Audacity
{disambiguate=audio editor}
{parent=audio-editor}
{wiki}

= Audacity profile-based background noise removal
{parent=audacity-audio-editor}

You select a sample noise-only area, and it remove noise from the entire video for you:
* https://www.youtube.com/watch?v=AeOjtMOq3EU
* https://www.youtube.com/watch?v=3nMkMn4--5w

= MIDI
{c}
{parent=audio-file-format}
{wiki}

In simple terms, represents keystrokes of a piano, but it can likely also represent other effects (TODO confirm: bend, vibrato, slides, attack strength)

Can contain multiple parallel tracks as seen from the \x[wikipedia] example: https://en.wikipedia.org/wiki/File:MIDI_sample.mid

You can see what it contains well with \x[gui-music-editor].

MIDI is fun. It is a basic high level representation of most instrumental music, including beats.

To actually listen to MIDI, you need a \x[software-synthesizer], which knows what sound to make for each note. One way to specify such instruments is the \x[soundfont] file format.

Convert MIDI to more common standalone formats:
* https://stackoverflow.com/questions/16295459/convert-midi-to-mp3/65207296#65207296
* https://softwarerecs.stackexchange.com/questions/10915/automatically-turn-midi-files-into-wav-or-mp3/76955#76955

= SoundFont
{c}
{parent=midi}
{wiki}

Contains instructions on how to synthesize MIDI.

Extension: sf2.

Can be imported for example by:
* \x[vmpk]
* \x[csound] with `sfload`: http://www.csounds.com/manual/html/sfload.html

= vmpk
{c}
{parent=midi}

https://vmpk.sourceforge.io/

Opens a virtual \x[midi] piano \x[gui]. It just works on \x[ubuntu] 20.04: https://askubuntu.com/questions/34391/virtual-midi-piano-keyboard-setup/1298026#1298026

VMPK is a virtual device that replicates what you would get by connecting a physical MIDI keyboard to your computer. It is not a \x[software-synthesizer] on its own. But it does connect to a working synthesizer by default (Sonivox EAS) which makes it produce sounds out-of-the box.

TODO: then I messed with my sound settings, and then it stopped working by default on the default "MIDI Connection" > "MIDI Out Driver" > "Network". But it still works on "SonivoxEAS".

A \x[hello-world] of actually connecting it to a specific software synthesizer manually on \x[advanced-linux-sound-architecture] with `aconnect` can be found at: https://askubuntu.com/questions/34391/virtual-midi-piano-keyboard-setup/1298026#1298026

Save to a \x[midi] file: https://askubuntu.com/questions/709673/save-as-midi-when-playing-from-vmpk-qsynth/1298231#1298231

Reasonable default key mappings to keyboard covering 2 octaves.

3 multiple simultaneous keys did not work (tested "ZQI"). This might just be a limitation of \x[ciro-santilli-s-hardware/lenovo-thinkpad-p51-2017][my keyboard] however.

TODO how to save to a `.mid` file? https://askubuntu.com/questions/709673/save-as-midi-when-playing-from-vmpk-qsynth

\x[sourceforge].

= Data file format
{parent=file-format}
{wiki=Data_file}

= JSON
{c}
{parent=data-file-format}
{wiki}

= XML
{c}
{parent=data-file-format}
{wiki}

Do you know what is worse than XML? \x[html][Pseudo XML]: https://stackoverflow.com/questions/5558502/is-html5-valid-xml/39560454#39560454

= YAML
{c}
{parent=data-file-format}
{wiki}

= Image file format
{parent=file-format}
{wiki=Image_file_formats}

= JPEG
{c}
{parent=image-file-format}
{wiki}

= Portable Network Graphics
{parent=image-file-format}
{wiki}

= PNG
{c}
{synonym}
{title2}

= Vector graphics
{parent=image-file-format}
{wiki}

Smaller files, scalable image size, and editability. Why would you use anything else for programmatically generated images?!?!

= Scalable Vector Graphics
{parent=vector-graphics}
{wiki}

= SVG
{c}
{synonym}
{title2}

\x[company]{c}{p} have been really slow to support SVG features in their browsers, and that is very saddening: https://medium.com/@michaelmangial1/introduction-to-scalable-vector-graphics-6450c03e8d2e

You can't drop SVG support for `canvas` until there's a way to run untrusted \x[javascript] on the browser!

Examples:
* \a[web-cheat/svg.html]
* \a[web-cheat/background.svg]
* \a[web-cheat/hole.svg]
* \a[web-cheat/svg-billion-laughs.svg]
* \a[web-cheat/svg-external-js.svg]
* \a[web-cheat/svg-html.svg]
* \a[web-cheat/svg-script.svg]
* \a[web-cheat/svg-style-external.svg]
* \a[web-cheat/svg-style.svg]
* \a[web-cheat/svg.svg]
* \a[web-cheat/triangle.svg]

= Inkscape
{c}
{parent=scalable-vector-graphics}
{wiki}

Inkscape is a a good software. At 1.0.2, its \x[ui] is a bit terrible:
* the way the menus open on the right with title below the window...
* several defaults are atrocious, e.g. export drawing rather than page

And it crashes every often on \x[ubuntu] 21.04. But still, it is a good initiative.

What would be really amazing is if they had constraints: https://gitlab.com/inkscape/inbox/-/issues/1465 like \x[cad] software, it would make it possible to not have to redo entire diagrams when you want to change a small part of them.

= Image editor
{parent=image-file-format}

= GIMP
{c}
{parent=image-editor}
{wiki}

It's not super easy to use at first.

And it sometimes says that the basic drawing thing you want to do is off the project's scope.

But as you learn more about it and further generalize the concepts, there are often reasonable reasons for those design choices.

And the UI looks good :-)

Examples:
* https://superuser.com/questions/167873/how-do-i-draw-a-box-in-gimp you need to go on a top menu to draw a rectangle

Some answers by \x[ciro-santilli]:
* https://graphicdesign.stackexchange.com/questions/83446/gimp-how-to-combine-two-images-side-by-side/145543#145543

= Video file format
{parent=file-format}
{wiki=Video_file_formats}

= Video editing software
{parent=video-file-format}
{wiki}

= Kdenlive
{c}
{parent=video-editing-software}
{wiki}

Preview has no sound on \x[ubuntu] 20.10.

Sound worked on Ubuntu 21.04 though, but it then soon crashed with:

``
 = = SET EFFECT PARAM:  "rect"  =  0=1188 0 732 242
MUTEX LOCK!!!!!!!!!!!! slotactivateeffect:  1
// // // RESULTING REQUIRED SCENE:  1
Object 0x557293592da0 destroyed while one of its QML signal handlers is in progress.
Most likely the object was deleted synchronously (use QObject::deleteLater() instead), or the application is running a nested event loop.
This behavior is NOT supported!
qrc:/qml/EffectToolBar.qml:80: function() { [native code] }
Killed
``
amazing.

= ShotCut
{c}
{parent=video-editing-software}
{wiki}

Worked on \x[ubuntu] 20.10.

The UI is a bit too buggy to bear.

How to unsplit, can't find on shotcut 21.05.01: https://forum.shotcut.org/t/is-it-possible-to-unsplit/1466/2

Background noise reduction: couldn't easily find out how, especially with automatic profile detected based on a selected region as mentioned at \x[audacity-profile-based-background-noise-removal]:
* https://forum.shotcut.org/t/how-to-apply-filter-reduction-noise-on-audio/12678/2
* https://forum.shotcut.org/t/noise-reduction-filter-request/5348/6

= OpenShot
{c}
{parent=video-editing-software}
{wiki}

\x[ubuntu] 20.10 crash...:
``
  exceptions:ERROR Unhandled Exception
Traceback (most recent call last):
  File "/usr/bin/openshot-qt", line 11, in <module>
    load_entry_point('openshot-qt==2.5.1', 'gui_scripts', 'openshot-qt')()
  File "/usr/lib/python3/dist-packages/openshot_qt/launch.py", line 97, in main
    app = OpenShotApp(argv)
  File "/usr/lib/python3/dist-packages/openshot_qt/classes/app.py", line 218, in __init__
    from windows.main_window import MainWindow
  File "/usr/lib/python3/dist-packages/openshot_qt/windows/main_window.py", line 45, in <module>
    from windows.views.timeline_webview import TimelineWebView
  File "/usr/lib/python3/dist-packages/openshot_qt/windows/views/timeline_webview.py", line 42, in <module>
    from PyQt5.QtWebKitWidgets import QWebView
ImportError: /usr/lib/x86_64-linux-gnu/libQt5Quick.so.5: undefined symbol: _ZN4QRhi10newSamplerEN11QRhiSampler6FilterES1_S1_NS0_11AddressModeES2_, version Qt_5_PRIVATE_API
``

= Subtitle
{parent=video-file-format}

= How to hardcode subtitle into a video with FFmpeg?
{parent=subtitle}

* https://superuser.com/questions/869248/hardcoding-subs-with-ffmpeg
* https://askubuntu.com/questions/485100/how-may-i-burn-srt-subtitles-to-video-with-avconv

On \x[ubuntu] 20.10, just:
``
ffmpeg -i input.mp4 -vf "subtitles=subtitle.srt" output.mp4
``

To change font size: https://stackoverflow.com/questions/21363334/how-to-add-font-size-in-subtitles-in-ffmpeg-video-filter
``
ffmpeg -i input.mp4 -vf "subtitles=subtitle.srt:force_style='Fontsize=64'" output.mp4
``
The default appears to be 24, so just multiply that by whatever seems like a reasonable factor.

= Subtitle file format
{parent=subtitle}

= Subtitle editor
{parent=subtitle-file-format}

= Subtitle Edit
{c}
{parent=subtitle-editor}

Written in \x[c-sharp].

= Aegisub
{c}
{parent=subtitle-editor}

https://github.com/Aegisub/Aegisub

This worked well on 3.2.2 \x[ubuntu] 20.10. Recommended.

= Gaupol
{c}
{parent=subtitle-editor}

https://github.com/otsaloma/gaupol

Good shortcuts and user experience.

No waveform viewer: https://github.com/otsaloma/gaupol/issues/49 so unusable.

= kitone/subtitleeditor
{parent=subtitle-editor}

https://github.com/SubtitleEdit/subtitleedit

Not to be confused with \x[subtitle-edit].

As of 0.54.0 this feels featureful, but extremely buggy or lacking UI obvious enhancements that would be simple to implement, and offer huge value:
* fundamental not defined out of box, e.g. Tiny forward/backwards. You can define them yourself, but they should be provided.
* https://github.com/SubtitleEdit/subtitleedit/issues/4976 can't export \x[subrip]?
* can't interact with video on waveform?

It is hard to understand how that project reached this weird featureful but crappy state. Feels like they just gave push permission to a bunch of random people.

= List of subtitle file formats
{parent=video-file-format}

= SubRip
{c}
{parent=list-of-subtitle-file-formats}
{title2=.srt}
{wiki}

= Information theory
{parent=computer}
{wiki}

= Noisy-channel coding theorem
{parent=information-theory}
{title2=Shannon's theorem}
{wiki}

Setting: you are sending bits through a communication channel, each bit has a random probability of getting flipped, and so you use some error correction code to achieve some minimal error, at the expense of longer messages.

This theorem sets an upper bound on how efficient you can be in your encoding, for any encoding.

The next big question, which the theorem does not cover is how to construct codes that reach or approach the limit. Important such codes include:
* \x[turbo-code]
* \x[low-density-parity-check-code]

But besides this, there is also the practical consideration of if you can encode/decode fast enough to keep up with the coded bandwidth given your hardware capabilities.

https://news.mit.edu/2010/gallager-codes-0121 explains how turbo codes were first reached without a very good mathematical proof behind them, but were still revolutionary in experimental performance, e.g. turbo codes were used in 3G/4G.

But this motivated researchers to find other such algorithms that they would be able to prove things about, and so they rediscovered the much earlier \x[low-density-parity-check-code], which had been published in the 60's but was forgotten, partially because it was computationally expensive.

= Turbo code
{parent=noisy-channel-coding-theorem}
{wiki}

TODO how close does it get to Shannon's limit?

= Low-density parity-check code
{parent=noisy-channel-coding-theorem}
{title2=LDPC}
{wiki}

= Computer network
{parent=computer}
{wiki}

= Internet
{c}
{parent=computer-network}
{wiki}

= Online
{synonym}

= Internet protocol suite
{c}
{parent=internet}
{wiki}

= Internet Protocol
{c}
{parent=internet-protocol-suite}
{title2=IP}
{wiki}

= IP address
{c}
{parent=internet-protocol}

= Transmission Control Protocol
{c}
{parent=internet-protocol-suite}
{title2=TCP}
{wiki}

= Domain Name System
{c}
{parent=internet-protocol-suite}
{title2=DNS}
{wiki}

= DNS
{synonym}

= Domain name
{parent=domain-name-system}
{title2=DNS}
{wiki}

= Markup language
{parent=computer}
{wiki}

= Cirodown
{c}
{parent=markup-language}
{splitSuffix}

\x[markup-language]{c} created by \x[ciro-santilli], and used on \x[ciro-santilli-s-homepage]. The one \x[markup-language] to rule them all?

\x[github] project page: https://github.com/cirosantilli/cirodown

Documentation: \a[cirodown]{check=0}

Motivated/intended base for \x[write-free-books-to-get-famous-website].

= LaTeX
{parent=markup-language}
{c}
{wiki}

Revolutionary for its time, and a big part of \x[write-free-books-to-get-famous-website/motivation][Ciro's Enlightenment].

But too insane, and did not https://tex.stackexchange.com/questions/39309/convert-latex-to-html/196520#196520[keep up with internet age], and so Ciro wants to kill it now.

= KaTeX
{parent=latex}
{c}

https://github.com/KaTeX/KaTeX

Default mathematics typesetting used in \x[cirodown].

Key issues:
* https://github.com/KaTeX/KaTeX/issues/2228 `newcommand` did not support optional arguments

= Softcover
{disambiguate=LaTeX}
{parent=latex}

https://github.com/softcover/softcover

LaTeX subset that output nicely to HTML.

https://tex.stackexchange.com/questions/39309/convert-latex-to-html/196520#196520

Too insane though due to LaTeX roots, better just move to newer HTML-first markups like \x[cirodown] or \x[markdown].

= MathBook XML
{c}
{parent=markup-language}

https://github.com/rbeezer/mathbook

\x[xml], ain't nobody ever going to write that manually.

= Markdown
{parent=markup-language}
{wiki}

= Pandoc
{parent=markdown}
{wiki}

This is good software.

If it only it were written in \x[javascript] instead of Haskell (!?), then Ciro might have used it as the basis for \x[cirodown].

= karlcow/markdown-testsuite
{parent=markdown}

https://github.com/karlcow/markdown-testsuite

\x[ciro-santilli] was contributing to this, when \x[commonmark] left private mode and killed it, thus wasting many hours of Ciro's time.

See also: \x[ciro-santilli-s-minor-projects].

= CommonMark
{parent=markdown}

https://commonmark.org/

CommonMark is a good project. But its initial release method was not very nice, they first developed everything behind closed doors with the big adopters like \x[github] and \x[stack-overflow], and only later released the thing read, thus wasting the time of people who were working on alternative in the meanwhile, e.g. https://github.com/karlcow/markdown-testsuite which Ciro contributed to: \x[ciro-santilli-s-minor-projects].

= markdownlint/markdownlint
{parent=markdown}

https://github.com/markdownlint/markdownlint

= Numerical computing language
{parent=markup-language}

All those dedicated \x[applied-mathematician]{p} languages are a waste of society's time, \x[ciro-santilli] sure \x[applied-mathematician]{p} are capable of writing a few extra braces in exchange for a sane general purpose language, we should instead just invest in good libraries with fast \x[c-programming-language] bindings for those languages like \x[numpy] where needed, and powerful mainlined \x[integrated-development-environment]{p}.

And when \x[ciro-santilli] see the closed source ones like \x[matlab] being used, it makes him lose all hope on humanity. Why. As of 2020. Why? In the 1980s, maybe. But in the 2020s?

= Scilab
{c}
{parent=numerical-computing-language}
{wiki}

= MATLAB
{c}
{parent=numerical-computing-language}
{wiki}

= Machine learning
{parent=computer}
{wiki}

The main reason \x[ciro-santilli] never touched it is that it feels that every public data set has already been fully mined or has already had the most interesting algorithms developed for it, so you can't do much outside of big companies.

This is why Ciro started \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development] to generate synthetic data and thus reduce the cost of data.

The other reason is that it is ugly.

= Artificial intelligence
{parent=machine-learning}
{title2=AI}
{wiki}

In other sections:
* \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development]

= Artificial general intelligence
{parent=artificial-intelligence}
{title2=AGI}
{wiki}

Given enough computational power per dollar, AGI is inevitable, but it is not sure certain ever happen given the end of \x[moore-s-law][end of Moore's Law].

Alternatively, it could also be achieved genetically modified biological brains + https://en.wikipedia.org/wiki/Brain_in_a_vat[brain in a vat].

Imagine a brain the size of a building, perfectly engineered to solve certain engineering problems, and giving hints to human operators + taking feedback from cameras and audio attached to the operators.

This likely implies \x[transhumanism], and https://en.wikipedia.org/wiki/Mind_uploading[mind uploading].

\x[ciro-santilli] joined the silicon industry at one point to help increase our computational capacity and reach AGI.

Ciro believes that the easiest route to full AI, if any, could involve \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development].

= Natural language processing
{parent=machine-learning}
{wiki}

An impossible \x[artificial-general-intelligence][AGI-complete] dream.

It is impossible to understand speech, and take meaningful actions from it, if you don't understand what is being talked about.

And without doubt, "understanding what is being talked about" comes down to understanding (efficiently representing) the geometry of the 3D world with a time component.

Not from hearing sounds alone.

= Quantum computing
{parent=computer}
{wiki}

= Quantum computer
{synonym}

Quantum is getting hot in 2019, and even \x[ciro-santilli] got a bit excited: \x[quantum-computing-could-be-the-next-big-thing].

No useful algorithm has been economically accelerated by quantum yet, but the bets are on.

To get a feeling of this, just have a look at the insane number of startups that are already developing \x[quantum-algorithm]{p} for hardware that doesn't/barely exists! https://quantumcomputingreport.com/players/privatestartup (https://web.archive.org/web/20191223175204/https://quantumcomputingreport.com/players/privatestartup/[archive]).

\Include[programmer-s-model-of-quantum-computers]

= Quantum computers are not expected to solve NP-complete problems
{parent=quantum-computing}

Only \x[np-intermediate], which includes notably \x[integer-factorization]:
* https://quantumcomputing.stackexchange.com/questions/16506/can-quantum-computer-solve-np-complete-problems
* https://www.cs.virginia.edu/~robins/The_Limits_of_Quantum_Computers.pdf by \x[scott-aaronson]
* https://cs.stackexchange.com/questions/130470/can-quantum-computing-help-solve-np-complete-problems
* https://www.quora.com/How-can-quantum-computing-help-to-solve-NP-hard-problems

= Quantum algorithm
{parent=quantum-computing}

This is the true key question: what are the most important algorithms that would be accelerated by quantum computing?

Maybe there is some room for doubt because some applications might be way better in some \x[quantum-computer-physical-implementations][implementations], but we should at least have a good general idea.

However, clear information on this really hard to come by, not sure why.

Whenever asked e.g. at: https://physics.stackexchange.com/questions/3390/can-anybody-provide-a-simple-example-of-a-quantum-computer-algorithm/3407 on \x[physics-stack-exchange] people say the infinite mantra:
* \x[grover-s-algorithm][Grover]: speedup not exponential
* Deutsch: solves an useless problem
* Shor: cryptography is boring, do you have proper optimization or \x[quantum-chemistry] algorithms that will make trillions?
* https://en.wikipedia.org/wiki/Quantum_Fourier_transform[Quantum Fourier transform]: TODO is the speedup exponential or not?

\x[ciro-santilli] wonders if there is any understandable algorithm that meets the above criteria.

Lists:
* \x[quantum-algorithm-zoo]: the leading list as of 2020
* \x[quantum-computing-computational-chemistry-algorithms] is the area that Ciro and many people are te most excited about is 
* https://cstheory.stackexchange.com/questions/3888/np-intermediate-problems-with-efficient-quantum-solutions
* https://mathoverflow.net/questions/33597/are-there-any-known-quantum-algorithms-that-clearly-fall-outside-a-few-narrow-cla

= Quantum Algorithm Zoo
{c}
{parent=quantum-algorithm}

https://quantumalgorithmzoo.org/

Source on \x[github]: https://github.com/stephenjordan/stephenjordan.github.io

The most comprehensive list is the amazing curated and commented list of \x[quantum-algorithm]{p} as of 2020.

= Grover's algorithm
{parent=quantum-algorithm}
{wiki}

= Quantum error correction
{parent=quantum-computing}
{wiki}

Technique that uses multiple non-\x[ideal] qubits (physical qubits) to simulate/produce one perfect qubit (logical).

TODO understand in detail. This appears to be a fundamental technique since all physical systems we can manufacture are imperfect.

For example, when https://www.bloomberg.com/news/articles/2020-04-06/quantum-computing-startup-raises-215-million-for-faster-device[PsiQuantum raised 215M in 2020], they announced that they intended to reach 1 million physical qubits, which would achieve between 100 and 300 logical qubits.

\x[video-jeremy-o-brien-quantum-technologies-by-googletechtalks-2014] https://youtu.be/7wCBkAQYBZA?t=2778 describes an error correction approach for a \x[photonic-quantum-computer].

= Quantum computing players
{parent=quantum-computing}

It is hard to beat the lists present at: https://quantumcomputingreport.com (closed source unfortunately, no GitHub) in particular:
* https://quantumcomputingreport.com/scorecards/qubit-count/ lists what are the latest qbit counts and technologies that each player is using
* https://quantumcomputingreport.com/players/public-companies/ summarizes what each player has been doing in a few paragraphs

Also of interest: https://quantumzeitgeist.com/interactive-map-of-quantum-computing-companies-from-around-the-globe/

= Organizations developing quantum hardware
{parent=quantum-computing}

= D-Wave Systems
{c}
{parent=organizations-developing-quantum-hardware}
{wiki}

Vaporware?

= PsiQuantum
{c}
{parent=organizations-developing-quantum-hardware}

CEO: Jeremy O'Brien https://www.linkedin.com/in/jeremy-o-brien-39482631

Raised 215M in 2020: https://www.bloomberg.com/news/articles/2020-04-06/quantum-computing-startup-raises-215-million-for-faster-device

Good talk by CEO before starting the company which gives insight on what they are very likely doing: \x[video-jeremy-o-brien-quantum-technologies-by-googletechtalks-2014]

They are very secretive, but we know that they want to reuse classical \x[semiconductor-physical-implementation][semiconductor fabrication technologies].

= Xanadu
{c}
{disambiguate=quantum computing company}
{parent=organizations-developing-quantum-hardware}

https://www.youtube.com/watch?v=v7iAqcFCTQQ shows their base technology:
* \x[laser] beam comes in
* input set via of \x[optical-ring-resonator]{p} that form a \x[squeezed-state-of-light]. Does not seem to rely on \x[single-photon-production-and-detection-experiments]?

= Organizations developing quantum software
{parent=quantum-computing}

= Cambridge Quantum Computing
{c}
{parent=organizations-developing-quantum-software}
{wiki}

In 2015, they got a 50 million investment from Grupo Arcano, led by Alberto Chang-Rajii, who is a really shady character who fled from justice for 2 years:
* http://web.archive.org/web/20160320064944/http://www.cambridgequantum.com/index.php?page=team Alberto on the board
* https://theshiftnews.com/2018/10/25/wanted-chilean-businessman-in-hiding-in-malta-for-two-years/
* https://www.techbritannia.co.uk/2015/09/cambridge-quantum-computing-receives-50m-funding-from-grupo-arcano/

= Quantum computer physical implementations
{parent=quantum-computing}

Lists of the most promising implementations:
* https://en.wikipedia.org/wiki/Quantum_computing#Physical_realizations
* https://quantumcomputingreport.com/scorecards/qubit-count/[], see also: \x[quantum-computing-players]

As of 2020, the hottest by far are:
* \x[superconducting-quantum-computer]
* \x[trapped-ion-quantum-computer]
* \x[photonic-quantum-computer]

= Quantum computers as experiments that are hard to predict outcomes
{parent=quantum-computer-physical-implementations}

One possibly interesting and possibly obvious point of view, is that a quantum computer is an experimental device that executes a quantum probabilistic experiment for which the probabilities cannot be calculated theoretically efficiently by a \x[nuclear-weapon].

This is how quantum computing was originally theorized by the likes of \x[richard-feynman]: they noticed that "Hey, here's a well formulated \x[quantum-mechanics] problem, which I know the algorithm to solve (calculate the probability of outcomes), but it would take exponential time on the problem size".

The converse is then of course that if you were able to encode useful problems in such an experiment, then you have a computer that allows for exponential speedups.

This can be seen very directly by studying one specific quantum computer implementation. E.g. if you take the simplest to understand one, \x[photonic-quantum-computer], you can make systems for which you need exponential time to calculate the probabilities that photons will exit through certain holes and not others.

The obvious aspect of this idea is by coming from \x[why-quantum-logic-gates-are-needed-it-is-not-possible-to-compute-the-matrix-explicitly]: knowing the full explicit matrix is impossible in practice, and knowing the matrix is equivalent to knowing the probabilities of every outcome.

= Superconducting quantum computer
{parent=quantum-computer-physical-implementations}
{wiki}

Based on the \x[josephson-effect]. Yet another application of that phenomenal idea!

Philosophically, this approach is promising because superconductivity is a https://en.wikipedia.org/wiki/Macroscopic_quantum_phenomena[macroscopic quantum phenomena] of \x[bose-einstein-condensate][Bose Einstein condensation], and so as a macroscopic phenomena, it is easier to control and observe.

It is fun to see that the representation of information in the QC basically uses an https://en.wikipedia.org/wiki/LC_circuit[LC circuit], which is a very classical resonator circuit.

As mentioned at https://en.wikipedia.org/wiki/Superconducting_quantum_computing#Qubit_archetypes[] there are actually a few different types of superconducting qubits:
* flux
* charge
* phase

and hybridizations of those such as:
* \x[transmon]

Input:
* microwave radiation to excite circuit, or do nothing and wait for it to fall to 0 spontaneously
* interaction: TODO
* output: TODO

\Video[http://youtube.com/watch?v=t5nxusm_Umk]
{title="Alexandre Blais - Quantum Computing with Superconducting Qubits (Part 1) - CSSQI 2012" by Institute for Quantum Computing (2012)}
{description=https://youtu.be/t5nxusm_Umk?t=784[784s] explains why non-linearity is needed: otherwise the input energy would just go to higher and higher levels.}

\Video[http://youtube.com/watch?v=Kz6mhh1A_mU]
{title="Quantum Transport, Lecture 16: Superconducting qubits" by Sergey Frolov (2013)}
{description=https://youtu.be/Kz6mhh1A_mU?t=1171[1171s] describes several possible realizations: charge, flux, charge/flux and phase.}

= Transmon
{parent=superconducting-quantum-computer}
{wiki}

Used in: https://en.wikipedia.org/wiki/Sycamore_processor

\Video[http://youtube.com/watch?v=VA2HEUmkrKo]
{title="Control of transmon qubits using a cryogenic \x[cmos] integrated circuit (QuantumCasts)" by TensorFlow (\x[google]) (2020)}

= Trapped ion quantum computer
{parent=quantum-computer-physical-implementations}
{wiki}

TODO understand.

= Photonic quantum computer
{parent=quantum-computer-physical-implementations}

* https://en.wikipedia.org/wiki/Linear_optical_quantum_computing
* https://en.wikipedia.org/wiki/KLM_protocol

Uses \x[photon]{p}!

The key experiment/phenomena that sets the basis for photonic quantum computing is the \x[two-photon-interference-experiment].

The physical representation of the information encoding is very easy to understand:
* input: we choose to put or not photons into certain wires or no
* interaction: two wires pass very nearby at some point, and photons travelling on either of them can jump to the other one and interact with the other photons
* output: the probabilities that photos photons will go out through one wire or another

\Video[http://youtube.com/watch?v=7wCBkAQYBZA]
{title=Jeremy O'Brien: "Quantum Technologies" by GoogleTechTalks (2014)}
{description=This is a good introduction to a \x[photonic-quantum-computer]. Highly recommended.
* https://youtube.com/watch?v=7wCBkAQYBZA&t=1285 shows an experimental curve for a \x[two-photon-interference-experiment] by Hong, Ou, Mandel (1987)
* https://youtube.com/watch?v=7wCBkAQYBZA&t=1440 shows a KLM CNOT gate
* https://youtube.com/watch?v=7wCBkAQYBZA&t=2831 discusses the \x[quantum-error-correction] scheme for photonic QC based on the idea of the "Raussendorf unit cell"
}

= Photonic quantum computer companies
{parent=photonic-quantum-computer}

* \x[psiquantum]{child}
* \x[xanadu-quantum-computing-company]{child}

= Timeline of quantum computing
{parent=quantum-computing}
{wiki}

= Superconducting quantum computing
{parent=quantum-computing}
{wiki}

Dominant 2019 method.

= Quantum computer simulator
{parent=quantum-computing}

Other good lists:
* https://quantumcomputingreport.com/resources/tools/ is hard to beat as usual.
* https://www.quantiki.org/wiki/list-qc-simulators

* \x[javascript]
  * https://algassert.com/quirk demo: https://github.com/Strilanc/Quirk drag-and-drop, by a 2019-quantum-computing-\x[googler], impressive. You can create gates. State store in URL.
  * https://github.com/stewdio/q.js/ demo: https://quantumjavascript.app/

= Qiskit
{c}
{parent=quantum-computer-simulator}
{wiki}

Python library, claims multiple backends, including simulation and real \x[ibm] quantum hardware.

= Classical computer
{parent=quantum-computing}

In the context of \x[quantum-computing] of the 2020's, a "classical computer" is a \x[computer] that is not "quantum", i.e., the then dominating \x[cmos] computers.

= Software
{parent=computer}
{wiki}

= Cloud computing
{parent=software}
{wiki}

= Platform as a service
{parent=cloud-computing}
{title2=PaaS}
{wiki}

Highly managed, you don't even see the \x[docker-software] images, only some higher level \x[json] configuration file.

These setups are really convenient and cheap, and form a decent way to try out a new website with simple requirements.

= AWS Elastic Beanstalk
{c}
{parent=platform-as-a-service}
{wiki}

= Heroku
{c}
{parent=platform-as-a-service}
{wiki}

This feels good.

Deployment:
``
git push heroku HEAD:master
``

View \x[stdout] logs:
``
heroku logs --tail
``

\x[postgresql] database, it seems to be delegated to \x[aws]. How to browse database: https://stackoverflow.com/questions/20410873/how-can-i-browse-my-heroku-database
``
heroku pg:psql
``

Drop and recreate database:
``
heroku pg:reset --confirm <app-name>
``
All tables are destroyed.

Restart app:
``
heroku restart
``

= Compiler
{parent=software}
{wiki}

= Binutils
{c}
{parent=compiler}

= Automatic programming
{parent=compiler}
{wiki}

"automatic programming has always been a euphemism for programming in a higher-level language than was then available to the programmer" sums it up.

The ultimate high level is of course to program with: "computer, make \x[money]", which is the goal of \x[artificial-general-intelligence].

= Automatic code generation
{parent=automatic-programming}

= Code generation
{synonym}

= GNU Compiler Collection
{c}
{parent=compiler}

= gcc
{c}
{synonym}
{title2}

= Reproducible builds
{c}
{parent=compiler}
{wiki}

Reproducible builds allow anyone to verify that a \x[binary-large-object] contains what it claims to contain!

Bibliography:
* https://stackoverflow.com/questions/14653874/how-to-produce-deterministic-binary-output-with-g/31019307#31019307
* https://stackoverflow.com/questions/19511356/how-to-make-android-applications-with-reproducible-builds

= Source-to-source compiler
{parent=compiler}
{wiki}

= Transpiler
{synonym}

= Transpilation
{synonym}

= Transpile
{synonym}

= Transpiles
{synonym}

= Computer-aided design
{parent=software}
{wiki}

= CAD
{c}
{synonym}
{title2}

= Open source CAD software
{parent=computer-aided-design}

= FreeCAD
{c}
{parent=open-source-cad-software}
{wiki}

= Computer graphics
{parent=software}
{wiki}

https://en.wikipedia.org/wiki/List_of_information_graphics_software

= Mathematics illustration software
{parent=computer-graphics}

Surveys: https://math.stackexchange.com/questions/1985/software-for-drawing-geometry-diagrams/3938216#3938216

Many \x[plotting-software] can be used to create \x[mathematics] illustrations. They just tend to have more data-oriented rather than explanatory-oriented output.

Some notable ones:
* \x[inkscape]

= OpenGL
{c}
{parent=computer-graphics}
{wiki}

\x[ciro-santilli] has some good related articles listed under: \x[articles].

= Freetype GL
{parent=opengl}
{c}

https://github.com/rougier/freetype-gl

Good library to render text in \x[opengl], see also: https://stackoverflow.com/questions/8847899/opengl-how-to-draw-text-using-only-opengl-methods/36065835#36065835

= opengl-tutorial.org
{parent=opengl}

https://github.com/opengl-tutorials/ogl/

Good modern \x[opengl] tutorial in retained mode with shaders, see also: https://stackoverflow.com/questions/6733934/what-does-immediate-mode-mean-in-opengl/36166310#36166310

= JavaScript graphics library
{parent=computer-graphics}

= Paper.js
{c}
{parent=javascript-graphics-library}

https://github.com/paperjs/paper.js

= Pixi.js
{c}
{parent=javascript-graphics-library}

https://github.com/pixijs/pixi.js

= Two.js
{c}
{parent=javascript-graphics-library}

https://github.com/jonobr1/two.js

Examples at: \a[two-js/].

\x[javascript] library, works both on browser and headless with node.js to SVG.

Feels good. Maybe not ultra featured, and could have more simple examples in docs, but still good.

Vs \x[paper-js] https://github.com/jonobr1/two.js/issues/319

One of the main features of Two.js appears to be the fact that it can natively render to either SVG and canvas, rather than creating SVG through DOM hacks as done by other projects.

= Computer program
{parent=software}
{wiki}

= Program
{synonym}

One specific \x[software] project, typically with a single \x[executable-file-format] entry point, or a single 

= Computer security
{parent=software}
{wiki}

= Arbitrary code execution
{parent=computer-security}
{title2=ACE}
{wiki}

= Data erasure
{parent=computer-security}
{wiki}

= Multi-factor authentication
{parent=computer-security}
{wiki}

= 2FA
{c}
{synonym}
{title2}

= 2FA app
{parent=multi-factor-authentication}

= Google 2FA app token can be updated without checking the old 2FA
{parent=multi-factor-authentication}

Ermm, as of February 2021, I was able to update my 2FA app token with the password alone, it did not ask for the old 2FA.

So what's the fucking point of 2FA then? An attacker with my password would be able to login by doing that!

Is it that Google trusts that particular action because I used the same phone/known IP or something like that?

= OAuth
{c}
{parent=computer-security}
{wiki}

= Password
{parent=computer-security}
{wiki}

= Password manager
{parent=password}
{wiki}

= Plausible deniability
{parent=computer-security}
{wiki}

= Security through obscurity
{parent=computer-security}
{wiki}

https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle

https://stackoverflow.com/questions/533965/why-is-security-through-obscurity-a-bad-idea

= Kerckhoffs's principle
{c}
{parent=security-through-obscurity}
{wiki}

Basically the opposite of \x[security-through-obscurity], though slightly more focused on \x[cryptography].

= Malware
{parent=computer-security}
{wiki}

= Ransomware
{parent=computer-security}
{wiki}

= Data breach
{parent=computer-security}
{wiki}

= WikiLeaks
{c}
{parent=data-breach}
{wiki}

= List of data breaches
{parent=data-breach}

= United States diplomatic cables leak
{c}
{parent=list-of-data-breaches}
{title2=2010}
{wiki}

= Cablegate
{c}
{synonym}

= Computer user-interface
{parent=software}

= Application programming interface
{parent=computer-user-interface}
{wiki}

= API
{c}
{synonym}
{title2}

= REST API
{c}
{parent=application-programming-interface}
{wiki}

= GraphQL
{c}
{parent=application-programming-interface}
{wiki}

This is really good.

It allows the client to prepare a single request that gets all the data it wants to fill up a given webpage, rather than doing several separate requests.

So it only gets exactly what it needs, and in a single request.

Very sweet. This is the future of the web.

= Command-line interface
{parent=computer-user-interface}
{title2=CLI}
{wiki}

= Desktop environment
{parent=command-line-interface}
{wiki}

\x[tmux] for newbs.

= Graphical user interface
{parent=computer-user-interface}
{wiki}

= GUI
{c}
{synonym}
{title2}

= Splash screen
{parent=graphical-user-interface}
{wiki}

= Qt
{c}
{parent=graphical-user-interface}
{disambiguate=software}
{wiki}

= Data compression
{parent=software}
{wiki}

= Lossless compression
{parent=data-compression}
{wiki}

= Database
{parent=software}
{wiki}

= NoSQL
{c}
{parent=database}
{wiki}

= MongoDB
{c}
{parent=database}
{wiki}

List databases:
``
echo 'show dbs' | mongo
``

Delete database:
``
use mydb
db.dropDatabase()
``
or:
``
echo 'db.dropDatabase()' | mongo mydb
``

View collections within a database:
``
echo 'db.getCollectionNames()' | mongo mydb
``

Show all data from one of the collections: https://stackoverflow.com/questions/24985684/mongodb-show-all-contents-from-all-collections
``
echo 'db.collectionName.find()' | mongo mydb
``

= Install MongoDB on Ubuntu
{parent=mongodb}

Tested as of Ubuntu 20.04, there is no Mongo package available by default due to their change to \x[server-side-public-license], which Debian opposed. Therefore, you have to add their custom PPA as mentioned at: https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

= Relational database
{parent=database}
{wiki}

= Relational database management system
{parent=relational-database}
{title2=RDBMS}

= SQL
{c}
{parent=relational-database-management-system}
{wiki}

= MySQL
{c}
{parent=sql}
{wiki}

Login without password: https://askubuntu.com/questions/915585/how-to-login-mysql-shell-when-mysql-have-no-password
``
sudo mysql
``
works on \x[ubuntu] 20.10.

Run command from CLI https://stackoverflow.com/questions/1602904/how-do-you-run-a-single-query-through-mysql-from-the-command-line
``
sudo mysql -e 'SHOW DATABASES'
``

Create user for further logins without `sudo` https://askubuntu.com/questions/915585/how-to-login-mysql-shell-when-mysql-have-no-password/1325689#1325689[]:
``
sudo mysql -e "CREATE USER $USER"
``

Create test user with password:
``
sudo mysql -e 'CREATE USER user0 IDENTIFIED WITH mysql_native_password BY "a"'
sudo mysql -e 'GRANT ALL PRIVILEGES ON database_name.* TO "user0"'
``
and login as that user:
``
mysql -u user0 -p
``
Login with password given on the command line:
``
mysql -u user0 -pmypassword
``
The `IDENTIFIED WITH mysql_native_password` part is to overcome "Client does not support authentication protocol requested by server" when connecting from \x[node-js].

List users:
``
sudo mysql -e 'SELECT * FROM mysql.user'
``

View permissions for each user on each DB: https://serverfault.com/questions/263868/how-to-know-all-the-users-that-can-access-a-database-mysql
``
sudo mysql -e 'SELECT * FROM mysql.db'
``

List databases:
``
sudo mysql -e 'SHOW DATABASES'
``

Create database:
``
sudo mysql -e 'CREATE DATABASE mydb0'
``

Destroy database:
``
sudo mysql -e 'DROP DATABASE mydb0'
``

Show tables in database:
``
sudo mysql -e 'SHOW TABLES' mydb0
``
or:
``
sudo mysql -e 'SHOW TABLES FROM mydb0'
``

= PostgreSQL
{c}
{parent=sql}
{wiki}

On Ubuntu 20.10 PostgreSQL 12.6, login with `psql` on my default username without \x[sudo] fails with: https://stackoverflow.com/questions/11919391/postgresql-error-fatal-role-username-does-not-exist

This is the one that worked on Ubuntu 21.04: https://stackoverflow.com/questions/11919391/postgresql-error-fatal-role-username-does-not-exist/38444152#38444152
``
sudo -u postgres createuser -s $(whoami)
createdb $(whoami)
``
Explanation:
* `sudo -u postgres` uses the `postgres` user via \x[peer-authentication]
* `-s` in `createuser -s`: make it a superuser
* `createdb`: TODO why do we have to create a table with the same name as the user? Otherwise login fails.

You can now run `psql` without any password. This works without password due to peer authentication, 
``
sudo cat /etc/postgresql/12/main/pg_hba.conf
``
shows that peer authentication is available to all users apparently:
``
local   all             postgres                                peer

# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     peer
``

List users:
``
psql -c '\du'
``
output:
``
                                    List of roles
  Role name  |                         Attributes                         | Member of 
-------------+------------------------------------------------------------+-----------
 ciro        | Superuser, Create role, Create DB                          | {}
 owning_user |                                                            | {}
 postgres    | Superuser, Create role, Create DB, Replication, Bypass RLS | {}
``

Delete user later on:
``
psql -c 'DROP USER username;'
``

Create a database:
``
createdb testdb0
``

List all databases:
``
psql -c '\l'
``
which shows:
``
    Name     |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   
-------------+----------+----------+-------------+-------------+-----------------------
 ciro        | postgres | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 |
 postgres    | postgres | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 |
 template0   | postgres | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 | =c/postgres          +
             |          |          |             |             | postgres=CTc/postgres
 template1   | postgres | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 | =c/postgres          +
             |          |          |             |             | postgres=CTc/postgres
 testdb0     | postgres | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 |
(6 rows)
``

Delete a database:
``
psql -c 'DROP DATABASE "testdb0";'
``

If you didn't give a database from the command line e.g.:
``
psql
``
you can do that afterwards with:
``
\c testdb0
``

Let's create a table and test that it is working:
``
psql testdb0 -c 'CREATE TABLE table0 (int0 INT, char0 CHAR(16));'
``

List tables:
``
psql testdb0 -c '\dt'
``
gives:
``
        List of relations
 Schema |  Name  | Type  | Owner
--------+--------+-------+-------
 public | table0 | table | ciro
(1 row)
``

View table schema: https://stackoverflow.com/questions/109325/postgresql-describe-table
``
psql testdb0 -c '\d+ table0'
``
output:
``
                                      Table "public.table0"
 Column |     Type      | Collation | Nullable | Default | Storage  | Stats target | Description 
--------+---------------+-----------+----------+---------+----------+--------------+-------------
 int0   | integer       |           |          |         | plain    |              | 
 char0  | character(16) |           |          |         | extended |              | 
``

Insert some data into it and get the data out:
``
psql testdb0 -c "INSERT INTO table0 (int0, char0) VALUES (2, 'two'), (3, 'three'), (5, 'five'), (7, 'seven');"
psql testdb0 -c 'SELECT * FROM table0;'
``
output:
``
 int0 |      char0
------+------------------
    2 | two
    3 | three
    5 | five
    7 | seven
(4 rows)
``

Delete the table:
``
psql testdb0 -c 'DROP TABLE table0;'
``

= Create a test user in PostgreSQL
{parent=postgresql}

In order to create a test user with password instead of \x[peer-authentication], let's create test user:
``
createuser -P user0
createdb user0
``
`-P` makes it prompt for the users password.

Alternatively, to create the password non-interactively https://stackoverflow.com/questions/42419559/postgres-createuser-with-password-from-terminal[]:
``
psql -c "create role NewRole with login password 'secret'"
``
Can't find a way using the `createuser` helper.

We can then login with that password with:
``
psql -U user0 -h localhost
``
which asks for the password we've just set, because the `-h` option turns off peer authentication, and turns off password authentication.

The password can be given non-interactively as shown at https://stackoverflow.com/questions/6405127/how-do-i-specify-a-password-to-psql-non-interactively with the `PGPASSWORD` \x[environment-variable]:
``
PGPASSWORD=a psql -U user0 -h localhost
``

Now let's create a test database which `user0` can access with an existing superuser account:
``
createdb user0db0
psql -c 'GRANT ALL PRIVILEGES ON DATABASE user0db0 TO user0'
``

We can check this permission with:
``
psql -c '\l'
``
which now contains:
``
                                  List of databases
   Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges
-----------+----------+----------+-------------+-------------+-----------------------
 user0db0  | ciro     | UTF8     | en_GB.UTF-8 | en_GB.UTF-8 | =Tc/ciro             +
           |          |          |             |             | ciro=CTc/ciro        +
           |          |          |             |             | user0=CTc/ciro
``
The permission letters are explained at:
* https://www.postgresql.org/docs/13/ddl-priv.html
* https://stackoverflow.com/questions/25691037/postgresql-permissions-explained/25691587

`user0` can now do the usual table operations on that table:
``
PGPASSWORD=a psql -U user0 -h localhost user0db0 -c 'CREATE TABLE table0 (int0 INT, char0 CHAR(16));'
PGPASSWORD=a psql -U user0 -h localhost user0db0 -c "INSERT INTO table0 (int0, char0) VALUES (2, 'two'), (3, 'three'), (5, 'five'), (7, 'seven');"
PGPASSWORD=a psql -U user0 -h localhost user0db0 -c 'SELECT * FROM table0;'
``

= Peer authentication
{parent=postgresql}

https://www.postgresql.org/docs/13/auth-peer.html

Uses the name of the current \x[linux] user to login without a \x[password].

= SQLite
{c}
{parent=sql}
{wiki}

The minimalism, serverlessness/lack of temporary caches/lack of permission management, Hipp's religious obsession with efficiency, the use of their own pure Fossil SMC. Wait, scrap that last one. Pure beauty!

Create a table
``
sqlite3 db.sqlite3 "
CREATE TABLE 'IntegerNames' (int0 INT, char0 CHAR(16));
INSERT INTO 'IntegerNames' (int0, char0) VALUES (2, 'two'), (3, 'three'), (5, 'five'), (7, 'seven');
"
``

List tables:
``
sqlite3 db.sqlite3 '.tables'
``
output:
``
IntegerNames
``

Show schema of a table:
``
sqlite3 db.sqlite3 '.schema IntegerNames'
``
outputs the query that would generate that table:
``
CREATE TABLE IF NOT EXISTS 'IntegerNames' (int0 INT, char0 CHAR(16));
``

Show all data in a table:
``
sqlite3 db.sqlite3 'SELECT * FROM IntegerNames'
``
output:
``
2|two
3|three
5|five
7|seven
``

= Node.js SQLite bindings
{parent=sqlite}

* `sqlite3`
* `better-sqlite3`

= Object-relational mapping
{parent=database}
{title2=ORM}
{wiki=Object–relational_mapping}

Per language:
* \x[node-js-object-relational-mapping-library]

= File manager
{parent=software}
{wiki}

\x[ciro-santilli] used to use file managers in the past.

But he finally converted to a shell `cd` aliases that auto-`ls`: https://github.com/cirosantilli/dotfiles/blob/a51bcc324f0cff0eddd4c3bb8654ec223a0adb7b/home/.bashrc#L1058

= Krusader
{parent=file-manager}
{wiki}

The most powerful \x[gui] \x[file-manager] ever?? Infinite configurability??

\x[ciro-santilli] wasted some time on it before he gave up on file managers altogether.

= Ranger
{disambiguate=file manager}
{parent=file-manager}
{wiki}

\x[ciro-santilli] considered it before he stopped using file managers altogether, it is not bad.

= File sharing
{parent=software}
{wiki}

= BitTorrent
{c}
{parent=file-sharing}
{wiki}

= Game engine
{parent=software}
{wiki}

A library to make \x[game]{p}{parent}.

= Cocos2d
{c}
{parent=game-engine}
{wiki}

\x[ciro-santilli] considered this as the basis for \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development], but ultimately decided it was a bit too messy. Nice overall though.

= Urho3D
{c}
{parent=game-engine}
{wiki}

Their project lead as of 2018 was pro-CCP: https://github.com/cirosantilli/china-dictatorship/blob/aa1176c57fc2929465294e520b43b50d44e202ba/communities-that-censor-politics.md

= Geographic information system
{parent=software}
{title2=GIS}
{wiki}

= Google Maps
{c}
{parent=geographic-information-system}
{wiki}

By \x[google]{parent}.

= Google Street View
{c}
{parent=google-maps}
{wiki}

= OpenStreetMaps
{c}
{parent=geographic-information-system}
{title2=OSM}
{wiki}

It is rare to find a project with such a ridiculously high importance over funding ratio.

E.g., as of 2020, their help login https://help.openstreetmap.org/ shows MyOpenID as an option, which was discontinued in 2014, and not \x[google] \x[oauth].

They do still seem to have a bit more activity than https://gis.stackexchange.com/questions/tagged/openstreetmap on \x[stack-exchange].

\x[transliteration]{c} is off by default!...... https://wiki.openstreetmap.org/wiki/Translation You just have to learn all scripts ever. Good luck with the \x[chinese-character]{p}. Genious.

= Ordnance Survey
{c}
{parent=geographic-information-system}
{wiki}

Has some of the best map data available for the \x[united-kingdom], but their data appears to be proprietary?

= Integrated development environment
{parent=software}
{wiki}

= IDE
{c}
{synonym}
{title2}

IDEs are absolutely essential for developing complex software.

The funny thing is that you don't notice this until someone shows it to you. But once you see it, there is not turning back, just like \x[steve-jobs-customers-don-t-know-what-they-want-quote].

Unfortunately, after the https://movingfulcrum.com/the-fall-of-eclipse/[Fall of Eclipse] (https://web.archive.org/web/20190824081229/https://movingfulcrum.com/the-fall-of-eclipse/[archive]), the IDE landscape in 2019 is horrible and split between:
* highly buggy but still feature rich Eclipse
* many may many other feature lacking options using possibly more trendy and forward lasting implementations like https://en.wikipedia.org/wiki/Electron_(software_framework)[Electron]
* awesome cross-platform proprietary https://en.wikipedia.org/wiki/JetBrains[JetBrains] IDEs
* the God-like Windows-only proprietary language-lacking Visual Studio

Programmers of the world: unite! Focus on one IDE, and make it work for all languages and all build systems. Give it all the features that Eclipse has, but none of the bugginess. Work with top project to make sure the IDE works for all top projects.

Projects of the world: support one IDE, with in-tree configuration. Complex integration is often required between the IDE and the build system, and successful projects must to that once for all developers. Either do this, or watch you complex project wither away.

Build tool maintainers: make it possible for IDEs to support your tool! E.g., implement https://clang.llvm.org/docs/JSONCompilationDatabase.html[JSON Compilation Database] output so that IDEs can read the exact compiler commands from that, in order to automatically determine how files should be parsed! Or better, just use libllvm in your IDE itself as the main parser.

Ciro is evaluating some IDEs at: https://github.com/cirosantilli/ide-test-projects

= Vim
{c}
{parent=integrated-development-environment}
{wiki=Vim_(text_editor)}

Before we get a decent open source \x[integrated-development-environment], what else can you do?

But also perfect for small one-off files when you don't have the patience to setup said \x[ide].

vim's defaults are atrocious for the 21st century! Vundle is reasonable as an ad-hoc package manager, but it can't set fixed versions of packages:
* https://stackoverflow.com/questions/15259868/vundle-plugin-install-concrete-version-of-plugin/67870413#67870413
* https://github.com/VundleVim/Vundle.vim/pull/681

= vader.vim
{parent=integrated-development-environment}

https://github.com/junegunn/vader.vim

Vimscript unit testing!!!

= plasticboy/vim-markdown
{parent=vader-vim}

https://github.com/plasticboy/vim-markdown

\x[ciro-santilli] contributed a bit to this, and was even given push rights, see also: see also: \x[ciro-santilli-s-minor-projects].

= honza/vim-snippets
{parent=vader-vim}

https://github.com/honza/vim-snippets

= Vimium
{parent=vader-vim}

https://vimium.github.io/

Since you can't escape \x[shitty] browser \x[gui]{p} and live in the command line, the next best thing you can do is to bring Vim bindings to your browser :-)

There is one major annoyance: you can't use ESC to leave the address bar focus, but using Tab as a workaround works:
* https://superuser.com/a/1560178/128124

= Messaging software
{parent=software}

= Messaging software that force you to have a mobile phone
{parent=messaging-software}

Chat programs that don't have a proper web-only operation and force you to have a mobile phone, e.g. \x[whatsapp]{child}.

Heck, even \x[signal-software]{child}, which is supposed to be super secure and good for your privacy, forces you to disclose your freaking cell phone to all contacts! https://lifehacker.com/how-to-use-signal-without-revealing-your-private-phone-1818996580

What is my phone breaks? What if I don't want to have a \x[fucking] phone? What if I move countries and have to change the \x[fucking] number? Also evil but less because done by all: chat programs that can't send you an email https://webapps.stackexchange.com/questions/41528/how-can-i-automatically-forward-facebook-messages-to-my-email-or-phone[if you don't see the message in X minutes].

\x[europe][European Union], time to force those evil \x[company]{p} to use support open standards like \x[xmpp]?

The solution to "how to prevent spam" is simple: your ID is a public key that you own the private key for. If you start getting spammed, generate a new public key, and send it to all contacts, and dump the previous ID.

= Messaging software that force you to share your mobile phone with contacts
{parent=messaging-software-that-force-you-to-have-a-mobile-phone}

OK, you have to share your phone with the company to prevent spam, but why do you also have to share your phone with contacts? So you are then forced to give your phone number away on the \x[internet].

= Serverless browser P2P chat
{parent=messaging-software}

* https://stackoverflow.com/questions/2463665/how-create-a-p2p-web-chat-without-any-server

It seems impossible to avoid the signaling server. With signaling server:

* https://github.com/tom-james-watson/p2p.chat
* https://github.com/OTRMan/otr.to-chat
* maybe \x[jitsi]

= Email
{parent=messaging-software}
{wiki}

= Plausible deniability of email password handover
{parent=email}

https://protonmail.uservoice.com/forums/284483-feedback/suggestions/39962275-plausible-deniability

You need a secondary password that when used leads to an empty inbox with a setting set where message are deleted after 2 days.

This way, if the attacker sends a test email, it will still show up, but being empty is also plausible.

Of course, this means that any new emails received will be visible by the attacker, so you have to find a way to inform senders that the account has been compromised.

So you have to find a way to inform senders that the account has been compromised, e.g. a secret pre-agreed canary that must be checked each time as part of the contact protocol.

= Privacy focused email provider
{parent=email}

* https://github.com/cirosantilli/cirosantilli.github.io/issues/66
* https://www.privacytools.io/providers/email/

= ProtonMail
{c}
{parent=privacy-focused-email-provider}
{wiki}

https://www.privacytools.io/providers/email/

https://techcrunch.com/2021/09/06/protonmail-logged-ip-address-of-french-activist-after-order-by-swiss-authorities/ you've fucking got to use \x[tor-browser] with it if you want your IP to remain hidden, learn that...

= List of email providers
{parent=email}

= Gmail
{c}
{parent=list-of-email-providers}
{wiki}

= Dots in Gmail address
{parent=gmail}

Ignored: https://support.google.com/mail/answer/7436150?hl=en-GB

This allows you to create multiple non-anonymous accounts on any website that doesn't account for it, as this is not part of the \x[email] protocols in general.

= Guerrilla Mail
{c}
{parent=list-of-email-providers}
{wiki}

OMG those devs are brutes, it's beautiful.

https://www.guerrillamail.com/

https://github.com/flashmob/go-guerrilla

= Instant messaging
{parent=messaging-software}
{wiki}

= Instant messaging vs email
{parent=instant-messaging}
{wiki}

* https://github.com/cirosantilli/cirosantilli.github.io/issues/69
* https://www.quora.com/unanswered/Why-were-protocols-like-IRC-and-XMPP-created-after-email-if-both-can-send-messages

= The perfect privacy messaging software features
{parent=instant-messaging}

Haven't found the one yet:
* \x[open-source-software], doh
* \x[end-to-end-encryption]...
* has browser frontend and \x[android] app
* public URL without sharing your mobile phone: \x[messaging-software-that-force-you-to-have-a-mobile-phone]
* self-destroying messages (turned on by default please)
* user base large enough to give some confidence that it was reviewed for security issues
* easy/built-in setup over \x[tor-anonymity-network]

Optional but really \x[ideal]:
* can delete messages from the device of the person you sent it to, no matter how old
* decentralized, your username is a public key

The state of messaging is ridiculous as of 2020.

= Open instant messaging protocols
{parent=instant-messaging}
{wiki}

\x[internet-relay-chat] vs \x[xmpp]: https://stackoverflow.com/questions/4149380/whats-the-best-open-protocol-for-chat-room-software

= Internet Relay Chat
{c}
{parent=open-instant-messaging-protocols}
{wiki}

= IRC
{c}
{synonym}
{title2}

= Signal protocol
{c}
{parent=open-instant-messaging-protocols}
{wiki}

= XMPP
{c}
{parent=open-instant-messaging-protocols}
{wiki}

= List of instant messaging software
{parent=instant-messaging}

= Bitmessage
{c}
{parent=list-of-instant-messaging-software}
{wiki}

https://github.com/Bitmessage/PyBitmessage

TODO evaluate. No `pip install`???

= Discord
{c}
{disambiguate=software}
{parent=list-of-instant-messaging-software}
{wiki}

You gotta be born after the year 2000 to understand it.

No user URLs? https://support.discord.com/hc/en-us/community/posts/360041519131-UserProfilesLinks

= Jami
{c}
{disambiguate=software}
{parent=list-of-instant-messaging-software}
{title2=Ring}
{wiki}

\x[ciro-santilli] worked on it for a brief time in 2016, when it was still called Ring, before he got fired. :-)

The people were quite nice and the project idea is fine, Ciro hopes they succeed.

\Video[https://www.youtube.com/watch?v=xAyIHhbQt3A]
{title=Ring - Peer to peer network for real time communication - FOSDEM 2016 by \x[ciro-santilli]}

= Jitsi
{c}
{parent=list-of-instant-messaging-software}
{wiki}

No chat only? .... https://community.jitsi.org/t/chat-function-only/79067

As of 2020: \x[end-to-end-encryption] optional and turned off as default, and marked as experimental...

Appears to be based on \x[xmpp]: https://community.jitsi.org/t/jitsi-users-is-jitsi-a-regular-xmpp-server/13211

= Pidgin
{c}
{disambiguate=software}
{parent=list-of-instant-messaging-software}
{wiki}

= Signal
{c}
{disambiguate=software}
{parent=list-of-instant-messaging-software}
{wiki}

Basic must haves:
* \x[end-to-end-encryption]: yes
* \x[open-source-software]: yes

Other cool stuff:
* sealed sender: https://signal.org/blog/sealed-sender/ Nice!

Missing:
* remove the need to share your phone number with contacts: \x[messaging-software-that-force-you-to-share-your-mobile-phone-with-contacts]{parent}. This is a deal breaker for online acquaintances:
  * https://security.stackexchange.com/questions/231637/signal-contact-people-or-have-people-contact-me-without-revealing-phone-numbe/245665#245665
  * https://community.signalusers.org/t/have-option-to-set-up-username/8723
  * https://www.reddit.com/r/signal/comments/8kybil/is_signal_ever_going_to_include_usernames/
  * remove need for phone completely:
    * https://community.signalusers.org/t/a-proposal-for-alternative-primary-identifiers/3023
    * https://community.signalusers.org/t/remove-the-need-for-a-mobile-phone/1543
    * https://community.signalusers.org/t/registering-with-an-email-address/919
    * https://community.signalusers.org/t/username-id-registration-without-phone-number/9800
    * https://community.signalusers.org/t/more-reasons-why-signal-should-ditch-phone-numbers-the-guardian-confirmed-the-identity-of-those-in-the-chat-by-cross-checking-phone-numbers-attached-to-the-signal-accounts/7311
    * https://community.signalusers.org/t/why-is-phone-and-phone-number-required/1425 https://community.signalusers.org/t/what-is-the-technical-reason-that-i-cannot-use-signal-without-a-phone-number-and-that-i-cannot-use-signal-desktop-without-signal-on-my-phone/11400
* \x[tor-anonymity-network] routing by default:
  * https://community.signalusers.org/t/use-the-built-in-tor-project-in-the-program-source/26291
* option to enable disappearing messages by default:
  * https://community.signalusers.org/t/ability-to-set-your-own-default-timer-for-disappearing-messages-on-all-new-conversations/5144 "Ability to set your own default timer for disappearing messages on all new conversations"
  * https://www.reddit.com/r/signal/comments/jhknuz/default_disappearing_messages_timeout_for_new/
* messages are not encrypted on desktop via the \x[password-manager]!?!?
  * https://github.com/signalapp/Signal-Desktop/issues/549
  * https://github.com/signalapp/Signal-Desktop/issues/1318
  * https://www.reddit.com/r/privacy/comments/fwux29/signal_desktop_stores_the_encryption_key_in_a/
  * https://whispersystems.discoursehosting.net/t/improve-security-of-desktop-apps-encryption-of-data-at-rest/26494
  * https://community.signalusers.org/t/why-cant-we-lock-the-desktop-app-with-a-password/1383
* web client:
  * https://security.stackexchange.com/questions/238011/why-is-there-no-web-client-for-signal
* secure anti-forensic \x[data-erasure] to attain \x[plausible-deniability] of disappearing messages:
  * https://www.reddit.com/r/signal/comments/ki5mbn/how_well_does_signal_delete_old_messages/
  * https://community.signalusers.org/t/is-deleting-secure-in-its-current-form/908
  * https://community.signalusers.org/t/traces-of-messages-that-have-disappeared/5049

TODO what's the fucking official discussion/feature request forum?
* https://community.signalusers.org appears to be the de-facto non-official one.
* https://github.com/signalapp/Signal-Android/issues/5372
* https://whispersystems.discoursehosting.net
* https://github.com/signalapp/Signal-Desktop/issues/1318 closes and points to discoursehosting
* https://github.com/signalapp/Signal-Desktop/issues/549
* https://www.reddit.com/r/signal/comments/lipo6z/community_signal_forum_vs_reddit/ gives some good history, says they pay for https://community.signalusers.org/ and have admin powers there.

Feature overview:
* https://security.stackexchange.com/questions/139493/is-signal-still-more-secure-than-whatsapp

= Telegram
{c}
{disambiguate=software}
{parent=list-of-instant-messaging-software}
{wiki}

Not \x[end-to-end-encrypted] by default, WTF... you have to create "secret chats" for that:
* https://www.quora.com/Why-does-Telegram-not-use-end-to-end-encryption-by-default-so-that-there-are-not-keys-to-give-to-the-government

You can't sync secret chats across devices, \x[signal-software] handles that perfectly by sending E2EE messages across devices:
* https://www.reddit.com/r/Telegram/comments/7hx8vd/when_will_telegram_get_secret_chats_crossdevices/
This is a deal breaker because Ciro needs to type with his keyboard.

Desktop does not have secret chats: https://www.reddit.com/r/Telegram/comments/9beku1/telegram_desktop_secret_chat/ This is likey because it does not store chats locally, it just loads from server every time as of 2019: https://www.reddit.com/r/Telegram/comments/baqs63/where_are_chats_stored_on_telegram_desktop/ just like the web version. So it cannot have a private key.

Allows you to register a public username and not have to share phone number with contacts: https://telegram.org/blog/usernames-and-secret-chats-v2.

Has \x[reproducible-builds] on Android and iOS: https://core.telegram.org/reproducible-builds 

Self deleting messages added to secret chats in Q1 2021: https://telegram.org/blog/autodelete-inv2

Can delete messages from the device of the person you sent it to, no matter how old.

= Skype
{c}
{parent=list-of-instant-messaging-software}
{wiki}

= WhatsApp
{c}
{parent=list-of-instant-messaging-software}
{wiki}

Claimed to remove metadata from servers unless \x[legally] obliged to collect it: https://www.quora.com/Does-WhatsApp-store-messages-on-its-servers-or-is-all-deleted-after-delivery-and-only-stored-on-recipients-phones/answer/Ciro-Santilli

They've had a few breaches: https://www.whatsapp.com/security/advisories/

They claim to delete metadata: https://www.quora.com/Does-WhatsApp-store-messages-on-its-servers-or-is-all-deleted-after-delivery-and-only-stored-on-recipients-phones/answer/Ciro-Santilli

\Video[https://www.youtube.com/watch?v=X4YsJt4rIOI]
{title=WhatsApp founder Jan Koum talks about their Journey by Roots (2017)}
{description=Good talk, explains how everything happened in the perfect location at the perfect time: unemployed people who knew how to code, bought an iPhone, the next big platform, at its very beginning, they had just release the required push notifications \x[api], and he travelled a lot and knew how much SMS sucked, especially international.}

= Multimedia software
{parent=software}

= FFmpeg
{c}
{parent=multimedia-software}
{wiki}

FFmpeg is the \x[assembler-computing] of audio and video.

As a result, \x[ciro-santilli] who likes "lower level stuff", has had many many hours if image manipulation fun with this software, see e.g.:
* the "Media" section of \x[articles].
* \x[image-ciro-knows-how-to-convert-videos-to-gifs]

As older Ciro grows, the more he notices that FFmpeg can do basically any lower level audio video task. It is just an amazing piece of software, the immediate go-to for any low level operation.

FFmpeg was created by \x[fabrice-bellard], which Ciro deeply respects.

Resize a video: https://superuser.com/questions/624563/how-to-resize-a-video-to-make-it-smaller-with-ffmpeg[]:
``
ffmpeg -i input.avi -filter:v scale=720:-1 -c:a copy output.mkv
``
Unlike every other convention under the sun, the height in `scale` is the first number.

= FFmpeg is the backend of YouTube
{c}
{parent=ffmpeg}

FFmpeg is likely the backend of \x[youtube] through \x[reverse-engineering]: https://streaminglearningcenter.com/blogs/youtube-uses-ffmpeg-for-encoding.html (https://web.archive.org/web/20190519135210/https://streaminglearningcenter.com/blogs/youtube-uses-ffmpeg-for-encoding.html[archive])

On \x[quora]: https://www.quora.com/What-does-YouTube-use-for-encoding-video/answer/Ciro-Santilli

= Concatenate two videos with ffmpeg
{parent=ffmpeg}

https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg

= ImageMagick
{c}
{parent=multimedia-software}
{wiki}

Crop `20` pixels from the bottom of the image:
``
convert image.png -gravity East -chop 20x0 result.png
``

= Open source software
{parent=software}
{wiki}

= Open source
{synonym}

What happens when https://en.wikipedia.org/wiki/OpenCL[the underdogs] get https://stackoverflow.com/questions/1780599/what-is-the-meaning-of-posix/31865755#31865755[together] and try to factor out their efforts to beat some https://en.wikipedia.org/wiki/CUDA[evil] dominant \x[microsoft-windows][power], sometimes \x[linux][victoriously].

Or when https://github.com/facebook[startups] use the cheapest stuff available and randomly become the https://github.com/google[next big thing], and decide to keep maintaining the open stuff to get features for free from other companies, or because they are \x[linux][forced by the Holy GPL].

Open source frees employees. When you change jobs, a large part of the specific knowledge you acquired about closed source a project with your blood and tears goes to the trash. When companies get bought, projects get shut down, and closed source code goes to the trash. What sane non desperate person would sell their life energy into such closed source projects that could die at any moment? Working on open source is the single most important non money perk a company can have to attract the best employees.

Open source is worth more than the mere pragmatic financial value of not having to pay for software or the ability to freely add new features.

Its greatest value is perhaps the fact that it allows people study it, to appreciate the beauty of the code, and feel empowered by being able to add the features that they want.

That is why \x[ciro-santilli] thought:
\Q[Life is too short for closed source.]

But quoting Ciro's colleague S.:
\Q[Every software is open source when you read https://en.wikipedia.org/wiki/Assembly_language[assembly code].]

And https://computergraphics.stackexchange.com/questions/7809/what-does-gpu-assembly-look-like["can \x[reverse-engineering][reverse engineer] the undocumented GPU hardware APIs"], \x[ciro-santilli][Ciro] would add.

While software is the most developed open source technology available in the 2010's, due to the https://www.vox.com/recode/2019/6/24/18715421/internet-free-data-ads-cost["zero cost"] of copying it over the Internet, Ciro also believes that \x[open-knowledge][the world would benefit enormously from open source knowledge in all areas on science and engineering], for the same reasons as open source.

= Free and open-source software
{parent=open-source-software}
{wiki}

= FOSS
{c}
{synonym}
{title2}

A more precise term for those in the know: \x[open-source-software] that also has a liberal license, for some definition of liberal.

\x[ciro-santilli] defines liberal as: "can be commercialized without paying anything back" (but possibly subject to other restrictions).

He therefore does not consider \x[creative-commons-license]{p} with NC to be FOSS.

For the newbs, the term \x[open-source-software] is good enough, since most open source software is also FOSS.

But when it's not, it's crucial to know.

= Models for financing open source software
{parent=free-and-open-source-software}

* \x[sponsorware]{child}

= Software developer collective
{parent=models-for-financing-open-source-software}

This model can work well when there is a set of commonly used libraries that some developers often use together, but such that there isn't enough maintenance work for each one individually.

So what people do is to create a group that maintains all those projects, to try and get enough money to survive from the contributions done primarily for each one individually.

Examples:
* https://github.com/pmndrs

= Open source software that is not-FOSS
{parent=free-and-open-source-software}
{wiki}

* \x[gitlab]{child}

= Source code leaks
{parent=open-source-software}

* \x[nintendo]
  * 2020-05-04 leaks via the BroadOn company
  * items
    * Wii \x[verilog]
  * coverage
    * https://www.ladbible.com/technology/gaming-the-biggest-nintendo-hack-in-history-leaks-console-source-codes-20200504
  * fake leak commentary
    * "Sebastian" is apparently reuploaded devkit demos claiming that they are from this leak, if that is correct, \x[fuck] him:
      * https://www.youtube.com/watch?v=6FSOFrgbi4I&lc=UgwWEWT3oyxf85J0PQB4AaABAg
      * https://www.youtube.com/watch?v=teRRcouGxwc&list=PL8Yms2YDl4qOXI99jpI8oH75d3X2oxnBM&index=14

= Open knowledge
{parent=open-source-software}
{wiki}

\x[ciro-santilli]'s raison d'etre, one of his attempts: \x[write-free-books-to-get-famous-website].

The outcome of closed knowledge is \x[reverse-engineering].

= Open educational resources
{parent=open-knowledge}
{title2=OER}
{wiki}

Projects:
* \x[mit-opencourseware]
* several \x[e-learning-website]{p}, e.g. \x[openstax]

= Horrors of open source
{parent=open-source-software}

Not everything is perfect.

One big problem of many big open source projects is that they are contributed to by separate selfish organizations, that have private information. Then what happens is that:
* people implement the same thing twice, or one change makes the other completely unmergeable
* you get bugs but can't share your closed source test cases, and then you can't automate tests for them, or clearly demonstrate the problem
* other contributors don't see your full semi secret important motivation, and may either nitpick too much or take too long to review your stuff

Another common difficulty is that open source maintainers may simply not care enough about their own project (maybe they did in the past but lost interest) to review external patches by people they don't know.

This is understandable: a new patch, is a new risk of things breaking.

Therefore, if you ever submit patches and they get ignore, don't be too sad. It just comes down to a question of maintenance cost, and means that you will waste some extra time on the next rebase. You just have to decide your goals and be cold about it:
* are you doing the right thing and going for a specific goal \x[backward-design]? Then just fork, run as fast as possible towards a minimum viable product, and if you start to feel that rebase is costing you a lot, or feel you could get some open source fame for cheap, open reviews and see what upstream says. If they ignore you, politely tell yourself in your mind silently "\x[fuck] them", and carry on with the MVP
* otherwise, e.g. you just want to randomly help out, you have to ask them before doing anything big "how can I be of help". If I propose a patch for this issue, do you promise to review it?

Writing documentation in an open source project in which you don't have immediate push rights is another major pain due to code reviews. Code code reviews tend to be much less subjective, because if you do something wrong, stuff crashes, runs slower, or you need more lines of code to reach the same goal. There are tradeoffs, but in a limited number. Documentation code reviews on the other hand, are an open invitation to https://en.wikipedia.org/wiki/Law_of_triviality[infinite bike-shedding], since you can't "run" documentation through a standardized \x[brain][brain model]. Much better is for one good documenter person to just make one cohesive \x[stack-overflow] post, and ping others with more knowledge to review details or add any missing pieces :-)

= Closed source is less bad on online services
{parent=open-source-software}

\x[ciro-santilli] can accept closed source on server products more easily than offline, because the servers have to be paid for somehow (by stealing your private data).

= Closed source offline software used by millions
{parent=closed-source-is-less-bad-on-online-services}

Closed source on offline products used by millions of people is \x[evil], when you could just have those for free with \x[open-source-software]! Thus Ciro's hatred for \x[microsoft-windows]{child} and \x[macos]{child} (at \x[is-the-macos-kernel-open-source][least userland, maybe]).

= Closed source software
{parent=open-source-software}

= Closed source
{synonym}

The opposite of \x[open-source-software].

= Inner source
{parent=closed-source-software}
{wiki}

If you are going to do \x[closed-source], at least do it like this.

Basically the opposite of \x[need-to-know] for \x[software].

= Productivity software
{parent=software}
{wiki}

= LibreOffice
{c}
{parent=productivity-software}
{wiki}

These people are heroes. There's nothing else to say.

= Programming language
{parent=software}
{wiki}

A language that allows you to talk and command a \x[computer].

There is only space for two languages at most in the world: the \x[compiled-programming-language][compiled] one, and the \x[interpreted-programming-language][interpreted] one.

For 2020 now, when you have a choice, you must go for:
* \x[python] as the interpreted one
* \x[c-plus-plus] for compiled

Those two are languages not by any means perfect from a language design point of view, and there are likely already better alternatives, they are only chosen due to a pragmatic tradeoff between ecosystem and familiarity.

Python in particular has a lot of annoying stuff, which other languages do better. Ciro predicts that Python will become like Fortran in the future: a legacy hated by most who have moved to \x[javascript] long ago, but with too much dominance in certain applications like machine learning to be worth replacing, like Fortran dominates certain HPC applications.

\x[c-plus-plus] however is decent, and is evolving in very good directions in the 2010's, and will remain relevant in the foreseeable future.

\x[bash] can also be used when you're lazy. But if the project goes on, you will sooner or later regret that choice.

The language syntax in itself does not matter. All that matters is how many useful libraries and tooling it has.

This is how other languages compare:
* \x[c-programming-language][C]: but cannot make a large codebase DRY without insanity
* \x[ruby-programming-language][Ruby]: the exact same as Python, and only strong in one domain: web, while Python rules everything else, and is not bad on web either. So just kill Ruby, please.
* \x[javascript]: it is totally fine if NodeJS destroys Python and becomes the ONE scripting language to rule them all since Python and JavaScript are almost equally crappy (although JavaScript is a bit more of course).

  One thing must be said tough: `someobject.not_defined_property` silently returning `undefined` rather than blowing up is \x[bullshit]
* \x[java]: good language, but has an ugly enterprisey ecosystem, Oracle has made / kept the development process too closed, and https://en.wikipedia.org/wiki/Google_v._Oracle_America[API patenting madness on Android just kills if off completely]
* Haskell: many have tried to learn some functional stuff, but too hard. Sounds really cool though.
* Rust: sounds cool, you will gladly replace C and C++ with it if the ecosystem ramps up.
* Go: likely a good replacement for Python. If the ecosystem gets there, you will gladly use it more.
* C#: \x[microsoft-windows][Microsoft] is \x[evil]
* Tcl, \x[perl-programming-language]: Python killed them way back and is less insane
* R, GNU Octave and any other "\x[numerical-computing-language]": all of this is a waste of society's time as explained at: \x[numerical-computing-language]{full}
* Swift: Ciro would rather stay away from \x[apple-inc] dominated projects if possible since they sell a \x[closed-source] \x[operating-system]

= Programming languages without a decent dominating package system
{parent=programming-language}

\x[c-programming-language]{child} and \x[c-plus-plus]{child}: OK, you're old before the Internet and compiled, forgiven.

\x[python]{child}: OMG, please, just make it work!!! Your are interpreted!!! You are a hot web technology!!! \x[node-js] and \x[ruby-programming-language] are doing just fine, and Ruby is not newer than you!!! See also: \x[pip-package-manager].

= Compiled vs interpreted programming language
{parent=programming-language}

= Compiled programming language
{parent=programming-language}

= Interpreted programming language
{parent=programming-language}

= List of programming languages
{parent=programming-language}

= Adobe Flash
{c}
{parent=list-of-programming-languages}
{wiki}

= Bash
{c}
{disambiguate=Unix shell}
{parent=list-of-programming-languages}

= Bash
{c}
{synonym}

The more heavily a project relies on it, the more you start to regret it.

= C
{c}
{disambiguate=programming language}
{parent=list-of-programming-languages}
{wiki=C++}

It gets the job done, but cannot make a large codebase DRY without insanity.

As of 2020, C is like \x[latin], and we are in the \x[middle-ages].

= C++
{c}
{parent=list-of-programming-languages}
{wiki}

It gets the job done, but cannot make a large codebase DRY without insanity

= C#
{c}
{id=c-sharp}
{parent=list-of-programming-languages}
{wiki=C_Sharp_(programming_language)}

It gets the job done, but cannot make a large codebase DRY without insanity

= Haskell
{c}
{parent=list-of-programming-languages}
{wiki}

There are only two pre-requisites to using Haskell in 2020. You have to be an \x[idealist]. And you have to be a genius.

= Java
{c}
{disambiguate=programming language}
{parent=list-of-programming-languages}
{wiki}

= Java
{synonym}

= JavaScript
{c}
{parent=list-of-programming-languages}
{wiki}

The language all browsers converted to as of 2019, and therefore the easiest one to distribute and most widely implemented programming language.

Hopefully will be killed by https://en.wikipedia.org/wiki/WebAssembly[WebAssembly] one day.

Cheat:
* \a[web-cheat/js-image-load.html]: load an image from JavaScript dynamically: https://stackoverflow.com/questions/226847/what-is-the-best-javascript-code-to-create-an-img-element
* \a[web-cheat/js-image-load-viewport.html]: load an image from JavaScript dynamically when it would become visible on the viewport: https://stackoverflow.com/questions/2321907/how-do-you-make-images-load-only-when-they-are-in-the-viewport
* \a[web-cheat/image-load-lazy.html]: https://stackoverflow.com/questions/2321907/how-do-you-make-images-load-lazily-only-when-they-are-in-the-viewport/57389607#57389607
* \a[web-cheat/esm.html]: ESM modules
  * \a[web-cheat/esm1.js]
  * \a[web-cheat/esm2.js]

= Client-side storage
{parent=javascript}

https://www.google.com/search?q=client-side+storage&oq=Client-side+storage&aqs=chrome.0.0l3j0i22i30l4j69i60.88j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8

= Clear client-side storage
{parent=client-side-storage}

= Clear client-side storage on Chromium
{parent=clear-client-side-storage}

* https://superuser.com/questions/366483/how-to-delete-cookies-for-a-specific-site
* https://superuser.com/questions/722498/what-is-the-fastest-way-to-clear-cache-and-cookies-in-google-chrome

= Emscripten
{c}
{parent=javascript}
{wiki}

= JavaScript library
{parent=javascript}

= Babel
{c}
{disambiguate=transcompiler}
{parent=javascript-library}
{wiki}

= JavaScript bi-directional communication library
{parent=javascript-library}

* https://stackoverflow.com/questions/30419455/server-side-data-push-for-web-services
* https://stackoverflow.com/questions/52146670/bi-directional-communication-between-server-and-client

= Socket.IO
{c}
{parent=javascript-library}
{wiki}

= Node.js
{c}
{parent=javascript}
{wiki}

WellSync, if you are gonna useSync this \x[javascript][wonky language] thing inSync one place, you might as well useSync it everywhereSync and make it more decent.

= Node.js library
{c}
{parent=node-js}

= Node.js database bindings
{parent=node-js-library}

* \x[node-js-sqlite-bindings]

= Node.js object-relational mapping library
{parent=node-js-library}

= Sequelize
{c}
{parent=node-js-object-relational-mapping-library}

https://github.com/sequelize/sequelize

As of 2021, this is semi-decent.

The documentation is a bit messy and misses a lot of stuff. The examples are often too short, and it is hard to understand what specific options they are talking about do because they lack clear input/expected output pairs.

The implementation also has several inelegant/unintuitive annoyances/requirements of code repetition that drive you mad.

The association API is notably bad, it took a few days for \x[ciro-santilli] to learn to do what he considers "basic" association operations, knowledge which he dumped to: https://stackoverflow.com/questions/22958683/how-to-implement-many-to-many-association-in-sequelize/67973948#67973948

Some issues include:
* foreign keys are capitalized:
  * https://stackoverflow.com/questions/55273091/why-use-the-uppercase-key-when-creating-association-model-in-sequelize 
  * https://github.com/sequelize/sequelize/issues/5828
* you must give `foreignKey` when using aliases, otherwise it fails subtely. That would be derived automatically.
* https://stackoverflow.com/questions/41502699/return-flat-object-from-sequelize-with-association can't auto-flatten to reuse the database's `ORDER`
* `limit` and `offset` don't work without `subQuery: false`
* https://stackoverflow.com/questions/34059081/how-do-i-reference-an-association-when-creating-a-row-in-sequelize-without-assum hard to not duplicate foreign keys values everywhere
* they implement stuff but simply don't document it, check out these comments:
  * https://github.com/sequelize/sequelize/issues/5385#issuecomment-324479607
  * https://github.com/sequelize/sequelize/issues/1775#issuecomment-360028396
* stack traces permanently broken or requiring non-obvious configs:
  * https://github.com/sequelize/sequelize/issues/8199#issuecomment-863943835
  * https://github.com/sequelize/sequelize/issues/12044
  * https://stackoverflow.com/questions/28231970/bluebird-shows-broken-stacktrace-when-using-with-sequelize-mysql
* does not automatically update fields on hooks: https://github.com/sequelize/sequelize/issues/8586#issuecomment-422877555
* no way to do (non-raw) querries during migrations, e.g. to update fields based on other fields in a complex way?
  * https://github.com/sequelize/cli/issues/862
  * https://stackoverflow.com/questions/45286429/custom-query-on-sequelize-seeder
  * https://stackoverflow.com/questions/18742962/add-data-in-sequelize-migration-script
* cannot change columns when other columns have constraints due to the backup table?
  * https://stackoverflow.com/questions/64533732/process-of-changing-a-table-with-sequelize-migration-if-foreign-key-constraint-i

= Node.js web framework
{c}
{parent=node-js}

= Express.js
{c}
{parent=node-js-web-framework}

This doesn't do a hole lot. \x[ciro-santilli] wouldn't really call it a web framework. It's more like a middleware. Real web frameworks are built on top of it.

= Realworld app written in Express
{c}
{parent=express-js}

\x[gothinkster-realworld] implementations based on \x[express-js].

= gothinkster/node-express-realworld-example-app
{parent=realworld-app-written-in-express}

https://github.com/gothinkster/node-express-realworld-example-app

= sigoden/node-express-realworld-example-app
{parent=realworld-app-written-in-express}

Appears to be a port of \x[gothinkster-node-express-realworld-example-app] to \x[sequelize].

Seemed to just work at 68bbadfd77f679f0df0fcd0de5bceb9c37b1144a Ubuntu 20.10, was forked from parent project in 2018.

= Varun-Hegde/Conduit_NodeJS
{parent=realworld-app-written-in-express}

Very raw. Easy to understand. Relatively well organiezd. But also very buggy at 3ab8d9f849a1cdf2985a8d123b1893f0fd4e79ab: https://github.com/Varun-Hegde/Conduit_NodeJS/issues/3[], I just can't trust it. There must be several helper libraries that would greatly DRY up the repetitive CRUD. Ciro hates the style :-) 4 space indents, no space after commas, no semicolon. Not based on https://github.com/gothinkster/node-express-realworld-example-app[] which is essentially one of the reference implementations, so from scratch apparently, which is a bad sign.

= FeathersJS
{c}
{parent=node-js-web-framework}

* https://feathersjs.com
* https://github.com/feathersjs/feathers
* https://stackoverflow.com/questions/tagged/feathersjs

Looks interesting.

It seems to abstract the part about the client messaging the backend, which focuses on being able to easily plug in a number of \x[front-end-web-framework] to manage client state.

Has the "main web \x[api] is the same as the REST API" focus, which is fundamental 2020-nowadays.

Uses \x[socket-io], which allows the client Javascript to register callbacks when data is updated to achieve \x[socket-io], e.g. their default chat app does:
``
client.service('messages').on('created', addMessage);
``
so that message appear immediately as they are sent.

Their standard template from `feathers generate app` on `@feathersjs/cli@4.5.0` includes:
* several authentication methods, including \x[oauth]
* testing
* backend \x[database] with one of several \x[object-relational-mapping]! However, they don't abstract across them. E.g., the default Chat example uses NeDB, but a real app will likely use \x[sequelize], and a \x[port-software-portability] is needed
which looks promising! They don't have a default template for a \x[front-end-web-framework] however unfortunately: https://docs.feathersjs.com/guides/frameworks.html#the-feathers-chat lists a few chat app versions, which is their \x[hello-world]:
* \x[front-end-web-framework]: not built-in on generator, but there are some sample repos pointed from the documentation, and they did work out-of-box:
  * \x[feathers-chat-react]
But it is in itself a completely boring app with a single splash page, and no database interaction, so not a good showcase. The actual showcase app is \x[feathersjs-feathers-chat].

And there is no official example of the chat app that is immediately deployable to \x[heroku]: \x[feathersjs-heroku-deployment], all setups require thinking.

Global source entrypoint: determine on `package.json` as usual, defaults to `src/index.js`.

= FeatherJS demo apps
{c}
{parent=feathersjs}

https://github.com/feathersjs/awesome-feathersjs#projects-using-feathers

= feathersjs/feathers-chat
{c}
{parent=featherjs-demo-apps}

https://github.com/feathersjs/feathers-chat

The main \x[feathersjs] \x[hello-world] demo. Notable missing things...
* instant \x[heroku] deployability: \x[feathersjs-heroku-deployment]
* no \x[front-end-web-framework] which sucks, but there are basically official demos that worked e.g. \x[feathers-chat-react]
* \x[feathersjs-signup-email-verification]

= feathers-chat PostgreSQL
{c}
{parent=feathersjs-feathers-chat}

The default feathers-chat app runs on NeDB (local filesystem \x[json] database).

\x[ciro-santilli] managed to port it to \x[sequelize] for \x[postgresql] as shown at: https://github.com/cirosantilli/feathers-chat/tree/sequelize-pg

= feathers-chat-react
{c}
{parent=feathersjs-feathers-chat}

https://github.com/feathersjs-ecosystem/feathers-chat-react

Last updated 2018 as of 2021, but still just worked.

Also uses \x[webpack] which is fantastic.

Gotta run https://github.com/feathersjs/feathers-chat[] first: https://github.com/feathersjs-ecosystem/feathers-chat-react/issues/5[], then it worked:
``
git clone https://github.com/feathersjs/feathers-chat
cd feathers-chat
git checkout fd729a47c57f9e6170cc1fa23cee0c84a004feb5
npm install
npm start
``
and on the other terminal:
``
git clone https://github.com/feathersjs-ecosystem/feathers-chat-react
cd feathers-chat-react
git checkout 36d56cbe80bbd5596f6a108b1de9db343b33dac3
npm install
npm start
``
then visit http://localhost:3000/ and you can create an account and login, tested on Ubuntu 20.10. Data is stored on persistently.

TODO how to merge those two repos into a single repo.

If you \x[disable-javascript-on-chromium], it stops working completely. There is a section on how to solve that at: https://docs.feathersjs.com/cookbook/express/view-engine.html[] but it does not cover React specifically. \x[codaisseur-feathersjs-react-redux-ssr] might be good to look into.

= Codaisseur/feathersjs-react-redux-ssr
{c}
{parent=featherjs-demo-apps}

https://github.com/Codaisseur/feathersjs-react-redux-ssr

Also \x[webpack] and \x[babel-transcompiler], looks promising!

As of 2021, last commit from 2017.

Running:
``
git clone https://github.com/Codaisseur/feathersjs-react-redux-ssr
cd feathersjs-react-redux-ssr
npm install
``
failed on Ubuntu 20.10 \x[node-js] v14.15.3 with:
``
../src/create_string.cpp:17:37: error: no matching function for call to ‘v8::String::Utf8Value::Utf8Value(v8::Local<v8::Value>&)’
   17 |   v8::String::Utf8Value string(value);
      |                                     ^
``
Likely similar \x[bullshit] from: https://stackoverflow.com/questions/50111688/node-sqlite-node-gyp-build-error-no-member-named-forceset-in-v8object because the Node.js version is too new.

If I try `nvm install v10`

I \x[google] error messages until reaching:
``
diff --git a/gulpfile.js b/gulpfile.js
index b931e06..24d2cc8 100644
--- a/gulpfile.js
+++ b/gulpfile.js
@@ -14,34 +14,34 @@ gulp.task('css', function() {
            .pipe(gulp.dest('./dist'))
 })
 
-gulp.task('css:watch', ['css'], function() {
+gulp.task('css:watch', gulp.series('css', function() {
   gulp.watch('app/styles/**/*.sass', ['css'])
-})
+}))
 
 gulp.task('moveAssets', function() {
   return gulp.src('./app/assets/**/*')
              .pipe(gulp.dest('./dist/assets'))
 })
 
-gulp.task('build:revAssets', ['css', 'moveAssets'], function() {
+gulp.task('build:revAssets', gulp.series('css', 'moveAssets', function() {
   var rev = new $.revAll()
   return gulp.src('./dist/**/*')
              .pipe(rev.revision())
              .pipe(gulp.dest('./dist/public'))
              .pipe(rev.manifestFile())
              .pipe(gulp.dest('./dist'))
-})
+}))
 
 gulp.task('build:cpServer', function() {
   return gulp.src('./app/**/*.{js,ejs}')
              .pipe(gulp.dest('./dist/server-build'))
 })
-gulp.task('build:revServer', ['build:cpServer'], function() {
+gulp.task('build:revServer', gulp.series('build:cpServer', function() {
   var manifest = gulp.src('./dist/rev-manifest.json')
   return gulp.src('./dist/server-build/{components,containers}/**/*')
              .pipe($.revReplace({ manifest: manifest }))
              .pipe(gulp.dest('./dist/server-build'))
-})
+}))
 
 gulp.task('build', function() {
   runSequence('build:revAssets', 'build:revServer')
diff --git a/package.json b/package.json
index bcb29c3..86bd593 100644
--- a/package.json
+++ b/package.json
@@ -67,7 +67,7 @@
     "redux-thunk": "^0.1.0",
     "request": "^2.79.0",
     "rewire": "^2.3.4",
-    "run-sequence": "^1.2.2",
+    "run-sequence": "^2.2.1",
     "serve-favicon": "^2.3.2",
     "socket.io-client": "^1.7.2",
     "superagent": "^1.4.0",
@@ -86,16 +86,16 @@
     "concurrently": "^2.0.0",
     "cross-env": "^1.0.7",
     "enzyme": "^2.3.0",
-    "gulp": "^3.9.0",
+    "gulp": "^4.0.2",
     "gulp-autoprefixer": "^3.1.0",
     "gulp-load-plugins": "^1.2.0",
     "gulp-rev": "^6.0.1",
-    "gulp-sass": "^2.1.1",
+    "gulp-sass": "4.1.0",
     "gulp-sourcemaps": "^1.6.0",
     "jsdom": "^7.0.1",
     "mocha": "^2.4.5",
     "nock": "^2.17.0",
-    "node-sass": "^3.4.2",
+    "node-sass": "^5.0.0",
     "nodemon": "^1.6.0",
     "react-addons-test-utils": "^15.3.2",
     "react-transform-catch-errors": "^1.0.0",
``
and the next problem is: https://stackoverflow.com/questions/48513573/gulp-error-gulp-hastask-is-not-a-function

= randyscotsmithey/feathers-realworld-example-app
{parent=featherjs-demo-apps}

\x[feathersjs] entry for \x[gothinkster-realworld].

\x[mongodb]-based.

So once you install MongoDB, run with:
``
MONGODB_FEATHERS_REALWORLD=mongodb://localhost:27017/mydb npm start
``

Got it working on \x[ubuntu] 20.10 with both \x[react] and \x[vue-js] front-ends at https://github.com/randyscotsmithey/feathers-realworld-example-app/commit/8bc3a09242285de624c75bb8345630df499a7d07[] as mentioned at https://github.com/randyscotsmithey/feathers-realworld-example-app/issues/2 except for bad error reporting on UI.

Tests can be run with:
``
MONGODB_FEATHERS_REALWORLD=mongodb://localhost:27017/mydb npm run test
``
but there were 10 failures and 55 passes: https://github.com/randyscotsmithey/feathers-realworld-example-app/issues/3

= FeathersJS Heroku deployment
{c}
{parent=feathersjs}

Got it working as mentioned at: https://github.com/cirosantilli/feathers-chat/tree/sequelize-pg

One major step was to \x[port-software-portability] to \x[postgresql] as shown at \x[feathers-chat-postgresql].

Bibliography:
* https://stackoverflow.com/questions/47270219/deploy-feathersjs-app-on-heroku/66723974#66723974
* https://github.com/feathersjs/feathers/issues/1647
* https://medium.com/@mattchewone/feathersjs-deployment-gitlab-ci-cd-heroku-4ea9e34ab129

There's also a `heroku` branch at: https://github.com/feathersjs/feathers-chat/tree/heroku[], but it also seems to use NeDB? So you can have a filesystem in Heroku? Doesn't seem so: https://stackoverflow.com/questions/42775418/heroku-local-persistent-storage

= FeathersJS signup email verification
{c}
{parent=feathersjs}

* https://github.com/feathersjs/feathers/issues/1514
* https://blog.feathersjs.com/how-to-setup-email-verification-in-feathersjs-72ce9882e744

= Meteor
{c}
{disambiguate=web framework}
{parent=node-js-web-framework}

https://github.com/meteor/meteor

The idea is cool. It really unifies front-and back end.

But \x[ciro-santilli] feels the approach proposed by \x[feathersjs] of being a glue between bigger third-party \x[front-end-web-framework]{p} like \x[react] and backend (\x[object-relational-mapping]) is more promising and flexible.

= Nest.js
{c}
{parent=node-js-web-framework}

* https://github.com/lujakob/nestjs-realworld-example-app
* \x[object-relational-mapping]: https://docs.nestjs.com/techniques/database
* \x[front-end-web-framework]: looks weak:
  * https://github.com/yemiwebby/nest-react-project

= lujakob/nestjs-realworld-example-app
{c}
{parent=nest-js}

\x[nest-js] entry for \x[gothinkster-realworld].

Didn't manage to get it to work perfectly on \x[ubuntu] 20.10: https://github.com/lujakob/nestjs-realworld-example-app/issues/57

= lujakob/nestjs-realworld-example-app SQLite port
{parent=lujakob-nestjs-realworld-example-app}

Tried a quick port to \x[sqlite] to get rid of annoying local databases for development, but failed, at c1c2cc4e448b279ff083272df1ac50d20c3304fa
``
npm install sqlite3 --save-dev
``
and
``
{
  "type": "sqlite",
  "database": "db.sqlite3",
  "entities": ["src/**/**.entity{.ts,.js}"],
  "synchronize": true
}
``
then:
``
npm start
``
fails with:
``
DataTypeNotSupportedError: Data type "timestamp" in "ArticleEntity.created" is not supported by "sqlite" database.
``
Attempt to hack it:
``
--- a/src/article/article.entity.ts
+++ b/src/article/article.entity.ts
@@ -20,10 +20,10 @@ export class ArticleEntity {
   @Column({default: ''})
   body: string;

-  @Column({ type: 'timestamp', default: () => "CURRENT_TIMESTAMP"})
+  @Column({ default: () => "CURRENT_TIMESTAMP"})
   created: Date;

-  @Column({ type: 'timestamp', default: () => "CURRENT_TIMESTAMP"})
+  @Column({ default: () => "CURRENT_TIMESTAMP"})
   updated: Date;
``
and after that it seems to run.

I can signup and login, terrible error reporting as usual, make sure to use long enough usernames/passwords.

However, article creation fails with:
``
Unhandled Rejection (TypeError): Cannot read property 'slug' of undefined
``

= Sails.js
{c}
{parent=node-js-web-framework}

https://github.com/balderdashy/sails

\x[front-end-web-framework] integration: no native one:
* \x[react]:
  * https://github.com/markmur/sails-react-webpack
  * https://github.com/sepineda/sails-react-webpack Last updated as of 2021: 2018
  * https://stackoverflow.com/questions/28331032/sails-js-with-react-js-how-to-do-it-correctly
* \x[vue-js]:
  * https://github.com/mikermcneil/ration Issue tracker disabled...
    * live at: https://ration.io/
    * selling a course at: https://courses.platzi.com/courses/sails-js/
  * https://platzi.com/cursos/javascript-pro/ non-free and in Spanish pointed to from official README...
  * \x[nuxt-js]:
    * https://github.com/AngelMunoz/sails-nuxt

TODO \x[server-side-rendering] anyone??
* https://stackoverflow.com/questions/32412590/how-to-use-react-js-to-render-server-side-template-on-sails-js
* https://stackoverflow.com/questions/54217147/ssr-for-react-redux-application-with-sails
* https://gist.github.com/duffpod/746a660bcddfd986878c92dde1a04f06
* https://www.reddit.com/r/reactjs/comments/7saoqm/sailsjs_or_adonisjs_designed_for_server_side/

= NVM
{c}
{parent=node-js}

https://github.com/nvm-sh/nvm

The best way to install Node.js:
* https://askubuntu.com/questions/49390/how-do-i-install-the-latest-version-of-node-js/425888#425888
* https://askubuntu.com/questions/594656/how-to-install-the-latest-versions-of-nodejs-and-npm/971612#971612
* https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version/1115255#1115255

= TypeScript
{c}
{parent=javascript}
{wiki}

TypeScript is good. It does find errors in your \x[javascript]. It is a form of "turd polishing". But \x[ciro-santilli] would rather have a polished turd than a non-polished one.

The reason TypeScript became popular is due to the universality of \x[asset-bundler]{p}.

Once you are already using an asset bundler, changing the `.js` extension into `.ts` to get a less shitty experince is an easy choice.

Since TypeScript is not the default form of the language however, it inevitably happens that you need to add external types for a gazillion projects that are using raw JavaScript. And so we have: https://github.com/DefinitelyTyped/DefinitelyTyped Not sure if this is beautiful, or frightening.

= Universal Module Definition
{c}
{parent=javascript}
{title2=UMD}
{wiki}

Since \x[javascript] devs are uncapable of defining an unified import standard, this design pattern emerged where you just check every magic global one by one. Here's a demo where a Js library works on both the \x[browser] and from \x[node-js]:
* \a[web-cheat/umd_my_lib.js]: the library
* \a[web-cheat/umd.js]: \x[node-js] user
* \a[web-cheat/umd.html]: \x[browser] user

= Perl
{c}
{disambiguate=programming language}
{parent=list-of-programming-languages}
{wiki}

TODO why did \x[python] kill it? They are very similar and existed at similar times, and possibly Perl was more popular early on.
* https://www.quora.com/Why-is-Perl-no-longer-a-popular-programming-language on \x[quora]

Perl likely killed \x[tcl].

= Python
{c}
{disambiguate=programming language}
{parent=list-of-programming-languages}
{wiki}

= Python
{c}
{synonym}

\x[ciro-santilli-s-wife] was studying a bit of basic Python for some job interviews, when she noticed:
\Q[Wow, `in` is so powerful! You can do `for x in list`, `for x in dict` and `if x in dict` all with that single word!]
Damn right, girl, damn right.

= pip
{disambiguate=package manager}
{parent=python-programming-language}
{wiki}

How many stupid bugs. How many stupid bugs do we need to face???
* this fucking train-wreck cannot come up with a unified documented way of specifying dependencies:
  * https://stackoverflow.com/questions/14399534/reference-requirements-txt-for-the-install-requires-kwarg-in-setuptools-setup-py
  * https://stackoverflow.com/questions/26900328/install-dependencies-from-setup-py
  * https://stackoverflow.com/questions/30797124/how-to-use-setup-py-to-install-dependencies-only/63743115
  * https://stackoverflow.com/questions/6947988/when-to-use-pip-requirements-file-versus-install-requires-in-setup-py
  So basically `requirements.txt` is the `package-lock.json`. But how to generate it cleanly? You would need to create a virtualenv?

= Python Package Index
{c}
{parent=python-programming-language}
{wiki}

= PyPI
{c}
{synonym}

https://pypi.org

The best package ever is: https://pypi.org/project/china-dictatorship/ see also: https://cirosantilli.com/china-dictatorship/mirrors

= Jupyter Notebook
{c}
{parent=python-programming-language}
{wiki=Project_Jupyter#Jupyter_Notebook}

A waste of time. Output in my source files https://stackoverflow.com/questions/28908319/how-to-clear-an-ipython-notebooks-output-in-all-cells-from-the-linux-terminal/47774393#47774393[pollutes git] and prevents me from editing it in \x[vim]. Just let me run the freacking code and render images as standalone PNGs which I can include from Markdown.

= Python virtualization
{parent=python-programming-language}

= pyenv
{c}
{parent=python-virtualization}

= virtualenv
{parent=python-virtualization}

``
python -m pip install --user virtualenv
virtualenv -p python3.8 .venv
. .venv/bin/activate
``

= Python library
{c}
{parent=python-programming-language}

= NumPy
{c}
{parent=python-library}
{wiki}

The people who work on this will \x[good][go straight to heaven], no questions asked.

= Python web framework
{c}
{parent=python-library}

= Django
{c}
{disambiguate=web-framework}
{parent=python-web-framework}
{wiki}

\x[react] setups:
* https://stackoverflow.com/questions/41867055/how-to-get-django-and-reactjs-to-work-together
* https://www.fullstackpython.com/react.html

= gothinkster/django-realworld-example-app
{parent=django-web-framework}

As of 2021, last updated 2016, and python 3.5 appears to be mandatory or else:
``
RuntimeError: __class__ not set defining 'AbstractBaseUser' as <class 'django.contrib.auth.base_user.AbstractBaseUser'>. Was __classcell__ propagated to type.__new__?
``
which apparently broke in 3.6: https://stackoverflow.com/questions/41343263/provide-classcell-example-for-python-3-6-metaclass and `pyenv` install fails on Ubuntu 20.10, so... fuck. Workarounds at:
* https://askubuntu.com/questions/1034475/the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib-error-when
* https://stackoverflow.com/questions/52873193/error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib-inst
but am I in the mood considering that the ancient Django version would require an immediate port anyways? Repo is at Django 1.0, while newest is now already Django 3. The Rails one is broken for the same reason. Fuck 2.

= Ruby
{disambiguate=programming language}
{parent=list-of-programming-languages}
{c}
{wiki}

= Ruby on Rails
{parent=ruby-programming-language}
{c}
{wiki}

The only reason why \x[ruby-programming-language] exists.

This web framework is pretty good as of 2020 compared to others, because it managed to gain a critical community size, and there's a lot of basic setup already done for you.

it is just big shame it wasn't written in \x[python] or even better, \x[node-js], because learning \x[ruby-programming-language] is completely useless for anything else. As of 2020 for example, most \x[node-js] web frameworks feel like crap compared to Rails, you just have to debug so much there.

Used in \x[gitlab], which is why \x[ciro-santilli] touched it.

= Ruby on Rails React integration
{c}
{parent=ruby-on-rails}

Integrations \x[react] integration:
* https://github.com/shakacode/react_on_rails[]: \x[webpack] and \x[server-side-rendering]
* https://github.com/reactjs/react-rails Official on the React side only. Demo app linked from package: https://github.com/BookOfGreg/react-rails-example-app and how it fails: https://github.com/BookOfGreg/react-rails-example-app/issues/30[]... The related projects section has some good links:
* \x[shakacode-react-on-rails]
* https://github.com/hyperstack-org/hyperstack \x[transpiles] Ruby to JavaScript + React. What could possibly go wrong? :-)

= shakacode/react_on_rails
{parent=ruby-on-rails-react-integration}

Uses Redux, while reactjs/react-rails appears to do that more manually

Lots of focus on \x[heroku] deployability, which is fantastic: https://shakacode.gitbooks.io/react-on-rails/content/docs/additional-reading/heroku-deployment.html

Live instance: https://www.reactrails.com/ with source at: https://github.com/shakacode/react-webpack-rails-tutorial Not the most advanced web-app (a \x[gothinkster-realworld]-level would be ideal). Also has clear dependency description, which is nice.

Trying at https://github.com/shakacode/react-webpack-rails-tutorial/tree/8e656f97d7a311bbe999ceceb9463b8479fef9e2 on \x[ubuntu] 20.10. Got some failures: https://github.com/shakacode/react-webpack-rails-tutorial/issues/488 Finally got a version of it working at: https://github.com/shakacode/react-webpack-rails-tutorial/issues/488#issuecomment-812506821

Oh, and the guy behind that project lives in \x[hawaii] (\x[ciro-santilli-s-ideal-city-to-live-in]), has an Asian-mixed son, and two \x[kinesis-advantage-2-keyboard]{p} as seen at https://twitter.com/railsonmaui/status/1377515748910755851[], \x[ciro-santilli] was jealous of him.

= Tcl
{c}
{parent=list-of-programming-languages}
{wiki}

One of the first big \x[interpreted-programming-language]{p} to go a bit further than \x[bash]' word replacement insanity.

To the modern viewer, it feels like a middle ground between \x[bash] and \x[python].

It was completely insane however, and it just died: \x[python] is much saner, and \x[bash], although totally insane still \x[code-golf][golfs] better, especially on the file manipulation context.

= Recreational programming
{parent=software}

= Code golf
{parent=recreational-programming}
{wiki}

= Search engine
{parent=software}
{wiki}

In other sections:
* \x[google]{child}

= Scientific computing
{parent=software}
{wiki}

= Computer algebra system
{parent=scientific-computing}
{wiki}

= SymPy
{parent=computer-algebra-system}
{wiki}

This is the dream \x[exam][cheating] software every student should know about.

It also has serious applications obviously. https://www.sympy.org/scipy-2017-codegen-tutorial/ mentions \x[code-generation] capabilities, which sounds super cool!

E.g., to find the \x[derivative] of the \x[natural-logarithm]:
``
from __future__ import division
from sympy import *
x = symbols('x')
diff(ln(x), x)
``
outputs:
``
1/x
``
Just read that. One over x. Beauty.

Let's do some more. Let's solve a simple \x[differential-equation]:
``
y''(t) - 2y'(t) + y(t) = sin(t)
``
Doing:
``
from sympy import *
x = symbols('x')
f, g = symbols('f g', cls=Function)
diffeq = Eq(f(x).diff(x, x) - 2*f(x).diff(x) + f(x), sin(x)**4)
print(dsolve(diffeq, f(x)))
``
outputs:
``
Eq(f(x), (C1 + C2*x)*exp(x) + cos(x)/2)
``
which means:
$$
f(x) = C_1 + C_2x e^x + cos(x)/2
$$
To be fair though, it can't do anything crazy, it likely just goes over known patterns that it has solvers for, e.g. if we change it to:
``
diffeq = Eq(f(x).diff(x, x)**2 + f(x), 0)
``
it just blows up:
``
NotImplementedError: solve: Cannot solve f(x) + Derivative(f(x), (x, 2))**2
``
Sad.

= Scientific visualization software
{parent=scientific-computing}

https://en.wikipedia.org/wiki/Scientific_visualization

\x[ciro-santilli][Ciro's] large dataset survey: \x[survey-of-open-source-interactive-plotting-software-with-a-10-million-point-scatter-plot-benchmark-by-ciro-santilli]{full}.

= Open source scientific computing consultancies
{parent=scientific-visualization-software}

Huge respect to this companies.

= Enthought
{c}
{parent=open-source-scientific-computing-consultancies}
{wiki}

= Kitware
{c}
{parent=open-source-scientific-computing-consultancies}
{wiki}

= Plotting software
{parent=scientific-visualization-software}

= Survey of open source interactive plotting software with a 10 million point scatter plot benchmark by Ciro Santilli
{c}
{parent=plotting-software}

https://stackoverflow.com/questions/5854515/large-plot-20-million-samples-gigabytes-of-data/55967461#55967461

By \x[ciro-santilli].

\Image[VisIt_zoom_in_10_million_straight_line_plot_with_some_marked_points.png]
{source=https://stackoverflow.com/questions/5854515/large-plot-20-million-samples-gigabytes-of-data/55967461#55967461}

= Matplotlib
{c}
{parent=plotting-software}
{wiki}

It does a huge percentage of what you want easily, and from \x[python][the language that you want to use].

Tends to be \x[ciro-santilli][Ciro]'s pick if \x[gnuplot] can't handle the use case, or if the project is really really serious.

Couldn't handle exploration of large datasets though: \x[survey-of-open-source-interactive-plotting-software-with-a-10-million-point-scatter-plot-benchmark-by-ciro-santilli]

Examples:
* \a[matplotlib/hello.py]
* \a[matplotlib/educational2d.py]
* \a[matplotlib/axis.py]
* \a[matplotlib/label.py]
* Line style
  * \a[matplotlib/line_points.py]
  * \a[matplotlib/tick.py]
  * \a[matplotlib/prop_cycle.py]
* Subplots
  * \a[matplotlib/subplots.py]
  * \a[matplotlib/subplots_add.py]
* \a[matplotlib/two_lines.py]
  * \a[matplotlib/plot_matrix.py]
  * \a[matplotlib/plot_matrix_x.py]
  * \a[matplotlib/legend_outside.py]
* Data from files
  * \a[matplotlib/plotfile.py]
* Specialized
  * \a[matplotlib/bloch_sphere_walk.py]
  * \a[matplotlib/bloch_sphere.py]

= gnuplot
{c}
{parent=plotting-software}
{wiki=Gnuplot}

Tends to be \x[ciro-santilli]'s first attempt for quick and dirty graphing: https://github.com/cirosantilli/gnuplot-cheat[].

\x[domain-specific-language]. When it get the jobs done, it is in 3 lines and it feels great.

When it doesn't, you Google for an hours, and then you give up in frustration, and fall back to \x[matplotlib].

Couldn't handle exploration of large datasets though: \x[survey-of-open-source-interactive-plotting-software-with-a-10-million-point-scatter-plot-benchmark-by-ciro-santilli]

= Software bug
{parent=software}
{wiki}

= Glitch
{parent=software-bug}
{wiki}

A glitch is more precisely a \x[software-bug] that is hard to reproduce. But it has also been used to mean a software bug that is not very serious.

= Debugging
{parent=software-bug}
{wiki}

Related:

* \x[keep-debug-notes]{child}

= Bisection
{disambiguate=software engineering}
{parent=debugging}

One of the Holiest age old debugging techniques!

\x[git] has some helpers to help you achieve bisection Nirvana: https://stackoverflow.com/questions/4713088/how-to-use-git-bisect/22592593#22592593

Obviously not restricted to software engineering alone, and used in all areas of engineering, e.g. \x[video-air-tight-vs-vacuum-tight-by-alphaphoenix-2020] uses it in \x[vacuum-engineering].

The cool thing about bisection is that it is a brainless process: unlike when using a \x[debugger], you don't have to understand anything about the system, and it incredibly narrows down the problem cause for you. Not having to think is great!

= Debugger
{parent=debugging}
{wiki}

= GNU Debugger
{c}
{parent=debugger}

= GDB
{c}
{synonym}
{title2}

Just add \x[gdb-dashboard], and you're good to go.

= Reverse debugging
{parent=gnu-debugger}

Nirvana!!!

The best open source implementation as of 2020 seems to be: \x[mozilla-rr].

* https://stackoverflow.com/questions/1206872/go-to-previous-line-in-gdb/46996380#46996380
* https://stackoverflow.com/questions/1470434/how-does-reverse-debugging-work/53063242#53063242
* https://stackoverflow.com/questions/3649468/setting-breakpoint-in-gdb-where-the-function-returns/46116927#46116927
* https://stackoverflow.com/questions/27770896/how-to-debug-a-rare-deadlock/50073993#50073993
* https://stackoverflow.com/questions/522619/how-to-do-bidirectional-or-reverse-debugging-of-programs/50074106#50074106 link only, marked as duplicate of go to previous line
* https://softwareengineering.stackexchange.com/questions/181527/why-is-reverse-debugging-rarely-used

= Mozilla rr
{parent=reverse-debugging}
{c}

https://github.com/mozilla/rr

= GDB Dashboard
{c}
{parent=gnu-debugger}

https://github.com/cyrus-and/gdb-dashboard

\x[gdb] Nirvana?

https://stackoverflow.com/questions/10115540/gdb-split-view-with-code/51301717#51301717

\Image[https://web.archive.org/web/20200504130959if_/https://i.stack.imgur.com/mHC8f.png]
{height=600}
{title=Screenshot of terminal running GDB Dashboard.}
{source=https://github.com/cyrus-and/gdb-dashboard/tree/2d31a3b391e5d0e032b791e1fb7172338b02cecb}

= Minimal working example
{parent=software-bug}
{wiki}

The \x[musical-study] of \x[software-engineering].

\x[ciro-santilli] is obsessed by those in order to learn any new concept, not just for bug reporting.

This includes to learn more theoretical subjects like \x[physics] and \x[mathematics].

= Software engineering
{parent=software}
{wiki}

= Ciro Santilli's software engineering wisdom
{c}
{parent=software-engineering}

= Excessive encapsulation is the root of much evil
{parent=ciro-santilli-s-software-engineering-wisdom}

Some anecdotes.

\x[ciro-santilli] never splits up functions unless there is more than one calling point. If you split early, the chances that the interface will be wrong are huge, and a much larger refactoring follows.

If you just want to separate variables, just use a scope e.g.:

``
int cross_block_var;

// First step.
{
    int myvar;
}

// Second step.
{
    int myvar;
}
``

Ciro has seen and had to deal with in his lifetime with two projects that had like 3 to 10 git separate Git repositories, all created and maintained by the same small group of developers of the same organization, even though one could not build without the other. Keeping everything in sync was Hell! Why not just have three directories inside a single repository with a single source of truth?

Another important case: \x[linux][Linux] should have at least a C standard library, init system, and shell in-tree, like \x[bsd-operating-system]{p}, as mentioned at: \x[linux][Linux]{full}.

= The development cycle time is your God
{parent=ciro-santilli-s-software-engineering-wisdom}

A slow development test cycle will kill your software.

New developers won't want to learn your project, because they would rather shoot themselves.

This means that build time, and the time to run tests, must be short.

5 seconds to rebuild is the maximum upper limit.

You also have to spend some time profiling execution and build from scratch times.

A slow build from scratch will mean that your CI costs a lot, money that could be invested in a new developer!

It also means that people won't bother to reproduce bugs on given commits, or \x[bisection-software-engineering][bisect stuff].

One anecdote comes to mind. \x[ciro-santilli] was trying to debug something, and more experience colleague came over.

Ciro was running one command, wait 5 seconds, run a second command, wait 5 seconds, run a third command:
``
cmd1
# wait
cmd2
# wait
cmd3
``

The first thing the colleague said: join those three commands into one:
``
cmd1;cmd2;cmd3
``

And so, \x[the-correlation-between-software-engineers-and-buddhism][Ciro was enlightened].

= It is impossible to predict how long it will take to do something
{parent=ciro-santilli-s-software-engineering-wisdom}

The trivial takes a few hours.

The easy takes a week.

And what seemed hard takes a few hours.

As "deadlines" approach, feature sets get cut down, then there are delays, and finally a feasible feature set is delivered some time after the deadline.

The only deadlines that can be met are those of tasks which have already been done but not announced.

= Office space design and remote work
{parent=ciro-santilli-s-software-engineering-wisdom}

Working remotely is hard if you don't already highly master the software and enterprise systems used.

Also you don't feel people's love as strongly, and usefulness is built on love, see also \x[steve-jobs]'s Pixar office space design philosophy.

But please, give workers a small silent office so that we can concentrate instead of a silly open space, and create an internal social network so people can see what others are doing.

Remote working is much better if the majority of the team also does it, otherwise you will get excluded. Maybe after VR...

= Keep debug notes
{parent=ciro-santilli-s-software-engineering-wisdom}

When \x[debugging] complex software, make sure to keep notes of every interesting find you make in a note file, as you extract it from the \x[integrated-development-environment] or \x[debugger].

Especially if your \x[ciro-santilli-s-bad-old-event-memory][memory sucks like Ciro's].

This is incredibly helpful in fully understanding and then solving complex bugs.

= "Hello, World!" program
{parent=software-engineering}
{wiki}

= Hello world
{synonym}

The most important \x[program] ever written!!!

Other programs that can be considered "hello worlds" in different contexts:

* \x[web-development]
  * \x[a-blog-in-every-web-framework]
* \x[video-game]
  * Doom is the hello world \x[shooter-game]

= Time to Hello World
{parent=hello-world-program}

= Software engineer
{parent=software-engineering}
{wiki}

= Programmer
{synonym}

Poet warriors monkeys? Or Code peasants (https://baike.baidu.com/item/码农/10262742[码农]) according to the Chinese.

\x[ciro-santilli] claims to be one of them.

Much like a pianist plays his piano, a software engineer plays his \x[computer].

= The correlation between software engineers and Buddhism
{parent=software-engineer}

\x[ciro-santilli] believes that there is a positive correlation between being a \x[software-engineer][software engineer] and liking \x[buddhist]-like things.

Maybe it is linked to minimalism and https://en.wikipedia.org/wiki/Don%27t_repeat_yourself[DRY], which software engineers value so greatly.

Even Ciro had to try an unoriginal Buddhist joke intro in https://stackoverflow.com/questions/572897/how-does-javascript-prototype-work/23877420#23877420[one of this Stack Overflow answers].

Ciro also feels that his https://github.com/cirosantilli/linux-kernel-module-cheat/tree/e1d0a2fafbb35c9e65c1a8a0b6d46df3e9161461/userland["minimal reproducible example" scientific language/concept learning method obsession] of breaking things into tiny sub-problems has a strong link with https://en.wikipedia.org/wiki/Kōan[koans].

Other programmers are equally obsessed by koans:
* http://www.catb.org/~esr/writings/unix-koans/ "The Unix Koans of Master Foo - Rootless Root (无根的根)" by the legendary https://en.wikipedia.org/wiki/Eric_S._Raymond[Eric Steven Raymond] is notable
* http://thecodelesscode.com/ "The Codeless Code" by anonymous Qi.
* http://canonical.org/~kragen/tao-of-programming.html
* https://wiki.c2.com/?MysticalProgrammingKoans
* http://rubykoans.com/[] even \x[evil] programming languages adopt them!

= List of software engineers
{parent=software-engineer}

= Aaron Swartz
{c}
{parent=list-of-software-engineers}
{wiki}

Aaron, \x[ciro-santilli] will complete \x[write-free-books-to-get-famous-website][your quest to make eduction free]. Just \x[legally] this time, with the and with the \x[creative-commons-license] you helped to create.

Ciro likes how \x[the-internet-s-own-boy-2014] explains how Aaron felt like high school was \x[bullshit], and that he could \x[autodidacticism][learn whatever he wanted from books], \x[write-free-books-to-get-famous-website/motivation][which is one of Ciro's key feelings].

It also mentions how he was a natural teacher from a very early age.

= Guerilla Open Access Manifesto by Aaron Swartz (2008)
{parent=aaron-swartz}
{wiki}

https://gist.github.com/briandoll/4522952

Hmmm, he does not know how to spell guerilla? \x[sic]? https://www.quora.com/What-is-the-correct-spelling-guerilla-or-guerrilla

Note to self: if you are going to commit a \x[crime], don't publish your plans online.

\x[ross-ulbricht]'s diaries come to mind.

That's how \x[russian] \x[shadow-library] maintainers do it, they know how to crime good old Russians. Maybe there is a good thing about having \x[dictatorship]{p} in the world that give zero fucks about \x[american] copyright laws. There will always be some random \x[russian] academic who will implement this and not go to jail. Maybe it's even \x[government][state] sponsored.

= The Internet's Own Boy (2014)
{parent=aaron-swartz}
{wiki}

= Dan Dascalescu
{c}
{parent=list-of-software-engineers}

His website is down as of 2020, shame: https://wiki.dandascalescu.com/essays/english-universal-language

= English as a universal language by Dan Dascalescu (2008)
{c}
{parent=dan-dascalescu}

https://wiki.dandascalescu.com/essays/english-universal-language

https://web.archive.org/web/20200317221752/https://wiki.dandascalescu.com/essays/english-universal-language

\x[dan-dascalescu]'s version of \x[having-more-than-one-natural-language-is-bad-for-the-world].

= Donald Knuth
{c}
{parent=list-of-software-engineers}
{wiki}

= Knuth reward check
{c}
{parent=donald-knuth}
{wiki}

* https://tex.stackexchange.com/questions/110586/327-68-knuth-reward-check
* https://www.quora.com/What-is-it-like-to-receive-a-Knuth-reward-check
* https://www-cs-faculty.stanford.edu/~knuth/boss.html

= Eli Benderski
{c}
{parent=list-of-software-engineers}

Homepage: https://eli.thegreenplace.net/

Amazing systems programming tutorials. Whenever you Google a hard topic, his blog comes up.

Also has many great contributions on \x[stack-overflow]: https://stackoverflow.com/users/8206/eli-bendersky[]

As of 2016, Eli worked at \x[google] (https://dl.acm.org/citation.cfm?doid=2854038.2854041[reference]). TODO before that, I had found his earlier info previously but lost it.

Eli focuses mostly on compiler toolchains.

= Fabrice Bellard
{c}
{parent=list-of-software-engineers}
{wiki}

Creator of \x[qemu] and \x[ffmpeg], both of which \x[ciro-santilli] deeply respects. And a bunch other random stuff.

What is shocking about Fabrice this is that both are insanely important software that \x[ciro-santilli] really likes, and both seem to be completely unrelated subjects!

\x[google] made billions on top of this dude:

* \x[ffmpeg-is-the-backend-of-youtube]
* \x[qemu] is the default emulator for https://en.wikipedia.org/wiki/Android_Studio[Android Studio] as of 2019, which \x[android] developers use by default under the hood to develop Android Apps on their desktop without the need for a real device.

At last but not least, Fabrice also studied in the same school that Ciro studied in France, \x[ecole-polytechnique].

It is a shame that he keeps such a low profile, there are no videos of him on the web, and he https://smartbear.com/blog/test-and-monitor/fabrice-bellard-portrait-of-a-super-productive-pro/[declines interviews].

Another surprising fact is that Fabrice has not worked for the "Big Tech Companies" as far as can be publicly seen, but rather mostly on smaller companies that he co-founded: https://www.quora.com/Computer-Programmers/Computer-Programmers-Where-is-Fabrice-Bellard-employed

= Gwern Branwen
{c}
{parent=software-engineer}

= gwern.net
{c}
{parent=gwern-branwen}

https://www.gwern.net/

= Richard Stallman
{c}
{parent=software-engineer}
{wiki}

TODO find the best source for the amazing "I have done your mother" quote.

= Linus Torvalds
{c}
{parent=software-engineer}
{wiki}

= Tim O'Reilly
{c}
{parent=software-engineer}
{wiki}

= Computer programming
{parent=software-engineering}
{wiki}

= Programming
{synonym}

Programming is hard. To \x[ciro-santilli], it's almost masochistic.

What makes Ciro especially mad when programming is not the hard things.

It is the things that should be easy, but aren't, and which take up a lot of your programming time.

Especially when you are already a few levels of "simple problems" down from your original goal, and another one of them shows up.

This is basically the cause of \x[hofstadter-s-law].

But of course, it is because it is hard that it feels amazing when you achieve your goal.

Putting a complex and useful program together is like composing a symphony, or reaching the summit of a hard \x[rock-climbing] proble.

= Hofstadter's law
{c}
{parent=software-engineering}

= Software portability
{parent=software}
{wiki}

= Porting
{parent=software-portability}
{wiki}

= Port
{disambiguate=software-portability}
{synonym}

= Source code
{parent=software}
{wiki}

= The best code is no code at all
{parent=source-code}

Some \x[blog]{p}:
* https://blog.codinghorror.com/the-best-code-is-no-code-at-all/ The Best Code is No Code At All (2007)
* http://www.skrenta.com/2007/05/code_is_our_enemy.html Code is our enemy (2007)

Also resonates with \x[backward-design].

= Use The Source Luke
{parent=source-code}

https://wiki.c2.com/?UseTheSourceLuke

= Systems programming
{parent=source-code}
{wiki}

\x[ciro-santilli]'s definition: https://softwareengineering.stackexchange.com/questions/151610/what-exactly-is-system-programming/399625#399625

Ciro's tutorial: \x[linux-kernel-module-cheat].

Ciro's word of caution for 2019 aspiring system programmers: https://cirosantilli.com/linux-kernel-module-cheat/#should-you-waste-your-life-with-systems-programming[Should you waste your life with systems programming?]

= Operating system
{parent=systems-programming}
{title2=OS}
{wiki}

Magic software that allows you to write a single program that runs on a wide range of hardware.

= Driver
{disambiguate=software}
{parent=operating-system}
{wiki}

= UNIX
{c}
{parent=operating-system}
{wiki}

= Linux
{c}
{parent=operating-system}
{wiki}

It ain't perfect, but it's decent enough.

From a technical point of view, it can do anything that \x[microsoft-windows] can. Except being forcefully installed on every non-\x[macos] 2019 computer you can buy.

\x[ciro-santilli][Ciro]'s conversion to Linux happened around 2012, and was a central part of his \x[write-free-books-to-get-famous-website/motivation][open source Enlightenment], since it fundamentally enables the discovery and contribution to \x[open-source-software]. Because what awesome open source person would waste time porting their amazing projects to closed source OSes?

Ciro's modest nature can be seen as he likes to compare this event https://en.wikipedia.org/wiki/Great_Renunciation[Buddha's Great Renunciation].

Linux should track glibc and \x[posix-command-line-utility]{p} in-tree like \x[bsd-operating-system], otherwise people have \x[linux-kernel-module-cheat][no way to get the thing running in the first place without blobs or large out-of-tree scripts]! https://blog.farhan.codes/2018/06/25/linux-maintains-bugs-the-real-reason-ifconfig-on-linux-is-deprecated/[Another enlightened soul] who agrees.

Particularly interesting in the history of Linux is how it won out over the open competitors that were coming up in the time: https://en.wikipedia.org/wiki/MINIX[MINIX] (see https://ponderwall.com/index.php/2019/04/02/linux-tanenbaum-newsgroup-linus-torvalds/[the chat]) and \x[bsd-operating-system] that got https://en.wikipedia.org/wiki/UNIX_System_Laboratories,_Inc._v._Berkeley_Software_Design,_Inc.[legally bogged down] at the critical growth moment.

\Image[https://web.archive.org/web/20210129024945if_/https://imgs.xkcd.com/comics/supported_features.png]
{title=\x[xkcd] 619: Supported Features.}
{description=This perfectly illustrates Linux development. First features that matter. Then useless features.}
{source=https://xkcd.com/619/}

\Video[http://youtube.com/watch?v=njos57IJf-0]
{title=\x[bill-gates] vs \x[steve-jobs] by \x[epic-rap-battles-of-history] (2012)}
{description=Just stop whatever you are doing, and watch this right now. "I'm on Linux, bitch, I thought you GNU".}

= Tux
{c}
{disambiguate=mascot}
{parent=linux}
{wiki}

= Linux kernel
{parent=linux}
{c}
{wiki}

\x[ciro-santilli] has a tutorial at \x[linux-kernel-module-cheat].

= Linux insides
{parent=linux-kernel}
{c}

https://github.com/0xAX/linux-insides

Documents the \x[linux-kernel]. Somewhat of a competitor to \x[linux-kernel-module-cheat], but more wordy and less automated.

= Linux distribution
{c}
{parent=linux}
{wiki}

= Distro
{synonym}

= Linux distribution buildable from source
{parent=linux-distribution}

As of 2020, no one knows how to build the major desktop distros fully from source into the ISO, and especially so in a reproducible build way. Everything is done in build servers somewhere with complicated layers of prebuilds. It's crap.

See also: https://cirosantilli.com/linux-kernel-module-cheat/#linux-distro-choice

Yes:
* \x[buildroot]{child}
* \x[nixos]{child}

No:
* \x[ubuntu]: https://askubuntu.com/questions/82302/how-to-compile-ubuntu-from-source-code source: https://quoteinvestigator.com/2010/07/08/laws-sausages/[sausage factory]

= List of Linux distributions
{c}
{parent=linux}
{wiki}

= Android
{c}
{disambiguate=operating system}
{parent=list-of-linux-distributions}

= Android
{synonym}

* the best full featured free OS we have today, since POSIX gave up short of any UI specification, and Chrome OS is not there yet
* usable and likely efficient \x[java] \x[api] for apps if https://en.wikipedia.org/wiki/Google_v._Oracle_America[Oracle doesn't manage to destroy it with its lawsuit]

However, many, many, many terrible horrors come with it:
* it hasn't made the move to desktop for too many years. It could destroy \x[microsoft-windows] and replace it with open source, but they just won't budge towards an unified mobile/desktop setup.
* vendors litter it with uninstallable bloatware that should be \x[illegal]. \x[european-union] to the rescue!!! https://www.cnbc.com/2020/12/15/digital-markets-act-eus-new-rules-on-big-tech.html
* vendors lock down devices so it is very hard to get sudo, let alone to modify their images!
* there isn't enough hardware standardization for open source distros to thrive like on desktop
* code drops mean that "master" is useless and trying to contribute from outside vendors' closed walls is a waste of time: https://stackoverflow.com/questions/1809774/how-to-compile-the-android-aosp-kernel-and-test-it-with-the-android-emulator/48310014#48310014
* if you ever go below the Java API, e.g. to \x[c-plus-plus] or AOSP build, everything is horrendous and https://unix.stackexchange.com/questions/122787/how-to-compile-extra-files-into-the-root-directory-of-an-android-rom[undocumented]
* \x[google] doesn't care about the CLI, even the \x[hello-world] requires creating infinite out-of-control boilerplate from a \x[gui]: https://stackoverflow.com/questions/20801042/how-to-create-android-project-with-gradle-from-command-line/46994747#46994747
* the boot is uber bloated and takes forever in cycle simulators

= Transfer Android 11 camera videos to Ubuntu 20.10
{c}
{parent=android-operating-system}

https://android.stackexchange.com/questions/66385/how-to-transfer-files-from-an-android-phone-to-a-ubuntu-pc-by-using-a-usb-cable/194107#194107

The video folder is `DCIM/Camera`.

= F-Droid
{c}
{parent=android-operating-system}
{wiki}

= Arch Linux
{c}
{parent=list-of-linux-distributions}
{wiki}

Respect. Big respect. Those people are hardcore from scratch hackers, and their wiki is amazing: https://wiki.archlinux.org/

It's just that \x[buildroot] is more hardcore ;-)

But can you build the ISO full from source: \x[linux-distribution-buildable-from-source]

= Buildroot
{c}
{parent=list-of-linux-distributions}
{wiki}

The basis for \x[linux-kernel-module-cheat].

Buildroot is \x[good].

= BusyBox
{c}
{parent=buildroot}
{wiki}

= NixOS
{c}
{parent=list-of-linux-distributions}
{wiki}

= Ubuntu
{c}
{parent=list-of-linux-distributions}
{wiki}

\x[ciro-santilli]'s Linux distro of choice as of 2019.

It ain't perfect, but it's decent enough.

The greatest advantage of it being that it has the likely largest desktop user base, and therefore the highest likelihood that your problems are solved on https://askubuntu.com/users/52975[Ask Ubuntu], and goes together with Ciro's philosophy that \x[having-more-than-one-natural-language-is-bad-for-the-world]["people should do everything in the same way to factor stuff out"], especially the \x[open-source-software][open source losers].

Ciro considers that the killer flaw of Ubuntu, and most desktop distros of 2020, is that no one under the Sun knows how to build them fully from source: \x[linux-distribution-buildable-from-source]. This is why Ciro based the \x[linux-kernel-module-cheat] on \x[buildroot], see also: \x[linux-distribution-buildable-from-source].

= BSD Operating System
{c}
{parent=operating-system}

https://en.wikipedia.org/wiki/List_of_BSD_operating_systems

\x[legal]{c} issues stalled them at the turning point of the \x[internet], and \x[linux] won. Can't change \x[history].

Did \x[apple-inc] just fork it and made Mac OS X without giving anything back?

= FreeBSD
{c}
{parent=bsd-operating-system}
{wiki}

= Microsoft
{parent=operating-system}
{c}

= Microsoft Windows
{parent=microsoft}
{c}
{wiki}

A monopolistic operating system that only exists in the 2010's because of the \x[ibm]-linked historical lock-in and constant useless changes of the Microsoft Word document format to prevent cross operability.

It offers no technical advantages over free \x[linux] distros in the late 2010's, and it is barely impossible to buy a non-Mac computer without paying for it, which should be \x[illegal]. \x[european-union], time to use your \x[europe-cookie-law][regulatory powers].

The following anecdote illustrates Windows' pervasiveness. \x[ciro-santilli] was once tutoring a high school student in Brazil, and decided to try and get her into programming. When the "Windows is not free" subject came up, the high school student was shocked: "I paid 100 dollars for this?". She never even knew it was there. To her, it was "just a computer".

Laws should really be passed forcing OEMs to allow you to not buy Microsoft Windows when buying a computer, \x[europe-cookie-law][European Union], why have you failed me in 2016??? https://en.wikipedia.org/wiki/Bundling_of_Microsoft_Windows

http://blog.zorinaq.com/i-contribute-to-the-windows-kernel-we-are-slower-than-other-oper/ I Contribute to the Windows Kernel. We Are Slower Than Other Operating Systems. Here Is Why. by Marc Bevand (2013) has some interesting remarks:
\Q[There's also little incentive to create changes in the first place. On linux-kernel, if you improve the performance of directory traversal by a consistent 5%, you're praised and thanked. Here, if you do that and you're not on the object manager team, then even if you do get your code past the Ob owners and into the tree, your own management doesn't care. Yes, making a massive improvement will get you noticed by senior people and could be a boon for your career, but the improvement has to be very large to attract that kind of attention.]

= DOS
{c}
{parent=microsoft-windows}
{wiki}

= Bill Gates
{parent=microsoft}
{c}
{wiki}

The enemy?

You must watch this: \x[video-bill-gates-vs-steve-jobs-by-epic-rap-battles-of-history-2012].

It does not matter how many trillions you donate to charity, Bill. If you want to prove your point, make MS Word free and open source and port it to Linux. And then Window implements \x[posix]-compatible APIs and then deprecate non-POSIX APIs.

= POSIX
{c}
{parent=operating-system}
{wiki}

The real explanation: https://stackoverflow.com/questions/1780599/what-is-the-meaning-of-posix/31865755#31865755

= Environment variable
{parent=posix}
{wiki}

= GNU Core Utils
{c}
{parent=posix}
{wiki}

https://pubs.opengroup.org/onlinepubs/9699919799/utilities/contents.html

= Non-POSIX GNU Core Utils command line utilities
{parent=gnu-core-utils}

= shred
{disambiguate=UNIX}
{parent=non-posix-gnu-core-utils-command-line-utilities}
{wiki}

= Non-POSIX command line utility
{parent=posix}

* \x[non-posix-gnu-core-utils-command-line-utilities]{child}

= sudo
{c}
{parent=non-posix-command-line-utility}
{wiki}

Availability: https://unix.stackexchange.com/questions/48522/how-universal-is-sudo

https://xkcd.com/149/

= POSIX command line utility
{c}
{parent=posix}

= `wc`
{c}
{disambiguate=unix}
{parent=posix}

= Standard streams
{parent=posix}
{wiki}

= Standard output
{parent=standard-streams}

= stdout
{synonym}

= TempleOS
{c}
{parent=operating-system}
{wiki}

The OS that the \x[god]{p} ordered be made.

One is reminded of https://ulillillia.fandom.com/wiki/Ulillillia[Ulillillia], see also: https://www.youtube.com/watch?v=9-79yOZ13qg The Story of Ulillillia by Atrocity Guide (2019)

We are \x[autism][all somewhere in the spectrum].

= Executable file format
{parent=systems-programming}

* https://en.wikipedia.org/wiki/Executable
* https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats
* https://en.wikipedia.org/wiki/Object_file

= Executable and Linkable Format
{parent=executable-file-format}
{title2=ELF}
{wiki}

For a quick and dirty introduction to the format, see: \x[elf-hello-world].

\Include[elf-hello-world]

= Virtualization
{parent=systems-programming}
{wiki}

= Docker
{disambiguate=software}
{parent=virtualization}
{wiki}

= Emulator
{parent=virtualization}
{wiki}

= Emulate
{synonym}

One of the things \x[ciro-santilli] really likes, see: \x[linux-kernel-module-cheat]

If \x[computational-physics] simulates physics, emulators simulates \x[computer]{p}.

= QEMU
{c}
{parent=emulator}
{wiki}

https://github.com/cirosantilli/linux-kernel-module-cheat/tree/9afe5355e90bbb6b6c636f871b6eb461a957b0ea#introduction-to-qemu

The leading open source cross architecture and KVM emulator of the 2010's.

Great way to understand how operating systems work, which \x[ciro-santilli] used extensively in his \x[linux-kernel-module-cheat].

\x[ciro-santilli] has some good related articles listed under: \x[articles].

= Systems programming software engineer
{parent=systems-programming}

= The most awesome systems programming software engineers
{parent=systems-programming-software-engineer}

* \x[eli-benderski]{child}
* \x[fabrice-bellard]{child}
* \x[linus-torvalds]{child}

Other notable people that are likely also awesome but Ciro has less familiarity with their contributions:
* https://en.wikipedia.org/wiki/D._Richard_Hipp[Dwayne Richard Hipp] from \x[sqlite]
* https://en.wikipedia.org/wiki/Daniel_Stenberg[Daniel Stenberg] from cURL
* Michael Niedermayer also from \x[ffmpeg]. http://ikaruga.co.uk/~snacky/mn.html highlights his brutal directness and efficiency, and sometimes sense of humour

= Terminal emulator
{parent=software}
{wiki}

Terminals don't really matter. Just use \x[tmux].

= Yakuake
{parent=terminal-emulator}

https://github.com/KDE/yakuake

= Terminal multiplexer
{parent=terminal-emulator}
{wiki}

= tmux
{c}
{parent=terminal-multiplexer}
{wiki}

https://github.com/tmux/tmux

If session autosave was finally mainlined, this would be Nirvana.

= Version control
{parent=software}
{wiki}

= Concurrent Versions System
{c}
{parent=version-control}
{title2=CSV}
{wiki}

It is said, that once upon a time, programmers used CSV and collaborated on \x[sourceforge], and that everyone was happy.

These days, are however, long gone in the mists of time as of 2020, and beyond \x[ciro-santilli]'s programming birth.

= Git
{c}
{parent=version-control}
{wiki}

= Git UI
{parent=git}

Perfect Git integration belongs in \x[integrated-development-environment]{p} :-)

= tig
{disambiguate=git UI}
{parent=git-ui}

https://github.com/jonas/tig

This is good. But it misses some key operations, so much so that makes Ciro not want to learn/use it daily.

= Pro Git book
{parent=git}
{c}

https://github.com/progit/progit2

= libgit2
{parent=git}
{c}

https://github.com/libgit2/libgit2

= libgit2/rugged
{parent=libgit2}
{c}

https://github.com/libgit2/rugged

= Git web interface
{parent=git}
{c}

= GitHub
{c}
{parent=git-web-interface}
{wiki}

This is where \x[ciro-santilli] stored his code since he started coding nonstop in 2013.

He \x[closed-source-is-less-bad-on-online-services][does not like the closed source aspect of it], but hey, there are more important things to worry about, the network effect is just too strong.

= GitHub users deleted by GitHub
{c}
{parent=github}

https://stackoverflow.com/questions/50720844/can-github-delete-your-account/66105692#66105692

= GitHub Pages
{c}
{parent=github}

https://pages.github.com/

The cheapest and most resilient way to publish \x[how-to-teach/text-is-cheaper-than-video][text content] humanity has achieved so far.

= GitHub Sponsors
{c}
{parent=github}

= Who are the developers that are making the most money through GitHub sponsors?
{c}
{parent=github-sponsors}

https://github.com/isaacs/github/issues/1824

= Octokat.js
{parent=github}
{c}

https://github.com/philschatz/octokat.js

= octokit.js
{parent=octokat-js}
{c}

https://github.com/philschatz/octokit.js

= GitLab
{c}
{parent=git-web-interface}
{wiki}

GitLab was very important to Ciro because he wanted to base https://github.com/booktree/booktree[Booktree] on it.

See also: \x[ciro-santilli-s-minor-projects].

= GitLab CI
{parent=gitlab}
{c}

https://github.com/gitlabhq/gitlab-ci

= GitLab cookbook
{parent=gitlab}
{c}

https://gitlab.com/gitlab-org/cookbook-gitlab

= SourceForge
{c}
{parent=git-web-interface}
{wiki}

RIP: https://www.quora.com/Is-SourceForge-still-relevant-to-open-source-projects/answer/Ciro-Santilli

= Web technology
{parent=software}

= Web cheat
{synonym}

Cheatsheet on \x[html], \x[cascading-style-sheets] and \x[javascript]{child}.

Old cheat on separate repo: \a[web/]{check=0}.

Now moving to either:
* separate files under: \a[web-cheat/] for the boring stuff
* subsections under this section for the more exciting stuff!

Index:
* \x[html]
  * \a[web-cheat/min.html]: minimal valid HTML document. It is insane however.
  * \a[web-cheat/min-sane.html]: minimal sane HTML document. There are smaller valid ones, but they are insane.
* \x[youtube] embeds
  * \a[web-cheat/youtube-embed.html]
  * \a[web-cheat/youtube-embed-lazy.html]: https://stackoverflow.com/questions/7154958/lazy-load-iframe-delay-src-http-call-with-jquery/62523325#62523325
* External libraries
  * Text editors
    * \a[web-cheat/monaco-editor.html]:
      * https://github.com/microsoft/monaco-editor
      * https://stackoverflow.com/questions/63179813/how-to-run-the-monaco-editor-from-a-cdn-like-cdnjs/63179814#63179814
  * Interactive HTML table sorting
    * \a[web-cheat/tablesort.html]: https://github.com/tristen/tablesort
    * \a[web-cheat/sortable.html]: https://github.com/HubSpot/sortable

= HTML
{c}
{parent=web-technology}
{wiki}

= HTML canvas
{c}
{parent=html}

https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API

Allows us to draw with JavaScript pixel by pixel! Great way to create \x[computational-physics] demos!

Here is an animation demo with some useful controls:
\JsCanvasDemo[[
new class extends CirodownCanvasDemo {
  init() {
    super.init('hello');
    this.pixel_size_input = this.addInputAfterEnable(
      'Pixel size',
      {
        'min': 1,
        'type': 'number',
        'value': 1,
      }
    );
  }
  draw() {
    var pixel_size = parseInt(this.pixel_size_input.value);
    for (var x = 0; x < this.width; x += pixel_size) {
      for (var y = 0; y < this.height; y += pixel_size) {
        var b = ((1.0 + Math.sin(this.time * Math.PI / 16)) / 2.0);
        this.ctx.fillStyle =
          'rgba(' +
          (x / this.width) * 255 + ',' +
          (y / this.height) * 255 + ',' +
          b * 255 +
          ',255)'
        ;
        this.ctx.fillRect(x, y, pixel_size, pixel_size);
      }
    }
  }
}
]]

Bibliography: https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations">https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations

= WebGL
{c}
{parent=html-canvas}

https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/By_example

\JsCanvasDemo[[
new class extends CirodownCanvasDemo {
  init() {
    super.init('webgl', {context_type: 'webgl'});
    this.ctx.viewport(0, 0, this.ctx.drawingBufferWidth, this.ctx.drawingBufferHeight);
    this.ctx.clearColor(0.0, 0.0, 0.0, 1.0);
    this.vertexShaderSource = `
#version 100
precision highp float;
attribute float position;
void main() {
  gl_Position = vec4(position, 0.0, 0.0, 1.0);
  gl_PointSize = 64.0;
}
`;

    this.fragmentShaderSource = `
#version 100
precision mediump float;
void main() {
  gl_FragColor = vec4(0.18, 0.0, 0.34, 1.0);
}
`;
    this.vertexShader = this.ctx.createShader(this.ctx.VERTEX_SHADER);
    this.ctx.shaderSource(this.vertexShader, this.vertexShaderSource);
    this.ctx.compileShader(this.vertexShader);
    this.fragmentShader = this.ctx.createShader(this.ctx.FRAGMENT_SHADER);
    this.ctx.shaderSource(this.fragmentShader, this.fragmentShaderSource);
    this.ctx.compileShader(this.fragmentShader);
    this.program = this.ctx.createProgram();
    this.ctx.attachShader(this.program, this.vertexShader);
    this.ctx.attachShader(this.program, this.fragmentShader);
    this.ctx.linkProgram(this.program);
    this.ctx.detachShader(this.program, this.vertexShader);
    this.ctx.detachShader(this.program, this.fragmentShader);
    this.ctx.deleteShader(this.vertexShader);
    this.ctx.deleteShader(this.fragmentShader);
    if (!this.ctx.getProgramParameter(this.program, this.ctx.LINK_STATUS)) {
      console.log('error ' + this.ctx.getProgramInfoLog(this.program));
      return;
    }
    this.ctx.enableVertexAttribArray(0);
    var buffer = this.ctx.createBuffer();
    this.ctx.bindBuffer(this.ctx.ARRAY_BUFFER, buffer);
    this.ctx.vertexAttribPointer(0, 1, this.ctx.FLOAT, false, 0, 0);
    this.ctx.useProgram(this.program);
  }
  draw() {
    this.ctx.clear(this.ctx.COLOR_BUFFER_BIT);
    this.ctx.bufferData(this.ctx.ARRAY_BUFFER, new Float32Array([Math.sin(this.time / 60.0)]), this.ctx.STATIC_DRAW);
    this.ctx.drawArrays(this.ctx.POINTS, 0, 1);
  }
}
]]

= Cascading Style Sheets
{c}
{parent=web-technology}
{wiki}

= CSS
{c}
{synonym}
{title2}

* \a[web-cheat/image-table-vertical-center.html]
* \a[web-cheat/viewport-height.html]: a div that is a tall as the viewport, and does not generate a toplevel scrollbar

= Sass
{disambiguate=stylesheet language}
{parent=cascading-style-sheets}
{wiki}

The more of their syntax gets merged into mainline \x[cascading-style-sheets], the better the world will be.

= Asset bundler
{parent=web-technology}

In order to make websites efficient and portable, a lot of \x[transpilation] is needed.

= webpack
{c}
{parent=asset-bundler}
{wiki}

Webpack is like a magic hydra that can \x[eat] any type of file and bundle it into a single output: .js, .ts, .ccs, .scss, .jsx, .tsx, `require`, `import`, `import` css from `.js`, it doesn't matter at all, it just digests all into the same \x[shit][dump].

When it works, you are just left in awe. When it doesn't, you're fucked and have to debug for several hours.

Demos at: \a[web-cheat/webpack/].

\a[web-cheat/webpack/template] contains a reasonable starter template.

Usage:
``
cd web-cheat/webpack/template
npm install
npm run build
``

This will produce, under `dist/` the following minimized files:
* `dist/index.html`: from \a[web-cheat/webpack/template/index.html]. You can open it to see:
  ``
  Hello webpack
  ``
  show on the browser. This was added from \x[javascript].
* `dist/index.js`: from \a[web-cheat/webpack/template/index.js] and anything in its import tree, e.g.:
  * \a[web-cheat/webpack/template/main.scss]: \x[sass-stylesheet-language] source. It gets embedded the the \x[javascript] output as a string, and the JavaScript then applies it to the page, making the font blue
  * `lodash` third party library

You can also run this test with the development server on http://localhost:9000[]:
``
npm start
``
which uses unminimized outptus, and automatically push reloads the page whenever you change any of the input files!

= webpack Sass import
{c}
{parent=asset-bundler}
{wiki}

This shows how to produce a minimized fully embedded CSS file with webpack from a \x[sass-stylesheet-language]:
``
cd web-cheat/webpack/sass
npm install
npm run build
xdg-open index.html
``
That example produces a `dist/main.css` file which is a compresesd combination of:
* \a[web-cheat/webpack/sass/main.scss]
* https://necolas.github.io/normalize.css/[normalize.css], added to the project as a regular `node_modules` package

= Push technology
{parent=web-technology}
{title2=Bi-directional communication}
{wiki}

In other sections:
* \x[javascript-bi-directional-communication-library]{child}

= Web browser
{parent=web-technology}
{wiki}

= Browser
{synonym}

= Chromium
{c}
{disambiguate=web-browser}
{parent=web-browser}
{wiki}

\x[google] is trying to kill it as of 2021: https://www.omgubuntu.co.uk/2021/01/chromium-sync-google-api-removed The lack of sync is a major major blow. So selfish. Google makes billions, and it won't give in a little bit of settings storage...

= Disable JavaScript on Chromium
{parent=chromium-web-browser}

https://stackoverflow.com/questions/13405383/how-to-disable-javascript-in-chrome-developer-tools

= Web development
{parent=web-technology}

= Web framework
{c}
{parent=web-technology}
{wiki}

Per \x[programming-language]:
* \x[node-js-web-framework]{child}{p}
* \x[python-web-framework]{child}{p}

How to select one:
* https://insights.stackoverflow.com/trends?tags=django%2Cruby-on-rails%2Cexpress%2Csails.js%2Cflask%2Cnestjs
* \x[gothinkster-realworld]

= Hello world website
{parent=web-framework}

= A blog in every web framework
{c}
{parent=hello-world-website}
{wiki}

A (multi-user) \x[blog] is the \x[hello-world] of the web, so creating one of those is the best way to quickly evaluate web technology, i.e. \x[time-to-hello-world].

Some new frameworks like \x[feathersjs] are making a chat app instead, as that highlights the push notifications a bit better.

= gothinkster/realworld
{parent=a-blog-in-every-web-framework}

https://github.com/gothinkster/realworld

Ahh, you \x[a-blog-in-every-web-framework][can't have new ideas anymore]!

Basically puts together every backend with \x[front-end-web-framework] to create the exact same website.

The reference live demo can be found at: https://demo.realworld.io/#/ It is based on \x[angular-js] as it links to: https://github.com/gothinkster/angularjs-realworld-example-app TODO backend?

There are however also live demos of other frontends, e.g.:
* \x[react]: https://react-redux.realworld.io[]. But note that tag addition at post creation is broken there as of March 2021, but not on master: https://github.com/gothinkster/react-redux-realworld-example-app/issues/151#issuecomment-808417846 so they forgot to update the live server.
* \x[vue-js]: https://vue-vuex-realworld.netlify.app[]
Note that all those frontends communicate with the same backend.

As of 2021 Devs are seemed a bit too focused on monetizing the project through their "how to use this project" premium tutorial, and documentation could be better: just getting the \x[hello-world] of the most popular backend with the most popular frontend is not easy... come on.

https://github.com/gothinkster/realworld/issues/578 asks for community support, as devs have moved on since unfortunately.

Remember:
* by default, the frontends hardcode the upstream public data \x[api]: `https://conduit.productionready.io/api` so you have to hack their code to match the port of the backend. And each backend can have a different port.
* when you switch between backends, you must first manually \x[clear-client-side-storage] ookies/local new run will fail due to authentication issues!

Important missing things from the minimum base app:
* \x[server-side-rendering]:
  * https://github.com/arrlancore/nextjs-ssr-real-world-app-example[]. As advertised, that global instance does render with \x[javascript] disabled! Proposed for upstream at: https://github.com/gothinkster/realworld/issues/423
  * https://github.com/gothinkster/realworld/issues/266
* no \x[javascript-bi-directional-communication-library] built-in... come on: https://github.com/gothinkster/realworld/issues/107
* \x[email] notifications however as tested on the live demo: https://demo.realworld.io/#/
* error handling is broken/missing/inconsistent across apps

First you should the most popular backend/frontend combination running, which is the most likely to be working. We managed to run on \x[ubuntu] 20.10, \x[react] + \x[node-js] \x[express-js] as described at https://github.com/gothinkster/node-express-realworld-example-app/pull/116[]:
* https://github.com/cirosantilli/node-express-realworld-example-app/tree/mongo4 which has a simple patch on top of https://github.com/gothinkster/node-express-realworld-example-app/tree/ba04b70c31af81ca7935096740a6e083563b3a4a for MongoDB 4 support

  This requires you to first \x[install-mongodb-on-ubuntu] and ensure you can login to it from the command line.
* https://github.com/gothinkster/react-redux-realworld-example-app/tree/9186292054dc37567e707602a15a0884d6bdae35 patched to use the correct server host/port `localhost:3000`:
  ``
  diff --git a/src/agent.js b/src/agent.js
  index adfbd72..e3cdc7f 100644
  --- a/src/agent.js
  +++ b/src/agent.js
  @@ -3,7 +3,7 @@ import _superagent from 'superagent';

   const superagent = superagentPromise(_superagent, global.Promise);

  -const API_ROOT = 'https://conduit.productionready.io/api';
  +const API_ROOT = 'http://localhost:3030/api';

   const encode = encodeURIComponent;
   const responseBody = res => res.body;
  ``
Then just:
``
npm install
npm start
``
on both server and client, and then visit the client URL: http://localhost:4100/

You have to hit the Enter key to add tags, it's terrible: https://github.com/gothinkster/react-redux-realworld-example-app/issues/151#issuecomment-808417846

One cool thing is that the main repo has unified backend API tests:
``
git clone https://github.com/gothinkster/realworld
cd realworld
git checkout e7adc6b06b459e578d7d4a6738c1c050598ba431
cd api
APIURL=http://localhost:3000/api USERNAME="u$(date +%s)" ./run-api-tests.sh
``
so the per-repository tests are basically useless, and that single test can test everything for any backend! There is no frontend testing however: https://github.com/gothinkster/realworld/issues/269 so newb.

Setups we've tried:
* backend:
  * \x[randyscotsmithey-feathers-realworld-example-app]{child} worked with \x[react] and \x[vue-js]
  * the \x[react] setup failed as shown at: https://github.com/gothinkster/react-redux-realworld-example-app/issues/187
  * \x[gothinkster-django-realworld-example-app]{child}
  * the \x[nest-js] failed on Ubuntu 20.10 as per https://github.com/lujakob/nestjs-realworld-example-app/issues/19
* frontend:

= TodoMVC
{c}
{parent=hello-world-website}
{wiki}

https://todomvc.com/

\x[front-end-web-framework][Front-end] only, so infinitely simpler, and generally much less useful than \x[gothinkster-realworld].

= Front-end web framework
{c}
{parent=web-framework}

You need those because it is hard to do the following:
* client \x[javascript] sends a request to server
* server sends back data
* client updates what the user sees

This is hard to do notably because when the update happens, several things might need to change on the webpage at the same time.

Notably, new elements might need to be added to the webpage, which in turn means that new bindings such as button clicks have to be added to those, in a way that keeps the page working.

The only way to do this basically is to have a functional dependency graph that keeps everything in the page in working state as updates come.

= Single page application
{parent=front-end-web-framework}
{title2=SPA}
{wiki}

= Isomorphic JavaScript
{parent=single-page-application}
{wiki}

= Server-side rendering
{parent=isomorphic-javascript}
{title2=SSR}

= List of front-end web frameworks
{parent=front-end-web-framework}

= Angular.js
{c}
{parent=list-of-front-end-web-frameworks}
{wiki}

= React
{c}
{disambiguate=JavaScript library}
{parent=list-of-front-end-web-frameworks}
{wiki}

= React
{c}
{synonym}

Website: https://reactjs.org

React officially recommends that you use \x[next-js]https://reactjs.org/docs/create-a-new-react-app.html#recommended-toolchains{ref}, so just do it. It just sets up obvious missing functionality from raw React.

Examples under: \a[web-cheat/react].

= Next.js
{c}
{parent=react-javascript-library}
{wiki}

Framework built on top of \x[react-javascript-library].

Officially recommended by \x[react-javascript-library]{ref}.

Puts lots of emphasis on \x[server-side-rendering] just working, which looks good.

It does feel like they don't document deployment very well however, especially non-Vercel options, which is the company behind Next.js.

And until the prerender upload location issue mentioned below is answered clearly, \x[ciro-santilli] just can't go for this option.

Examples at: https://github.com/vercel/next.js/tree/canary/examples

`canary` is their `master`: https://github.com/vercel/next.js/issues/3211

In order to offer its amazing features, Next.js is also extremelly opinionated, which means that if something wasn't designed to be possible, it basically isn't.

No prerender with custom server? It forces you to write your API with next as well? Or does it mean something else?
* https://github.com/vercel/next.js/discussions/25394
* https://nextjs.org/docs/advanced-features/custom-server

TODO can it statically generate pages that are created at runtime? E.g. if I create a new blog post, will it automatically upload a static page? It seems that yes, and that this is exactly what Incremental Static Regeneration means:
* https://github.com/vercel/next.js/discussions/25410
* https://vercel.com/docs/next.js/incremental-static-regeneration
* https://github.com/vercel/next.js/discussions/17711
* https://www.reddit.com/r/nextjs/comments/mvvhym/a_complete_guide_to_incremental_static/
* https://github.com/vercel/next.js/discussions/11552#discussioncomment-115595
* https://stackoverflow.com/questions/62105756/how-to-use-aws-with-next-js
* https://github.com/vercel/next.js/discussions/17080
* https://github.com/vercel/next.js/discussions/16852
However, Ciro can't find any mention of how to specify where the pages are uploaded to... this is pat of the non-Vercel deployment problem.

ISR was basically unusable for CRUD websites because you can't force a one-off immediate page update:
* https://github.com/vercel/next.js/discussions/25677

Can't prerenter by URL query parameters:
* https://stackoverflow.com/questions/66133814/how-to-get-url-query-string-on-next-js-static-site-generation
* https://github.com/vercel/next.js/discussions/17269

Overviews:
* https://www.reddit.com/r/reactjs/comments/8evy5d/what_are_the_downsides_to_nextjs/ 2017 What are the downsides to Next.js?

= Vue.js
{c}
{parent=list-of-front-end-web-frameworks}
{wiki}

= Nuxt.js
{c}
{parent=vue-js}

= Software bibliography
{parent=software}

= EbookFoundation/free-programming-books
{parent=software-bibliography}

https://github.com/EbookFoundation/free-programming-books

= Error correction code
{parent=information-technology}
{wiki}

= Cyclic redundancy check
{parent=error-correction-code}
{wiki}

= CRC-32
{c}
{parent=cyclic-redundancy-check}
{wiki=Cyclic_redundancy_check#CRC-32_algorithm}

= Telecommunication
{parent=information-technology}
{wiki}

= Television
{parent=telecommunication}
{wiki}

= Publishing
{parent=telecommunication}
{wiki}

In other sections:
* \x[academic-publishing]{child}

= Publishing company
{parent=publishing}
{wiki}

= O'Reilly Media
{c}
{parent=publishing-company}
{wiki}

= Lighter
{parent=technology}
{wiki}

= Barbequeue lighter
{parent=lighter}

= Microscopy
{parent=technology}
{wiki}

= Microscope
{synonym}

= Leeuwenhoek microscope
{c}
{parent=microscopy}

\x[microscope]{c} by \x[antonie-van-leeuwenhoek] used to first observe \x[microorganism]{p}.

= Phase-contrast microscopy
{parent=microscopy}
{wiki}

= Electron microscope
{parent=microscopy}
{wiki}

= Scanning electron microscope
{parent=electron-microscope}
{title2=SEM}
{wiki=Scanning_electron_microscopy}

\Video[https://www.youtube.com/watch?v=GY9lfO-tVfE]
{title="The Scanning Electron Microscope" by MaterialsScience2000 (2014)}
{description=Shows operation of the microscope really well. Seems too easy, there must have been some extra setup before however. Impressed by how fast the image update, it is basically instantaneous. Produced by Prof. Dr.-Ing. Rainer Schwab from the https://en.wikipedia.org/wiki/Karlsruhe_University_of_Applied_Sciences[Karlsruhe University of Applied Sciences].}

= Scanning tunnelling microscope
{parent=electron-microscope}
{title2=STM}
{wiki}

It sees and moves individual atoms!!!

* https://en.wikipedia.org/wiki/IBM_(atoms)
* https://en.wikipedia.org/wiki/A_Boy_and_His_Atom

= Transmission electron microscopy
{parent=electron-microscope}
{title2=TEM}
{wiki}

= Transmission electron microscope
{synonym}

= Scanning transmission electron microscopy
{parent=transmission-electron-microscopy}
{wiki}

= Scanning transmission electron microscope
{synonym}

= Electron holography
{parent=transmission-electron-microscopy}
{wiki}

= Cryogenic electron microscopy
{parent=electron-microscope}
{wiki}

= cryoEM
{c}
{synonym}
{title2}

This technique has managed to determine protein 3D structures for proteins that people were not able to crystallize for \x[x-ray-crystallography].

It is said however that cryoEM is even fiddlier than \x[x-ray-crystallography], so it is mostly attempted if crystallization attempts fail.

By looking at \x[image-cryoem], you can easily understand the basics of cryoEM.

We just put a gazillion copies of our molecule of interest in a solution, and then image all of them in the frozen water.

Each one of them appears in the image in a random rotated view, so given enough of those point of view images, we can deduce the entire 3D structure of the molecule.

\Image[https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Cryoem_groel.jpg/600px-Cryoem_groel.jpg]
{id=image-cryoem}
{height=400}
{source=https://en.wikipedia.org/wiki/File:Cryoem_groel.jpg}
{title=Image showing This is the type of image that you get out of a raw CryoEM experiment.}

= Two-photon excitation microscopy
{parent=microscopy}
{wiki}

\Video[https://www.youtube.com/watch?v=JSnh-btk22U]
{title=Two Photon Microscopy by Nemonic NeuroNex (2019)}
{description=Shows a prototype of a \x[two-photon-excitation-microscopy][two-photon electron microscope] on an \x[optical-table], and describes it in good detail, well done.}

= X-ray crystallography
{c}
{parent=microscopy}
{wiki}

One of its main applications is to determine the 3D structure of \x[protein]{p}.

Sometimes you are not able to crystallize the proteins however, and the method cannot be used.

Crystallizing is not simple because:
* you need a considerable amount of the protein
* sometimes it only crystallizes if you add some extra small chemical that stabilizes it

\x[cryogenic-electron-microscopy] can sometimes determine the structures of proteins that failed crystallization.

= Reverse engineering
{parent=technology}
{wiki}

This is what society gets for not using \x[open-knowledge]: some of its best minds will be bound to waste endless hours reversing some useless technology.

With that said, even when you do have the source code, reading run logs and using \x[debugger]{p} are a sort of reverse engineering at heart.

One of the most jaw dropping reverse engineering projects Ciro has ever seen is the \x[super-mario-64-reverse-engineering-project].

= Science is the reverse engineering of nature
{parent=reverse-engineering}
{wiki}

How \x[software-engineer][software engineers] view science:
\Q[Science is the \x[reverse-engineering] of nature.]

\x[ciro-santilli] had once assigned this as one of \x[ciro-santilli-s-best-random-thoughts], but he later found that \x[wikipedia] actually says exactly that: https://en.wikipedia.org/wiki/Reverse_engineering ("similar to scientific research, the only difference being that scientific research is about a natural phenomenon") so maybe that is where Ciro picked it up unconsciously in the first place.

= Social technology
{parent=technology}
{wiki}

= Conference
{parent=social-technology}
{wiki}

= TED
{c}
{disambiguate=conference}
{parent=conference}
{wiki}

A bit like a \x[cult]{parent}.

Many speakers are good. But especially in TEDx, we've had some notorious ones:
* https://cirosantilli.com/china-dictatorship/raz-gal-or[Raz Gal-or and his father Amir Gal-Or]

= Education
{parent=social-technology}
{wiki}

One of the causes \x[ciro-santilli] care the most about: \x[write-free-books-to-get-famous-website/motivation].

How to improve education? Simple:
* \x[tax-the-rich][tax the fuck out of the rich] people and companies: \x[wealth-tax] and invest it in education
* invest intelligently as mentioned at \x[what-poor-countries-have-to-do-to-get-richer]:
  * focus on fewer higher excellence schools that select the most promising poor students, rather than giving crappy average to everyone
  * use \x[write-free-books-to-get-famous-website]

= Stuff school should actually teach
{parent=education}

* \x[having-more-than-one-natural-language-is-bad-for-the-world][English]
* https://en.wikipedia.org/wiki/NATO_phonetic_alphabet[NATO phonetic alphabet]
* https://en.wikipedia.org/wiki/Mnemonic_major_system[Mnemonic major system]

= Autodidacticism
{parent=education}
{wiki}

= Autodidactic
{synonym}

= Self-taught
{synonym}

There are two types of people:
* those who are autodidacts
* those who didn't really learn

Some possible definitions:
* learning without a gun pointed at your head
* learning from an \x[e-book] or video rather than from a talking head 5 rows of chairs in front of you

  How that is different from a video, you tell me.

Thus \x[write-free-books-to-get-famous-website].

= Self-directed learning
{parent=autodidacticism}

\x[ciro-santilli]'s eulogy: \x[students-must-have-a-flexible-choice-of-what-to-learn].

= Educational technology
{parent=education}
{wiki}

= EdTech
{c}
{synonym}

= E-learning
{parent=educational-technology}

See also: \x[e-learning-website]{child}.

= Free education
{parent=education}

= Gifted education
{parent=education}

If \x[write-free-books-to-get-famous-website/motivation][school weren't bullshit], 99% of students would be in gifted education for what they truly love and are good at.

Related programs:
* \x[advanced-placement]{child}

= Recitation class
{parent=education}

https://www.varsitytutors.com/blog/what+is+a+recitation+class

Example from \x[ecole-polytechnique]: \x[a-typical-small-classroom-at-ecole-polytechnique].

= School
{parent=education}
{wiki}

Basically the same remarks as for \x[university], just 10 times more useless, see also: \x[write-free-books-to-get-famous-website/motivation]{full}.

= Boarding school
{parent=school}
{wiki}

= Innovative schools
{parent=school}

* XP School in Doncaster
  * https://www.thetimes.co.uk/article/no-uniforms-no-detentions-no-maths-lessons-is-xp-in-doncaster-the-school-of-the-future-jnc6n80kq
  * https://en.wikipedia.org/wiki/XP_School

= Molecular Sciences Course of the University of São Paulo
{parent=innovative-schools}
{id=molecular-sciences-course-of-the-university-of-sao-paulo}
{title2=Curso de Ciências Moleculares, CCM}

http://www.cecm.usp.br/

https://pt.wikipedia.org/wiki/Curso_de_Ciências_Moleculares

Good \x[portuguese-language][Portuguese] overview: http://www.scielo.br/scielo.php?script=sci_arttext&pid=S1806-11172017000300301&lng=pt&tlng=pt

A fantastic sounding full time course that any student could transfer to called that teaches various \x[natural-science] topics, notably \x[mathematics], \x[physics], \x[chemistry] and \x[molecular-biology].

Students from the entire \x[university-of-sao-paulo] can apply to transfer to it only after joining the university, with the guarantee that they can go back to their original courses if they don't adapt to the new course, which is great!

Not doing it is one of \x[ciro-santilli]'s regrets in life, see also: \x[don-t-be-a-pussy].

Around 2007, they were in a really shady building of the University, but when Ciro checked in 2021, they had apparently moved to a shiny new entrepreneurship-focused building. Fantastic news!!!

This place has one of the best changes of spawning the first \x[brazilian] \x[nobel-prize] or \x[unicorn-startup].

One of the \x[brazilian]{p} who came to \x[ecole-polytechnique] together with Ciro was from this course. The fact that he is one of the most intelligent people Ciro knows gave further credit to that course in his eyes.

= Independent programming schools
{parent=innovative-schools}

= 42
{disambiguate=school}
{parent=independent-programming-schools}
{wiki}

No teachers, no courses, no tuition fees. Yes please!!! By \x[xavier-niel].

= Recurse Center
{c}
{parent=independent-programming-schools}
{wiki}

= Science, technology, engineering, and mathematics
{parent=education}
{wiki}

= STEM
{c}
{synonym}
{title2}

= K-12
{c}
{parent=education}
{wiki=K–12}

= Primary school
{parent=k-12}
{title2=4-11}
{wiki}

= Secondary school
{parent=k-12}
{title2=12-18}
{wiki}

= High school
{synonym}

= University
{parent=education}
{wiki}

As of 2020, university has the following very important applications:
* meet an \x[ciro-santilli-s-wife][intelligent sexual partner] (\x[sexual-selection], \x[the-main-function-of-university-is-sexual-selection]) and or have fun and or \x[come-out-of-the-closet]
* get you in debt if you are from the \x[united-states]

Or as \x[elon-musk] https://www.theguardian.com/technology/2020/mar/10/elon-musk-college-for-fun-not-learning[put it]:
\Q[I think college is basically for fun and to prove that you can do your chores, but they're not for learning]

Which is why \x[ciro-santilli] wants to destroy its current format with \x[write-free-books-to-get-famous-website]. He believes that we can find a more efficient organization to achieve both the social and research functions of university, by first doing as much as possible online

Ciro's university experiences are mentioned at: \x[ciro-santilli-s-formal-education].

Once Ciro was at a University course practical session, and a graduate was around helping out. Ciro asked if what the graduate did anything specifically related to the course, and they replied they didn't. And they added that:
\Q[One has to put the bread on the table.]
Even though Ciro was already completely disillusioned by then, that still made an impression on him. Something is really wrong with this \x[shit].

Other people that think that the educational system is currently \x[bullshit] as of 2020:
* \x[ron-maimon]
* \x[xavier-niel]: https://fortune.com/2018/11/30/billionaire-xavier-niel/ "Want This Billionaire's Attention? Drop Out of School" (2018). He also created \x[42-school].

\Video[https://www.youtube.com/watch?v=cAxzkl2cmNY]
{title=Peter Gregory from \x[silicon-valley-tv-series] shows his hate for \x[university] in a fake \x[ted-conference] talk.}
{description=Key moment: someone from the crowd cries:
\Q[The true value of a college education is intangible!]
to which the speaker replies:
\Q[The true value of snake oil is intangible as well.]
\x[imdb] https://www.imdb.com/name/nm0927706[says] it's not a cameo. It really looked like one, good acting, but what a missed opportunity. Imagine a \x[xavier-niel] appearance.
}

= The main function of university is sexual selection
{parent=university}

= MRS degree
{c}
{parent=the-main-function-of-university-is-sexual-selection}
{wiki}

After learning this term, \x[ciro-santilli] finally understood that \x[ciro-santilli-s-wife][his actual major was MR], and not bullshit like \x[applied-mathematics] or \x[control-theory].

= Public university
{parent=university}
{wiki}

= Private university
{parent=public-university}
{wiki}

= University ranking
{parent=university}

= Times Higher Education
{c}
{parent=university-ranking}

= Undergraduate education
{parent=university}
{wiki}

= Undergraduate
{synonym}

= Undergrad
{synonym}

= Postgraduate education
{parent=undergraduate-education}
{wiki}

= Postgraduate
{synonym}

= Postgrad
{synonym}

= American university
{parent=university}

= Brown University
{c}
{parent=american-university}
{wiki}

= Ivy League
{c}
{parent=american-university}
{wiki}

* \x[columbia-university]

= California Institute of Technology
{c}
{parent=american-university}
{wiki}

= Caltech
{c}
{synonym}
{title2}

Near \x[los-angeles].

= Columbia University
{c}
{parent=american-university}
{wiki}

= Columbia Radiation Laboratory
{c}
{parent=columbia-university}

= Cornell University
{c}
{parent=american-university}
{wiki}

= Harvard University
{c}
{parent=american-university}
{wiki}

= Harvard
{c}
{synonym}

= HarvardX
{c}
{parent=harvard-university}
{wiki}

\x[harvard]'s \x[e-learning] thing. Weak. Related: \x[the-purpose-of-harvard-is-not-to-educate-people-by-sean-carroll-2008].

= Massachusetts Institute of Technology
{c}
{parent=american-university}
{wiki}

= MIT
{c}
{synonym}
{title2}

= MIT OpenCourseWare
{c}
{parent=massachusetts-institute-of-technology}

\x[cc-by-nc-sa] unfortunately.

Upload is actually optional, and it appears that teachers do retain their \x[copyright]: https://ocw.mit.edu/ans7870/global/MIT_OpenCourseWare_FAQs.pdf Hmmm, so how have they convinced so many teachers to do it?

= MIT Radiation Laboratory
{c}
{parent=massachusetts-institute-of-technology}
{wiki}

= Rad Lab
{c}
{synonym}
{title2}

Made huge advances in \x[radar].

Notably, \x[isidor-isaac-rabi] was a leading figure there, and later he was head at the \x[columbia-university] laboratory that carried out the crucial \x[lamb-retherford-experiment] and the \x[anomalous-magnetic-dipole-moment-of-the-electron] published at \x[the-magnetic-moment-of-the-electron-by-kusch-and-foley-1948] using related techniques.

= Princeton University
{c}
{parent=american-university}
{wiki}

= Institute for Advanced Study
{c}
{parent=princeton-university}
{wiki}

The "Truth and Beauty" motto hugely coincides with \x[ciro-santilli]'s ideas.

Truth is easier somewhat as it is more subjective.

Beauty, like all arts, sometimes you achieve, sometimes you don't.

Searcing beauty is a painful thing. You just keep endlessly looking for that one new insight that will blow your mind.

The key missing point would be "usefulness". See also: \x[art]{full}.

= Rice University
{c}
{parent=american-university}
{wiki}

= Stanford University
{c}
{parent=american-university}
{wiki}

= Stanford University research group
{c}
{parent=e-coli-whole-cell-model-by-covert-lab}

https://www.covert.stanford.edu/

= Covert Lab
{c}
{parent=stanford-university-research-group}

https://www.covert.stanford.edu/

Makes the \x[e-coli-whole-cell-model-by-covert-lab].

Lead: \x[markus-w-covert].

= Markus W. Covert
{c}
{parent=covert-lab}
{wiki}

= Markus Covert
{c}
{synonym}

\x[covert-lab] lead.

\x[ciro-santilli] really likes this dude, because Ciro really likes simulation.

\Video[https://www.youtube.com/watch?v=0Be21VwlgrQ]
{title=How to build a computer model of a cell by \x[markus-covert] (2020)}

= Stanford University faculty
{c}
{parent=american-university}

* \x[leonard-susskind]{child}

= University of California
{c}
{parent=american-university}
{title2=UC}
{wiki}

= University of California, Davies
{c}
{parent=american-university}
{wiki}

= UC Davies
{c}
{synonym}
{wiki}

= University of California, Santa Barbara
{c}
{parent=american-university}
{title2=UCSB}
{wiki}

= Kavli Institute for Theoretical Physics
{c}
{parent=university-of-california-santa-barbara}

= University of Chicago
{c}
{parent=american-university}
{wiki}

= Brazilian university
{parent=university}

= University of Campinas
{c}
{parent=brazilian-university}
{title2=UNICAMP}
{wiki}

= University of São Paulo
{c}
{id=university-of-sao-paulo}
{parent=brazilian-university}
{title2=USP}
{wiki=University_of_São_Paulo}

\x[ciro-santilli] \x[ciro-santilli-s-formal-education][studied there] for a few years starting in 2007.

= Banheiros da USP
{parent=university-of-sao-paulo}
{title2=USP Toilets}

https://www.facebook.com/banheirosdausp

Semi-comical student website to review the toilets of the \x[university-of-sao-paulo]. Some of the toilets had a reputation for being terrible.

One is reminded of \x[crushbridge].

= Polytechnic School of the University of Sao Paulo
{c}
{parent=university-of-sao-paulo}
{title2=Escola Politécnica da Universidade de São Paulo}
{wiki}

= Sao Remo, the favela next to USP
{c}
{parent=university-of-sao-paulo}
{wiki}

https://pt.wikipedia.org/wiki/São_Remo

While in Brazil, \x[ciro-santilli] used to walk through the outskirts of a small \x[favela]{parent} to get \x[university-of-sao-paulo][to university] every day, the https://pt.wikipedia.org/wiki/São_Remo[Favela de São Remo].

See the street view for: https://goo.gl/maps/ZVnTjxNpsK6QPqTE9[R. Catumbi - Vila Butantã Vila Butantã, São Paulo - State of São Paulo, Brazil], e.g. https://www.google.com/maps/@-23.5611635,-46.7449982,3a,75y,77.15h,72.78t/data=!3m6!1e1!3m4!1swNEwJR0x5wkuKHvp7c0IHw!2e0!7i16384!8i8192[with this link].

To the left, the outer walls of a large police station, with \x[concertina-wire] on top and all.

93 Dp - Jaguare

To the right, dudes \x[drug-traffic][selling drugs] on the entry of a small corridor street, presumably to which they could easily escape to in case of need.

The cops could have identified the dealers with binoculars if they actually wanted to!!!

The drug sellers did keep the peace in their business area, and Ciro never got robbed, and would come back from university parties on foot late through the favela.

But Ciro's friends did say that things got much worse after Ciro left, for example http://g1.globo.com/sao-paulo/noticia/2015/01/engenheiro-e-vitima-de-sequestro-relampago-na-cidade-universitaria.html[a flash kidnapping was reported in 2015].

Wikipedia says that this favela started in the 60s and 70s as settlements of the builders of the University, and that many of the people there still work for the University.

This is consistent with the terribly old buildings Ciro saw when he was at university. They even had the building skills to build their own homes.

The state just has to either \x[legalize] those people, or give them houses somewhere else nearby. A \x[what-poor-countries-have-to-do-to-get-richer][world class University is the most important thing a poor country can have], and its image cannot be jeopardized like that.

The existence of that favela, right next to one of the most important universities in Latin America, puts \x[brazil]'s surreal social inequality into perspective.

The janitors of the apartment block Ciro lived all lived in the favela. Yes, in poor countries lives are worth nothing, and some poorer people work by watching the entrance of buildings of less poor people 24/7 to guard it from other even more desperate poor people who might want to rob the not so poor inhabitants. They also do janitor jobs like cleaning common areas in parallel.

They were incredibly nice hard-working people, and Ciro spoke often with them. If only given the opportunity, those people could be amazing engineers or scientists obviously. Ciro was also glad to be their friends, and sat down with them quite a few times for several minutes after coming back from University parties, partly because he felt bad about them having to work at that time, but also partly because he just liked them. And they were always up to date on who had come back with a girl to the apartment or not. Ciro imagines that if it had been him, it would have been a perfect bragging opportunity ;)

They had "nothing" but were still happy. This is true wisdom, and a good reminder \x[buddhism][that all our non-\x[transhumanist] technical goals are nothing].

We must destroy \x[social-inequality].

= British university
{c}
{parent=university}
{wiki=University_in_the_United_Kingdom}

= University in the United Kingdom
{c}
{synonym}

= Are public universities in the UK owned by the Government?
{parent=british-university}

No, they are basically \x[not-for-profit]{p}, more like what the \x[united-states] more sensibly calls "\x[private-university]{p}". But if they take government funding (directly or indirectly through subsiding enrolment fees?), they have to follow some government rules, and all major ones do it seems.
* https://academia.stackexchange.com/questions/49187/in-what-sense-are-uk-universities-public/49188

A similar confusing naming pattern appears to apply to \x[public-school]{p}.

In the \x[university-of-cambridge] for example, all MA degree holders or higher appear to have some voting power: https://www.cam.ac.uk/about-the-university/how-the-university-and-colleges-work/governance (https://web.archive.org/web/20210811192322/https://www.cam.ac.uk/about-the-university/how-the-university-and-colleges-work/governance[archive])

This adds an extra layer of difficulty for the average taxpayer to make changes to university policy, e.g. making universities publish all material with \x[creative-commons-license]{p}. At most, voters could require this indirectly through the government funding requisites. It is a mess.

Not even the \x[open-university] seems to be very open!

= Open University
{c}
{parent=british-university}
{wiki}

Not really dedicated to open source course material, nor to free courses... it is hard to understand what is "Open" about this institution compared to traditional \x[oxbridge]. "Cheap more online university" would be more adequate.

Wikipedia even says that the initial focus was on broadcasting learning material on \x[television] and \x[radio], so what happened to that now that we have an even more powerful on-demand tool called \x[internet]!

A few open sources at: https://www.open.edu/openlearn/free-courses[]. The 5-hour course on \x[particle-physics] says it all.

https://www.youtube.com/watch?v=Pj0rbafFBak What's an Open University Degree Like? by Luke Cutforth (2021) mentions that it is more \x[autodidactic]/online, and it encourages part time learning.

https://youtu.be/rsWwffX-u0A?t=99 Open University - How does it work? by Matt Greg Vlogs (2017) shows that they do have their own custom institutional material. And it is not open???? Please. https://youtu.be/rsWwffX-u0A?t=222 mentions that there is no entry exam, and you can change your courses at any time, that is good at least.

= University of Cambridge
{c}
{parent=british-university}
{wiki}

= Cambridge University
{c}
{synonym}

Located in \x[cambridge-united-kingdom].

Second largest number of \x[nobel-prize] as of 2019, need on say more? https://en.wikipedia.org/w/index.php?title=List_of_Nobel_laureates_by_university_affiliation&oldid=934987075
* \x[paul-dirac]

= Crushbridge
{c}
{parent=university-of-cambridge}
{wiki}

It is good to see that top-\x[university]{p} is still keeping up with it's main purpose: spontaneous \x[eugenics]:
* https://www.facebook.com/crushbridge/
* https://www.cambridge-news.co.uk/news/cambridge-news/cambridge-university-crushbridge-love-declaration-15879668
* https://thetab.com/uk/cambridge/2019/06/11/an-admins-ode-to-crushbridge-125875

= University of Oxford
{c}
{parent=british-university}
{wiki}

Their "open" video material: http://podcasts.ox.ac.uk/ A somewhat small part is \x[creative-commons], but most proprietary. Despite the name "podcasts", they do contain video, it is just a relic.

http://podcasts.ox.ac.uk/open contains actual \x[creative-commons] only it seems.

= History of the University of Oxford
{parent=university-of-oxford}

\Video[https://www.youtube.com/watch?v=uol4V1Wa8B0]
{title=History of Oxford University by Chris Day (2018)}
{description=A large part of the video talks about how the insane system of \x[colleges-of-the-university-of-oxford] came about organically.
* https://youtu.be/uol4V1Wa8B0?t=343 at the \x[university-of-bologna], the original system was for students to decide what they would learn, and hire and fire teachers as they decided. This is opposed to the system of the \x[university-of-paris], in which teachers make the final decisions. He mentions that this is the system that the \x[university-of-oxford] and the \x[university-of-cambridge] use: the "congregation". He mentions that \x[oxbridge] are one of the few universities that maintained this structure (as opposed to having funding sources select the final decision makers)
* https://youtu.be/uol4V1Wa8B0?t=1327 mentions the quadrangle architecture which served as the basis of the Colleges: make a closed square with everything students need: Chapel, Hall to eat, classes and accommodation. This is based of course on monastic cloisters.
}

= Colleges of the University of Oxford
{parent=university-of-oxford}

A good explanation of how this insane system came up is given at \x[video-history-of-oxford-university-by-chris-day-2018].

= University of Oxford intellectual property policy
{parent=university-of-oxford}

For students (who are paying for the university to start with...), they will not claim tutorials linked to courses. But a tutorial that shows university laboratories, it is unclear: https://www.ox.ac.uk/students/academic/guidance/intellectual-property (https://web.archive.org/web/20210625015911/https://www.ox.ac.uk/students/academic/guidance/intellectual-property[archive]) This likely includes graduate students, who are also not paid by the university.

For faculty, the university owns everything it seems, to be confirmed.

= Course of the University of Oxford
{parent=university-of-oxford}

Course actually means "degree", not just one specific "course":
* \x[undergraduate]: https://www.ox.ac.uk/admissions/undergraduate/courses/course-listing | 2020/2021 https://web.archive.org/web/20210818212635/https://www.ox.ac.uk/admissions/undergraduate/courses/course-listing
* graduate: https://www.ox.ac.uk/admissions/graduate/courses/courses-a-z-listing | 

The course outline is given in a "handbook", a one or more \x[pdf] files that contain what people will learn and other practicalities.

= Undergraduate course of the University of Oxford
{parent=course-of-the-university-of-oxford}

= Biochemistry course of the University of Oxford
{parent=undergraduate-course-of-the-university-of-oxford}

Handbook 2020/2021: https://weblearn.ox.ac.uk/access/content/group/b5e24110-24b6-45fb-9789-9e7f6b7236f8/Handbooks%20%26%20Guidance/Handbooks/HANDBOOK%202020.pdf

= Chemistry course of the University of Oxford
{parent=undergraduate-course-of-the-university-of-oxford}

Handbook 2019/2020: https://web.archive.org/web/20210211192812/http://teaching.chem.ox.ac.uk/Data/Sites/58/media/courseinfo/ug-handbook-chemistry-2019-20.pdf

At http://teaching.chem.ox.ac.uk/undergraduate-course-handbook.aspx there's a paywall, but \x[google] found the \x[pdf] it anyways.

https://www.ox.ac.uk/students/academic/guidance/undergraduate/handbooks in theory links to all handbooks, but some are likely paywalled. But \x[google] can generally find them anyways.

= Physics course of the University of Oxford
{parent=undergraduate-course-of-the-university-of-oxford}

= Graduate course of the University of Oxford
{parent=course-of-the-university-of-oxford}

= MSc course of the University of Oxford
{c}
{parent=graduate-course-of-the-university-of-oxford}

= Oxford Master Course in Mathematical and Theoretical Physics
{parent=msc-course-of-the-university-of-oxford}

https://mmathphys.physics.ox.ac.uk/

= Divisions of the University of Oxford
{parent=university-of-oxford}

https://www.ox.ac.uk/about/divisions-and-departments

Given jointly by the \x[department-of-physics-of-the-university-of-oxford] and the \x[mathematics-institute-of-the-university-of-oxford].

= Mathematical, Physical and Life Sciences division of the University of Oxford
{parent=divisions-of-the-university-of-oxford}

= Department of physics of the University of Oxford
{parent=mathematical-physical-and-life-sciences-division-of-the-university-of-oxford}
{wiki=Department_of_Physics,_University_of_Oxford}

= Research group of the Department of physics of the University of Oxford
{parent=department-of-physics-of-the-university-of-oxford}

= Quantum systems engineering Research group of the  University of Oxford
{parent=research-group-of-the-department-of-physics-of-the-university-of-oxford}

= Mathematics institute of the University of Oxford
{parent=mathematical-physical-and-life-sciences-division-of-the-university-of-oxford}

No, they couldn't be like everyone else and be a department, proud mathematicians had to be an "institute"!

= Oxbridge
{c}
{parent=university-of-oxford}
{wiki}

= Loxbridge
{c}
{parent=oxbridge}
{wiki}

\x[oxbridge] + \x[london], a "golden triangle" of \x[british] universities.

= Night climbing
{parent=oxbridge}
{wiki}

= WebLearn
{c}
{disambiguate=University of Oxford}
{parent=university-of-oxford}

\x[learning-management-system] of the \x[university-of-oxford], appears fully custom and \x[closed-source]?

= University of Warwick
{c}
{parent=british-university}
{wiki}

= Canadian university
{parent=university}

https://en.wikipedia.org/wiki/List_of_universities_in_Canada

= University of Alberta
{c}
{parent=canadian-university}
{wiki}

= French university
{c}
{parent=university}

= École Polytechnique
{c}
{parent=french-university}
{wiki}

The "most prestigious French engineering school". Only https://en.wikipedia.org/wiki/List_of_École_Polytechnique_alumni#Nobel_laureates[3 Nobels] though as of 2019, the scientists are mostly at \x[ecole-normale-superieure-paris]. A https://www.timeshighereducation.com/student/news/where-do-worlds-top-ceos-go-university[gazillion CEOs] however.

\x[ciro-santilli] \x[ciro-santilli-s-formal-education][studied there] for a few years starting in 2010.

Ciro considers him \x[effortless-effort][entering at Polytechnique a small miracle]. First, on his second year of \x[university-of-sao-paulo][University in Brazil], he first had to fail to join the also good but not as good https://fr.wikipedia.org/wiki/Groupe_des_%C3%89coles_centrales[École centrales], which really annoyed him as he saw the "other good students" who wanted to go out get their wish. This also explains why there are so few students from his university going to Polytechnique in the late 2010's: most already went to other locations! Then, on his third year, he tried Polytechnique and got in despite feeling that the others who got in knew much more mathematics and physics than him. Rather, Ciro believes that he got in chiefly due to his \x[write-free-books-to-get-famous-website/motivation][intense passion for the sciences] which he showed during the interview.

The miracle would have been even greater if it had happened in 2020. At this time, out of 10 Brazilians, 9 are from https://en.wikipedia.org/wiki/Instituto_Tecnológico_de_Aeronáutica[ITA], the "hardest to get into" university in Brazil, and also military like Polytechnique. Make no mistake, those students are amazing and deserve it without any doubt. But there is more to the story. It could be argued that many of them only go because they don't have any other choice of exchange program. Remember: Ciro had to fail applications on previous universities before getting into Polytech. Also, they don't get any Brazilian degree because ITA has no accords with Polytechnique, and are therefore are extremely likely to never come back. \x[what-poor-countries-have-to-do-to-get-richer][Not that Ciro thinks this is particularly bad for Brazil though]. They also happen to have closer ties across cohorts of different years, and have managed to maintain a Google Doc with scanned past examinations (as of 2020 however, http://www.brasilnax.com/material-de-preparaccedilatildeo.html[some/all of those examinations have been uploaded publicly], big thanks to them). Also almost all of them are software engineers. This lack of diversity might not be \x[ideal]: if I were France, I would rather fish around all top Brazilian schools for "the best".

Besides the amazing funding/opportunities/alumni/staff loop which you can read about elsewhere, Polytechnique is amazing because you can \x[students-must-have-a-flexible-choice-of-what-to-learn][choose what you will study every year to a very large extent].

This is in huge contrast to the crappy systems Ciro had seen e.g. in Brazil's \x[polytechnic-school-of-the-university-of-sao-paulo], where students have to decide basically all their courses in huge packages, either at university entry (thus when they are completely clueless), or at a single point inside the university studies, changes being much harder.

Life quality was also amazing. Good free accommodation on campus and at the time a no-obligations scholarship for every foreign student great sport facilities. It seems that after Ciro left however more restrictions are added to the scholarships, what a shame! Sport was mandatory due to the military nature of the school. This did have the upside of getting students together more, although Ciro is against all forced intellectual of physical activities for students. If you liked your sport it would be really cool though. But due to \x[ciro-santilli-s-knee]{full}, he was forced to give up his first beloved choice which was \x[soccer]... life can be cruel.

The situation is changing however, and now not everyone gets scholarships anymore it seems, and rather those who are not poor have to pay Polytechnique scholarship fees on top of their living costs. And thus French austerity measures are undermining the greatest long term investment a country can possibly make: that of importing the very best students from other countries into yours. This after their host country has already spent 20 years raising and selecting them. And you won't even pay them 2 years of frugal existence to steal them. Even if those students move away from your country later on, the contacts they made in your country mean they are much more likely to bring businesses over.

This also makes it much more difficult for those students to do a PhD afterwards, where they would get paid very little, and are unable to pay their student debts. A PhD would be where they would possibly \x[deep-tech][bring more of the next big thing to your country]. Instead, they are much more likely to just go work for some big American company \x[software-engineer][data wrangling] and bring nothing to your country but their student debt dividends instead, which they will be pay to pay for in one year with those amazing salaries. What a big time fail, France.

During the time Ciro was at Polytechnique in early 2010's, the school was really isolated in the Palaiseau plateau, there were no shops in 10 minute walking distance! You either had to climb 300 steps to go down to the RER and the nearest town, or take a bus. The fact that https://www.timeshighereducation.com/student/best-universities/best-small-universities#survey-answer[Times Higher Education ranked it as the second best university in the world in 2019] (https://web.archive.org/web/20190918230605/https://www.timeshighereducation.com/student/best-universities/best-small-universities[archive]) makes it good justice, given the small 500 student body.

Before that the school was in the center of Paris at the https://en.wikipedia.org/wiki/Latin_Quarter,_Paris[Latin Quarter], but students were in theory restricted to school grounds a lot of the time, although there are famous stories of the intentionally overlooked tree used to climb the fence to go to Parisian parties when they couldn't stand it anymore.

This made for some good memories though. The isolation favored concentration, and gave the place a mystical feeling. And then when you went to https://github.com/cirosantilli/china-dictatorship/restaurants--france--paris[eat amazing Chinese food in Paris] it just felt even more special and magic since you were so limited during the week.

Ciro also agonized about passing courses to get useless grades though! Polytechnique is hard for Brazilians, specially if you select the more mathematics oriented courses, because the French students were math brainwashed for two years before joining.

One of the only bad experience Ciro had at Polytechnique (besides the inevitable fear of not graduating) was when he wanted to do a robotics internship in Germany, but the head of the \x[applied-mathematics] department Polytechnique prevented him from going because Ciro didn't have the necessary grades, even though the Germans had already agreed to it, because in the past students had abandoned their internships halfway and given foreigners a bad impression of Polytechnique. And thus Ciro had to choose a last moment internship that he hated, rather than becoming the greatest roboticist that ever lived, and did terribly at it. At least on the other hand Ciro learnt Python instead of working at the internship, and became \x[ciro-santilli-s-stack-overflow-contributions][the greatest programming tutorial writer that ever lived].

Ciro's favorite spots/activities:
* hide in top corner desk of the library to learn some science. Ciro loves libraries.
* \x[weekend][weekend days] in his awesome room learning Chinese

  \Image[Desk_of_Ciro_Santilli's_room_at_École_Polytechnique_as_he_as_in_the_middle_of_moving_out_in_2012.jpg]
  {description=The room also has a bed and toilet, it was great, and it was free back in those days! Only the kitchen was shared, which is good for meeting people (and for getting your password https://en.wikipedia.org/wiki/Keystroke_logging[keylogged] in the shared supplies buying system). All students live on campus, which is great for concentration.}
* sit next to the lake in a warm day to relax

  \Image[Lake_view_of_the_Grand_Hall_building_of_École_Polytechnique_in_a_cloudy_day.jpg]
  {description=Just imagine this in a perfect sunny weekend day with pure silence, it was just perfect. The lake also has a long area where rowing is practiced.}
* randomly go study at night in one of the small 20 person classrooms that were used in the day and left open at night

  \Image[https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Master_STER_Nassar_Polytechnique.jpg/640px-Master_STER_Nassar_Polytechnique.jpg]
  {id=a-typical-small-classroom-at-ecole-polytechnique}
  {title=A typical small classroom at \x[ecole-polytechnique].}
  {description=The tables are shown in the usual course configuration. Imagine that at night, in pure silence, with some of your best friends studying on a nearby room. The usual course configuration was first a course by the main teacher in a large amphitheater, and then break down into small groups with tutors, known in French as "Petites classes" (PC). In some \x[english-language] traditions, such small class system is known as \x[recitation-class]. While those small classes are a reasonable approach, \x[ciro-santilli]'s slow brain would rather just have a book and an online forum where tutors answer questions instead.}

\Image[Horny_polytechnicienne_mural_by_binet_BD_96_at_École_Polytechnique_with_nipple_censored_as_seen_in_2010.jpg]
{description=Every year, student organizations, https://www.polytechnique.net/groups/binets[called "binets"] (TODO etymology), get to compete for student elections, and they are allowed to make murals in the school to advertise themselves. They kinky people from the 1996 Cartoon Binet (BD == Band Dessiné == Cartoon in French) decided to take it to the next level. Good old 1996, this would never be allowed in 2019 due to political correctness. As an engineering school, Polytechnique students were predominantly male up as of 2019.}
{height=600}

The following promotional videos give an idea of how the school looks like, although they fundamentally miss the little corners that Ciro really loved in that the place and which made it magic:
* \Video[http://youtube.com/watch?v=qr_xQVyVj9U]
  {title="Pourquoi choisir l'Ecole polytechnique" by \x[ecole-polytechnique] (2013)}
* \Video[http://youtube.com/watch?v=9X1yZSQE-VM]
  {title="Rentrée des élèves de la promotion 2017 du cycle ingénieur" ublished by \x[ecole-polytechnique] (2017)}

And a one second \x[ciro-santilli] appearance from a 2016 video made during the annual \x[brazilian] barbecue (or as close as you an get to it) which many ex-Brazilian students attend able: https://www.youtube.com/watch?v=ndX_-A2Rjpo&t=189 wearing a \x[jami-software][Ring t-shirt].

= École normale supérieure (Paris)
{c}
{parent=french-university}
{wiki}

This is the one where \x[french] \x[nobel-prize]{p} come from: https://en.wikipedia.org/wiki/List_of_École_normale_supérieure_people#Nobel_laureates

= University of Paris
{parent=french-university}
{title2=1150-1970}
{wiki}

Their split in 1970 was a huge fuck up. If it were a single entity, the univeresity would likely be in the top 10 university rankings, undoubtedly top 20. But as of 2020 \x[french] universities only appear instead in the top 40s or 50s.

= Sorbonne University
{c}
{parent=university-of-paris}
{title2=2018-}

= Pierre and Marie Curie University
{c}
{parent=sorbonne-university}
{title2=UPMC, Paris 6, 1971-2017}
{wiki}

= German university
{c}
{parent=university}

= Karlsruhe Institute of Technology
{c}
{parent=german-university}
{title2=KIT}
{wiki}

= Italian university
{c}
{parent=university}

= University of Bologna
{c}
{parent=italian-university}
{wiki}

= Academia
{parent=education}
{wiki=Academy}

= Academic
{synonym}

= Academic fraud
{parent=academia}
{wiki}

= Academic misconduct
{synonym}

= Jan Hendrik Schön
{c}
{parent=academic-fraud}

= Schön scandal
{c}
{parent=jan-hendrik-schon}
{wiki=Schön_scandal}

One is reminded of \x[nick-leeson].

One things must be said: the root cause of all of this is the \x[replication-crisis].

This is why he managed to go on for so long.

People felt it was normal to have to try for one or two years to replicate a paper.

\Video[https://www.youtube.com/watch?v=nfDoml-Db64]
{title=The man who almost faked his way to a \x[nobel-prize] by BobbyBroccoli (2021)}
{description=Playlist: https://www.youtube.com/watch?v=nfDoml-Db64&list=PLAB-wWbHL7Vsfl4PoQpNsGp61xaDDiZmh&index=1}

= Research group
{parent=academia}
{wiki}

= Academic publishing
{parent=academia}
{wiki}

\x[guerilla-open-access-manifesto-by-aaron-swartz-2008].

Key \x[physics] papers from the 50's are still \x[copyright] encumbered as of 2020, see e.g. \x[lamb-retherford-experiment]. Authors and reviewers got nothing for it. Something is wrong.

= Academic journal
{parent=academic-publishing}
{wiki}

= German physics journal
{parent=academic-journal}

= Session reports of the Royal Prussian Academy of Sciences at Berlin
{parent=german-physics-journal}
{title2=Sitzungsberichte der Königlich Preussischen Akademie der Wissenschaften zu Berlin}

Publications by the \x[prussian-academy-of-sciences].

Links to their publications: https://de.wikisource.org/wiki/Sitzungsberichte_der_K%C3%B6niglich_Preu%C3%9Fischen_Akademie_der_Wissenschaften_zu_Berlin

Notable papers:
* \x[gravity-and-electricity-by-hermann-weyl-1918]{child}

= Annalen der Physik
{c}
{title2=Annals of Physics, 1799-}
{parent=german-physics-journal}
{wiki}

Notable papers:
* \x[annus-mirabilis-papers]

= Zeitschrift für Physik
{c}
{title2=Journal for Physics, 1920-1997}
{parent=german-physics-journal}
{wiki}

Belongs to \x[springer], so you can still find papers under paywalls on their website.

Notable papers:
* \x[quantum-mechanical-re-interpretation-of-kinematic-and-mechanical-relations-by-heisenberg-1925] on volume 33

= Academic paper
{parent=academic-publishing}
{wiki}

= Replication crisis
{parent=academic-paper}
{wiki}

Of course, if \x[academic-journal]{p} require greater reproducibility, then the cost per paper increases.

However, that cost has to be smaller than the cost everyone who reads the paper spends to reproduce, no?

The truth is, part of the replication crisis is also due to \x[research-group]{p} not wanting to share their precious secrets with others, so they can keep ahead of the publication curve, or maybe spin off a \x[startup].

\x[ciro-santilli] wants to help in this area with his \x[videos-of-all-key-physics-experiments] project idea.

= Review article
{parent=academic-paper}
{wiki}

= Review paper
{synonym}

= Academic publisher
{parent=academic-publishing}
{wiki}

= Springer Science+Business Media
{c}
{parent=academic-publisher}
{wiki}

= Springer
{c}
{synonym}

= Open access academic publisher
{parent=academic-publisher}

= eLife
{c}
{parent=open-access-academic-publisher}
{wiki}

= MDPI
{c}
{parent=open-access-academic-publisher}
{wiki}

= Open access
{parent=academic-publishing}
{wiki}

= Doctor of Philosophy
{parent=academia}
{wiki}

= PhD
{c}
{synonym}
{title2}

= All but dissertation
{parent=doctor-of-philosophy}
{title2=ABD}
{wiki}

= Research institute
{parent=education}

= Biology research institute
{parent=research-institute}

= Cold Spring Harbor Laboratory
{c}
{parent=biology-research-institute}
{wiki}

A hot hot place.

= J. Craig Venter Institute
{c}
{parent=biology-research-institute}
{wiki}

Founded by \x[craig-venter] by joining up other existing institutes.

= MRC Laboratory of Molecular Biology
{c}
{parent=biology-research-institute}
{wiki}

These people don't fuck around.

= Company research institute
{parent=research-institute}

Ah, some of the coolest places on Earth?
* \x[bell-labs]{child}
* \x[google-x]{child}

= Bell Labs
{c}
{parent=company-research-institute}
{wiki}

Original headquarters and laboratories: 463 West Street in \x[new-york], \x[manhattan] area. On \x[surely-you-re-joking-mr-feynman] Feynman mentions that in 1941 they could see the construction of the George Washington Bridge, presumably from that building, when \x[william-shockley] brought him over to visit to get a job there. However, the actual 

Later:
* 1967 \x[bell-labs-murray-hill]

Some interesting videos:
* https://www.youtube.com/watch?v=7qkizPs2kdw

= Bell Labs Holmdel Complex
{c}
{parent=company-research-institute}
{wiki}

101 Crawfords Corner Rd Holmdel, NJ 07733 USA

It started with radio research apparently, including \x[karl-guthe-jansky].

\Video[https://www.youtube.com/watch?v=BPq_ZyOvbsg]
{title=Holmdel 20th Anniversary, a history of the legendary Bell Labs facility designed by Eero Saarinen by AT&T Tech Channel (1982)}

= Bell Labs Murray Hill
{c}
{parent=company-research-institute}

600 Mountain Ave bldg 5, New Providence, NJ 07974, \x[united-states].

Became headquarters in 1967,

Drone footage: https://www.youtube.com/watch?v=z0Ld2KFjaC8 Bell LABS Headquarters Murray Hill NJ in 4K Drone Flight by ESTOUCHFPV (2017)

Notable inventions made there:
* the first \x[transistor]
* TODO confirm  \x[c-programming-language]

= Skunk Works
{c}
{parent=company-research-institute}
{wiki}

= Physics research institute
{parent=research-institute}

= National Institute of Standards and Technology
{c}
{parent=physics-research-institute}
{wiki}

= NIST
{c}
{synonym}
{title2}

These people are serious.

= United States Department of Energy national laboratories
{c}
{parent=physics-research-institute}
{wiki}

Where \x[nuclear-weapon]{p} and \x[nuclear-power], and a ton of derived research is made.

For a fun and brief random \x[software] encounter with that universe, see the VisIt section of https://stackoverflow.com/questions/5854515/interactive-large-plot-with-20-million-sample-points-and-gigabytes-of-data/55967461#55967461[].

= Argonne National Laboratory
{c}
{parent=united-states-department-of-energy-national-laboratories}
{wiki}

This is where they moved the \x[chicago-pile-1] after they decided it might be a bad idea to run \x[chicago-pile-1][highly experimental nuclear reactions] right in the middle of one of the most populous cities of the \x[united-states].

After it was reassembled, the \x[chicago-pile-1] was renamed as Chicago Pile 2 (CP2).

So more precisely, it is a continuation of the \x[metallurgical-laboratory].

It's still not that far though, only about 20 kilometers, and today is also a populated area.

\x[ciro-santilli] maintains that they chose the site because the name is so cool. Wikipedia says it is derived from the https://en.wikipedia.org/wiki/Forest_of_Argonne[Forest of Argonne], maybe it even shared etymology with the element \x[argon].

= Fermilab
{c}
{parent=united-states-department-of-energy-national-laboratories}
{wiki}

= Los Alamos National Laboratory
{c}
{parent=united-states-department-of-energy-national-laboratories}
{wiki}

= Los Alamos Laboratory
{c}
{parent=los-alamos-national-laboratory}
{wiki}

Name of the site during the \x[manhattan-project].

= Oak Ridge National Laboratory
{c}
{parent=united-states-department-of-energy-national-laboratories}
{wiki}

Located in \x[tennessee] in the East of the \x[united-states].

This is where the \x[x-10-graphite-reactor] was located.

= X-10 Graphite Reactor
{c}
{parent=oak-ridge-national-laboratory}
{title2=1943-11-04}
{wiki}

An intermediate step between the \x[nuclear-chain-reaction] prototype \x[chicago-pile-1] and the full blown mass production at \x[hanford-site]. Located in the \x[oak-ridge-national-laboratory].

= Clinton Engineer Works
{c}
{parent=physics-research-institute}
{wiki}

Produced the \x[enriched-uranium] used for \x[little-boy], located in the area/predecessor of \x[oak-ridge-national-laboratory].

= Learned society
{parent=education}
{wiki}

= American learned society
{parent=learned-society}

= American Physical Society
{c}
{parent=american-learned-society}
{wiki}

= Reviews of Modern Physics
{c}
{parent=american-physical-society}
{title2=1929-}
{wiki}

= Physical review
{c}
{parent=american-physical-society}
{title2=1893-}
{wiki}

= National Academy of Sciences
{c}
{parent=american-learned-society}
{wiki}

= British learned society
{c}
{parent=learned-society}

= Institute of Physics
{c}
{parent=british-learned-society}

= Physics World
{c}
{parent=institute-of-physics}

Magazine of the \x[institute-of-physics].

= Royal Society
{c}
{parent=british-learned-society}
{wiki}

They do two things:
* make a closed source science journal with insanely high https://en.wikipedia.org/wiki/Impact_factor[impact factor] as of 2019
* gamify science by letting (mostly \x[united-kingdom][mostly British]) dudes like Newton and \x[paul-dirac] add \x[post-nominal-letters][some random letters] after their real names to show off

= Post-nominal letters
{parent=royal-society}
{wiki}

One of \x[ciro-santilli-s-selfish-desires].

= German learned society
{c}
{parent=learned-society}

= Prussian Academy of Sciences
{c}
{parent=german-learned-society}
{title2=1700-1990}
{wiki}

Published as \x[session-reports-of-the-royal-prussian-academy-of-sciences-at-berlin].

= Exam
{parent=education}
{wiki=Test_(assessment)}

Exams are useless. Exams must be abolished. The only metrics that matter are \x[money] and fame. See also: \x[write-free-books-to-get-famous-website/motivation].

Once the question of an exam has been formulated, the usefulness of the problem is already been completely destroyed, because formulating the problem that matters is the most important part of things. And any problem with an answer, is useless to put effort into: \x[how-to-teach/give-answers].

Furthermore, preventing people from searching for answers while answering an exam, AKA preventing "cheating", also makes absolutely no sense. In the real world, we want people to find answers as quickly as possible! We should be teaching people how to "cheat"! What we should teach them instead is what a \x[fucking] \x[license] is, and what you have to do to comply with it.

And if you must absolutely have exams, they must be open to anyone who wants to applies. Then people have to pay to take the exam, with subsidies for "official course takers", who are spending 100x more anyways due to not living with their parents.

And if you pass the exam, you pass the course, without any further time requirements.

And those exams must be applied by professional test application companies to ensure no cheating and to factor out the anti-cheat work, while still making the tests available to people anywhere.

A quote from \x[richard-feynman] present in the book \x[surely-you-re-joking-mr-feynman-chapter-o-americano-outra-vez]:
\Q[
You cannot get educated by this self-propagating system in which people study to pass exams, and teach others to pass exams, but nobody knows anything.

You learn something by doing it yourself, by asking questions, by thinking, and by experimenting.
]

The only metric that matters is "to feel that you've satisfied youre curiosity". When one studies for that, it can take a lot more time to actually learn everything, because it is sometimes not as clear when you should stop. But it is the only way to go deeper.

A person's understanding is the most \x[illiquid] asset that exists, to judge that based only on standardized exams, is a certain way to fail to identify top talent.

Related: \x[how-to-teach/exams-and-homework-are-useless-only-projects-matter]

= Homework
{parent=exam}
{wiki}

Same remarks as \x[exam]{full}.

= Government
{parent=social-technology}
{wiki}

= Democracy
{parent=government}
{wiki}

= Voting
{parent=democracy}
{wiki}

= Vote
{synonym}

= Electronic voting
{parent=voting}
{wiki}

This is a must if the people want to regain control of their society from apathetic politicians.

I would also increase voter percentage due to convenience, and reduce the weight of voting fraud cases, as everyone would be able to check that their own vote was counted correctly.

And then, we would be able to have \x[referendum]{p} for basically any important decision being made. No need to go out on the streets and waste your time in a mass protest! Just vote!

It is possible to implement anonymous electronic voting with \x[ring-signature]{p}, an algorithm also used by \x[monero], an \x[anonymity] focused \x[cryptocurrency], as mentioned e.g. on this 2004 paper https://eprint.iacr.org/2004/281.pdf[]. The system can be set in a way such that you can only deanonymize someone if everyone else, or a very large number of people, conspire against that person.

The same system could also be used to setup forums where only citizens of the country could comment and propose changes and vote on them.

With electronic voting, we could have a system where you can let someone you trust vote for you automatically, or vote automatically for certain subjects alone, a bit like we do by electing senators. But then you would also be able to override specific votes if you wanted to.

In this system therefore, anyone who can proxy vote has to have their vote public, and placed in a decent website that shows clearly who voted for what.

= Referendum
{parent=voting}
{wiki}

= Dictatorship
{parent=government}
{wiki}

\x[china] related: https://cirosantilli.com/china-dictatorship/dictatorship

= Tax
{parent=government}
{wiki}

= Taxation
{synonym}

= Fiscal paradise
{parent=tax}
{wiki}

Fiscal paradises must be invaded and destroyed.

= Legal tender
{parent=tax}
{wiki}

= Tax the rich
{parent=tax}
{wiki}

\Video[https://www.youtube.com/watch?v=t6V9i8fFADI]
{title=How the rich avoid paying taxes by Vox (2021)}
{description=Features interview with Morris Pearl, a rich dude that is campaigning to tax the rich. He also participates in an association called  https://patrioticmillionaires.org/about/["Patriotic Milionairs"] to further this agenda.}

= Redistribution of wealth
{parent=tax-the-rich}

= Progressive tax
{parent=tax-the-rich}
{wiki}

= Wealth tax
{parent=tax-the-rich}
{wiki}

Obviously coupled with measures to prevent \x[capital-flight]. This would be a required step to achieve \x[ciro-santilli]'s dream of \x[unconditional-basic-income].

Why don't the poor vote in mass for it is incomprehensible considering e.g. the \x[wealth-inequality-in-the-united-states] as of 2020!
* https://www.jstor.org/stable/20027743?seq=1#metadata_info_tab_contents
* https://www.washingtonpost.com/news/monkey-cage/wp/2018/02/27/why-the-poor-dont-vote-to-soak-the-rich/

Perhaps the election of \x[donald-trump] in 2016 woke up the \x[democrat]{p} at last, that they were just making empty promises without actually benefiting the poor? https://www.vox.com/2019/3/19/18240377/estate-tax-wealth-tax-70-percent-warren-sanders-aoc[]. Or is just another facade?

Bibliography:
* https://www.npr.org/sections/money/2019/02/26/698057356/if-a-wealth-tax-is-such-a-good-idea-why-did-europe-kill-theirs If a Wealth Tax is Such a Good Idea, Why Did Europe Kill Theirs?
* https://www.youtube.com/watch?v=XzonR81vVzM The Mayfair Set, Episode 2 - Entrepreneur Spelt S.P.I.V. (1999) by Adam Curtis explains nicely how in the 60's, https://en.wikipedia.org/wiki/Jim_Slater_(accountant)[Jim Slater] bought stock of inefficient companies, and sold off inefficient assets to make a profit.

  He managed to do that because previously people had regarded those companies as family companies, and never looked into the fact that they families weren't actually majority shareholders anymore.

  While this increased efficiency, it also fired many people, and the government didn't manage to change legislation fast enough to \x[tax] those profits to increase welfare.

= Law
{parent=social-technology}
{wiki}

= Legal
{synonym}

= Illegal
{synonym}

= Legality
{synonym}

= Illegality
{synonym}

= Legally
{synonym}

= Illegally
{synonym}

= Legalize
{synonym}

= Intellectual property
{parent=law}
{title2=IP}
{wiki}

= Patent
{parent=intellectual-property}
{wiki}

= Patented
{synonym}

= Crime
{parent=law}
{wiki}

Some types of crimes include:
* \x[cyber-crime]{child}

= Fraud
{parent=crime}
{wiki}

= Bait-and-switch
{parent=fraud}
{wiki}

= Clickbait
{parent=bait-and-switch}
{wiki}

= Clickbaity
{synonym}

= Organized crime
{parent=crime}
{wiki}

= Punishment
{parent=crime}
{wiki}

= Crucifixion
{parent=punishment}
{wiki}

= Crucify
{synonym}

= Crucified
{synonym}

= Theft
{parent=crime}
{wiki}

= Freedom of speech
{parent=law}
{wiki}

For \x[ciro-santilli]'s campaign for freedom of speech in China: \x[cirosantilli-china-dictatorship]{full}.

Ciro has the radical opinion that absolute freedom of speech must be guaranteed by \x[law] for anyone to talk about absolutely anything, anonymously if they wish, with the exception only of copyright-related infringement.

And Ciro believes that there should be no age restriction of access to any information.

People should be only be punished for actions that they actually do in the real world. Not even purportedly planning those actions must be punished. Access and ability to publish information must be completely and totally free.

If you don't like someone, you should just block them, or start your own campaign to prepare a counter for whatever it is that they are want to do.

This freedom does not need to apply to citizens and organizations of other countries, only to citizens of the country in question, since foreign governments can create influence campaigns to affect the rights of your citizens. More info at: https://cirosantilli.com/china-dictatorship/mark-government-controlled-social-media

Limiting foreign influence therefore requires some kind of nationality check, which could harm \x[anonymity]. But Ciro believes that almost certainly such checks can be carried out in anonymous blockchain consensus based mechanisms. Governments would issues nationality tokens, and tokens are used for anonymous confirmations of rights in a way that only the token owner, not even the government, can determine who used the token. E.g. something a bit like what \x[monero] does. Rights could be checked on a once per account basis, or yearly basis, so transaction costs should not be a big issue. Maybe expensive proof-of-work systems can be completely bypassed to the existence of this central token authority?

Some people believe that freedom of speech means "freedom of speech that I agree with". Those people should move to \x[china] or some other \x[dictatorship].

Related: https://cirosantilli.com/china-dictatorship/hate-speech

= Censorship
{parent=freedom-of-speech}
{wiki}

The opposite of \x[freedom-of-speech].

For \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][censorship in China] see: https://cirosantilli.com/china-dictatorship/censorship

= License
{parent=law}
{wiki}

= Licensed
{synonym}

Related:
* \x[freely-licensed-bibles]{child}

= Copyright
{parent=license}
{wiki}

= Freedom of panorama
{parent=license}
{wiki}

= Free license
{parent=license}
{wiki}

= Creative Commons license
{c}
{parent=free-license}
{wiki}

= Creative Commons
{c}
{synonym}

= CC BY
{c}
{parent=creative-commons-license}

= CC BY-SA
{c}
{parent=creative-commons-license}

This one strikes the right balance between restriction and permissions. NC and ND are simply too restrictive.

TODO where does the SA boundary end? E.g.:
* \x[software]: https://opensource.stackexchange.com/questions/173/what-do-i-need-to-share-if-i-include-cc-by-sa-artwork-in-my-software/11323#11323
* \x[video-game]:
  * https://gamedev.stackexchange.com/questions/92536/is-it-legal-to-use-creative-commons-art-in-a-commercial-game/189293#189293
  * https://www.reddit.com/r/creativecommons/comments/5nn01q/using_sharealike_music_in_a_video_game_must_i/
* \x[website]: https://graphicdesign.stackexchange.com/questions/68805/using-cc-by-sa-3-0-images-in-website-does-share-alike-affect-my-websites-lice/145124#145124
* book: https://academia.stackexchange.com/questions/48375/using-images-with-cc-by-sa-license-in-slides-or-a-thesis
* \x[music] in a podcast: https://opensource.stackexchange.com/questions/7022/using-cc-by-sa-music-in-a-podcast

Does source code need to be redistributed: https://opensource.stackexchange.com/questions/1849/does-the-cc-by-sa-license-require-that-source-code-of-derivative-works-be-shared

Case law list on the CC wiki: https://wiki.creativecommons.org/wiki/Category:Case_Law

= CC BY-NC-SA
{c}
{parent=creative-commons-license}

Too restrictive. People should be able to make money from stuff.

The definition of "commercial" could also be taken in extremely broad senses, making serious reuse risky in many applications.

Notably, many \x[university] courses use it, notably \x[mit-opencourseware]. Ciro wonders if it is because \x[academic]{p} are wary of \x[industry], or if they want to make money from it themselves. This reminds Ciro of a documentary he watched about the origins of one an early \x[web-browser]{p} in some \x[american] university. And then that university wanted to retain copyright to make money from it. But the PhDs made a separate company nonetheless. And someone from the company rightly said something along the lines of:
\Q[The goal of \x[university]{p} is to help create companies and to give back to society like that. Not to try and make money from inventions.]
TODO source.

= Software license
{parent=license}
{wiki}

= Affero General Public License
{c}
{parent=software-license}
{wiki}

= AGPL
{c}
{synonym}

= Server Side Public License
{c}
{parent=affero-general-public-license}
{title2=SSPL}
{wiki}

Created by \x[mongodb], attempts to be even more restrictive than \x[agpl] by more explicitly saying that indirect automatic requests are also included in the "you must give source" domain: https://opensource.stackexchange.com/questions/8025/difference-between-mongodb-sspl-and-gnu-agpl

The base use case is:
* client contacts server software, e.g. a \x[python] program
* \x[python] contacts the \x[database], and returns results back to the client
which is what MongoDB is trying to ensure, which sounds fair.

= MIT License
{c}
{parent=software-license}
{wiki}

= Software license that starts closed and becomes open once a certain amount of money is raised
{parent=software-license}

This is an interesting licensing model that might just scale.

= Sponsorware
{parent=software-license-that-starts-closed-and-becomes-open-once-a-certain-amount-of-money-is-raised}

https://calebporzio.com/sponsorware

= Management
{parent=social-technology}
{wiki}

\Video[https://www.youtube.com/watch?v=GsN0WVLjpcs]
{title=DealBook Conference 2015 - Activist Investing by \x[new-york-times] Events (2015)}
{description=At this timestamp, Carl Icahn tells an anecdote of how he found that an entire 12-floor building of the https://en.wikipedia.org/wiki/American_Car_and_Foundry_Company[American Car and Foundry Company] which he had recently bought was not doing anything useful, and fired the entire building.}
{start=377}

= Marketing
{parent=social-technology}
{wiki}

= Advertising
{parent=marketing}
{wiki}

= Chumbox
{parent=advertising}
{wiki}

\x[clickbait]{c} advertisement

= Taboola
{parent=advertising}
{wiki}

Taboola is a \x[clickbait] trained neural network. Which happens to have been written by \x[adolf-hitler].

= Meal deal
{parent=marketing}
{wiki}

= Media
{disambiguate=communication}
{parent=social-technology}
{wiki}

= Media company
{parent=media-communication}

= Vice News
{c}
{parent=media-company}
{wiki}

= Newspaper
{parent=media-communication}
{wiki}

= New York Times
{c}
{parent=newspaper}
{wiki}

= Social media
{parent=media-communication}

Basically a \x[social-network] where you don't know the other people very well.

= Social network
{parent=social-media}
{wiki}

Related:
* \x[social-media]

= Distributed social network
{parent=social-media}
{wiki}

= Federated social network
{synonym}

* \x[mastodon-software]{child}

= List of social media
{parent=social-media}
{wiki}

= Facebook
{c}
{parent=list-of-social-media}
{wiki}

= Instagram
{c}
{parent=facebook}
{wiki}

\x[ciro-santilli] is just too old to understand what the point of that website is compared to \x[twitter]. There must be one, right?

Also, it is impossible to use it on the \x[browser] without a \x[cell-phone], similar critique as \x[messaging-software-that-force-you-to-have-a-mobile-phone]{full} but a bit more aggravating, because, well, you would expect creators want people to see their stuff on a \x[browser] unlike private messages?

= Mark Zuckerberg
{c}
{parent=facebook}
{wiki}

= Zuckerberg
{c}
{synonym}

= Mastodon
{c}
{disambiguate=software}
{parent=list-of-social-media}
{wiki}

Of course those racist \x[nazi]{p} are a bunch of idiots, but how can you be surprised when freedom-of-speech focused tech gets used by them? https://www.theverge.com/2019/7/12/20691957/mastodon-decentralized-social-network-gab-migration-fediverse-app-blocking

Obviously, a few large instances dominate the user base for all practical purposes: https://kevq.uk/centralisation-and-mastodon/[]. And likely the network splits into hate-speech/non-hate-speech blacklist boundaries. And since the dominating closed networks will never lose user counts (???), the only instance that dominates will be the main hate speech one.

The flagship instance was https://mastodon.social[] and then in 2020 they closed signups for it and created a secondary https://mastodon.online[].

= LinkedIn
{c}
{parent=list-of-social-media}
{wiki}

LinkedIn fully complies with censorship imposed locally by the \x[chinese-government], and does so in a non-transparent way: https://cirosantilli.com/china-dictatorship/linkedin It is hard to understand what the point of that website is, as it is basically just a more closed version of \x[facebook].

Impossible to hide your current location?
* https://www.quora.com/How-can-I-hide-my-location-on-LinkedIn
* https://www.reddit.com/r/linkedin/comments/342uwu/hide_my_location/

= Twitter
{c}
{parent=list-of-social-media}
{wiki}

\x[ciro-santilli]'s accounts: \x[ciro-santilli-s-twitter-accounts]{full}.

https://twitter.com/zaikandongxi

= Money
{parent=social-technology}
{wiki}

= Asset
{parent=money}
{wiki}

= Cryptocurrency
{parent=money}
{wiki}

The key difficulties of cryptocurrencies are:
* how do transaction fees/guarantees/times compare to centralized systems such as credit cards:
  * https://bitcoin.stackexchange.com/questions/1261/is-it-possible-to-send-bitcoins-without-paying-a-fee "The Blockchain Scalability Problem & the Race for Visa-Like Transaction Speed" (2019)

    \Q[The battle for a scalable solution is the blockchain's moon race. Bitcoin processes 4.6 transactions per second. Visa does around 1,700 transactions per second on average (based on a calculation derived from the official claim of over 150 million transactions per day).]
  * https://towardsdatascience.com/the-blockchain-scalability-problem-the-race-for-visa-like-transaction-speed-5cce48f9d44
  Obviously, decentralized currencies cannot be cheaper to maintain than centralized ones, since with decentralization you still have to send network messages at all times, and instead of one party carrying out computations, multiple parties have to carry out computations.

  Crypto could however be close enough in price to centralized systems that it becomes viable, this can be considered.
* how can \x[government]{p} \x[tax] cryptocurrency. Notably, because:
  * taxation has to be \x[progressive-tax][progressive], e.g. \x[wealth-tax][we have to tax the rich more than the poor], and \x[anonymity] in transactions would weaken that
  * it would be even easier to move money into \x[fiscal-paradise]{p}, and then just say, oops, lost my passwords, those coins are actually gone
  See also \x[globalization-reduces-the-power-of-governments].
Until those problems are solved, the only real applications of cryptocurrency will by \x[illegal] activities, notably buying \x[drug]{p}, paying for \x[ransomware]. But also paying for anti-\x[censorship] services from inside \x[dictatorship]{p}. It is for this reason that \x[ciro-santilli] believes that \x[privacy-coin]{p} are the best investments until then. People concerned with their privacy are likely to more naturally make fewer larger payments to reduce exposure, and therefore transaction fees matter less, and can be seen as a reasonable privacy \x[tax].

If crypto really takes off, 99.99% of people will only ever use it through some \x[cryptocurrency-exchange] (unless scalability problems are solved, and they replace \x[fiat-currency]{p} entirely), so the experience will be very similar to \x[paypal], and without "true" decentralization.

For those reasons, \x[ciro-santilli] instead believes that governments should issue \x[electronic-money], and maintain an open \x[api] that all can access instead. The centralized service will always be cheaper for \x[society] to maintain than any distributed service, and it will still allow for proper taxation.

Ciro believes that it is easy for people to be seduced by the \x[idealistic] promise that "cryptocurrency will make the world more fair and equal by giving everyone equal opportunities, away from the corruption of Governments". Such optimism that new \x[technology]{p} will solve certain key \x[social] problems without the need for constant \x[government] intervention and management is not new, as shown e.g. at \x[hypernormalisation-by-adam-curtis-2016] when he talks about the cyberspace (when the \x[internet] was just beginning): https://youtu.be/fh2cDKyFdyU?t=2375[]. Technologies can make our lives better. But in general, some of them also have to be managed.

In any case, cryptocurrencies are \x[bullshit], the true currency of the future is going to be \x[magic-the-gathering] cards. And \x[cirocoin].

One closely related thing that Ciro Santilli does think could be interesting exploring right now however, notably when having \x[monero]-like anonymity in mind, would be anonymous \x[electronic-voting].

= Privacy coin
{parent=cryptocurrency}

Notable ones:
* \x[monero]

= List of cryptocurrencies
{parent=cryptocurrency}

= Bitcoin
{c}
{parent=list-of-cryptocurrencies}
{wiki}

= Bitcoin blockchain
{c}
{synonym}

How it works: \x[how-bitcoin-works]{full}.

Official website: https://bitcoin.org/en/

Reference implementation: \x[bitcoin-core].

= How Bitcoin works
{parent=bitcoin}

Here is a very direct description of the system:
* each transaction (transaction is often abbreviated "tx") has a list of inputs, and a list of outputs
* each input is the output of a previous transaction. You verify your identity as the indented receiver by producing a \x[digital-signature] for the \x[public-key] specified on the output
* each output specifies the \x[public-key] of the receiver and the value being sent
* the sum of output values cannot obvious exceed the sum of input values. If it is any less, the leftover is sent to the miner of the transaction as a transaction fee, which is an incentive for mining.
* once an output is used from an input, it becomes marked as spent, and cannot be reused again. Every input uses the selected output fully. Therefore, if you want to use an input of 1 BTC to pay 0.1 BTC, what you do is to send 0.1 BTC to the receiver, and 0.9 BTC back to yourself as change. This is why the vast majority of transactions has two outputs: one "real", and the other change back to self.
\x[code-sample-bitcoin-transaction-graph] illustrates these concepts:
* `tx0`: magic transaction without any inputs, i.e. either \x[genesis-block] or a coinbase mining reward. Since it is a magic transaction, it produces 3 Bitcoins from scratch: 1 in `out0` and 2 in `out1`
* `tx1`: regular transaction that takes:
  * a single input from `tx0 out0`, with value 1
  * produces two outputs:
    * `out0` for value 0.5
    * `out1` for value 0.3
  * this means that there was 0.2 left over from the input. This value will be given to the miner that mines this transaction.
  Since this is a regular transaction, no new coins are produced.
* `tx2`: regular transaction with a single input and a single output. It uses up the entire input, leading to 0 miner fees, so this greedy one might (will?) never get mined.
* `tx3`: regular transaction with two inputs and one output. The total input is 2.3, and the output is 1.8, so the miner fee will be 0.5

``
                   tx1                     tx3
  tx0            +---------------+       +---------------+
+----------+     | in0           |       | in0           |
| out0     |<------out: tx0 out0 |  +------out: tx1 out1 |
| value: 1 |     +---------------+  |    +---------------+
+----------+     | out0          |  |    | in1           |
| out1     |<-+  | value: 0.5    |  | +----out: tx2 out0 |
| value: 2 |  |  +---------------+  | |  +---------------+
+----------+  |  | out1          |<-+ |  | out1          |
              |  | value: 0.3    |    |  | value: 1.8    |
              |  +---------------+    |  +---------------+
              |                       |
              |                       |
              |                       |
              |    tx2                |
              |  +---------------+    |
              |  | in0           |    |
              +----out: tx0 out1 |    |
                 +---------------+    |
                 | out0          |<---+
                 | value: 2      |
                 +---------------+
``
{title=Sample \x[bitcoin] transaction \x[graph].}

Since every input must come from a previous output, there must be some magic way of generating new coins from scratch to bootstrap the system. This mechanism is that when the miner mines successfully, they get a mining fee, which is a magic transaction without any valid inputs and a pre-agreed value, and an incentive to use their power/compute resources to mine. This magic transaction is called a "https://en.bitcoin.it/wiki/Coinbase[coinbase transaction]".

The key innovation of Bitcoin is how to prevent double spending, i.e. use a single output as the input of two different transactions, via mining.

For example, what prevents me from very quickly using a single output to pay two different people in quick succession?

The solution are the blocks. Blocks \x[discretize] transactions into chunks in a way that prevents double spending.

A block contains:
* a list of transactions that are valid amongst themselves. Notably, there can't be double spending within a block.

  People making transactions send them to the network, and miners select which ones they want to add to their block. Miners prefer to pick transactions that are:
  * small, as less bytes means less hashing costs. Small generally means "doesn't have a gazillion inputs/outputs".
  * have higher transaction fees, for obvious reasons
* the ID of its parent block. Blocks therefore form a linear linked list of blocks, except for temporary ties that are soon resolved. The longest known list block is considered to be the valid one.
* a nonce, which is an integer chosen "arbitrarily by the miner"

For a block to be valid, besides not containing easy to check stuff like double spending, the miner must also select a nonce such that the hash of the block starts with N zeroes.

For example, considering the transactions from \x[code-sample-bitcoin-transaction-graph], the block structure shown at \x[code-sample-bitcoin-blockchain] would be valid. In it `block0` contains two transactions: `tx0` and `tx1`, and `block1` also contains two transactions: `tx2` and `tx3`.

``
 block0           block1             block2
+------------+   +--------------+   +--------------+
| prev:      |<----prev: block0 |<----prev: block1 |
+------------+   +--------------+   +--------------+
| txs:       |   | txs:         |   | txs:         |
| - tx0      |   | - tx2        |   | - tx4        |
| - tx1      |   | - tx3        |   | - tx5        |
+------------+   +--------------+   +--------------+
| nonce: 944 |   | nonce: 832   |   | nonce: 734   |
+------------+   +--------------+   +--------------+

``
{title=Sample \x[bitcoin] blockchain.}

The `nonce`s are on this example arbitrary chosen numbers that would lead to a desired hash for the block.

`block0` is the \x[genesis-block], which is magic and does not have a previous block, because we have to start from somewhere. The network is hardcoded to accept that as a valid starting point.

Now suppose that the person who created `tx2` had tried to double spend and also created another transaction `tx2'` at the same time that looks like this:
``
  tx2'
+---------------+
| in0           |
| out: tx0 out1 |
+---------------+
| out0          |
| value: 2      |
+---------------+
``
Clearly, this transaction would try to spend `tx0 out1` one more time in addition to `tx2`, and should not be allowed! If this were attempted, only the following outcomes are possible:
* `block1` contains `tx2`. Then when `block2` gets made, it cannot contain `tx2'`, because `tx0 out1` was already spent by `tx2`
* `block1` contains `tx2'`. `tx2` cannot be spent anymore
Notably, it is not possible that `block1` contains both `tx2` and `tx2'`, as that would make the block invalid, and the network would not accept that block even if a miner found a `nonce`.

Since hashes are basically random, miners just have to try a bunch of nonces randomly until they find one that works.

The more zeroes, the harder it is to find the hash. For example, on the extreme case where N is all the bits of the hash output, we are trying to find a hash of exactly 0, which is statistically impossible. But if e.g. N=1, you will in average have to try only two nonces, N=2 four nonces, and so on.

The value N is updated every 2 weeks, and aims to make blocks to take 10 minutes to mine on average. N has to be increased with time, as more advanced hashing hardware has become available.

Once a miner finds a nonce that works, they send their block to the network. Other miners then verify the block, and once they do, they are highly incentivized to stop their hashing attempts, and make the new valid block be the new parent, and start over. This is because the length of the chain has already increased: they would need to mine two blocks instead of one if they didn't update to the newest block!

Therefore if you try to double spend, some random miner is going to select only one of your transactions and add it to the block.

They can't pick both, otherwise their block would be invalid, and other miners wouldn't accept is as the new longest one.

Then sooner or later, the transaction will be mined and added to the longest chain. At this point, the network will move to that newer header, and your second transaction will not be valid for any miner at all anymore, since it uses a spent output from the first one that went in. All miners will therefore drop that transaction, and it will never go in.

The goal of having this mandatory 10 minutes block interval is to make it very unlikely that two miners will mine at the exact same time, and therefore possibly each one mine one of the two double spending transactions. When ties to happen, miners randomly choose one of the valid blocks and work on top of it. The first one that does, now has a block of length L + 2 rather than L + 1, and therefore when that is propagated, everyone drops what they are doing and move to that new longest one.

Bibliography:
* https://arstechnica.com/tech-policy/2020/12/how-bitcoin-works/

= Satoshi Nakamoto
{c}
{parent=bitcoin}
{wiki}

https://bitcoin.org domain registration: 2008-08-18 by https://www.namecheap.com[], an \x[american] company. But using a privacy oriented registrar: https://bitcoin.stackexchange.com/questions/89532/how-did-nakamoto-untraceably-pay-for-registering-bitcoin-org It is unknown how he could have paid anonymously, so it seems likely that the true identity could be obtained by law enforcement if needed.

2008-08-22: private \x[wei-dai] email. Reproduced at https://www.gwern.net/docs/bitcoin/2008-nakamoto[] on \x[gwern-net] from address `satoshi@anonymousspeech.com`. Email provider shutting down entirely on 2021-09-30 as per https://archive.ph/wip/RRNKx[], homepage now juts contains useless Bitcoin stuff.

\x[bitcoin-whitepaper] announcement: 2008-10-31 https://www.metzdowd.com/pipermail/cryptography/2008-October/014810.html linking to http://www.bitcoin.org/bitcoin.pdf[], email sent from from satoshi@vistomail.com Claimed one year and a half development time. Provider apparently closed in 2014: https://www.reddit.com/r/Bitcoin/comments/3h80mi/vistomailcom_closed_and_domain_changed_owner_in/[], as of 2021 just reads:
\Q[Once upon a time a man paid me a visit in cyberspace, at this very domain. He planted a seed in our heads that would become the path we are walking today.]

Replies in November: https://www.metzdowd.com/pipermail/cryptography/2008-November/thread.html#14863 under satoshi@anonymousspeech.com claims source code shared privately by request at that point.

First open source release: 9 January 2009. Announcement: https://www.metzdowd.com/pipermail/cryptography/2009-January/014994.html "Windows only for now. Open source C++ code is included" Arghhhhhh how can those libertarians use \x[microsoft-windows]??? Had a \x[gui] already.

2011-04-23 Satoshi sent his last email ever, it was to Martti Malmi. https://www.nytimes.com/2015/05/17/business/decoding-the-enigma-of-satoshi-nakamoto-and-the-birth-of-bitcoin.html mentions:
\Q[May 2011 was also the last time Satoshi communicated privately with other Bitcoin contributors. In an email that month to Martti Malmi, one of the earliest participants, Satoshi wrote, "I've moved on to other things and probably won't be around in the future."]

How Satoshi hid his mining \x[ip-address]:
* https://bitcoin.stackexchange.com/questions/91187/was-the-first-full-node-ip-address-satoshis-and-how-did-shim-hide-it

Hal Finney:
* Jan 11, 2009 https://twitter.com/halfin/status/1110302988 "Running Bitcoin"

= Adam Back
{c}
{parent=satoshi-nakamoto}
{wiki}

= Hashcash
{c}
{parent=adam-back}
{wiki}

= David Chaum
{c}
{parent=satoshi-nakamoto}
{wiki}

= ecash
{c}
{parent=david-chaum}
{wiki}

= Hal Finney
{c}
{disambiguate=computer scientist}
{parent=satoshi-nakamoto}
{wiki}

= Nick Szabo
{c}
{parent=satoshi-nakamoto}
{wiki}

= bit gold
{c}
{parent=nick-szabo}

= Wei Dai
{c}
{parent=satoshi-nakamoto}
{title2=戴维}
{wiki}

= b-money
{c}
{parent=wei-dai}

= Bitcoin whitepaper
{c}
{parent=satoshi-nakamoto}

Released by \x[satoshi-nakamoto] on the early \x[mailing-list] discussions where \x[bitcoin] was announced.

Reuploaded into the blockchain itself: https://bitcoin.stackexchange.com/questions/35959/how-is-the-whitepaper-decoded-from-the-blockchain-tx-with-1000x-m-of-n-multisi/105574#105574 by using the \x[satoshi-uploader].

More conveniently available at: https://bitcoin.org/bitcoin.pdf nowadays.

= Bitcoin script
{c}
{parent=bitcoin}

= Bitcoin non-standard transaction
{c}
{parent=bitcoin-script}

Full list at: https://github.com/cirosantilli/bitcoin-strings-with-txids/blob/master/data/utxo_nonstandard

Bibliography:
* https://bitcoin.stackexchange.com/questions/5883/is-there-a-listing-of-strange-or-unusual-scripts-found-in-transactions/105392#105392
* https://bitcoin.stackexchange.com/questions/547/useful-alternative-bitcoin-transaction-scripts
* https://bitcoin.stackexchange.com/questions/35956/non-standard-tx-with-obscure-op-codes-examples/36037#36037 notably provides the amazing https://www.quantabytes.com/articles/a-survey-of-bitcoin-transaction-types

Interesting ones:

* 77822fd6663c665104119cb7635352756dfc50da76a92d417ec1a12c518fad69 0 `OP_IF OP_INVALIDOPCODE None None OP_ENDIF`. The second constant contains an ASCII patch `Remove (SINGLE|DOUBLE)BYTE` so presumably this is a proof of concept.
+
https://bitcointalk.org/index.php?topic=5231222.0 duscusses what happens if there is an invalid opcode in a branch that is not taken.
+
Discussed at: https://bitcoin.stackexchange.com/questions/35956/non-standard-tx-with-obscure-op-codes-examples
* 4373b97e4525be4c2f4b491be9f14ac2b106ba521587dad8f134040d16ff73af 0 `OP_ADD OP_ADD None OP_EQUAL OP_NOTIF OP_RETURN OP_ENDIF OP_FROMALTSTACK None OP_DROP` is provably unspendable because it always falls on `OP_FROMALTSTACK` but nothing is ever placed in the ALTSTACK

= Invalid Bitcoin script
{c}
{parent=bitcoin}

They appear to be included, with rationale that you can already include syntactically valid crap in an unprovable way: https://github.com/bitcoin/bitcoin/issues/320 Better then have syntactically invalid crap that is provable.

The outputs of this transaction seem to be the first syntactically incorrect scripts of the blockchain: https://blockchain.info/tx/ebc9fa1196a59e192352d76c0f6e73167046b9d37b8302b6bb6968dfd279b767?format=json[], found by parsing everything locally. The transaction was made in 2013 for 0.1 BTC, which then became unspendable.

The first invalid script is just e.g. "script":"01", which says will push one byte into the stack, but then ends prematurely.

= Bitcoin Core
{c}
{parent=bitcoin}

Reference implementation?

Links:
* https://github.com/bitcoin/bitcoin
* https://bitcoin.org

Executables provided:
* `bitcoin-qt`

= How to store data in the Bitcoin blockchain
{parent=bitcoin}

There are apparently two methods:
* in the script, e.g. as in the \x[genesis-block-message]
* in output addresses

Specific implementations:
* http://eternitywall.it/ Eternity Wall

  Launched 2015 https://www.newsbtc.com/news/bitcoin/eternity-wall-records-1150-documents-blockchain-first-year/

  TODO find sample transactions. Did it support images?

  Shutdown sometime after 2019, working archive: https://web.archive.org/web/20190417074034/https://eternitywall.it/ says "Sorry, the service is not properly working at the moment..." and last working message timestamped "April 16, 2019 8:02 PM GMT".

Bibliography:
* https://bitcoin.stackexchange.com/questions/32575/what-methods-are-currently-used-to-embed-additional-data-into-the-bitcoin-blockc
* https://bitcoin.stackexchange.com/questions/39347/how-to-store-data-on-the-blockchain

= How to extract data from the Bitcoin blockchain
{parent=bitcoin}

TODO: it would be cool to have something like https://bitcoinstrings.com[] but including the actual transactions:

Local methods:
* https://github.com/cirosantilli/bitcoin-strings-with-txid
* https://bitcoin.stackexchange.com/questions/30295/how-can-i-search-for-transaction-text-on-the-blockchain
* https://bitcoin.stackexchange.com/questions/22500/is-there-a-lightweight-blockchain-parser-library-server/101472#101472
* https://github.com/alecalve/python-bitcoin-blockchain-parser
* https://bitcoin.stackexchange.com/questions/84266/wondering-how-to-use-bitcoin-parser
* https://github.com/bitcoinprivacy/Bitcoin-Graph-Explorer stores the blockchain in a database, and should allow more intelligent querying.

Further bibliography:
* https://bitcoin.stackexchange.com/questions/799/can-i-download-the-whole-block-chain-from-somewhere
* https://bitcoin.stackexchange.com/questions/68925/how-can-data-be-accessed-searched-for-in-a-blockchain
* https://bitcoin.stackexchange.com/questions/55188/download-single-and-specific-block-for-study-purposes
* https://www.fiverr.com/usefulshine/embed-your-logo-or-brand-art-on-blockchain user usefulshine from India embeds ASCII art for you into the blockchain starting at 260 dollars! XD

= Blockchain.info
{parent=how-to-extract-data-from-the-bitcoin-blockchain}

TODO who owns it? Are they reliable?

* transaction hex data: https://blockchain.info/tx/930a2114cdaa86e1fac46d15c74e81c09eee1d4150ff9d48e76cb0697d8e1d72?format=hex
* disassembled transaction as JSON: https://blockchain.info/tx/930a2114cdaa86e1fac46d15c74e81c09eee1d4150ff9d48e76cb0697d8e1d72?format=json
* block by height:
  * https://blockchain.info/block/0?format=json
  * https://blockchain.info/block/0?format=hex

This helper dumps a transaction JSON to a binary:
``
bitcoin-tx-out-scripts() (
    # Dump data contained in out scripts. Remove first 3 last 2 bytes of
    # standard transaction boilerplate.
    h="$1"
    echo curl "https://blockchain.info/tx/${h}?format=json" |
    jq '.out[].script' tmp.json |
    sed 's/"76a914//;s/88ac"//' |
    xxd -r -p > "${h}.bin"
)
``

= BitcoinStrings.com
{parent=how-to-extract-data-from-the-bitcoin-blockchain}

https://bitcoinstrings.com has all `strings -n20` strings, we can obtain the whole thing and clean it up a bit with:
``
wget -O all.html https://bitcoinstrings.com/all
cp all.html all-recode.html
recode html..ascii all-recode.html
awk '!seen[$0]++' all-recode.html > all-uniq.html
``
`awk` to skip the gazillion "mined by message" repeats.

A lot of in that website stuff appears to be cut up at the 20 mark. As shown in \x[cool-data-embedded-in-the-bitcoin-blockchain/force-of-will], this is possibly because they didn't use `-w` in `strings -n20`, and the text after the newlines was less than 20 characters.

That website can be replicated by downloading the \x[bitcoin] blockchain locally, then:
``
cd .bitcoin/blocks
for f in blk*.dat; do strings -n20 -w $f | awk '!seen[$0]++' > ${f%.dat}.txt; done
tail +n1 *.txt
``

Remove most of the binary crap:
``
head -n-1 *.txt | grep -e '[. ]' | grep -iv 'mined by' | less
``

= Satoshi uploader
{c}
{parent=how-to-extract-data-from-the-bitcoin-blockchain}

See also: https://bitcoin.stackexchange.com/questions/35959/how-is-the-whitepaper-decoded-from-the-blockchain-tx-with-1000x-m-of-n-multisi/105574#105574

By "Satoshi uploader" we mean the data upload script present in tx https://www.blockchain.com/btc/tx/4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17[4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17] of the \x[bitcoin-blockchain].

The uploader, and its accompanying downloader, are \x[python] programs stored in the blockchain itself. They are made to upload and download arbitrary data into the blockchain via RPC.

These scripts were notably used for: \x[cool-data-embedded-in-the-bitcoin-blockchain/illegal-content-of-block-229k]. The script did not maintain its popularity much after this initial surge up loads, likely all done by the same user: there are very very few uploads done after block 229k with the Satoshi uploader.

Our choice of name as "Satoshi uploader" is copied from \x[cool-data-embedded-in-the-bitcoin-blockchain/a-quantitative-analysis-of-the-impact-of-arbitrary-blockchain-content-on-bitcoin-by-matzutt-et-al-2018] because the scripts are Copyrighted Satoshi Nakamoto on the header comment, although as mentioned at \x[cool-data-embedded-in-the-bitcoin-blockchain/hidden-surprises-in-the-bitcoin-blockchain-by-ken-shirriff-2014] this feels very unlikely to be true.

A more convenient version of those scripts that can download directly from \x[blockchain-info] without the need for a full local node can be found at: https://github.com/cirosantilli/bitcoin-strings-with-txids/blob/master/download_tx_consts.py by using the `--satoshi` option. E.g. with it you can download the uploader script with:
``
./download_tx_consts.py --satoshi 4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17
mv 4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17.bin uploader.py
``

The scripts can be found in the blockchain at:
* uploader: tx 4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17 block 229991 reproduced at: https://gist.github.com/cirosantilli/ade4dde7c2f2f5020d792872681763e8

  The uploader https://gist.github.com/cirosantilli/ade4dde7c2f2f5020d792872681763e8#file-bitcoin-insertion-tool-py-L161[creates a standard Pay-to-PubkeyHash transaction] with a single output and data as a fake pubkey hash, and sends change to an address specified on the command line:
  ``
  ./bitcoinInsertionTool.py <data> <change-addr>
  ``
* downloader: tx 6c53cd987119ef797d5adccd76241247988a0a5ef783572a9972e7371c5fb0cc block 229991 reproduced at https://gist.github.com/cirosantilli/e90bd2e6c3fab25a20898e61e3ab3e90

  The downloader just https://gist.github.com/shirriff/64f48fa09a61b56ffcf9#file-bitcoin-file-downloader-py-L32[strips all operands], and keeps all data, notably where public key hashes would be normally put.

The uploader script uses its own cumbersome data encoding format, which we call the "Satoshi uploader format". The is as follows:
* ignore all script operands and constants less than 20 bytes (40 hex characters). And there are a lot of small operands, e.g. the uploader itself uses format https://www.blockchain.com/btc/tx/4b72a223007eab8a951d43edc171befeabc7b5dca4213770c88e09ba5b936e17 has a `OP_1`, data, `OP_3`, `OP_CHECKMULTISIG` pattern on every output script, so the `OP_1` and `OP_3` are ignored
* ignore the last output, which contains a real change transaction instead of arbitrary data. TODO why not just do what with the length instead?
* the first 4 bytes are the payload length, the next 4 bytes a \x[crc-32] signature. The payload length is in particular useful because of possible granularity of transactions. But it is hard to understand why a CRC-32 is needed in the middle of the largest \x[hash-tree] ever created by human kind!!! It does however have the adavantage that it allows us to more uniquely identify which transactions use the format or not.
This means that if we want to index certain file types encoded in this format, a good heuristic is to skip the first 9 bytes (4 size, 4 CRC, 1 `OP_1`) and look for file signatures.

Let's try out the downloader to download itself. First you have to be running a \x[bitcoin-core] server locally. Then, supposing `.bitcon/bitoin.conf` containing:
``
rpcuser=asdf
rpcpassword=qwer
server=1
txindex=1
``
we run:
``
git clone git://github.com/jgarzik/python-bitcoinrpc.git
git -C python-bitcoinrpc checkout cdf43b41f982b4f811cd4ebfbc787ab2abf5c94a
wget https://gist.githubusercontent.com/shirriff/64f48fa09a61b56ffcf9/raw/ad1d2e041edc0fb7ef23402e64eeb92c045b5ef7/bitcoin-file-downloader.py
pip install python-bitcoinrpc==1.0
BTCRPCURL=http://asdf:qwer@127.0.0.1:8332 \
  PYTHONPATH="$(pwd)/python-bitcoinrpc:$PYTHONPATH" \
  python3 bitcoin-file-downloader.py \
  6c53cd987119ef797d5adccd76241247988a0a5ef783572a9972e7371c5fb0cc
``
worked! The source of the downloader script is visible! Note that we had to wait for the sync of the entire blockchain to be fully finished for some reason for that to work.

Other known uploads in Satoshi format except from the first few:
* tx 89248ecadd51ada613cf8bdf46c174c57842e51de4f99f4bbd8b8b34d3cb7792 block 344068 see \x[ascii-art]
* tx 1ff17021495e4afb27f2f55cc1ef487c48e33bd5a472a4a68c56a84fc38871ec contains the ASCII text `e5a6f30ff7d43f96f61af05efaf96f869aa072b5a071f32a24b03702d1dcd2a6`. This number however is not a known transaction ID in the blockchain, and has no Google hits.

= Peter Todd's data upload scripts
{parent=satoshi-uploader}

https://github.com/cirosantilli/bitcoin-strings-with-txids/blob/master/data/in/0349.txt#L1930[tx 243dea31863e94dc2f293489db02452e9bde279df1ab7feb6e456a4af672156a] contains another upload script. The help reads:
\Q[Publish text in the blockchain, suitably padded for easy recovery with strings]

The script is: https://github.com/petertodd/python-bitcoinlib/blob/master/examples/publish-text.py

= Bitcoin blockchain `j(` upload system
{parent=how-to-extract-data-from-the-bitcoin-blockchain}

This is likely a system that uploads text to the blockchain.

One example can be seen on the \x[cool-data-embedded-in-the-bitcoin-blockchain/marijuana-plant].

Messages are uploaded one line per transaction, and thus may be cut up on the blk.txt, and possibly even out of order.

But because each line starts with `j(` you can generally piece things up regardless.

TODO identify. The first occurrence seems to be in tx e8c61e29c6b829e289f8d0fc95f9eb2eb00c89c85cfa3a9c700b15805451ae6a:
``
j(DOCPROOF@?pnvf=!;AG
``

= Services based on Bitcoin
{parent=bitcoin}

= Satoshi Dice
{c}
{parent=services-based-on-bitcoin}

https://en.bitcoin.it/wiki/Satoshi_Dice

Claims provably fair. https://satoshidice.com/fair clarifies what that means: they prove fairness by releasing a hash of the seed before the bets, and the actual seed after the bets.

As mentioned in bitcoin.it, it functions basically as \x[cryptocurrency-tumbler] in practice.

\Include[cool-data-embedded-in-the-bitcoin-blockchain]{parent=bitcoin}

= Genesis block
{c}
{parent=bitcoin}
{wiki}

https://blockchain.info/block-height/0?format=json

https://en.bitcoin.it/wiki/Genesis_block contains some comments on the data.

= Genesis block message
{c}
{parent=genesis-block}
{wiki}

https://blockchain.info/block-height/0?format=json

From that page we manually extract the hash `000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f` and then:
``
wget -O 0.hex https://blockchain.info/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f?format=hex
xxd -p -r 0.hex
``
and that does contain the famous genesis block string:
``
EThe Times 03/Jan/2009 Chancellor on brink of second bailout for banks
``
The JSON clarifies that the data is encoded in the `script` field of the transaction `input`:
``
{
      {
         "script":"04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73"
``

The extra `E` (0x45 in \x[ascii]) in `EThe Times` is just extra noise required by the script, we can break things up as:
``
04ffff001d0104 45 5468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73
``
where:
* `54` is `T`
* the `04ffff001d0104` part just doesn't show up on the terminal because it is not made of any printable characters.

The initial `04` is `OP_RETURN`

TODO what is actual the meaning of the `ffff001d010445` part?

TODO the `output` of the transaction has a jumbled script, likely just a regular output to get things going, can't be arbitrary like input.

The message proves a minimal starting date for the first mine.

And it hints that one of Bitcoin's motivation was the \x[financial-crisis-of-2007-2008], where banks were given bailouts by the government to not go under, which many people opposed as the crisis was their own fault in the first place.

= Ethereum
{c}
{parent=list-of-cryptocurrencies}
{wiki}

= Monero
{c}
{parent=list-of-cryptocurrencies}
{wiki}

Cryptocurrency with focus on \x[anonymity]. https://localmonero.co/knowledge/monero-stealth-addresses?language=en gives an overview:
* \x[ring-signature]{p}, which hide the true output (sender)

https://localmonero.co/knowledge/ring-signatures
* \x[ring-signature]{p} which hides the sender.

  https://localmonero.co/knowledge/ring-signatures Gives an overview. Mentions that it is prone to heuristic attacks.

  Uses a system of decoys, that adds 10 fake possible previous outputs as inputs, in addition to the actual input.

  So the network only knows/verifies that one of those 11 previous outputs was used, but it does not know which one.

  It's a bit like having a built-in \x[cryptocurrency-tumbler] in every transaction.

  TODO so how do you know which previous outputs were spent or not?
* RingCT which hides the amounts.
* stealth addresses, which hides who you send to

  This forces receivers to scan try and unlock every single transaction in the chain to see if it is theirs or not.

  The sender therefore can know when the money is spent, but once again, not to whom it is being sent.

Based on https://en.wikipedia.org/wiki/CryptoNote and like \x[satoshi-nakamoto] created by under pseudonym "Nicolas van Saberhagen" https://www.reddit.com/r/Monero/comments/7v2obe/offering_a_bounty_for_a_video_of_the_speech_by/

Developers tried to fight \x[application-specific-integrated-circuit] mining, but they failed it seems:
* https://www.coindesk.com/inside-moneros-last-ditch-effort-to-block-crypto-mining-asics
* https://news.bitcoin.com/report-claims-85-of-the-monero-network-dominated-by-asic-miners/

\x[coinbase] has actually stayed away from trading it even as of 2019 when Monero was the third largest market capitalization crypto because of fear of regulatory slashback: https://decrypt.co/36731/heres-why-coinbase-still-hasnt-listed-monero[]. Although it must be said, the value of privacy crypto is greatly reduced when everyone is trading it on exchanges, which require a passport upload to work.

= How to mine Monero
{parent=monero}

\x[ubuntu] 20.10 as per https://xmrig.com/docs/miner/build/ubuntu[]:
``
sudo apt install git build-essential cmake libuv1-dev libssl-dev libhwloc-dev
git clone https://github.com/xmrig/xmrig.git
mkdir xmrig/build && cd xmrig/build
cmake ..
make -j$(nproc)
``

Benchmark on \x[ciro-santilli-s-hardware/lenovo-thinkpad-p51-2017] as per https://xmrig.com/docs/miner/benchmark[]:
``
./xmrig --bench=1M
``
gives:
``
948.1 h/s
``
which according to https://minexmr.com would generate 0.0005 XMR/day which at today's rate of 140 USD/XMR is 0.07 USD/day.

The minimum payout is 0.004 XMR so it would take 8 days to reach that.

So clearly, \x[application-specific-integrated-circuit] mining is the only viable way of doing this.

Some people considering \x[raspberry-pi]{p} also conclude obviously that it is useless at a 10H/s rate:
* https://monero.stackexchange.com/questions/6862/could-i-use-a-raspberry-pi-to-mine-monero
* https://raspberrypi.stackexchange.com/questions/49552/the-hashrate-of-the-raspberry-pi-2-and-3/87252#87252

At https://minexmr.com/#getting_started we see that all you then need is a single CLI command:
``
xmrig -o pool.minexmr.com:4444 -u <your-monero-address>
``

Seems simple!

= Cryptocurrency exchange
{parent=cryptocurrency}
{wiki}

= Off-chain transaction
{parent=cryptocurrency-exchange}

https://en.bitcoin.it/wiki/Off-Chain_Transactions

= List of cryptocurrency exchanges
{parent=cryptocurrency-exchange}

= Binance
{c}
{parent=list-of-cryptocurrency-exchanges}
{wiki}

= Coinbase
{c}
{parent=list-of-cryptocurrency-exchanges}
{wiki}

= Mt. Gox
{c}
{parent=list-of-cryptocurrency-exchanges}
{wiki}

= Cryptocurrency tumbler
{parent=cryptocurrency}
{wiki}

= Fiat currency
{parent=money}
{wiki}

A useless piece of paper that you can pay \x[tax]{p} with :)

As opposed to:
* 2020 \x[cryptocurrency]{p}, while \x[government]{p} still don't accept them for taxes, as well as other \x[asset]{p} that are also not accepted for taxes (i.e. most assets)
* physical currencies that have intrinsic material value, e.g. \x[gold] coins

= Digital currency
{parent=fiat-currency}
{wiki}

= Electronic money
{parent=digital-currency}

Our minimal definition of "electronic money" is the following.

Instead of creating \x[legal-tender] such as \x[dollar]{p} as banknotes or transactions in some complex obscure banking system, the \x[government] offers an official simple centralized API that represents it instead.

Each citizen or legal entity has an account there, and transfers between registered users are just simple API calls.

 So for example you would e able to put all your money in the government account instead of using useless banks. And then you would invest it as you want with the investment company of your choice, without tying the "my money is here" with "this is the best investment" aspects of banks.

= GNU Taler
{c}
{parent=electronic-money}

Centralized system that still attempts some level of privacy.

In it, a central bank issue tokens that are stored offline in your cell phone, a bit like cash bank notes.

When you take those tokens, a corresponding amount gets removed from your bank account, a bit like cash bank notes.

When a transaction is made, tokens are put into a spent token list via central API, and cannot be double spent thereafter. The corresponding ammount is then added to the bank account of the receiver. This also means that offline transactions are not possible.

When emitting, the bank signs the token with their private key. When spending, the bank checks that signature.

How do we prevent the bank from logging which token goes to which user besides trusting that they are running the software we whink they are running? Notably, couldn't timing be used to identify that?

= Dollar
{c}
{parent=fiat-currency}
{title2=\$}
{wiki}

= Pound sterling
{c}
{parent=fiat-currency}
{title2=£}
{wiki}

= Pound
{synonym}

= Decimal day
{parent=pound-sterling}
{wiki}

\Video[https://www.youtube.com/watch?v=dip8eHw3guo]
{title=Predecimal Currency: The Nightmare in Your Pocket by BritMonkey (2021)}

= Payment system
{parent=money}
{wiki}

= PayPal
{c}
{parent=money}
{wiki}

You need separate accounts for different countries: https://money.stackexchange.com/questions/73361/two-banks-in-two-countries-is-it-possible-to-have-a-unique-paypal-account it's a pain.

= Organization
{parent=social-technology}
{wiki}

= Company
{parent=organization}
{wiki}

All companies with investors are \x[evil], make no mistake.

They may have nice looking save the world charity campaigns, but once you get even close to affecting their revenue stream, the axe falls.

Some level of \x[governments-have-lost-all-power-to-companies][Government intervention is needed].

It is just a question of business model: some business models are eviler than others. \x[microsoft-windows][Making people pay for operating systems] being possible the most evil of all.

One thing must be said however. You can learn a lot by working in a good company, because it ends up putting you in contact with practical real problems that you wouldn't otherwise see by just doing your own random low-tech startup. This is especially valuable if said company is also enlightened enough to use and contribute back to \x[open-source-software], thus improving the world and paying back the moral debt of using other people's work for free.

= Lifestyle business
{parent=company}
{wiki}

= Startup company
{parent=company}
{wiki}

= Startup
{synonym}

= Unicorn
{disambiguate=startup}
{parent=startup-company}

= Venture capital
{parent=startup-company}

= List of companies
{parent=company}
{wiki}

= Apple Inc.
{c}
{parent=list-of-companies}
{wiki}

* owns the entire stack and creates high quality highly optimized systems
* creates closed lock-in systems without inter-operability and actively fights users from owning their devices
* do they give back enough to open source, or do they leech mostly?
  * https://www.reddit.com/r/linux/comments/u6avq/does_apple_contribute_to_the_open_source_community/ on \x[reddit]
  * https://www.quora.com/Has-Apple-contributed-to-any-open-source-projects on \x[quora]

\Video[https://www.youtube.com/watch?v=G2GfKUi9ghM]
{title=The Mapple Store and Steve Mobs from \x[the-simpsons].}

= Think different
{c}
{parent=apple-inc}
{wiki}

Of course, this only made sense when Apple was more of an underdog to \x[ibm], and \x[ciro-santilli] greatly \x[ciro-santilli-s-self-perceived-creative-personality][admires their defiance of the norm].

As of 2020 however, \x[apple-inc][Apple] is kind of on the top of the mobile world, and Think different simply makes no sense anymore, notably because it relies on \x[closed-source-offline-software-used-by-millions].

\Image[Think_different_with_Tux.png]
{title=Take on Apple's \x[think-different] logo with \x[tux-mascot] instead of the Apple logo.}
{description=In 2020, to think different, is to think \x[open-knowledge]. Work by \x[ciro-santilli], based on https://en.wikipedia.org/wiki/File:Tux.svg[].}

\Image[Apple_Think_different_1976_Think_mainstream_2011.png]
{title=1976 Think different. 2011 Think mainstream.}
{description=cropped from https://wallpapersafari.com/w/RqYUEj[].}

= Here's to the crazy ones
{c}
{parent=think-different}

https://en.wikipedia.org/w/index.php?title=Think_different&oldid=990983100#Television

\Q[Because the people who are crazy enough to think they can change the world are the ones who do.]

\Video[https://www.youtube.com/watch?v=5sMBhDv4sik]

= iPhone
{c}
{parent=apple-inc}
{wiki}

= MacOS
{c}
{parent=apple-inc}
{wiki}

Nice looking and expensive operating system by \x[apple-inc]. \x[ciro-santilli] believes that:
* if you want to be ripped off, just use \x[microsoft-windows] which has more software available
* or if you want to attain \x[write-free-books-to-get-famous-website/motivation][Enlightenment], just use \x[linux], which is free and open source

The story of how OS X was ported to x86 from PowerPC with large initial work up to boot by a single man in the year 2000, John Kullmann, is really worth reading: https://www.quora.com/Apple-company/How-does-Apple-keep-secrets-so-well/answer/Kim-Scheinberg on \x[quora], see also:
* https://www.theregister.co.uk/2012/06/11/apple_project_marklar_secrets/
* https://en.wikipedia.org/wiki/Apple%27s_transition_to_Intel_processors

= Is the MacOS kernel open source?
{parent=macos}

Can you do anything with it? What's the license?
* https://github.com/apple/darwin-xnu
* https://en.wikipedia.org/wiki/XNU
* https://stackoverflow.com/questions/43136124/how-to-boot-xnu-kernel

= Steve Jobs
{c}
{parent=apple-inc}
{wiki}

Co-founder of \x[apple-inc].

Is Jobs \x[evil]? Is he interesting? Undoubtedly.

https://www.folklore.org/ProjectView.py?project=Macintosh&characters=Steve%20Jobs[] has some good anecdotes about him.

\x[ciro-santilli] is especially fond of: \x[jobs-and-wozniak-s-blue-box].

Good quotes:
* "Try to have a nice family life, have fun, save a little money." quote at: \x[don-t-be-a-pussy]{full} and the related \x[jobs-and-wozniak-s-blue-box] attitude
* "Steve Jobs Insult Response" on \x[backward-design]
* Steve Jobs Pixar office design philosophy: great ideas happen from chance meetings on corridors, not in board rooms: https://officesnapshots.com/2012/07/16/pixar-headquarters-and-the-legacy-of-steve-jobs/
* \x[steve-jobs-2005-stanford-commencement-address]
* \x[here-s-to-the-crazy-ones]: Ciro would like to believe that this is mostly written by Jobs, but apparently it was just written by an advertisement agency. Good job though. 

You must watch this: \x[video-bill-gates-vs-steve-jobs-by-epic-rap-battles-of-history-2012].

Evil deeds:
* not recognizing own daughter for many years??? https://en.wikipedia.org/wiki/Lisa_Brennan-Jobs
* lying to \x[steve-wozniak] about the 5000 dollar Atari bonus: https://web.archive.org/web/20110612071502/http://www.woz.org/letters/general/91.html
* not giving stock to early garage employees: https://www.businessinsider.com/steve-wozniak-gave-early-apple-employees-10-million-in-stock-2014-9 OK, not a \x[legal] obligation. But... love?

= Steve Jobs quote on saving lives with a faster boot
{c}
{parent=steve-jobs}

https://www.folklore.org/StoryView.py?story=Saving_Lives.txt

This idea also comes up in other sources of course.

\Video[http://youtube.com/watch?v=m8Mc-38C88g]
{title=https://en.wikipedia.org/wiki/Margin_Call[Margin Call (2011)] bridge scene.}

= Steve Jobs customers don't know what they want quote
{parent=steve-jobs}
{c}

TODO clear attribution source:
\Q[Some people say, "Give the customers what they want." But that's not my approach. Our job is to figure out what they're going to want before they do. I think Henry Ford once said, "If I'd asked customers what they wanted, they would have told me, 'A faster horse!'" People don't know what they want until you show it to them. That's why I never rely on market research. Our task is to read things that are not yet on the page.]

= Steve Wozniak
{c}
{parent=steve-jobs}
{wiki}

= Steve Wozniak plays magic the gathering
{c}
{parent=steve-wozniak}

\x[ciro-santilli] likes \x[magic-the-gathering] and he was pleased when he learned that \x[steve-wozniak] does too, and has an expensive collection: https://redsunsoft.com/2019/03/how-a-post-to-play-magictg-turned-into-an-afternoon-with-the-woz/

= Jobs and Wozniak's blue box
{c}
{parent=steve-jobs}

https://en.wikipedia.org/wiki/Blue_box

\x[being-naughty-and-creative-are-correlated]{c}.

Some have actually been preserved: https://en.wikipedia.org/wiki/File:Blue_Box_in_museum.jpg

= Amazon
{c}
{disambiguate=company}
{parent=list-of-companies}
{wiki}

= Amazon Prime Video
{c}
{parent=amazon-company}
{wiki}

As of 2021, \x[ciro-santilli] feels strongly that Amazon originals are so much sillier compared to \x[netflix] ones in average.

Of course, everything pales in comparison to \x[the-criterion-collection].

= Amazon Web Services
{c}
{parent=amazon-company}
{wiki}

= AWS
{c}
{synonym}

= Google
{c}
{parent=list-of-companies}
{wiki}

= Googler
{c}
{synonym}

= Googling
{c}
{synonym}

= Googled
{c}
{synonym}

One of the least \x[evil] of the big tech companies, partly because https://en.wikipedia.org/wiki/Sergey_Brin[Sergey's] parents fled from the Soviet Union and so he is \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][anti censorship], although they https://en.wikipedia.org/wiki/Dragonfly_(search_engine)[have been tempted by it].

Google only succeeds at highly algorithmic tasks or at giving infinite storage to users to then mine their data.

It is incapable however of adding any obvious useful end user features to most of its products, most of which get terminated and cannot be relied on:
* https://en.wikipedia.org/wiki/Google+
* https://en.wikipedia.org/wiki/Picasa
* https://killedbygoogle.com/ | http://web.archive.org/web/20190726225042/https://killedbygoogle.com/

This also seems to extend to \x[business-to-business]: https://twitter.com/MohapatraHemant/status/1343969802080030720 ex-Googler tells how they lost the cloud to \x[amazon-company].

More mentions of that:
* https://world.hey.com/dhh/google-suffers-from-a-digital-petro-curse-908e919a "Google suffers from a digital petro curse" by David Heinemeier Hansson (2021), the creator of \x[ruby-on-rails]
* https://killedbygoogle.com/ dedicated website, source on \x[github]: https://github.com/codyogden/killedbygoogle

Too many genious engineers. They need some dumber people like \x[ciro-santilli] who \x[ciro-santilli-s-bad-old-event-memory][need to write documentation to learn stuff].

\x[ciro-santilli] actually attempted two interviews to work at Google in the early 2010's but very quickly failed both on the first phase, because you have to be a fast well trained coding machine to pass that interview.

Ciro later felt better about himself by fantasizing how he would actually do more important things outside of Google and that they would beg to buy him instead.

He was also happy that he wouldn't have to use Google crazy internal tools: someone once said that Google's tools make easy tasks middle hard, and they also make impossible tasks middle hard. TODO source.

But whatever the case: Ciro \x[grinding-for-software-interviews][will not, ever, spend his time drilling programmer competition problems to join a company].

One of Google's most interesting stories is how their startup garage owner https://en.wikipedia.org/wiki/Susan_Wojcicki[became an important figure inside Google], and how Sergei https://en.wikipedia.org/wiki/Anne_Wojcicki[married her sister]. These were the best garage tenants ever! https://www.youtube.com/watch?v=pomgRbVLUGs "The company's sixth employee made this video tour of the office in 1998" should be the Susan's garage, since the next office move was only in 1999 to 165 University Avenue in Palo Alto.

https://www.wired.com/story/google-shakes-up-its-tgif-and-ends-its-culture-of-openness/ "GOOGLE TGIF 1999 video". TGIF is the weekly all hands meeting abolished in 2019: https://www.wired.com/story/google-shakes-up-its-tgif-and-ends-its-culture-of-openness/

= Google Analytics
{c}
{parent=google}
{wiki}

Their \x[ui] is horrendous as of 2020:
* https://danielmiessler.com/blog/google-is-getting-left-behind-due-to-horrible-ui-ux/
* https://medium.com/carwow-product-engineering/google-analytics-sucks-a-lot-f6f7bf3c51ad

= Google Photos
{c}
{parent=google}
{wiki}

= Google X
{c}
{parent=google}
{wiki}

= PageRank
{c}
{parent=google}
{wiki}

= IBM
{c}
{parent=list-of-companies}
{wiki}

= Nvidia
{c}
{parent=list-of-companies}
{wiki}

Open source \x[driver-software]{p}???

\Video[https://www.youtube.com/watch?v=_36yNWw_07g]
{title=\x[linus-torvalds] saying "Nvidia Fuck You" (2012)}

= Netflix
{c}
{parent=list-of-companies}
{wiki}

= Oracle Corporation
{c}
{parent=list-of-companies}
{wiki}

\x[evil] company that desecrated the beauty created by https://en.wikipedia.org/wiki/Sun_Microsystems[Sun], and was https://en.wikipedia.org/wiki/Google_v._Oracle_America[trying to bury Java once and or all in the 2010's].

Their database has already been surpassed by open source, and https://en.wikipedia.org/wiki/Enterprise_resource_planning[ERP] and https://en.wikipedia.org/wiki/Customer_relationship_management[CRM] is boring.

= Business-to-business
{parent=company}
{title2=B2B}
{wiki}

= Entrepreneur
{parent=company}

= Elon Musk
{parent=entrepreneur}
{wiki}

\x[ciro-santilli][Respect on the technical side].

But the way he treated his first wife, is very very weird, in comprehensible: https://www.marieclaire.com/sex-love/a5380/millionaire-starter-wife/

= Xavier Niel
{parent=entrepreneur}
{wiki}

* https://www.youtube.com/watch?v=oBPMFcURM_Y Xavier Niel, Iliad - Free: Je suis un casseur de monopoles by DECIDEURSTV (2011)

= Internal communications
{parent=organization}
{wiki}

= Need to know
{parent=internal-communications}
{wiki}

= Nonprofit organization
{parent=organization}
{wiki}

= Not-for-profit
{synonym}
{title2}

= Charitable organization
{parent=nonprofit-organization}
{wiki}

I like \x[charitable-organization].

= Educational charitable organization
{parent=charitable-organization}
{wiki}

In this section we list charitable organizations that support \x[education] or research:
* https://elifesciences.org/labs by \x[elife]
* https://www.digital-science.com/investment/catalyst-grant/ by Shuttleworth foundation.
* https://en.wikipedia.org/wiki/PLOS
* https://www.chanzuckerberg.com/ Zuck has already invested in education previously:
  * https://www.forbes.com/sites/kathleenchaykowski/2018/02/14/zuckerberg-invests-in-on-demand-education-site-varsity-tutors-in-50-million-fundraise/#1c9b6b385dab
  * http://uk.businessinsider.com/mark-zuckerberg-schools-education-newark-mayor-ras-baraka-cory-booker-2018-5
* https://openuk.uk/
* https://bccampus.ca/ \x[cc-by], \x[the-missing-link-between-basic-and-advanced][lower undergrad stuff], but better than nothing.

  Hmm, some/all of it is a copy of \x[libretexts] but with URLs shorter than a million characters, e.g.:
  * https://opentextbc.ca/universityphysicsv3openstax/chapter/de-broglies-matter-waves/
  * https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_III_-_Optics_and_Modern_Physics_(OpenStax)/06%3A_Photons_and_Matter_Waves/6.06%3A_De_Broglies_Matter_Waves
* https://en.wikipedia.org/wiki/Peter_Lampl[Sir Peter Lampl], https://en.wikipedia.org/wiki/Education_Endowment_Foundation[Education Endowment Foundation] and https://en.wikipedia.org/wiki/Sutton_Trust[Sutton Trust]

= KIPP
{c}
{parent=educational-charitable-organization}
{wiki}

= LibreTexts
{c}
{parent=educational-charitable-organization}
{wiki}

https://libretexts.org

Appears to have mixed licenses? E.g.:
* https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_III_-_Optics_and_Modern_Physics_(OpenStax)/06%3A_Photons_and_Matter_Waves/6.06%3A_De_Broglies_Matter_Waves is \x[cc-by]
* but we had seen another one that was \x[cc-by-nc-sa]

Appears to be \x[uc-davies]-basded mostly.

= Open Knowledge Foundation
{c}
{parent=educational-charitable-organization}
{wiki}

= Saylor Academy
{c}
{parent=educational-charitable-organization}
{wiki}

As of 2021, mostly useless business courses: https://learn.saylor.org

One redeeming factor however: they have a \x[github]: https://github.com/saylordotorgo

https://saylordotorg.github.io/text_introduction-to-economic-analysis/s00-license.html

They seem to favor the dreaded \x[cc-by-nc-sa].

The founder Sayler looks a bit crooked: https://en.wikipedia.org/wiki/Michael_J._Saylor#SEC_investigation[], \x[rich-people-who-create-charitable-prizes-are-often-crooked] comes to mind.

= Simons Foundation
{c}
{parent=educational-charitable-organization}
{wiki}

= Teach For All
{c}
{parent=educational-charitable-organization}
{wiki}

= Prize
{parent=social-technology}
{wiki}

Generally, prizes that pay big lumps of money to well established individuals are a bit useless, it would be better to pay smaller sums to struggling beginners in the field, of which there are aplenty.

The most important part about prizes should not be the money, nor the recognition, but rather explaining better what the laureates did. In this, most prizes fail. Thus \x[ciro-santilli]'s project idea: \x[project-to-explain-each-nobel-prize-better].

= Abraham Pais Prize for History of Physics
{c}
{parent=prize}
{wiki}

= Breakthrough Prize
{c}
{parent=prize}
{wiki}

By \x[zuckerberg]. The selection seems decent. And \x[natural-science]{p} only, which is good. A bit more application oriented than the \x[nobel-prize] it seems, e.g. 2022 separates physics and fundamental physics.

Appears to explain award reasoning even worse than the \x[nobel-foundation].

= Nobel Prize
{c}
{parent=prize}
{wiki}

And the articles that really matter:
* https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_country
* https://en.wikipedia.org/wiki/List_of_Nobel_laureates_by_university_affiliation

\x[web-of-stories] contains amazing interviews with many (mostly \x[american]) winners.

See \x[surely-you-re-joking-mr-feynman-chapter-alfred-nobel-s-other-mistake]'s amazing comments about the Nobel Prize.

TODO who is the digital switch person he mentions?
* https://www.quora.com/unanswered/Who-was-Richard-Feynman-referring-to-in-the-book-Surely-Youre-Joking-Mr-Feynman-chapter-Alfred-Nobels-Other-Mistake-when-he-talks-about-A-friend-of-mine-whos-a-rich-man-he-invented-some-kind-of-simple-digital-switch on \x[quora]
* https://github.com/cirosantilli/cirosantilli.github.io/issues/72

= Nobel disease
{c}
{parent=nobel-prize}
{wiki}

= Project to explain each Nobel Prize better
{c}
{parent=nobel-prize}

Understand and explain amazingly every single \x[nobel-prize] in \x[physics], \x[chemistry] and \x[biology]. Since in particular the \x[nobel-foundation] is unable to do that for any at all, especially of the key old ones, e.g. https://www.nobelprize.org/prizes/physics/1965/summary/[]. Hopeless.

To be fair, those in theoretical physics at least basically come down to reading a bunch of books. But perhaps anything slightly more experimental could have 

= Nobel Foundation
{c}
{parent=nobel-prize}
{wiki}

= List of Nobel Prizes
{c}
{parent=nobel-prize}
{wiki=List_of_Nobel_laureates}

= List of Nobel Prizes in Physiology and Medicine
{c}
{parent=nobel-prize}
{wiki=List_of_Nobel_laureates}

= 2021 Nobel Prizes in Physiology and Medicine
{parent=list-of-nobel-prizes-in-physiology-and-medicine}
{wiki=Human heat and pressure sensor proteins}

https://www.nobelprize.org/prizes/medicine/2021/press-release/

It is quite amusing that the starting point to identifying the heat one was \x[capsaicin], as it stimulates the exact same receptor!!!

= List of Nobel Prizes in Physics
{c}
{parent=nobel-prize}
{wiki=List_of_Nobel_laureates}

= 1902 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=Zeeman}

\x[pieter-zeeman]{child} for the \x[zeeman-effect]{child}.

= 1921 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=photoelectric effect}

\x[einstein]{child} for the theoretical explanation of the \x[photoelectric-effect] from 1905, notably published as \x[on-a-heuristic-viewpoint-concerning-the-production-and-transformation-of-light-by-einstein-1905].

= 1922 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=photoelectric effect}

\x[niels-bohr]{child} for the \x[bohr-model].

= 1927 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=cloud chamber, Compton scattering}

* \x[cloud-chamber]{child}
* \x[compton-scattering]{child}

= 1936 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=positron, cosmic rays}

Discovery of:
* the \x[positron]{child} by \x[carl-david-anderson]{child}
* he \x[cosmic-ray]{child}{p} by \x[victor-francis-hess]{child}

= 1937 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=electron diffraction}

Early \x[electron-diffraction-experiment] from 1927 that drastically confirmed the \x[matter-wave] hypothesis.
* \x[davisson-germer-experiment]
* \x[diffraction-of-cathode-rays-by-a-thin-film-by-thomson-and-reid-1927]

= 1944 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=Nuclear magnetic resonance, Rabi}

\x[nuclear-magnetic-resonance] work:
* \x[isidor-isaac-rabi]{child}

= 1955 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=QED experiments, Lamb and Kusch}

The key initial \x[quantum-electrodynamics] experiments:
* \x[willis-lamb]{child} for the \x[lamb-retherford-experiment]{child}
* \x[polykarp-kusch]{child} for the \x[anomalous-magnetic-dipole-moment-of-the-electron]{child}, key publication: \x[the-magnetic-moment-of-the-electron-by-kusch-and-foley-1948]{child}

= 1960 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=bubble chamber}

\x[bubble-chamber]{child}.

= 1965 Nobel Prize in Physics
{parent=list-of-nobel-prizes-in-physics}
{title2=QED theory, Feynman, Schwinger and Tomonaga}

Fundamentals of \x[quantum-electrodynamics]{child}.

= 1965 Nobel Prize in Physics laureate
{parent=1965-nobel-prize-in-physics}

* \x[richard-feynman]{child}

= Fields Medal
{c}
{parent=prize}
{wiki}

The \x[nobel-prize] of \x[mathematics]!

= Turing Award
{c}
{parent=prize}
{wiki}

The \x[nobel-prize] of \x[computer] \x[software] or \x[computer-hardware][hardware]!

More like a "lifetime achievement" though, rather than the Nobel Prize, which tends to be for more specific achievements.

= Knowledge olympiads
{parent=prize}

E.g. https://en.wikipedia.org/wiki/International_Mathematical_Olympiad[International Mathematical Olympiad], https://en.wikipedia.org/wiki/International_Physics_Olympiad[International Physics Olympiad], https://en.wikipedia.org/wiki/Competitive_programming[competitive programming], etc.

Events that trick young kids into thinking that they are making progress, but only serve to distract them from what really matters, which is to dominate a \x[state-of-the-art] as fast as possible, contact researches in the area, and publish truly novel results.

Financially backed by high schools trying to make ads showing how they will turn your kids into geniuses (but also passionate teachers who fell into this hellish system), or companies who hire machines rather than entrepreneurs.

The most triggering thing possible is when programming competitions don't release their benchmarks as \x[open-source-software] afterwards: at least like that they might help someone to solve their real world problems. Maybe.

On a related note, hackathons are also mostly useless. Instead of announcing a hackathon, just announce a web forum where people with similar interests can talk to one another instead, and let them code it out on \x[github] if they want to. Restricting intensive development to a few days tends to produce crappy code and not reach real goals.

Some https://en.wikipedia.org/wiki/Artur_Avila[irrelevant people] highlight https://youtu.be/jz-41LxrI_M?t=46[that knowledge Olympiads can have good effects], because they are "an opportunity to meet university teachers and their research organizations". Ciro's argument is just that there are much more efficient ways to achieve those goals.

= Competitive programming
{parent=knowledge-olympiads}
{wiki}

A waste of time like the rest of the \x[knowledge-olympiads].

= Competitive programming website
{parent=competitive-programming}

= LeetCode
{c}
{parent=competitive-programming-website}

https://leetcode.com

= Grinding for software interviews
{parent=knowledge-olympiads}

If your kids are about to starve, fine, do it.

But otherwise, \x[ciro-santilli] will not, ever, spend his time drilling programmer competition problems to join a \x[company], life is too short for that.

Life is too short for that. Companies must either notice that you can make amazing \x[open-source-software] projects or contributions, and hire you for that, or they must \x[fuck] off.

Companies must either notice that you can make amazing projects or contributions, and hire you for that, or they must \x[fuck] off.

= Weekend
{parent=social-technology}

Days of the week where you don't do what you set out to do. And yet, it is in those days that you save your sanity, and possibly the world. Wait, this sounds exactly like a week day?

\Image[https://web.archive.org/web/20200718073243if_/https://pbs.twimg.com/media/DWObYfMU0AAgJJP?format=jpg&name=small]
{title=Calvin and Hobbes "Oh No! I overslept! I gotta get up!" cartoon.}
{source=https://twitter.com/calvinn_hobbes/status/964785603467395072}

= Transport
{parent=technology}
{wiki}

= Bicycle
{parent=transport}
{wiki}

= Bicycle tire sizes
{parent=bicycle}
{wiki}

The images you have to have in mind are:
* https://en.wikipedia.org/wiki/File:Sezione_cerchione_bicicletta.svg
* https://cdn-0.sheldonbrown.com/images/bead-seat-diameter.jpg

Yes, Sheldon he has separate American and British English versions of pages!!!
* https://www.sheldonbrown.com/tyre-sizing.html
* https://www.sheldonbrown.com/tire-sizing.html

For example, \x[ciro-santilli-s-hardware/kross-bicycle-2017] had a Schwalbe tyre with markings:
\Q[42-622 (28 x 1.60, 700x40C)]
When inflated, the tires were about 3.5cm wide as measured with a ruler.

And the https://shop.mavic.com/en-gb/a-319-j24500.html#1028=3283&1035=3501[Mavic A319 rim] had markings:
\Q[622x19C]

In this:
* ISO (Etrto): 42-622. So:
  * 42 is the inner rim width. The actual inflated tire is going to be even wider.
  * 622 is the bead seat diameter. The actual inflated tire is going to be even wider.
* imperial: 28 x 1.60
* French: 700x40C:
  * meaning of the "C" asked at: https://bicycles.stackexchange.com/questions/16190/what-does-the-c-in-bicycle-tire-size-mean
    * https://www.sheldonbrown.com/tire-sizing.html#french says A is larger than B which is larger than C, and C means 622 mm

= Shimano
{c}
{parent=bicycle}
{wiki}

Manuals: https://si.shimano.com/

= Shimano product lines
{c}
{parent=shimano}

Overview of Shimano brands 2018: https://www.evanscycles.com/coffeestop/advice/the-complete-guide-to-shimanos-mountain-bike-groupsets-and-their-hierarchy

* Shimano Altus RD-M310: almost cheapest MTB
* Shimano Acera RD-M360: second cheapest MTB
* Shimano Alivio RD-M410: third cheapest MTB
* Shimano Claris: entry 8-speed road bike https://www.youtube.com/watch?v=6dFQDDg6Wt0
* Shimano Sora: 9-speed road bike https://bike.shimano.com/en-EU/product/component/sora-r3000.html
* Shimano Tiagra: 10-speed road bike https://bike.shimano.com/en-EU/product/component/tiagra-4700.html
* Shimano Deore: non-\x[shitty] MTB, in increasing performance: M610, M6000, M7000, ...)
* Shimano Tourney; commuter, likely the shittiest of all lines: https://bike.shimano.com/en-EU/product/component/tourney.html

= Balloon
{parent=transport}
{wiki}

= User interface
{parent=technology}
{wiki}

= UI
{c}
{synonym}
{title2}

For \x[computer] interfaces see: \x[computer-user-interface].

= Brain-computer interface
{parent=user-interface}
{wiki=Brain–computer_interface}

The ultimate \x[computer-user-interface]{parent}.

\x[brain-computer-interfaces-could-be-the-next-big-thing]{c}.

And life extension? https://worldbuilding.stackexchange.com/questions/112022/would-an-invasive-spinal-cord-brain-computer-interface-allow-healthy-individuals

= Neuralink
{parent=brain-computer-interface}
{wiki}

\x[elon-musk]{parent}'s attempt.

\Video[https://www.youtube.com/watch?v=CLUWDLKAF1M]
{title=Neuralink: \x[elon-musk]'s entire brain chip presentation in 14 minutes (supercut) by CNET (2020)}
{description=
* https://youtu.be/CLUWDLKAF1M?t=380 Shows a pig with the implant, and live signals are shown when its nose touches something.
* https://youtu.be/CLUWDLKAF1M?t=536 shows a pre-recorded pig study correlating really the joint positions while walking with the neuralink signals
}

= Art
{parent=ciro-santilli-s-homepage}
{wiki}

Stuff that is beautiful but useless because it does not make food or houses cheaper.

Or from \x[ciro-santilli-s-best-random-thoughts]:
\Q[Without technology, one cannot survive. Without art, one cannot live.]

But that sure enough has a \x[jesus] semi-precursor, and likely many others: \x[man-shall-not-live-by-bread-alone].

There is some art however that lives in the fine intersection between beauty and usefulness:
* \x[mathematics]
* \x[physics]
* \x[computer]

= Art young Ciro Santilli consumed
{parent=art}

Maybe those are genial. Maybe not. Nostalgia is just too strong to discern. Ciro still goes back to them for rest.

= Children cartoons Ciro Santilli liked to watch
{parent=art-young-ciro-santilli-consumed}

These did not stand the test of time however.

When Ciro was ten years old, he was addicted to 2 cartoons: \x[pokemon] and https://en.wikipedia.org/wiki/Dragon_Ball_Z[Dragon Ball Z]!

Pokemon had just launched in Brazil in 1999, 2 years after the Japanese launch: https://br.historyplay.tv/hoje-na-historia/comeca-exibicao-original-do-anime-pokemon (http://web.archive.org/web/20191221091947/https://br.historyplay.tv/hoje-na-historia/comeca-exibicao-original-do-anime-pokemon[archive]) And dragon Ball, was first aired in 1989 in Japan! My God, those translations took forever back then!

And \i[everyone] was playing Pokemon on their https://en.wikipedia.org/wiki/Game_Boy_Color[Game Boy Color]. Ciro was \x[ciro-santilli-s-psychology-and-physiology][already cheap] however, and didn't buy the console despite wanting it, and just played it through his friends handhelds. But maybe this is a good thing. Playing alone sucks.

Watching Dragon Ball Z now feels like watching paint dry, everything takes forever! Apparently padding to sync with the manga: https://www.quora.com/Why-does-DBZ-drag-on-for-so-long The original https://en.wikipedia.org/wiki/Dragon_Ball[Dragon Ball] was likely strictly better, as it was much more fun and took itself less seriously. Also in DBZ https://tvtropes.org/pmwiki/pmwiki.php/Main/PowerCreepPowerSeep[power level inflation] is taken to ridiculous levels. This is why https://en.wikipedia.org/wiki/One-Punch_Man[One-Punch Man] is good. Out of all evil characters, https://dragonball.fandom.com/wiki/Frieza[Frieza] is one that made a big impression on Ciro, his graphical design is so good.

= Games young Ciro Santilli played
{parent=art-young-ciro-santilli-consumed}

Mostly \x[video-game]{p} of course.

First when he was really young, about 5, Ciro played a lot of NES, but he doesn't remember things from that era very well. Contra, Ninja Turtles, Battle Tanks, Duck Hunt, and some modern "real world jet" top to bottom rail shooter (TODO identify) are definitely some of the games he clearly remembers playing, see also: \x[image-five-year-old-ciro-santilli-playing-nes-on-a-joystick].

As an honorable mention, Ciro remembers his teenage/young adult neighbours playing some \x[dos] games on their computer. Those games felt so incredibly advanced, including the required setup to play them. It felt like some kind of black magic! But Ciro didn't really play them however.

Ciro then skipped the \x[snes] and handhelds, which he played only through friends because he \x[ciro-santilli-s-psychology-and-physiology][was cheap] (but also because Brazil is a poor country remember, and imports are pretty expensive). He clearly remembers playing https://en.wikipedia.org/wiki/Super_Mario_World[Super Mario World] for the SNES and \x[children-cartoons-ciro-santilli-liked-to-watch][Pokemon on friends' Gameboys] of course.

Ciro then went straight to 5th generation with the \x[nintendo-64]{child} in 1994 which his parents bought for him during a trip to the \x[united-states]. Once again, because he was cheap, the only game he bought was \x[super-mario-64], which likely came with the console? He played that game to death.

Then came https://en.wikipedia.org/wiki/The_Legend_of_Zelda:_Ocarina_of_Time[Ocarina of Time], which blew everyone's minds, and Ciro would go to Blockbuster to rent it for the weekend, and again play to death with his friends. You had to arrive early at Blockbuster to rent it, otherwise other people would rent all copies!!!

The only time Ciro got robbed as of 2020 was when an older teenager stopped his bicycle in front of Ciro and took his rented Golden Eye 64 copy away from his hand, and run off. Poor drug addict.

Ciro always felt that the PS1 had a much uglier aesthetics than the N64, and didn't like the console. Playing a bit of \x[final-fantasy-vi]{child} on his memory did stick deeply to his mind however. Ciro later played all good PS1 RPGs on emulation during \x[university-of-sao-paulo] during amazing solitary nights.

And on the PC, Ciro was particularly touched by Age of Empires 2 and Diablo 2.

As a young teenager Ciro would also play \x[counter-strike] with his friends at LAN houses. Playing that game would make Ciro extremely anxious, his hands got all cold, and it was a lot of fun.

After this Ciro grew up and notice that the only fun game is that of becoming \x[ciro-santilli-s-selfish-desires][become rich and famous] in the real world.

This explains however Ciro's \x[tool-assisted-speedrun] interests.

Outside of video games, Ciro got midly addicted to \x[magic-the-gathering] in his early teens.

= Pokemon
{c}
{parent=games-young-ciro-santilli-played}
{wiki=Pokémon}

One of the main \x[children-cartoons-ciro-santilli-liked-to-watch].

Ciro could not understand why Nintendo won't make a proper 3D https://en.wikipedia.org/wiki/Massively_multiplayer_online_role-playing_game[MMORPG] Pokemon with actually 3D Pokemon roaming the land, which is obviously what everyone wants. There are even fan games getting there!
* https://pokemon-mmo-3d.com Interesting concept here, where when you deploy a Pokemon, you start controlling the Pokemon rather than the main character
* https://www.quora.com/Why-won-t-Nintendo-make-an-open-world-3D-Pokémon-RPG/answer/Ciro-Santilli
until this explaiend it beautifully \x[video-the-downfall-of-mainline-pokemon-games-by-gonz-media-2020]:
* Pokemon became an \x[industrialized] yearly game spitting machine, and therefore any new feature is just extra risk
* Pokemon was kept mostly as a handheld exclusive to sell handlhelds, with a few early exceptions such as https://en.wikipedia.org/wiki/Pokémon_Snap[Pokemon Snap]

\Image[https://web.archive.org/web/20191212074929im_/https://marketoonist.com/wp-content/uploads/2014/07/140707.safeisrisky.jpg]
{title="Instead of risking anything new, let's play it safe by continuing our slow decline into obsolecense" cartoon by Tom Fishburne.}
{source=https://marketoonist.com/2014/07/safe-is-risky.html}

\Video[https://www.youtube.com/watch?v=4Bbjq9_mKMU]
{title="The Downfall Of Mainline Pokemon Games" by \[GONZ\] media (2020)}
{description=Great video, explains things Ciro had never thought about, e.g. how the Nintendo Switch unified handheld and console for Nintento, this could open the doors for a more ambitious Pokemon release.}

= Music teenager Ciro Santilli liked to listen to
{parent=art-young-ciro-santilli-consumed}

Lower teens, before discovering more hardcore stuff that is more genial and adult-venerable:
* https://en.wikipedia.org/wiki/Pearl_Jam[Pearl Jam]
* https://en.wikipedia.org/wiki/Creed_(band)[Creed]
* https://en.wikipedia.org/wiki/Red_Hot_Chili_Peppers[Red Hot Chili Peppers]
* https://en.wikipedia.org/wiki/Guns_N%27_Roses[Guns N' Roses]

OK, Ciro still comes back to those from time to time, he confesses. Nostalgia, nostalgia.

The following are also adult venerable though :-)

* https://en.wikipedia.org/wiki/Jimi_Hendrix[Jimi Hendrix]

= ASCII art
{c}
{parent=art}
{wiki}

It should be a \x[crime] to automatically generate \x[ascii-art] from images.

``
        z

        ^
        |    *------*
        |   /|      /
        |  / |     /|
top -------*------* |
        |  | *----|-*
        |  |/     | /
        |  |      |/
bottom ----*------*
        |  |      |
        +--|------|-----> y
       /   |      |
      /    |      |
  x  /     |      |
    v
          left   right
``

= ASCII porn
{c}
{parent=ascii-art}
{wiki}

\x[ascii-art] depicting \x[pornography]{parent}.

Collections and overviews:
* https://asciiart.website/index.php?art=people/naked%20ladies "Naked Ladies - Nude Women" category
* https://www.reddit.com/r/ASCII_porn/ on \x[reddit] boring
* https://www.vice.com/en/article/nepapk/ascii-pr0n-porn-predates-the-internet-but-its-still-everywhere-rule-34 ASCII Porn Predates the Internet But It's Still Everywhere by \x[vice-news] (2019)

TODO it is quite hard to actually find non-automatically generated \x[ascii-art] of people \x[fucking], most of them are just \x[sexy] women drawn by bearded nerds.

= ANSI art
{c}
{parent=ascii-art}
{wiki}

OMG, \x[ciro-santilli] only learned about this in 2021 after: https://twitter.com/ryancdotorg/status/1375484757916672000

= Audiovisual art
{parent=art}
{wiki}

In other sections:
\x[video-game]{child}

= Cinema
{parent=audiovisual-art}
{wiki}

= Film genre
{parent=cinema}
{wiki}

= Crime film
{parent=film-genre}
{wiki}

= Ghost Dog: The Way of the Samurai (1999)
{c}
{parent=crime-film}
{wiki=Ghost_Dog:_The_Way_of_the_Samurai}

Best quote at 00:23:01: \x[matters-of-small-concern-should-be-treated-seriously].

= The Godfather
{c}
{parent=crime-film}
{wiki=The_Godfather_(film_series)}

= The Godfather (1972)
{c}
{parent=the-godfather}
{wiki=The_Godfather}

= The Godfather Part II (1974)
{c}
{parent=the-godfather}
{wiki=The_Godfather_Part_II}

= The Godfather Part III (1990)
{c}
{parent=the-godfather}
{wiki=The_Godfather_Part_III}

This film is an abomination and disgrace to the bilogy.

= Mystery film
{parent=film-genre}
{wiki}

= Picnic at Hanging Rock (1975)
{parent=mystery-film}
{wiki=Picnic at Hanging Rock (film)}

= Ciro Santilli's film tastes
{parent=cinema}

\x[ciro-santilli] has already watched all \x[the-best-movies-of-all-time][the best films in history], and as a result any of those new movies that is full of clichés and has no innovative aspect at all (99.99999% of all modern movies) makes Ciro want to puke and to start \x[googling] \x[tv-tropes] to classify as many clichés as possible.

Good movies are those that teach you mechanisms of the real world. https://tvtropes.org/pmwiki/pmwiki.php/Main/WillingSuspensionOfDisbelief[Willing suspension of disbelief] must be maintained at all costs.

Or of what could happen a world where a single sci-fi element is added and explored to its limits.

Love is not an interesting aspect of the world. You solve your love life \x[write-free-books-to-get-famous-website/motivation][at university], Tinder or Tango.

The actually interesting aspects of the world are:
* business
* war
* \x[crime-film][crime]
* government
* science

Movies with a lot of action scenes, with exception of some war movies, are \x[shit].

The https://tvtropes.org/pmwiki/pmwiki.php/Main/SlidingScaleOfIdealismVersusCynicism[Sliding Scale of Idealism vs. Cynicism] must be close to Cynicism max at all times. Movies with pure good and pure bad are \x[shit].

Knowing spoilers has no effect in the film's enjoyment. The interest of storyline concepts is all that matters, visuals and acting are useless.

= High budget movies are shit
{parent=ciro-santilli-s-film-tastes}

Movies that are very expensive to make tend to be bad, because they have to make returns and thus appeal to a large amorphous population without any specialization, i.e. the \x[lowest-common-denominator] but in \x[tv-tropes] terminology rather than \x[mathematics]: https://tvtropes.org/pmwiki/pmwiki.php/Main/LowestCommonDenominator[].

See e.g.:
* \x[primer-2004]
* \x[the-man-from-earth-2007]
* \x[pirates-2005]

Looking down the https://en.wikipedia.org/wiki/List_of_biggest_box-office_bombs[largest flops of all time list] didn't help much, only https://en.wikipedia.org/wiki/Heaven%27s_Gate_(film)[Heaven's gate] appears reasonable from the top 20.

On \x[tv-tropes]: \x[it-s-popular-now-it-sucks].

= The best movies of all time
{parent=ciro-santilli-s-film-tastes}

In other sections:
* \x[the-godfather-1972]{child}
* \x[the-godfather-part-ii-1974]{child}
* \x[picnic-at-hanging-rock-1975]{child}

= Once upon a time in the west (1968)
{parent=the-best-movies-of-all-time}
{wiki=Once_Upon_a_Time_in_the_West}

Has the best opening scene of all time.

Top quotes:
* 3 evil guys: looks like we're short one horse. The good guy, shaking his head: you brought two too many.
* "So, you found out you're not a businessman after all." dialogue, see: https://www.imdb.com/title/tt0064116/characters/nm0000314

= Battle of Algiers (1966)
{parent=the-best-movies-of-all-time}
{wiki=The_Battle_of_Algiers}

There's nothing like seeing the hypocrisy of the "Liberté, Égalité, Fraternité" people destroyed.

Interesting how Algeria now supports https://www.france24.com/en/20190712-37-countries-defend-china-over-xinjiang-un-letter[China's Xinjiang policy in 2019].

= Primer (2004)
{parent=the-best-movies-of-all-time}
{wiki=Primer_(film)}

\x[high-budget-movies-are-shit][Low budget].

Things that can be understood are boring.

\x[aaron-swartz] agrees: http://www.aaronsw.com/weblog/looperexplained "Next week we'll explain Primer." He never did though :'-(

= Dr Strangelove (1964)
{parent=the-best-movies-of-all-time}
{wiki=Dr._Strangelove}

= The Criterion Collection
{c}
{parent=the-best-movies-of-all-time}
{wiki}

Respect, big respect to those people.

Some dude agreeing: https://www.youtube.com/watch?v=05XfGmH2zG4

= The best movies of all time: honorable mentions
{parent=the-best-movies-of-all-time}

* https://en.wikipedia.org/wiki/The_Wicker_Man[The Wicker Man (1973)]
* https://en.wikipedia.org/wiki/Mishima:_A_Life_in_Four_Chapters[Mishima: A Life in Four Chapters (1985)]. CIro can relate strongly to the level of passion depicted in this film.

= Army of the shadows (1969)
{c}
{parent=the-best-movies-of-all-time-honorable-mentions}
{title2=L'armée des ombres}
{wiki=Army_of_Shadows}

One of the most nerve wrecking movies ever made. Until they decide to rescue their colleague from jail, then it just becomes too surreal.

= Trainspotting (1996)
{c}
{parent=the-best-movies-of-all-time-honorable-mentions}
{wiki=Trainspotting_(film)}

= The Man From Earth (2007)
{parent=the-best-movies-of-all-time-honorable-mentions}

\x[high-budget-movies-are-shit][Low budget].

Good theory of \x[jesus].

List of similar feeling films: https://www.youtube.com/watch?v=zwYwFoanrNg 11 Underrated Hard Sci-fi Movies by Marvelous Videos (2021)

= The Matrix (1999)
{parent=the-best-movies-of-all-time-honorable-mentions}
{wiki=The_Matrix}

\x[ciro-santilli] just keep watching that a gazillion times whenever it showed on TV.

All action scenes are useless crap, but the premise with Ciro's precious \x[physics-and-the-illusion-of-life] subject.

= Samurai cinema
{parent=the-best-movies-of-all-time}
{wiki}

= The best samurai movies of all time
{parent=samurai-cinema}

Chanbara (チャンバラ).

Those movies are "all the same". A quasi lone superhuman samurai with a good inside but painful problems helping out random people, mostly villagers in trouble and bitches in debt:
* https://en.wikipedia.org/wiki/Lone_Wolf_and_Cub[Lone Wolf and Cub (1972-)]. Suio style... Ogami Itto. Cute Japanese boy. https://en.wikipedia.org/wiki/Wagyu[Wagyu... beef recipe]?
* https://en.wikipedia.org/wiki/Zatoichi[Zatoichi (1962-)]. Dude's blind.

= Documentary film
{parent=audiovisual-art}
{wiki}

= Documentary
{synonym}

= How to Fix a Drug Scandal (2020)
{c}
{parent=documentary-film}

= Annie Dookhan
{c}
{parent=how-to-fix-a-drug-scandal-2020}

One is reminded of \x[nick-leeson].

= Film director
{parent=audiovisual-art}
{wiki}

= Adam Curtis
{c}
{parent=film-director}

\x[ciro-santilli] really loved his \x[documentary] called \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021], and then proceeded to basically watch all of this films.

= Film directed by Adam Curtis
{parent=adam-curtis}

* \x[nick-leeson-and-the-fall-of-the-house-of-barings-by-adam-curtis-1996]{child}

= HyperNormalisation by Adam Curtis (2016)
{c}
{parent=film-directed-by-adam-curtis}

= Can't get you out of my head by Adam Curtis (2021)
{c}
{parent=film-directed-by-adam-curtis}
{wiki=Can't Get You Out of My Head (TV series)}

\x[ciro-santilli] was touched by this, and then watched several other documentaries by Curtis.

Part of Ciro asks if it is all a big conspiracy theory. But it feels and sounds so right.

Notably the part of the \x[governments-have-lost-all-power-to-companies], and can't do anything meaningful anymore to actually represent the people, because \x[globalization-reduces-the-power-of-governments].

= Governments have lost all power to companies
{parent=can-t-get-you-out-of-my-head-by-adam-curtis-2021}

Beautifully argued at: \x[can-t-get-you-out-of-my-head-by-adam-curtis-2021].

= Roberto Rossellini
{c}
{parent=film-director}
{wiki}

His films \x[blaise-pascal-1972] and \x[cartesius-1974] have the greatest scenery and wardrobe ever. The eerie horror movie soundtrack is also very interesting. Ciro was weirdly reminded of \x[cosmos-a-personal-voyage-1980].

= Blaise Pascal (1972)
{c}
{parent=roberto-rossellini}
{wiki}

\x[imdb]: https://www.imdb.com/title/tt0066839/

= Cartesius (1974)
{c}
{parent=roberto-rossellini}
{wiki}

\x[imdb]: https://www.imdb.com/title/tt0161382/

= IMDb
{c}
{parent=audiovisual-art}
{wiki}

= Television show
{parent=audiovisual-art}

= Television series
{parent=television-show}

= TV series
{c}
{synonym}

The best way to watch a television series is: wait for the thing to end. Then watch the first and last episodes of each season. The rest is fluff. And then pick up any missing interesting clips from \x[youtube]. If a series holds you more than those episodes, it is one of the few amazing ones.

= Limited series
{parent=television-series}

If you are going to make a television series, do make it a limited one. Plan one story, and execute it amazingly. Don't let things drag on and on.

= The best television series
{parent=television-series}

BBC 1979-1982 adaptations of \x[john-le-carre]'s novels are the best miniseries ever made:
* https://en.wikipedia.org/wiki/Tinker_Tailor_Soldier_Spy_(miniseries) Tinker Tailor Soldier Spy (1979)
* https://en.wikipedia.org/wiki/Smiley%27s_People_(miniseries) Smiley's People (1982)
They are the most realistic depiction of \x[spycraft] ever made.

Some honorable mentions:
* https://en.wikipedia.org/wiki/Futurama[Futurama]
  * S02E15 https://en.wikipedia.org/wiki/The_Problem_with_Popplers[The Problem With Popplers], see also: \x[animal-rights]. There has to be prior art on this idea, there has to, can someone please point it out?
  * https://www.youtube.com/watch?v=q-RUHhCzgxI[S06E09 A Clockwork Origin]
* https://en.wikipedia.org/wiki/Rick_and_Morty[Rick and Morty] before it turned to \x[shit] on season 3 had some genius moments:
  * S02E04 Total Rickall
  * \x[rick-and-morty-a-life-well-lived]
* https://en.wikipedia.org/wiki/Breaking_Bad[Breaking Bad]. There is a lot of "who kills who" useless fluff, and everything to do with the wife is boring, but too much gold otherwise. Especially the chimstry and business related stuff. Because when companies and criminals don't tell anyone about their secrets, it is up to the imagination of film makers to do so.

= Television series that Ciro Santilli watched all episodes of
{parent=television-series}

* \x[katla-tv-series]{child}
* \x[brideshead-revisited-1981]{child}

= List of television series
{parent=television-series}

= Katla
{c}
{disambiguate=TV series}
{parent=list-of-television-series}
{title2=2021}
{wiki}

= Silicon Valley
{c}
{disambiguate=TV series}
{parent=list-of-television-series}
{title2=2014-2019}
{wiki}

= Star Trek
{c}
{parent=list-of-television-series}
{wiki}

= Star Trek: The Next Generation
{c}
{parent=star-trek}
{title2=1987-1994}
{wiki}

\x[ciro-santilli] likes this. He doesn't have the patience to actually watch full episodes, rather just watching selected scenes from: https://www.youtube.com/channel/UCdeIGY2DIjpGf0A2m9GSE3g[], but still, it is interesting.

What appeals to Ciro in this series is how almost nothing is solved by violence, almost everything is decided in the bridge, at the "cerebral" level of the command structure. This reminds Ciro of a courtroom of law sometimes.

= The Simpsons
{c}
{parent=list-of-television-series}
{wiki}

= Brideshead Revisited (1981)
{c}
{parent=list-of-television-series}
{wiki=Brideshead_Revisited_(TV_serial)}

It's just too charming, and has some deep themes.

= Collecting
{parent=art}
{wiki}

= Stamp collecting
{parent=art}
{wiki}

= All science is either physics or stamp collecting
{parent=stamp-collecting}

\x[parameters-of-the-standard-model][26 parameters of the Standard model] on the blackboard. \x[99-bottles-of-beer][If one of those parameters should happen to be erased, 25 parameters of the Standard model on the blackboard...].

But certainly, \x[classification-of-finite-simple-groups][mathematics is not a part of].

= Comedy
{parent=art}
{wiki}

= British humour
{c}
{parent=comedy}
{wiki}

= Comedian
{parent=comedy}
{wiki}

In other sections:
* \x[weird-al-yankovic]{child}

= Comedy music
{parent=comedy}
{wiki}

= "Weird Al" Yankovic
{parent=comedy-music}
{wiki}

Best ones:
* https://www.youtube.com/watch?v=lOfZLb33uCg Amish Paradise
* https://www.youtube.com/watch?v=N9qYF9DZPdw White & Nerdy
* https://www.youtube.com/watch?v=hEcjgJSqSRU The Saga Begins
* https://www.youtube.com/watch?v=SHnTocdD7sk Trapped In The Drive-Thru

= Comedy show
{parent=comedy}

= YouTube comedy channel
{parent=comedy}

= Epic Rap Battles of History
{c}
{parent=youtube-comedy-channel}
{wiki}

https://www.youtube.com/EpicRapBattles

Best ones:
* \x[video-bill-gates-vs-steve-jobs-by-epic-rap-battles-of-history-2012]
* https://www.youtube.com/watch?v=ZT2z0nrsQ8o Rasputin vs Stalin. Epic Rap Battles of History (2013)

= Comics
{parent=art}
{wiki}

= Webcomic
{parent=comics}
{wiki}

= List of comics
{parent=comics}

= Dilbert
{c}
{parent=list-of-comics}
{wiki}

The \x[image-dilbert-small-loss][trashman] is \x[buddhism][the best].

Official archive: https://dilbert.com/

= xkcd
{c}
{parent=list-of-comics}
{wiki}

Website: https://xkcd.com/

This \x[webcomic] is venerated by \x[software-engineer]{p} as of 2020.

Being able to quote the right one at the right time is considered a fundamental \x[shibboleth] of the profession.

And with reason.

\x[licensed]{c} under \x[creative-commons-license] CC-BY-NC, amazing!!!

= Food
{parent=art}
{wiki}

In other sections:
* \x[chinese-cuisine]{child}

= Chocolate
{parent=food}
{wiki}

= Milk chocolate
{parent=chocolate}
{wiki}

= Dark chocolate
{parent=chocolate}
{wiki}

= Game
{parent=art}
{wiki}

= Board game
{parent=game}
{wiki}

= Trading card game
{c}
{parent=board-game}
{wiki}
{title2=TCG}

First major one: \x[magic-the-gathering].

= Magic: The Gathering
{c}
{parent=trading-card-game}
{wiki}

Magic is the best card game of all time. \x[ciro-santilli] agrees with this fact, and this \x[games-young-ciro-santilli-played][has nothing to do with the nostalgia factor of having played it while being a teenager].

It is also the one with the most cumbersome name possible, containing even a \x[bloody] colon punctuation in it!

However, besides that, Magic has another major flaw: the cards of old formats (Legacy and Modern), which are the only really interesting ones, are \x[fucking] expensive. Ciro thinks this is idiotic, and that Wizards should sell all cards individually with unlimited supply and all with the same prices, especially online where there are no printing costs. But because Wizards made the silly promise never to reprint certain cards with the https://mtg.gamepedia.com/Reserved_List[reserved list] in 1994, they can't even correct this mistake \x[legally]! (TODO maybe, see further discussion at: https://www.mtggoldfish.com/articles/contract-from-below-promissory-estoppel-and-the-reserved-list[]). There is however one simple solution: create and promote a new no reserve list format, and let reserve list formats rot away:
* https://www.youtube.com/watch?v=wIq0NWSLAJA Magic TV - A Look at Non Reserve List Legacy by ChannelFireball (2015). Notably, they suggest the workaround of printing very slightly differently functional reprints, e.g. "Snow covered duals". Genious.
* https://www.reddit.com/r/magicTCG/comments/8gtoj4/no_reserve_list_legacy/
One interesting outcome of this would be to have card cost limited formats. https://mtg.gamepedia.com/Penny_Dreadful[Penny Dreadful] puts a super low limit, on individual cards, but it would be cool to have a max cost per deck version of it.

A cool thing is when they printed http://www.magicspoiler.com/mtg-spoiler/garth-one-eye/[Garth One-Eye], which allows you to make imaginary copies of some of those restricted list cards during play. This is the type of "flirting with the rules", that \x[ciro-santilli] admires. The introduction of online-only cards such as XXX has pushed that even further as of 2021.

This was especially insane when Ciro was young and the Internet was not very widely available in Brazil yet, and Ciro did not know how to check the values of cards on online markets, and would trade cards with older much more knowledgable teenagers, based solely on his appraisal of a card's strength! Can you imagine how many young https://mtg.fandom.com/wiki/Timmy[Timmys] got ripped off in this manner, trading useless one million mana spells for ultra expensive https://en.wikipedia.org/wiki/Power_Nine[black lotuses]?

Another option we could pursue would be to make governments consider TCG pack opening a form of gambling, which it obviously is:
* https://www.quora.com/Why-is-Pokémon-card-collecting-not-considered-gambling-when-the-pack-of-cards-one-purchases-is-a-game-of-chance
* https://www.reddit.com/r/boardgames/comments/7fx3no/are_trading_card_games_gambling/

There is however one good solution to Magic's insane cost: watch people who have nothing better to do in their lives play on \x[youtube].

And as Internet formats dominate more and more, if they have any brains at will they will migrate to a subscription model where you pay to play for a given period of time, and have immediate access to all cards. It could even be a tiered access, with older formats being more expensive (more bugs to fix on different cards), but you must get access to all cards of a format at once.

Like in \x[mathematics], the most beautiful decks are those that do \x[ciro-santilli-s-self-perceived-creative-personality][crazy things]:
* infinite combos
* semi-infinite combos that allow you to likely draw your entire deck or deal 20 damage
* all-in decks that either win or lose on turn two
* and lands
All of this comes to a certain extent from the deep https://en.wikipedia.org/wiki/Symmetric_game[asymmetry] that permeates the game.

It is also really interesting to watch as new sets as spoiled and try to guess if certain cards will have any impact on the Modern or Legacy metagame.

Here are some cool decks:
* Cheerios, Modern. https://www.youtube.com/watch?v=WkjY7VWZC3o[Meryn MTG, 2019]
* Lands, Legacy. https://www.youtube.com/watch?v=a9Pxen2CZlg[Channel Mengucci, 2019]
* Belcher, Legacy, https://www.youtube.com/watch?v=ajJG11AI88o[Jeff Hoogland, 2019], https://www.youtube.com/watch?v=egGw0aWYsdc[Channel Mengucci, 2017]
* Ops All Spells

  \Video[http://youtube.com/watch?v=uFHtX4Agv4U]
  {title=Ops All Spells - Legacy | Channel Mengucci.}
* Gyruda Cannon - Legacy - April 18th, 2020 https://www.youtube.com/watch?v=PefRTsRRi6w

If Ciro were to ever overcome \x[ciro-santilli-s-cheapness][his cheapness] and play the legacy forma (which will never happen), he would likely play one of the following decks when trying to be able to win at all:
* https://www.mtggoldfish.com/archetype/turbo-depths[turbo depths]
* https://www.mtggoldfish.com/archetype/sneak-and-show[sneak and show]
Both of this decks focus on cheating a huge creature into play in one go, and both have combo protection methods (discard for turbo depths, and counterspells for sneak and show). Ciro believes that those decks reflect his personality well, notably \x[ciro-santilli-s-self-perceived-creative-personality]. Related decks that don't appeal as much to Ciro:
* https://www.mtggoldfish.com/archetype/reanimator[reanimator]: you have to worry about graveyard hate all the time, worrying is bad
* https://www.mtggoldfish.com/deck/2888239[storm]: you have to play too many spells, it's tiring. Ciro would rather put a fattie into play and swing once.
And above all, Ciro would never play a fair deck. Grinding victories is not for him. He'd rather quickly decide win/lose status and move on.

Competitive commander is also interesting, although matches tend to be much more random so the format is harder to digest, see for example this channel; https://www.youtube.com/channel/UCum8N4KUUC0l_NK_mybvilg[Playing With Power MTG channel].

In Ciro's mind, https://mtg.gamepedia.com/Urza%27s_block[Urza's block] is the most epic of all, followed by the https://en.wikipedia.org/wiki/Masques_block[masques block]. Those sets had a ridiculous power level and epic art, and they happened just before \x[ciro-santilli] started playing during https://en.wikipedia.org/wiki/Invasion_(Magic:_The_Gathering)[Invasion], which had an extremelly low power level in comparison. So Ciro saw some cards from those slightly older formats floating around, but not many, and they felt so mystical and awesome.

\Video[http://youtube.com/watch?v=pdmODVYPDLA]
{title="I Built a COMPUTER in Magic: The Gathering" by Because Science (2019)}
{description=Shows an explicit Turing complete Magic The Gathering setup with real cards in a standard "extremely lucky" 2 player game.}

https://www.youtube.com/channel/UCVmqfvWsKeFaMGY68CbcVVQ[ChannelFireball] is one of the best Legacy resources out there, but they have too much crap filling in between legacy videos unfortunately.

The following creators share many of Ciro's interests and output large quantities of interesting content covering all memes/overpowered combos of new sets:
* https://www.youtube.com/watch?v=1u5yzmta2oA BoshNRoll (Brian Coval) is basically \x[ciro-santilli]'s favorite MTG streamer of the early 2020's very good Legacy focused content, with occasional Modern and Pauper, good spicy deck selection. And he says nice and intelligent things the hole time, it's the type of person Ciro would be good friends with in real life. It sometimes makes Ciro said to see such a person wasting their lives with Magic. Twitter: https://twitter.com/BoshNRoll
* https://www.youtube.com/channel/UClaWphnKi16UJxRdkmFpw3A[Magic Aids]. His combination of politically incorrect dirt talk with amazing \x[ciro-santilli-s-self-perceived-creative-personality][quirky] decks captures Ciro's imagination. Anonymous no face-reveal. Modern focused, with some occasional newer formats mixed in.

  \Video[https://www.youtube.com/watch?v=HjZPn6VEcVY]
  {title=Magic Aids vs. Magic Rainbows!!! by Magic Aids (2018)}
  {description=In this amazing video Magic Aids makes fun of Wizards for forcing him to change is Magic Online handle from Magic Aids to something else due to the AIDS part. He claims the Aids is not meant as a reference to the disease, but just as in "memory aid". Ciro doubts this wasn't intentional. But the video is still amazing, and happens to involve a https://en.wikipedia.org/wiki/Sex_doll[sex doll] dressed as https://mtg.gamepedia.com/Liliana_Vess[Liliana Vess] squirting https://en.wikipedia.org/wiki/Glitter[glitter] from her vagina. Wizards must love this guy.}
* https://www.youtube.com/channel/UChw6Y6UYf6fIipBEWg6iEaw[Squa Chief]. He does a lot of cool decks.
* https://www.youtube.com/channel/UC0OFObRNMjSsnuEMGA-K29Q[Jeff Hoogland]
* https://www.youtube.com/channel/UC2hkmJr2x--IiMfozqj6VdQ Meryn MTG. She's too much on the jank side for Ciro's taste, but for that reason she covers some decks of interest that others don't. She's cute, and a Timmy at heart. Which makes you feel really sorry for her as she gets crushed by more competitive decks.
* https://www.youtube.com/channel/UCLYO-CiS0e8Yhs-U1k6ZmXQ[CalebD]. Legacy and Modern. Too much drafting in the middle of actual videos. Sometimes decks slightly too janky/experimental. Amazing channel soundtrack.
* https://www.youtube.com/channel/UCYwlc3jRrZqNNTPw3Lyl6wQ[Nikachu] has some decent commentary. His endlessly rambly persona is a bit annoying, but the content of the commentary is still good.

Another amazing channel is Alpha Investments: https://www.youtube.com/channel/UCTp-iVOtTrKau0skmfZlo5Q[] due to content that gives some idea of the behind the scenes of card trading, e.g.: https://www.youtube.com/watch?v=lN7zpKoRXeg "Spending \$500,000 per month on Pokemon & Magic". Ciro feels that such lessons can have applicability in business outside of the Magic The Gathering context as well.

Ciro was pleased when he learnt that \x[steve-wozniak-plays-magic-the-gathering].

Magic's competitive play became a mess in the late 2010's. They had a clear tournament structure, but they decided to start changing things every 6 months, and give tournaments meaningless names like "Mythic championship", and it just became impossible to follow what is what.
* https://www.mtggoldfish.com/articles/disorganized-play-and-the-magic-pro-league
* https://mtg.fandom.com/wiki/List_of_PT_events
* https://www.youtube.com/watch?v=nXUHaXiZ0HI The Moment Professional Magic Came to an End by Nikachu MTG (2021) has a good perspective. Magic is never going to have enough viewers to actually allow pros to make consistent ammounts money. And Magic's variability is just way too high for anyone to consistently win few large prizes on annual contests. Therefore they just killed such contests.

The https://mtg.fandom.com/wiki/Card_frame#Original_frame is the best, much more epic all others (notably since 2003 update) ware \x[bullshit], good overview https://medium.com/@raphaelaleixo/the-graphic-design-for-magic-the-gathering-card-frames-b3b6da4cd003

https://www.youtube.com/watch?v=5hk3IOQiisg Crazy MTG Scandals That Changed The Game by Nikachu (2021). Good list:
* obviously wrong card named
* Dryad arbour camouflaging as a land
* go to combat

= Magic: The Gathering is addictive
{parent=magic-the-gathering}

Paraprasing a friend of \x[ciro-santilli]:
\Q[\x[magic-the-gathering] is like \x[cocaine] in card form.]

Luckily, early teens \x[ciro-santilli] was partly protected from this by \x[ciro-santilli-s-cheapness].

But Ciro distinctly remembers one day in his early teens that he couldn't sleep very well, and he got up, and the was decided that he would become the greatest \x[magic-the-gathering] player who ever lived. Can you imagine the incredible loss that this would have been to humankind? And talk about the incredible lack of development opportunity present in poor countries, related:
* \x[brazil]
* \x[what-poor-countries-have-to-do-to-get-richer/pick-few-good-bets]

= Mathy Magic: The Gathering thoughts
{parent=magic-the-gathering}

In 2019, https://arxiv.org/pdf/1904.09828.pdf[a paper proved] that MTG is \x[turing-complete] with a legacy \x[legal] deck. Live demo with some hand waving: \x[video-i-built-a-computer-in-magic-the-gathering-by-because-science-2019]. As \x[ciro-santilli] comments at: https://github.com/cirosantilli/cirosantilli.github.io/issues/42 this was an interest addition to the previous "indefinite infinite loop" e.g. as found in a Four Horsemen combo deck

= Magic: The Gathering meta-based deck choice is a bimatrix game
{c}
{parent=mathy-magic-the-gathering-thoughts}

* \x[nash-equilibrium]
* \x[bimatrix-game]

Ciro had initially \x[googled] for the "4-card limit thought experiment" but he reached: https://www.channelfireball.com/articles/what-if-the-4-card-limit-was-abolished-in-modern/ "What if the 4-Card Limit Was Abolished in Modern?" by Frank Karsten (2018) and was much more pleased with the mathematical result. Like-minded people.

That links to https://www.channelfireball.com/articles/what-if-the-4-card-limit-was-abolished-in-modern/ the related article: "The Mythic Invitational's Duo Standard Format Game Theory Optimized" by Frank Karsten (2019) which explains well how Nash equilibrium is naturally reached: if there is any imbalance, someone can take advantage of it, and then it rebalances. Therefore once you've calculated the equilibrium, your best course of action is to pick a deck at random from a list of possible winners.

Of course, part of the beauty of Magic is that we can never really know the full matrix since deck choice is basically infinite. But at the very least it could give good archetype results.

= Wizards of the Coast
{c}
{parent=magic-the-gathering}

= Meta
{disambiguate=game}
{parent=game}
{wiki}

The meta of a \x[game] is the currently dominating know strategy or set of strategies, see also \x[nash-equilibrium]{full}.

= Break the meta
{parent=meta-game}

= Breaking the meta
{synonym}

= Breaks the meta
{synonym}

To break the meta means to find a new strategy that offers a significant advantage over the existing \x[meta-game].

For the specific of \x[video-game] \x[glitch] breaks see: \x[meta-breaking-glitch]{child}{full}.

Due to \x[ciro-santilli-s-self-perceived-creative-personality], \x[ciro-santilli] is very attracted to meta breaks.

\Video[https://www.youtube.com/watch?v=CZsH46Ek2ao]
{title=How One Man Changed the High Jump Forever by Olympics (2018)}
{description=https://en.wikipedia.org/wiki/Dick_Fosbury[Dick Fosbury] created and implemented the Fosbury Flop jump style in 1968.}

\Video[https://www.youtube.com/watch?v=sa46ZBDRT1E]
{title=Akiyo Noguchi asks the rules while \x[climbing]! | Beta Break Ep.1 by Albert Ok (2020)}
{description=Happened at the 2015 IFSC Climbing World Cup during the Haiyang, \x[china], bouldering event. The author has https://www.youtube.com/watch?v=07dmwivNcBk&list=PLsfWe31L6Quop7WDY7ky711o_Jhp4LKaS[a playlist] of such \x[climbing] meta breaks. In climbing, the \x[meta-game] is called "the \x[beta-climbing]". Climbing competitions are perhaps the sport in which the meta is broken the most often, since each stage is unique.}

\Video[https://www.youtube.com/watch?v=LxnilYOh95w]
{title=Lukas Hofer's Revolutionary Technique by IBU TV (2019)}
{description=Lukas created a new technique to pack up his rifle during \x[biathlon] competitions.}

= Video game
{parent=game}
{wiki}

\x[ciro-santilli] used to \x[games-young-ciro-santilli-played][play video games when he was young]. But after he reached 18 he got bored of them.

The problem is that no matter how you look at, the \x[ciro-santilli-s-selfish-desires][how to become famous in the real world game] is just always more interesting and fulfilling.

Therefore adult Ciro enjoys only the following types of video game content in video form, so that other people waste their lives playing the games while you only see the highlights:
* \x[speedrunning], including:
  * \x[tool-assisted-speedrun], Ciro's favorite by far
  * \x[real-time-attack-speedrun]
* \x[meta-breaking-glitch]{p}, including in \x[speedrunning] and on \x[pvp]-games.
* \x[magic-the-gathering]
* \x[video-game-review]{p}

The aspect Ciro enjoys about non-\x[pvp] games is atmosphere. Not as conveyed by useless story telling, but as conveyed by music and graphics, and the context deep idea. Legend of Zelda and Metroid come to mind.

And too many games commit the sins of dependency of dexterity, no save states, how do I skip this boring part, or jump straight to the beautiful one?

Ciro once commented that the best game is an infinitely hard one, where you can progress infinitely. To which hist friend J. replied: "fine, so the perfect game for you is \x[mathematics]. Stage one: prove the \x[riemann-hypothesis]!".

It also doesn't help if you are already typing on a computer all day long on your job. Hands get tired. Eyes have an infinite capacity to consume useless \x[the-best-youtube-channels][YouTube videos] however. Medically proved.

As a result, Ciro just watches videos about video games. Notably games he played when he was a teenager and already understand the rules for.

And things got even worse as Ciro attained his \x[write-free-books-to-get-famous-website/motivation][Open Source Enlightenment], and started to feel bad about playing \x[open-source-video-game][any game that is not open source].

Still, Ciro admires some sandbox games such as:
* https://en.wikipedia.org/wiki/Rust_(video_game)[Rust]: the brutality of this game, the fact that you can get killed at any point, and all players accept that, is awesome

\Image[Five_year_old_Ciro_Santilli_playing_NES_on_a_joystick.jpg]
{title=Five year old Ciro Santilli playing \x[nes] on a joystick.}
{description=He would get really mad because he could not finish those https://en.wikipedia.org/wiki/Nintendo_hard[insanely hard games]. Desperate, his parents would have to call older kids from the neighbourhood to help out. Pro tip from the future: the classic controller would almost always have been a more efficient controller. Maybe this kind of crap shapes one's future?}

= Meta breaking glitch
{parent=video-game}

A meta breaking \x[glitch] of a \x[video-game] is a glitch that when discovered significantly \x[breaks-the-meta].

In non-\x[video-game]-game, it does sometimes happen that a meta is broken as well, but these events tend to be rarer and less dramatic than meta-breaking due to \x[computer-program] glitches.

In \x[pvp] games, those glitches are generally forbidden by existing rules, and quickly patched after discovered.

In \x[speedrunning] however, they are either incorporated in the existing strategy, or may lead to the creation of a new run category for particularly significant glitches.

\Video[https://www.youtube.com/watch?v=oYqh_jfJU3I]
{title=The Controversial Olofboost by theScore esports (2018)}
{description=Descries the boost used by \x[counter-strike-global-offensive][CS:GO] pro-team Fnatic during the DreamHack Winter 2014 quarterfinals.}

= Player versus player
{parent=video-game}
{wiki}

= PvP
{c}
{synonym}

= Speedrun
{parent=video-game}
{wiki}

= Speedrunning
{synonym}

= Real-time attack speedrun
{parent=speedrun}
{title2=RTA}
{wiki}

A non-\x[tool-assisted-speedrun].

\x[ciro-santilli] views humans as \x[human-brain][biological robots], and therefore RTA videos can be thought of as probabilistic TAS with human achievable reflex constraints.

This aspect is especially highlighted in "speed run record evolution videos", which can be quite fun, e.g. https://www.youtube.com/watch?v=pmS9e7kzgS4 Ocarina of Time - World Record History and Progression (Any% Speedrun, 1990s-2017) by retro (2017)

From a similar point of view, Ciro also sometimes watches/learns a bit about competitive \x[pvp] games from a \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development]["could a computer play this better than a human"] point of view.

Ciro also likes to watch commented manual speedruns of games as a way of experiencing the game at a high level without spending too much time on it, often from https://en.wikipedia.org/wiki/Games_Done_Quick[Games Done Quick]. Their format is good because it generally showcases one player focusing more on the gameplay, and three couch commentators to give context, that's a good setup.

It is a

= Tool-assisted speedrun
{parent=speedrun}
{title2=TAS}
{wiki}

To some extent, the ultimate achievement of a TAS is to achieve \x[arbitrary-code-execution] (ACE) on a game, although this has been becoming rarer and rarer in newer consoles. The \x[nintendo-64] is the current interesting ACE discovery frontier as of 2020.

Post ACE, you then get into more subtle categories which tend to be more geometric clipping through wall glitches, but those can still be fun.

The most beautiful TAS content ever made are:
* \x[super-mario-64]
  * no-A press 120 stars attempts by https://en.wikipedia.org/wiki/Pannenkoek2012

    2018 video outlining the 18 unique A presses missing for 120-stars at the time: https://www.youtube.com/watch?v=RJaL5QOq590

    One of the most elaborate explained videos: https://www.youtube.com/watch?v=kpk2tdsPh0A "SM64 - Watch for Rolling Rocks - 0.5x A Presses"
  * 1-key any percent run:
    * 2016 emulator run: https://www.youtube.com/watch?v=TkOkJvLKxUY
    * AGDQ 2018 commented TASBOT console verification: https://www.youtube.com/watch?v=xvWOLT9G6tM
    * Why we need one key: https://gaming.stackexchange.com/questions/249969/in-mario-64-speedruns-why-are-the-keys-necessary/351595#351595
  * related: \x[super-mario-64-reverse-engineering-project]
* Super Mario World for the \x[snes] arbitrary code execution
  * https://www.youtube.com/watch?v=OPcV9uIY5i4 with in-game programmed \x[pong] and Snake, 2014
  * https://www.youtube.com/watch?v=HxFh1CJOrTU Seth Bling does the credit warp manually in about 3 minutes, 2015. Later reduced to less than 1 minute: https://www.youtube.com/watch?v=Jf9i7MjViCE
  * https://www.youtube.com/watch?v=voL3e0iqugo ACE was initially not forbidden in 11 exit rules, so Seth made an in-game manual ACE that programs an in-game accessible "exit stage now" functionality!!! This was later forbidden of course, but it was fun while it lasted.
    * then he injected a Flappy Bird clone manually!!! https://www.youtube.com/watch?v=hB6eY73sLV0, 2016
* Ocarina of time
  * 2020 ACE via https://cwe.mitre.org/data/definitions/416.html[use after free] including a non-TAS credit warp faster than the 2016 wrong glitch: https://www.polygon.com/2020/1/24/21080568/zelda-ocarina-of-time-arwing-spawn-video-speedrun-credits-ace-cheat-code ACE later reproduced in Majora's Mask, which has a similar \x[game-engine].
  * 2016 Zelda Ocarina of Time wrong warp glitch:
    * https://www.youtube.com/watch?v=uCO0jU66g3g 2016 video
  * https://www.youtube.com/watch?v=Gso4MuNSuV8 EZScape explains the glitch, 2016
* Zelda Majora's Mask debug menu
  * https://www.youtube.com/watch?v=2wdchm5Uwp4&t=2086s first video
  * https://www.youtube.com/watch?v=CCubcEgnD6A overview

It is also amusing to see http://tasvideos.org/ConsoleVerificationGuide.html[console verification] of emulations, e.g.: \x[video-super-mario-64-120-stars-in-1-20-41-52-console-verified-by-soul-umbreon-2012].

\Video[http://youtube.com/watch?v=BFBGWrGT1E8]
{title=\x[super-mario-64] '120 Stars' in 1:20:41.52 Console Verified by Soul Umbreon (2012)}

= Open source video game
{parent=video-game}

Parent section: \x[open-source-software].

Why would anyone ever waste time playing a closed source game, when this will inevitably lead to endless hours of decompilation down the line when you want to:
* fully understand how the game works, notably to help with \x[tool-assisted-speedrun][TASsing]
* improve the game's flaws as devs drop support (https://www.vg247.com/2018/09/14/isnt-ps4-xbox-switch-port-final-fantasy-8-preservation-may-answer/[or lose source code and have to late \x[reverse-engineering][reverse-engineer] their own fucking game]?) :-)

Those who devote their time to the \x[art][useless] development of open source video games, \x[integrated-development-environment][before we even have decent open source development tooling], will, without a doubt, have their place in Heaven.

* tower defense
  * https://www.edopedia.com/demo/pixeldefense possible source https://github.com/jesseakt/PixelDefense 2020-03 desperately lacks a fast forward button and enemy health bars
* 3D platformer
  * http://edelweiss.32x.io/
* OpenClonk: Terraria-like 2D mining crafting game. Pretty well done. Not sure if you can have a super huge open world. The fact that the music stops completely so often is a bit saddening.
* https://en.wikipedia.org/wiki/Pingus[Pingus]: Lemmings clone. Very good.
* https://github.com/The-Powder-Toy/The-Powder-Toy[]: https://en.wikipedia.org/wiki/Falling-sand_game in C++. No Ubuntu 19.10 package it seems, but was easy to compile from source.
* roguelike
  * survival
    * https://en.wikipedia.org/wiki/Cataclysm:_Dark_Days_Ahead
* Worms clone
  * Hedgewars

= Open source video game library
{parent=open-source-video-game}

= Simple DirectMedia Layer
{c}
{parent=open-source-video-game-library}
{title2=SDL}
{wiki}

This is a really good project. So fun to play around with. Low level IO part only like drawing to screen and handling keyboard inputs.

\x[ciro-santilli] has:
* a few answers on \x[stack-overflow]: https://stackoverflow.com/search?tab=votes&q=user%3a895245%20%5bsdl%5d
* a small cheatsheet on: https://github.com/cirosantilli/cpp-cheat/tree/09cb7c9fc1ee4a8bee421f12d0596b81cfd836bd/sdl

= Open source video game asset
{parent=open-source-video-game}

= game-icons.net
{c}
{parent=open-source-video-game-asset}

https://game-icons.net/

This is a good project. Limited scope to 2D card-like \x[game]{p}, but very good within that scope.

\x[ciro-santilli] used it for the 2D version of his \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development].

= Video game console company
{parent=video-game}

= Nintendo
{c}
{parent=video-game-console-company}
{wiki}

= Nintendo video game consoles
{parent=nintendo}
{wiki}

= Nintendo Entertainment System
{c}
{parent=nintendo-video-game-consoles}
{title2=1983}
{wiki}

= NES
{c}
{synonym}
{title2}

= Super Nintendo Entertainment System
{c}
{parent=nintendo-video-game-consoles}
{title2=1990}
{wiki}

= SNES
{c}
{synonym}
{title2}

= Super Nintendo games
{c}
{parent=super-nintendo-entertainment-system}

= Final Fantasy VI
{c}
{parent=super-nintendo-games}
{wiki}

= Nintendo 64
{c}
{parent=nintendo-video-game-consoles}
{title2=1996}
{wiki}

This is the one that hit \x[ciro-santilli] the hardest, coming in at the point in which he started to discern between games and the real world a little better. His parents bought it for him during a trip to Disney World in Florida in 1996 (?), since electronics were much cheaper in the \x[usa].

So as Ciro became older, and turned into a \x[software-engineer], he started to become more and more morbidly curious about "N64 internals": \x[tool-assisted-speedrun], how the devkit looks like, how games were developed for it, hardware leaks, etc.

Luckily Ciro's mind is not interested enough by that \x[art][useless shit] for Ciro to seriously study it himself. But that's what \x[youtube] is for, right? Why do useless stuff when other more useless people can do it for you?

= Nintendo 64 emulators
{c}
{parent=nintendo-64}

= Mupen64Plus
{parent=nintendo-64-emulators}

= Nintendo 64 games
{c}
{parent=nintendo-64}

= Super Mario 64
{c}
{parent=nintendo-64-games}
{wiki}

Ah, \x[ciro-santilli] loved this one... \x[games-young-ciro-santilli-played].

And as a result, adult Ciro really enjoys \x[tool-assisted-speedrun]{p} of the game.

= Super Mario 64 reverse engineering project
{c}
{parent=super-mario-64}
{title2=n64decomp/sm64}

* https://github.com/n64decomp/sm64 for emulator, tested at 9214dddabcce4723d9b6cda2ebccbac209f6447d
* https://github.com/sm64-port/sm64-port Ubuntu native, tested at 6b47859f757a40096fedd6237f2bc3573d0bc2a4

  Full screen with F10.
* https://github.com/sm64pc/sm64ex[]: fork of sm64-port, untested by Ciro, but more new amazing usability features, notably:

  * `--skip-intro`: skips the annoying pipe intro and the need to wait for Lakitu to bring Peaches message!
  * in-game menu:
    * cheats:
    * hide HUD!
  * no level selection yet, but a matter of time?
    * https://github.com/sm64pc/sm64ex/pull/417
    * https://github.com/sm64pc/sm64ex/pull/402
    * https://github.com/sm64pc/sm64ex/issues/425
    * https://github.com/sm64pc/sm64ex/issues/424

  Also reported to work on ARM: https://www.reddit.com/r/linux/comments/ityg6w/pinephone_playing_super_mario_64_30fps/

  They also ported to browser with Emscripten: https://github.com/sm64pc/sm64ex/wiki/Compiling-for-the-web

OMG, both of those just fucking work on Ubuntu 20.04 with README instructions, it is unbelievable, those people don't have lives. And it builds the ROM byte by byte equal.

Tested with the USA ROM at sha1sum 9bef1128717f958171a4afac3ed78ee2bb4e86ce (you need a ROM to extract assets, which the project automates), which is also documented in the project itself: https://github.com/sm64-port/sm64-port/blob/6b47859f757a40096fedd6237f2bc3573d0bc2a4/sm64.us.sha1[]. Disclaimer: \x[ciro-santilli] owns a copy of \x[super-mario-64].

The only dependency missing from Ubuntu packages is the https://en.wikipedia.org/wiki/IRIX[IRIX] \x[qemu] https://cirosantilli.com/linux-kernel-module-cheat/#user-mode-simulation[user mode] which they need for their tooling. The project also has a QEMU fork for that, and provide a working deb.

From this project it was also noticed that certain ROM releases were not compiled with optimizations enabled, presumably because as a release title the compiler had optimization bugs! https://www.resetera.com/threads/so-apparently-the-ntsc-build-of-mario-64-didnt-use-any-compiler-optimizations.166277/ But now they do have a working compiler, and by turning that switch FPS increases in certain levels!!!

It is good to know that this game will "never die".

Some quick stupid patches:

* jump really high:

  ``
  diff --git a/src/game/mario.c b/src/game/mario.c
  index 5b103fa..83c9f40 100644
  --- a/src/game/mario.c
  +++ b/src/game/mario.c
  @@ -826,7 +826,7 @@ static u32 set_mario_action_airborne(struct MarioState *m, u32 action, u32 actio
           case ACT_JUMP:
           case ACT_HOLD_JUMP:
               m->marioObj->header.gfx.unk38.animID = -1;
  -            set_mario_y_vel_based_on_fspeed(m, 42.0f, 0.25f);
  +            set_mario_y_vel_based_on_fspeed(m, 200.0f, 0.25f);
               m->forwardVel *= 0.8f;
               break;
  ``

Interesting entry points:
* `src/game/game_init.c`

TODO: enable the level select debug feature! https://tcrf.net/Super_Mario_64_(Nintendo_64)/Debug_Content#Classic_Debug_Display They actually shipped quite a few debug features into the retail game, and they have been reversed too. I tried this but it didn't work (or I don't know how to enable the level select menu):
``
diff --git a/src/game/main.c b/src/game/main.c
index 9e53e50..b7443a8 100644
--- a/src/game/main.c
+++ b/src/game/main.c
@@ -65,7 +65,7 @@ s8 sAudioEnabled = 1;
 u32 sNumVblanks = 0;
 s8 gResetTimer = 0;
 s8 D_8032C648 = 0;
-s8 gDebugLevelSelect = 0;
+s8 gDebugLevelSelect = 1;
 s8 D_8032C650 = 0;

 s8 gShowProfiler = FALSE;
``

The `enhancements/` folder contains a few sample patches.

\Image[Screenshot_of_Mupen64Plus_running_on_Ubuntu_20.04_emulating_Super_Mario_64_with_the_title_screen_hacked_by_Ciro_Santilli.png]
{title=Screenshot of \x[mupen64plus] running on \x[ubuntu][Ubuntu] 20.04 emulating \x[super-mario-64] with the title screen hacked by \x[ciro-santilli] based on the \x[super-mario-64-reverse-engineering-project].}
{description=The title was on a string, so the hack was trivial! The patch used was:
``
diff --git a/include/text_strings.h.in b/include/text_strings.h.in
index 749179b..626f87e 100644
--- a/include/text_strings.h.in
+++ b/include/text_strings.h.in
@@ -131,7 +131,7 @@
  */
 // Main Screens
 #define TEXT_MARIO _("MARIO") // View Score Menu
-#define TEXT_SELECT_FILE _("SELECT FILE")
+#define TEXT_SELECT_FILE _("HACKED BY CIRO")
 #define TEXT_CHECK_FILE _("CHECK FILE")
 #define TEXT_COPY_FILE _("COPY FILE")
 #define TEXT_ERASE_FILE _("ERASE FILE")
``
}
{height=500}

= Sony
{c}
{parent=video-game-console-company}
{wiki}

= Sony video game consoles
{c}
{parent=sony}
{wiki=Category:Sony_consoles}

= Playstation
{c}
{parent=sony-video-game-consoles}
{wiki}

= Playstation games
{c}
{parent=playstation}
{wiki}

= Suikoden
{c}
{parent=playstation-games}

This game (1 or 2, can't remember) made an impression on \x[ciro-santilli] for some reason.

Only many many years after playing it, after Ciro \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china][started getting more interested], did he learn that it was actually an adaptation of the \x[chinese] mega-classic \x[water-margin].

The game puts great emphasis on the concept of the \x[108-stars-of-destiny]: making 108 allies, the main \x[collectible-video-game-design] of the game, allows you to make a more powerful alliance, and unlock better endings. Actually, now that Ciro thinks about it, these were already likely meant as a "collectible" element by the author of the original book, as is strongly suggested by all the little illustrations of each character present on the \x[wikipedia] page. And so are the \x[catholic] \x[saint]{p}.

Ciro would notably feel many years later, that as he \x[ciro-santilli-s-e-soulmates][met random people online] who were interested in \x[write-free-books-to-get-famous-website][improving eduction], as if he were actually

= Video game console
{c}
{parent=video-game}
{wiki}

Who needs a hackable general purpose \x[computer], when you can buy a completely locked down computer that only runs \x[art][useless] programs for which you have to https://en.wikipedia.org/wiki/Game_development_kit[pay thousands of dollars to develop] for, https://en.wikipedia.org/wiki/Platform_exclusivity[cannot run a large percentage of major titles from competitor hardware due to business deals] (https://gamedev.stackexchange.com/questions/124697/why-do-game-developers-develop-games-for-exclusive-contracts[see also]) and will inevitably reach \x[planned-obsolescence] in 4 years?

By company:
* \x[nintendo-video-game-consoles]

= Arcade game
{parent=video-game-console}
{wiki}

= Pac-Man
{c}
{parent=video-game-console}
{wiki}

= Pong
{c}
{parent=video-game-console}
{wiki}

= Video game design
{parent=video-game}
{wiki}

= Collectible
{disambiguate=video game design}
{parent=video-game-design}

= Video game review
{c}
{parent=video-game}

= Angry Video Game Nerd
{c}
{parent=video-game-review}
{title2=AVGN}

https://www.youtube.com/AngryNintendoNerd/videos

He's good. Sometimes a bit repetitive, but generally pretty good.

Only the "original" videos matter. After those it became crap.

https://www.youtube.com/watch?v=h6DtVHqyYts Big Rigs: Over the Road Racing (PC) (2014) is perhaps his best video.

= Video game genre
{parent=video-game}
{wiki}

= Shooter game
{parent=video-game-genre}
{wiki}

= Counter-Strike
{c}
{parent=shooter-game}
{title2=CS}
{wiki}

= Counter-Strike: Global Offensive
{c}
{parent=counter-strike}
{title2=CS:GO}
{wiki}

= Serious game
{parent=game}
{wiki}

= AI training games
{c}
{parent=serious-game}

\x[ciro-santilli] took a stab at: \x[large-cohesive-game-world-for-robotic-like-artificial-intelligence-development], but he didn't sink too much/enough into that project.

= OpenAI
{c}
{parent=ai-training-games}
{wiki}

= OpenAI Gym
{c}
{parent=openai}

https://github.com/openai/gym

= Literature
{parent=art}
{wiki}

\x[ciro-santilli] used to read books when he was younger (\x[harry-potter] up to the 4th, Lord of the Rings), but once you are reading code, technical articles and news the whole day, you really just want to \x[magic-the-gathering][watch videos of people doing useless things on YouTube] to rest, enough text.

Books are slow. No patience. Need faster immediate satisfaction.

Paradoxically Ciro feels like he's becoming a writer of sorts though, one semi independent section/\x[the-machiavellian-stack-overflow-contributor][answer]/piece of knowledge at a time.

Writing is not just giving out information. It is re-feeling it.

= Good book
{parent=literature}

* \x[robert-noyce-the-man-behind-the-microchip-by-leslie-berlin-2006]{child}

= Author
{parent=literature}
{wiki}

= C. S. Lewis
{c}
{parent=author}
{title2=1898-1963}
{wiki}

= John Le Carré
{c}
{parent=author}
{wiki}

= William Shakespeare
{c}
{parent=author}
{wiki}

= Shakespeare
{c}
{synonym}

= Quote by Shakespeare
{parent=william-shakespeare}

= Once more unto the breach
{parent=quote-by-shakespeare}

From Henry V: https://www.poetryfoundation.org/poems/56972/speech-once-more-unto-the-breach-dear-friends-once-more

= Fight fire with fire
{parent=quote-by-shakespeare}

Related quotes:
* \x[tit-for-tat]

= List of books
{parent=literature}

= Harry Potter
{c}
{parent=literature}
{wiki}

= Luxury goods
{parent=art}

One of the things \x[ciro-santilli] most deeply despises.

Real luxury is to understand \x[quantum-field-theory] and \x[number-theory].

= Fashion
{parent=luxury-goods}
{wiki}

= Music
{parent=art}
{wiki}

\x[ciro-santilli] took courses once upon a time, maybe that has influenced his passion? \x[ciro-santilli-s-musical-education].

= Computer music
{parent=music}
{wiki}

= LilyPond
{c}
{parent=computer-music}
{wiki}

http://lilypond.org/

Music notation engine. \x[domain-specific-language] input. The \x[latex] of music.

= Computer music file format
{parent=computer-music}

Looking for formats that:
* are human readable plaintext files
* can be converted/played as \x[midi]
* can be converted to sheet music \x[pdf]{p}
* supports basic guitar effects (bends and slides)

Bibliography:
* https://music.stackexchange.com/questions/23320/file-formats-for-sheet-music
* https://sound.stackexchange.com/questions/39457/how-to-open-midi-file-in-text-editor/50058#50058
* https://askubuntu.com/questions/848531/music-notation-software-for-ubuntu

= ABC notation
{c}
{parent=computer-music-file-format}
{wiki}

Standard from 2011: http://abcnotation.com/wiki/abc:standard:v2.1

A decent way to write diatonic music as plaintext!

Conversion to \x[midi] with \x[abcmidi].

No bend/vibratto/slides :-(

Multitrack volatile: http://abcnotation.com/wiki/abc:standard:v2.1#multiple_voices

= abcmidi
{c}
{parent=abc-notation}

https://sound.stackexchange.com/questions/39457/how-to-open-midi-file-in-text-editor/50058#50058

= MusicXML
{c}
{parent=computer-music-file-format}
{wiki}

Higher level than \x[csound]: describes the notes only, not the exact waveforms it seems.

Therefore also a bit harder to convert to actual sound: https://stackoverflow.com/questions/33775336/convert-musicxml-to-wav but possibly easier to convert to \x[lilypond].

Now they need to create a "MusicCSS" that gives the waveforms! :-)

The usual "let's make a standard without a reference implementation" W3C approach.

= Linux audio system
{c}
{parent=computer-music}
{wiki}

= Advanced Linux Sound Architecture
{c}
{parent=linux-audio-system}
{title2=ALSA}
{wiki}

ALSA can be thought as analogous to  physical wires linking up machines.

Except that instead of machines, you have separate programs. One such typical link is:
* from a MIDI source, e.g. \x[vmpk] or a \x[midi] editor with playback like \x[ardour-software]
* to a synthesizer like \x[fluidsynth] or \x[zynaddsubfx]

The advantage of this setup is that separate programs can collaborate to make complex sounds. 

The disadvantage of this setup is that it makes it very hard to reproduce results, you basically need a \x[docker-software] image with the exact same version of everything. And some script to launch and connect all programs correctly.

Some composition systems like \x[lmms] reduce that problem by having synthesizers as plugins, so that you don't have to setup any connections yourself.

`aconnect` \x[vmpk] \x[hello-world]: https://askubuntu.com/questions/34391/virtual-midi-piano-keyboard-setup/1298026#1298026

= Software synthesizer
{parent=computer-music}
{wiki}

Dominating awesome list: https-github-com-nodiscc-awesome-linuxaudio

A large part of these projects are on \x[sourceforge] as of 2020, it is scary. They just die.

= Bristol
{c}
{disambiguate=synthesizer}
{parent=software-synthesizer}
{wiki}

Simulates vintage \x[hardware-synthesizer]{p}, and includes some pretty complex ones!

Aims to show an UI that looks exactly like the synthesizers in question.

For example for the \x[minimoog] on \x[ubuntu] 20.04:
``
sudo apt install bristol
startBristol -mini -alsa
``

This is a really good piece of software. You can search on \x[youtube] how some classic synths, work, and the immediately start playing them!

= FluidSynth
{c}
{parent=software-synthesizer}
{wiki}

Synthesizes MIDI input. \x[vmpk] + `aconnect` + \x[advanced-linux-sound-architecture] \x[hello-world]: https://askubuntu.com/questions/34391/virtual-midi-piano-keyboard-setup/1298026#1298026

Supports only very basic effects it seems: \x[chorus-effect] and \x[reverberation]. The main way to add instruments to it is via \x[soundfont] files.

= Qsynth
{c}
{parent=fluidsynth}

\x[qt-software] front-end for \x[fluidsynth].

= ZynAddSubFX
{c}
{parent=software-synthesizer}
{wiki}

https://askubuntu.com/questions/220802/no-sound-zynaddsubfx-and-jack-wont-run/1297988#1297988

Contains a large database of instruments, and allows you to edit them. This is a fun toy.

Instruments are edited on a \x[gui]. It is a multi-window program, and you open new windows from new windows from new windows, all filled with hundreds of virtual knobs that you drag with your keyboard, and which would be better done from textual software like \x[csound]. It is a thing of beauty.

It does not seem possible to program arbitrary \x[modular-synthesizer] circuits therefore. But if you understand \x[additive-synthesis] and \x[subtractive-synthesis] well, you can make some funky sounds with it.

It is basically a superset of all popular \x[hardware-synthesizer]{p} ever made.

Has its own built-in MIDI keyboard which is nice.

On Ubuntu 20.04 Version: 3.0.5:
``
sudo apt install zynaddsubfx
zynaddsubfx -O alsa
``
as per https://askubuntu.com/questions/220802/no-sound-zynaddsubfx-and-jack-wont-run/1297988#1297988
To do anything of interest, switch to the Advanced UI:
* Misc
* Switch Interface Mode

The UI is completely different form what is shown on the website as of 2020: https://zynaddsubfx.sourceforge.io/[], it looks instead like: https://www.youtube.com/watch?v=iVPr6iUuO3g[] Maybe on the website it is the new zyn-fusion UI... https://www.reddit.com/r/linuxaudio/comments/bxn3ur/some_help_for_installing_zynfusion_zynaddsubfx/ so confusing.

And they have some crappy policy of asking for 45 USD for binary downloads.

Compiling from source:
``
git clone https://github.com/zynaddsubfx/zynaddsubfx
cd zynaddsubfx
git checkout a789866de4d45a784c1f4d95fcf5a1938347baef
sudo apt build-dep zynaddsubfx
mkdir build
cd build
cmake ..
make -j`nproc`
``
fails with:
``
Traceback (most recent call last):
  File "/usr/bin/cxxtestgen", line 7, in <module>
    import cxxtest.cxxtestgen
  File "/usr/share/cxxtest/cxxtest/__init__.py", line 33, in <module>
    from cxxtest.cxxtestgen import *
  File "/usr/share/cxxtest/cxxtest/cxxtestgen.py", line 18, in <module>
    import __release__
ModuleNotFoundError: No module named '__release__'
``
Ciro gives up for now.

= GUI music editor
{c}
{parent=software-synthesizer}

Lists:
* https://itsfoss.com/best-audio-editors-linux/

= Scorewriter
{parent=gui-music-editor}
{wiki}

Basically a \x[gui-music-editor] where you can specifically see and export classical music notation instead of tablature-style notation.

Best open source one found so far as of 2020: \x[musescore].

= MuseScore
{c}
{parent=scorewriter}
{wiki}

https://github.com/musescore/MuseScore

This software feels amazing. You can really start composing very quickly, lots of features, good keyboard shortcuts.

GPL, and there's a backing company that makes money with an online and mobile version of it.

Can export to:
* \x[midi]
* \x[pdf]

Ubuntu 20.04: sound preview worked, first hat that trailing Contra-like sound artifacts (like `spd-say`), but then it went away?

Feels like a lot of effort was put into usability, including keyboard shortcuts by default, seems like a powerful and easy to start using software to compose music!

Glissando: yes: https://musescore.org/en/handbook/arpeggios-and-glissandi

= TuxGuitar
{c}
{parent=scorewriter}
{wiki}

Just use \x[musescore] instead.

Weight: light.

Can import from: \x[midi].

Can export to:
* \x[midi]
* \x[musicxml]
* \x[lilypond]

\x[ubuntu] 20.04:
``
sudo apt install tuxguitar tuxguitar-alsa tuxguitar-jsa tuxguitar-oss
``
`tuxguitar-jsa` was needed, otherwise no sound: https://askubuntu.com/questions/457321/tuxguitar-no-sound-in-14-04

Has OK step sequencer non-realtime up/down/left/right guitar based composition interface.

Has chord insertion.

Has bend editor.

Could be more amazing, but it is OK.

A bit limited by being very "guitar oriented". Shows you guitar strings, and you enter offset to each string. So to enter two adjacent notes you need to use two seprate strings and thing about the offsets. If only it had a more piano based interface.

Drum notation is also atrocious, you have to go to the top chord, and use high numbers starting at 36.

= Ardour
{c}
{disambiguate=software}
{parent=gui-music-editor}
{wiki}

Weight: heavy.

\x[midi] support is kind of secondary: https://www.youtube.com/watch?v=vnkJ0uYXMG8[], e.g. how to export MIDI? https://discourse.ardour.org/t/export-an-entire-project-into-a-midi-file/88116

\Video[https://www.youtube.com/watch?v=bfTAKv4htDE]
{title=Ardour 6 Quickstart (recording, editing, mixing and exporting) by unfa (2020)}
{description=unfa is a helpful Ardour master and \x[open-source-software] junkie at your \x[youtube] service.}

Ardour \x[vmpk] input: https://askubuntu.com/questions/709673/save-as-midi-when-playing-from-vmpk-qsynth/1298231#1298231

= LMMS
{c}
{parent=gui-music-editor}
{wiki}

Very easy to use and pretty powerful \x[midi] creator!!!

One of the rare audio applications actually works with PulseAudio on Ubuntu 20.04 out-of-the-box, so you don't have to turn off every other audio application!!!

Has lot's of plugins built-in just working out of the box, e.g. \x[zynaddsubfx] out-of-the-box without doing a gazillion complex setup connections.

Most plugins are just simple toys however, \x[zynaddsubfx] is the only super powerful one. The others are more LMMS integrate however, and seem to use a more dedicated LMMS \x[gui] style.

TODO can you do liver performance with a virtual instrument?
* https://lmms.io/forum/viewtopic.php?t=27428
* https://www.reddit.com/r/lmms/comments/b485ds/is_it_possible_to_do_live_looping_performances_in/
* https://lmms.io/forum/viewtopic.php?t=28504

If you open \x[vmpk], you can then right click on a piano track, and go MIDI, Input and it just shows up there, and it does produce sound as shown at: https://www.youtube.com/watch?v=NpeP2th08ak

TODO: what about recording the input MIDI? Yes, there is a record button on the piano roll!

= Rosegarden
{c}
{parent=gui-music-editor}
{wiki}

Weight: medium.

Can import from: \x[midi].

Can export to:
* \x[csound]
* \x[musicxml]
* \x[midi]
* \x[lilypond]

Cannot hear any sound from it on \x[ubuntu] 20.04: https://askubuntu.com/questions/510052/how-do-you-get-rosegarden-to-play-sound-when-playing-a-midi-in-it

= Text-based music synthesizer
{parent=software-synthesizer}

So we can track the music in \x[git]!

* https://www.reddit.com/r/Python/comments/1mvx4u/using_python_to_create_music/

= Csound
{c}
{parent=text-based-music-synthesizer}
{wiki}

https://www.csounds.com/

https://github.com/csound/csound

\x[xml] file format (but with 99% of the action of interest in a \x[domain-specific-language] on the `CsInstruments` and `CsScore` elements) that can be played and the reference implementation. Offers complex effects out-of-box apparently.

Allows you to easily define instruments with seemingly arbitrary mathematical functions, and then use them to play notes at given time intervals.

The instrument functions can be parametrized, and each note played can have different parameters.

The instrument definition actually defines a block diagram graph, much like a hardware synthesizer would.

Csound is so not-bloated that it contains an UI system. And it includes an interactive virtual MIDI keyboard that interacts with parameter knobs: http://www.csounds.com/manual/html/MidiTop.html

But hey, it's fun. And like any other good DSL, debugging it is barbaric of course.

If only it had been written in \x[python]... the array manipulation boilerplate would be likely perfect for \x[numpy], and this would have been exactly what \x[ciro-santilli] wanted!

CSound states that one of its design goals is backward compatibility, and it shows. Some of the stuff is utterly arcane, e.g. you have to remember what `GEN10`, `GEN11`, etc. mean instead of having named enums.

\x[ubuntu] 20.04:
``
sudo apt install csound
git clone https://github.com/csound/csound
cd csound
git checkout 92409ecce053d707360a5794f5f4f6bf5ebf5d24
csound examples/xanadu.csd
``
and this plays a relly cool sound demo:
\Video[https://www.youtube.com/watch?v=7fXhVMDCfaA]
{title=Xanadu Csound demo}

Save to file instead of playing:
``
csound -o xanadu.wav xanadu.csd
``
or direct ogg output:
``
csound --ogg -o xanadu.ogg xanadu.csd
``
or pipe to stdout to \x[ffmpeg] TODO: https://stackoverflow.com/questions/64970503/how-to-pipe-csound-output-to-ffmpeg-for-conversion-without-an-intermediate-file

TODO find the most amazing set of songs made with it on GitHub? Some examples:
* http://www.csounds.com/toots/index.html has a good 101 on instrument design
* \x[csound-floss-manual]
* http://iainmccurdy.org/csound.html about 100 \x[cc-by-sa] examples. Each is a minimal study showing a specific technique, not a full composition, some seem advanced. Dude's a beast.
* https://github.com/csound/csound/tree/f2e70825fb543a6b15011c6984371f61ab2a00dd/tests/soak in-tree minimal examples
* https://github.com/csound/manual/tree/4049b286493d972ff7248b5596e47e7ae97a0cf9/examples contains the examples for the manual which is rendered at: It's insane, but it's fun!  Ah those newbs who separate manuals from main tree.
* http://linuxsynths.com/CsoundPatchesDemos/csound.html on \x[linuxsynths]
* https://github.com/csound/examples/tree/ae578159328178142c1055c7f78e28b42eb29774/csd as a few dozen examples
* http://freaknet.org/martin/audio/csound/ 10 pieces with source

Documentation-wise, it's a bit lacking. The only dude who can explain it really well, Dr Richard Boulanger, made the "The Csound Book" closed source, so, congrats, this will forever hurt the popularity of Csound.

Examples:
* \a[csound/sine.csd]
* \a[csound/amplitude_frequency.csd]
* \a[csound/linen.csd]: simple attack/release \x[envelope-music], documented at: http://www.csounds.com/manual/html/linen.html
* \a[csound/chorus.csd]: \x[chorus-effect]
* \a[csound/bend.csd]: bend using `linseg`
* \a[csound/vibrato.csd]
* \a[csound/crossfade_generators.csd]
* \a[csound/table.csd]
* \a[csound/virtual_keyboard.csd]

= Csound FLOSS manual
{c}
{parent=csound}

https://flossmanual.csound.com/introduction/preface

Very good open source book: https://github.com/csound-flossmanual/csound-floss[]

Includes introduction to the basic \x[sound-synthesis] and their implementation in \x[csound].

Examples run on browser via \x[emscripten] and just worked on \x[ubuntu] 20.04!

Examples can also be downloaded all at once from: http://www.csound-tutorial.net/floss_manual/ Shame not in Git as standalone files.

https://flossmanual.csound.com/sound-synthesis/subtractive-synthesis covers \x[minimoog]-like \x[subtractive-synthesis].

= CsoundQt
{c}
{parent=csound}
{wiki}

https://github.com/CsoundQt/CsoundQt

= Cabbage
{c}
{disambiguate=Csound}
{parent=csound}
{wiki}

https://github.com/rorywalsh/cabbage

2.5.0 manual prebuilt download install on Ubuntu 20.04 just worked. Launch directly from unzip without install. Play with examples under `install/Examples`

Their docs are a reasonable way to learn Csound: https://cabbageaudio.com/docs/introduction/

= pyo
{c}
{parent=text-based-music-synthesizer}

\x[python] library, therefore the nicest possible type of text interface.

https://stackoverflow.com/questions/32445375/pyo-server-boot-returns-error-on-ubuntu-14-04/64960589#64960589 God how to get it to \x[fucking] play a sine sound?!?!

= SuperCollider
{c}
{parent=text-based-music-synthesizer}
{wiki}

https://github.com/supercollider/supercollider

\x[domain-specific-language] unfortunately, but at least it's on \x[github], looks promising.

How to play scores and save them to files is discussed at: https://doc.sccode.org/Guides/Non-Realtime-Synthesis.html

They have a nice looking \x[ide], but running anything from the \x[command-line-interface] is super hard, much unlike \x[csound]. How to get a decent \x[hello-world]: https://stackoverflow.com/questions/65360414/how-to-play-a-supercollider-file-non-interactively-from-the-terminal-command-lin

Sample composition with custom synths + notes: http://sccode.org/1-5cl

https://leanpub.com/ScoringSound looks like a decent tutorial, it is basically the \x[csound-floss-manual] for \x[supercollider].

= Computer music bibliography
{parent=computer-music}

= LinuxSynths
{c}
{parent=computer-music-bibliography}

http://linuxsynths.com

Lots of demos.

= Music education
{parent=music}
{wiki}

= Musical study
{parent=music-education}
{wiki=Étude}

= Music genre
{parent=music}
{wiki}

= Folk music
{parent=music-genre}
{wiki}

= Sea shanty
{parent=folk-music}
{wiki}

= 99 Bottles of Beer
{parent=sea-shanty}
{wiki}

= Jazz
{parent=music-genre}
{wiki}

= Jazz music to study to
{parent=jazz}
{wiki}

* Page One by Joe Henderson (1963)

= Jazz fusion
{parent=jazz}
{wiki}

\x[ciro-santilli]'s favorite musical genre.

Ciro's 2020 perfect friday evening: jazz fusion + study \x[quantum-field-theory] on an \x[amazon-kindle]. Ahhhhhh.

= Progressive rock
{parent=jazz-fusion}
{wiki}

Good ones:
* https://en.wikipedia.org/wiki/In_the_Court_of_the_Crimson_King[In the Court of the Crimson King] by King Crimson (1969)

= The best modern instrumental Western music of all time
{parent=jazz}

Not in other sections:
* Grant Green: https://en.wikipedia.org/wiki/Idle_Moments[Idle Moments] (1963)
* John Abercrombie: https://en.wikipedia.org/wiki/Timeless_(John_Abercrombie_album)[Timeless] (1975). Just close your eyes, and imagine.
* Paco de Lucia: https://en.wikipedia.org/wiki/Almoraima[Almoraima (1976)]
* Modern Jazz Quartet: https://en.wikipedia.org/wiki/Django_(album)[Django] (1956)
* Victor Wooten: https://en.wikipedia.org/wiki/A_Show_of_Hands_(Victor_Wooten_album)[A Show of Hands (1996)]. OMG this is sick.
* Bill Bruford https://en.wikipedia.org/wiki/Feels_Good_to_Me[Feels Good to Me (1978)]. Well, with \x[allan-holdsworth] on the g
* \x[jean-luc-ponty]

= Surfing with the Alien (1987) by Joe Satriani
{c}
{parent=the-best-modern-instrumental-western-music-of-all-time}
{wiki=Surfing_with_the_Alien}

= Secrets by Allan Holdsworth (1989)
{c}
{parent=the-best-modern-instrumental-western-music-of-all-time}
{wiki=Secrets_(Allan_Holdsworth_album)}

I.O.U, Road Games, and Metal Fatigue are also extremely worth it, they are so good that even the singing does not spoil them. s2 forever Allan.

= Romantic Warrior by Return to Forever (1976)
{c}
{parent=the-best-modern-instrumental-western-music-of-all-time}
{wiki=Romantic_Warrior}

= Maiden Voyage by Herbie Hancock (1965)
{c}
{parent=the-best-modern-instrumental-western-music-of-all-time}
{wiki=Maiden_Voyage_(Herbie_Hancock_album)}

= Bitches Brew (1970) by Miles Davis
{c}
{parent=the-best-modern-instrumental-western-music-of-all-time}
{wiki=Bitches_Brew}

There is of course no need to talk much more about the Jazz God, this one line of mandatory tribute is enough.

= Pop music
{parent=music-genre}
{wiki}

Pop music cannot be good by definition: any \x[art] that appeals to the masses (Popular!) has to be a boring watered down version of everything, and therefore boring shit. Just like the movies: \x[high-budget-movies-are-shit].

Until maybe one day we can actually get a \x[free-gifted-education][decent education for everyone].

= K-pop
{c}
{parent=pop-music}
{wiki}

K-pop is even more evil than \x[pop-music]: https://www.youtube.com/watch?v=KdOA5BCwBi0 Confessions Of A Former K-pop Idol (ft. Crayon Pop) by Asian Boss (2019)

= Rock music
{parent=music-genre}
{wiki}

\Video[https://www.youtube.com/watch?v=iYYRH4apXDo]
{title=Space Oddity by David Bowie (1969)}

\Video[https://www.youtube.com/watch?v=QkF3oxziUI4]
{title=Stairway to Heaven by Led Zeppelin (1971)}

= Chinese traditional music
{parent=music-genre}

The best: \x[the-best-chinese-traditional-instrumental-music-of-all-time]{full}

= Rorogwela
{parent=chinese-traditional-music}

\Video[https://www.youtube.com/watch?v=eGjgLrWbIfQ]
{title=Rorogwela by Afunakwa (1970)}
{description=Later used as a vocal sample in the https://en.wikipedia.org/wiki/Sweet_Lullaby[Sweet Lullaby] by Deep Forest (1992), which notably featured in https://en.wikipedia.org/wiki/Where_the_Hell_is_Matt[Where the hell is Matt (2006)], an early \x[youtube] viral video. The original destroys the Deep Forest version however.}

= The best Chinese traditional instrumental music of all time
{parent=chinese-traditional-music}

List at: https://github.com/cirosantilli/china-dictatorship/music

Country at: \x[china].

= Sound synthesis
{parent=music}
{wiki=Synthesizer#Sound_synthesis}

Technique to make cool sound instruments mathematically, either with electronic hardware components, or with a \x[software-synthesizer].

Good tutorials:
* \x[csound-floss-manual]

Best known techniques:
* \x[additive-synthesis]
* \x[subtractive-synthesis]

= Sound synthesis technique
{parent=sound-synthesis}

= Additive synthesis
{parent=sound-synthesis-technique}

= Modular synthesizer
{parent=sound-synthesis-technique}

= Chorus effect
{parent=sound-synthesis-technique}

= Envelope
{disambiguate=music}
{parent=sound-synthesis-technique}
{wiki}

= Frequency modulation synthesis
{parent=sound-synthesis-technique}

= Reverberation
{parent=sound-synthesis-technique}
{wiki}

= Subtractive synthesis
{parent=sound-synthesis-technique}

= Hardware synthesizer
{parent=sound-synthesis}

= Minimoog
{c}
{parent=hardware-synthesizer}
{wiki}

https://www.youtube.com/watch?v=0hfdSrK46EE How To Use A Minimoog Synthesizer by Doctor Mix (2020)

Software emulators:
* \x[bristol-synthesizer]
* https://flossmanual.csound.com/sound-synthesis/subtractive-synthesis covers \x[minimoog]-like \x[subtractive-synthesis] in \x[csound]

= The best modern sung Western music of all time
{parent=music}

You have to know the language to appreciate them.

The 60's and 70's were the days, those great https://en.wikipedia.org/wiki/Proxy_war[proxy wars] and https://en.wikipedia.org/wiki/Operation_Condor[CIA dictatorships] allowed hippies to make awesome freedom music without too imminent a fear of death.

Songs making fun of things or that are pure \x[brazil] nostalgia are also accepted. No love songs, ever. Except \x[popular-brazilian-music][some by Caetano], but that's it!

English:
* 1967 https://www.youtube.com/watch?v=EtYS3EYjVyk[Red Telephone] track from the https://en.wikipedia.org/wiki/Forever_Changes[Forever Changes (1967)] album by https://en.wikipedia.org/wiki/Love_(band)[Love]
* 1967 https://www.youtube.com/watch?v=EUY2kJE0AZE[White Rabbit] track from the https://en.wikipedia.org/wiki/Surrealistic_Pillow[Surrealistic Pillow (1967)] album by https://en.wikipedia.org/wiki/Jefferson_Airplane[Jefferson Airplane]

French:
* https://www.youtube.com/watch?v=zKbXUcJawUI[Emmenez-moi] (https://fr.wikipedia.org/wiki/Emmenez-moi_(chanson)[wiki]) from the album Entre Deux Rêves (1967) by https://en.wikipedia.org/wiki/Charles_Aznavour[Charles Aznavour]

= Popular Brazilian Music
{parent=the-best-modern-sung-western-music-of-all-time}
{title2=Música Popular Brasileira, MPB}
{wiki}

Best of list: \x[the-best-popular-brazilian-music-mpb-of-all-time]

= The best popular Brazilian music (MPB) of all time
{parent=popular-brazilian-music}

The good songs stopped before of just after \x[ciro-santilli] was born, they were originally heard by his parent's generation. Those young new kids are boring.

* 1968 https://www.youtube.com/watch?v=v67hqRm1qFw[Panis et Circenses] track from the https://en.wikipedia.org/wiki/Tropic%C3%A1lia:_ou_Panis_et_Circencis[Tropicália: ou Panis et Circencis (1968)] album composed by Gilberto Gil, Caetano Veloso and performed by https://en.wikipedia.org/wiki/Os_Mutantes[Os Mutantes]
* 1972 https://www.youtube.com/watch?v=WWfseMcAUZY[Mistério do Planeta] track from the https://en.wikipedia.org/wiki/Acabou_Chorare[Acabou Chorare] album by https://en.wikipedia.org/wiki/Novos_Baianos[Novos Baianos]
* 1977 https://www.youtube.com/watch?v=sQU7iQDiZvA[Marimbondo] track from the "Pirão de Peixe com Pimenta (1977)" album https://en.wikipedia.org/wiki/S%C3%A1_%26_Guarabyra[Sá & Guarabyra]
* https://en.wikipedia.org/wiki/Caetano_Veloso[Caetano Veloso] is arguably \x[ciro-santilli]'s favorite MPB artist, he has just too many amazing songs.
  * 1968 https://www.youtube.com/watch?v=hmK9GylXRh0[Alegria, Alegria] from the epynomous album https://en.wikipedia.org/wiki/Caetano_Veloso_(1968_album)[Caetano Veloso (1968)]. Critique of https://en.wikipedia.org/wiki/Military_dictatorship_in_Brazil[the Dictatorship].
  * https://en.wikipedia.org/wiki/Transa_(album)[Transa (1972)] album (literally: "The Fuck", good old seventies)
    * https://www.youtube.com/watch?v=cs2L70ZfVTI[Triste Bahia]. Inspired by https://en.wikipedia.org/wiki/Capoeira[Capoeira] music.
    * https://www.youtube.com/watch?v=n7StPm3ynBU[Mora na Filosofia]
  * 1972 https://www.youtube.com/watch?v=MlmZIazQLJw[Você Não Entende Nada] performed by Caetano Veloso in album https://en.wikipedia.org/wiki/Caetano_e_Chico:_Juntos_e_Ao_Vivo[Caetano e Chico: Juntos e Ao Vivo (1972)], originally by (TODO album, https://www.discogs.com/Gal-Costa-Legal-Voc%C3%AA-N%C3%A3o-Entende-Nada/release/5872459[Discogs] says Legal (1970), but https://en.wikipedia.org/wiki/Legal_(Gal_Costa_album)[wiki page] and photos of back disagree)
  * 1972 https://www.youtube.com/watch?v=bGC0gJAHIYs[Partido Alto]. Composed by Chico Buarque, but Caetano's interpretation takes it to another level
  * 1975 https://en.wikipedia.org/wiki/Qualquer_Coisa[Qualquer coisa] album
    * https://www.youtube.com/watch?v=796yP7HX9L0[Qualquer Coisa]
    * https://www.youtube.com/watch?v=HbXembjZ-cE[Samba e Amor], cover from original song by Chico Buarque album https://pt.wikipedia.org/wiki/Chico_Buarque_de_Hollanda_-_N%C2%BA4[Chico Buarque de Hollanda - Nº4]. Desperately reminds Ciro of his University day \x[weekend] nights. Except that there was no Samba. And little Amor. Mostly a silent and wholesome loneliness and \x[games-young-ciro-santilli-played][emulation]
  * 1976 https://www.youtube.com/watch?v=9HpqgwC30Zg[Um Índio] from the https://en.wikipedia.org/wiki/Doces_B%C3%A1rbaros[Doces Bárbaros (1976)] album, and also appeared in the https://en.wikipedia.org/wiki/Bicho_(album)[Bicho (1977)] album
  * 1977 https://www.youtube.com/watch?v=sSqU6vgs3Dc[Tigresa] from the https://en.wikipedia.org/wiki/Bicho_(album)[Bicho (1977)] album. Ciro once knew one.
  * 1978 album https://en.wikipedia.org/wiki/Muito_(Dentro_da_Estrela_Azulada)[Muito (Dentro da Estrela Azulada)]
    * https://www.youtube.com/watch?v=Ii2CKWHJQI8[Sampa] Slang for São Paulo. Perfectly captures the city, and reminds Ciro so badly of \x[university-of-sao-paulo][his University days there].
    * https://www.youtube.com/watch?v=gMsSrxGwW8U[Terra]. Ciro used to watch a television show about nature in the legendary https://en.wikipedia.org/wiki/TV_Cultura[TV Cultura] with his parents in the couch when he was young, Those days were the best. TODO what was the show exactly? Here is a sample: https://www.youtube.com/watch?v=vNwfYEMdrRU Very likely just a translation of some British nature series with a custom \x[brazilian] intro and presenter. Credits at end mention English narrator: Eugene Fraser, and Thirteen WNET Nature production, which produced https://en.wikipedia.org/wiki/Nature_(TV_program)[Nature (1982)] that ran since 1982.
  * 1980 https://www.youtube.com/watch?v=4ra8DHnO2cc[Menino do Rio] apparently from 1980 and served as inspiration for the https://pt.wikipedia.org/wiki/Menino_do_Rio[Menino do Rio (1980)] movie, which is silly but fun
  * 1984 https://www.youtube.com/watch?v=_CuWgaJMg0U[O quereres] from the https://pt.wikipedia.org/wiki/Vel%C3%B4[Velô (1984)] album
* https://en.wikipedia.org/wiki/Chico_Buarque[Chico Buarque]. Ciro's second favorite.
  * 1970 https://www.youtube.com/watch?v=33-bMTOlvx0[Apesr de Você] (https://pt.wikipedia.org/wiki/Apesar_de_Voc%C3%AA[wiki])
  * 1968 https://www.youtube.com/watch?v=G4SkmKGBe_E[Roda Viva] from the https://pt.wikipedia.org/wiki/Chico_Buarque_de_Hollanda_-_Volume_3[Chico Buarque de Hollanda - Volume 3 (1968)] album
  * 1971 https://en.wikipedia.org/wiki/Construção[Construção (1971)] album
    * https://www.youtube.com/watch?v=vmGrRmXivmM[Construção]
    * https://www.youtube.com/watch?v=FB4IaqWITB8[Cotidiano]
  * 1973 https://www.youtube.com/watch?v=RzlniinsBeY[Cálice (Cale-se)]
  * 1993 https://www.youtube.com/watch?v=eEXwfAzRR1I[Paratodos] from the https://pt.wikipedia.org/wiki/Paratodos_(álbum)[Paratodos (1993)] album
  * Songs about the https://en.wikipedia.org/wiki/Malandragem[malandro]
    * 1978 https://www.youtube.com/watch?v=dZZgtHUgSEQ[Feijoada completa] from the https://en.wikipedia.org/wiki/Chico_Buarque_(1978_album)[Chico Buarque (1978)] album
    * 1985 https://www.youtube.com/watch?v=v5j2YZPoogU[A volta do malandro] from the https://pt.wikipedia.org/wiki/Malandro_(%C3%A1lbum_de_Chico_Buarque)[Malandro (1985)] album
    * 1987 https://www.youtube.com/watch?v=v5j2YZPoogU[Teresinha] from the https://pt.wikipedia.org/wiki/%C3%93pera_do_Malandro[Ópera do Malandro (1987)] musical
* https://en.wikipedia.org/wiki/Gilberto_Gil[Gilberto Gil]. The third of the holy trinity of MPB after Caetano and Chico. Good selection: https://pt.wikipedia.org/wiki/Ac%C3%BAstico_MTV_-_Gilberto_Gil[Acústico MTV - Gilberto Gil (1994)]. Perhaps Ciro likes him third because he is the most lighthearted one, although not always.
  * 1967 https://en.wikipedia.org/wiki/Louva%C3%A7%C3%A3o[Louvação (1967)] album
    * https://www.youtube.com/watch?v=kg6DCav1gek[Lunik 9]
    * https://www.youtube.com/watch?v=aipWGQeX2JY[A Paz]
  * 1972 https://www.youtube.com/watch?v=1nOaAoa1bWA[Expresso 2222] from the https://en.wikipedia.org/wiki/Expresso_2222[Expresso 2222] album
  * 1975 https://pt.wikipedia.org/wiki/Refazenda[Refazenda (1975)] album. This album is Legendary.
    * https://www.youtube.com/watch?v=uT21kqCoQro[Refazenda]
    * https://www.youtube.com/watch?v=O6CQsOI2qMg[Lamento Sertanejo]
* https://en.wikipedia.org/wiki/Raul_Seixas[Raul Seixas]
  * 1973 https://www.youtube.com/watch?v=7VE6PNwmr9g[Metamorfose ambulante] from the https://en.wikipedia.org/wiki/Krig-ha,_Bandolo![Krig-ha, Bandolo! (1973)]
  * 1974 https://www.youtube.com/watch?v=RezuYwS0ngI[Gita] from the https://en.wikipedia.org/wiki/Gita_(album)[Gita (1974)] album
  * 1977 https://www.youtube.com/watch?v=-g3teIwgczU[Maluco Beleza] from the https://pt.wikipedia.org/wiki/O_Dia_em_que_a_Terra_Parou_(álbum)[O Dia em que a Terra Parou (1977)] album
* https://en.wikipedia.org/wiki/Ant%C3%B4nio_Carlos_Jobim[Tom Jobim]
  * 1958 https://www.youtube.com/watch?v=RtOLSXFf_MA[A felicidade] (https://en.wikipedia.org/wiki/A_felicidade[wiki]) composed for the https://en.wikipedia.org/wiki/Black_Orpheus[Black Orpheus (1958)] film. "Tristeza não tem fim, felicidade sim" (Sadness never ends, but happiness does). The movie itself is OK.
* https://pt.wikipedia.org/wiki/Jorge_Ben_Jor[Jorge Ben Jor]
  * 1975 https://www.youtube.com/watch?v=8EXtwBdH2Gk[Jorge da Capadócia] (https://pt.wikipedia.org/wiki/Jorge_da_Capadócia_(canção)[wiki]) from the https://pt.wikipedia.org/wiki/Solta_o_Pavão[Solta o Pavão (1975)] album

https://en.wikipedia.org/wiki/Roberto_Carlos_(singer)[Roberto Carlos] makes Ciro cringe.

Some other noteworthy mentions
* 1974 https://www.youtube.com/watch?v=5Y7PQxtmJ5k Na Rua, Na Chuava, Na Fazenda by Hyldon

= The best non-MPB Brazilian music of all time
{parent=the-best-popular-brazilian-music-mpb-of-all-time}

= Mamonas Assassinas
{c}
{parent=the-best-non-mpb-brazilian-music-of-all-time}

This incredibly foul mouthed band was incredibly funny.

\x[ciro-santilli] was a bit young to understand the songs at the time, but the older boys were singing them, and he sang along. So maybe there is a nostalgia factor in play.

But it can't be just that. They are just too funny and brutal, even when Ciro re-listens to it as of 2020.

Many \x[brazilian] \x[religious] cranks in were really happy when their plane crashed and killed all of them in 1996.

Official \x[youtube] channel: https://www.youtube.com/channel/UCPmfP5LNbxYwlN0k6C3F_6w

Best songs:
* https://www.youtube.com/watch?v=Nz7101ulkK0[Pelados Em Santos (1995)]. Not too amazing, they only try to be funny by making fun of the North-Eastern accent of Brazil, which is considered somewhat funny in \x[sao-paulo-state], and they fail at being funny.

  But it talks about \x[santos-sao-paulo-brazil], Ciro's idolized city, so let's hear it. They didn't live in Santos apparently, but being from \x[sao-paulo-city], they would have been familiar with that popular local beach location.

= Musical instrument
{parent=music}
{wiki}

= Guitar
{parent=musical-instrument}
{wiki}

The \x[guitar] is a highly imperfect instrument if compared to something like a \x[piano], which is much more \x[mathematically] elegant.

However, \x[ciro-santilli] just loves this imperfection for some reason, especially in the case of the \x[electric-guitar].

Bending, sliding and strumming just feel to good to not have.

And Ciro sucks are doing things in parallel, so the more single threaded approach of the guitar fits his brain/abilities better.

For those reasons, the \x[electric-guitar] is Ciro's favorite \x[musical-instrument].

= Electric guitar
{parent=guitar}
{wiki}

See also some remarks of \x[ciro-santilli]'s thoughts on the instrument \x[ciro-santilli-s-musical-education].

= Electric guitar player
{parent=electric-guitar}

* \x[allan-holdsworth]{child}

= Piano
{parent=musical-instrument}
{wiki}

= Musician
{parent=music}
{wiki}

= Allan Holdsworth
{c}
{parent=musician}
{wiki}

= Jean-Luc Ponty
{c}
{parent=musician}

Many good albums, \x[ciro-santilli]'s favorites:
* https://en.wikipedia.org/wiki/Aurora_(Jean-Luc_Ponty_album)[Aurora (1976)]
* https://en.wikipedia.org/wiki/Enigmatic_Ocean[Enigmatic ocean (1977)]

\Video[http://youtube.com/watch?v=VTrWQN1hRZk]
{title=\x[jean-luc-ponty] Live in Chicago on "Soundstage" (1976)}

= Pornography
{parent=art}
{wiki}

= Porn
{synonym}

= Child pornography
{parent=pornography}
{wiki}

= Pornographic film
{parent=pornography}
{wiki}

= In the Realm of the Senses (1976)
{c}
{parent=pornographic-film}
{wiki}

= Pirates (2005)
{c}
{parent=pornographic-film}
{wiki}

One of the first 1 million USD (zero artistic value) porn movie. And also \x[high-budget-movies-are-shit][a piece of shit]! Hotter porn has been shot in kitchens around the world using \x[iphone]{p}.

= Public speaking
{parent=art}
{wiki}

= Ad hominem
{parent=public-speaking}

= Quote
{parent=art}

= The best quotes of all time
{parent=quote}

Ciro's best quotes selected by no one other than Ciro can be found at: \x[ciro-santilli-s-best-random-thoughts].

\x[jesus] has some nice ones: \x[quotes-by-jesus]{full}.

Related to technology:
* https://en.wikipedia.org/wiki/Think_(IBM)["Think"] by Thomas J. Watson, 1915. The audio is a must: https://en.wikipedia.org/wiki/File:Think_Thomas_J_Watson_Sr.ogg. The past greatness of IBM at its brightest.

= Do one thing and do it well
{parent=quote}

Is this exact sentence really from \x[unix] philosophy? https://en.wikipedia.org/wiki/Unix_philosophy#Do_One_Thing_and_Do_It_Well

Of course, it has precedents, e.g. \x[jack-of-all-trades-master-of-none]

= Jack of all trades, master of none
{parent=do-one-thing-and-do-it-well}

= Sport
{parent=art}
{wiki}

The sportsmen \x[ciro-santilli] admires the most are from \x[endurance-sport]:
* \x[alex-honnold]
* \x[kilian-jornet]

= List of sports
{parent=sport}

= Association football
{parent=list-of-sports}
{wiki}

= Biathlon
{parent=list-of-sports}
{wiki}

= Soccer
{synonym}
{title2}

= Football
{synonym}
{title2}

= Climbing
{parent=list-of-sports}
{wiki}

= Bouldering
{parent=climbing}
{wiki}

= Rock climbing
{parent=climbing}
{wiki}

= Beta
{disambiguate=climbing}
{parent=climbing}
{wiki}

= Skiing
{parent=list-of-sports}
{wiki}

= Ski
{synonym}

= Endurance sport
{parent=sport}

= Endurance sport show
{parent=endurance-sport}

= Mediocre Amateur
{c}
{parent=endurance-sport-show}

https://www.youtube.com/channel/UC-04mJDJUYHEyE8JPIEa0-w

About 50k subscribers on 2021, which feels way too little for the video quality and quantity.

\x[ciro-santilli] believes that this channel will go very far, certaily achieving 1M subscribers in they keep it for one or twomore years.

They are \x[utah]-based, and they do many many amazing weekend trips. They mostly drive from home to some trailhead, and then climb up and down it the entire day.

No technical \x[rock-climbing], only \x[bouldering], but they still manage to reach many amazing places, and there is a level of danger in many of their ascents.

They also often \x[ski] down the mountains when there is \x[snow].

The cool thing about this channel is that as the name suggests, they are not professionals, and what they do can be done by anyone without working full time on it, as long as you have adequate preparation.

= Endurance sportsperson
{parent=endurance-sport}

= Alex Honnold
{c}
{parent=endurance-sportsperson}
{wiki}

= Kilian Jornet Burgada
{c}
{parent=endurance-sportsperson}
{wiki}

= Kilian Jornet
{c}
{synonym}

= State of the art
{parent=art}
{wiki}

= Typography
{parent=art}
{wiki}

= Lorem ipsum
{c}
{parent=typography}
{wiki}

= Website
{parent=art}
{wiki}

= The best websites of all time
{parent=website}

Multi-user:
* \x[tv-tropes]{child}
* \x[wikiwikiweb]{child}

\x[personal-web-page]{c}{p}: These are basically technically minded people that \x[ciro-santilli] feels have similar \x[ciro-santilli-s-psychology-and-physiology][interests/psychology] to him, and who write too much for their own good:
* \x[cat-v-org]{child}
* \x[gwern-net]{child}. Dude's a bit overly obsessed with the popup preview though! "new Wikipedia popups (this 7th implementation enables recursive WP popups)" XD
* http://www.applet-magic.com/ by Thayer Watkins. It's basically like \x[ciro-santilli-s-website], but Ciro bets he wrote it in raw \x[html] rather than Godly Cirodown. Wide \x[birds-and-frogs-by-freeman-dyson-2009][range of topics], notably \x[particle-physics] which is how \x[ciro-santilli] \x[googled] into him. Resume: http://www.applet-magic.com/resume2.htm[]. \x[mit], then \x[phd] in \x[economics], then \b[four] master degrees!!! Insane!

Maybe one day these will also be legendary, who knows:
* https://sandymaguire.me/blog/burnout/

= cat-v.org
{parent=the-best-websites-of-all-time}

http://cat-v.org/ by https://en.wikipedia.org/wiki/Rob_Pike[Rob Pike], co-creator of https://en.wikipedia.org/wiki/Go_(programming_language)[Go], looong time Unixer, and some kind of leader of a https://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs[9p] resurrection cult. That one's spicy. E.g.: http://harmful.cat-v.org/[], Ciro's version: \x[good-and-evil].

= Activity tracker website
{parent=website}

= Strava
{c}
{parent=activity-tracker-website}
{wiki}

= Static website
{parent=website}
{wiki=Static_web_page}

= Static site generator
{parent=static-website}

The best one is \x[cirodown]{child} of course! :-)

= Blog
{parent=website}
{wiki}

= Blog comment hosting service
{parent=blog}
{wiki}

= Disqus
{c}
{parent=blog-comment-hosting-service}
{wiki}

= Medium
{c}
{disambiguate=website}
{parent=blog}
{wiki}

While this has some of the metrics features that \x[ciro-santilli] wants to implement for \x[write-free-books-to-get-famous-website], it limits the number of articles your readeres can read.

How the \x[fuck] can you publish on a website that limits the number of views for your articles?!?! When all it has is static pages + some metrics?!?!

\x[evil]{c}. Just learn to use \x[github-pages] for God's sake.

= WordPress
{c}
{parent=blog}
{wiki}

= Collaborative writing platform
{parent=website}

\x[ciro-santilli] wants to rule this with \x[write-free-books-to-get-famous-website].

= GitBook
{c}
{parent=collaborative-writing-platform}

https://www.gitbook.com/

This is good, and very close competitor to \x[write-free-books-to-get-famous-website].

But they https://docs.gitbook.com/resources/gitbook-legacy/v2-differences[killed local build], so they are going to die.

= Overleaf
{c}
{parent=collaborative-writing-platform}
{wiki}

= Crowdsourcing website
{parent=website}

= Patreon
{c}
{parent=crowdsourcing-website}
{wiki}

= E-learning website
{parent=website}
{wiki}

Generally, if something is labelled as "e-learning", it's not a good sign, as it implies that it adheres to the "teacher"/"student" separation which \x[ciro-santilli] much despises.

= Learning management system
{parent=e-learning-website}
{wiki}

A more specific type of \x[e-learning-website] generally run by a specific organization.

= OpenStax
{c}
{parent=e-learning-website}
{wiki}

* https://openstax.org/
* https://cnx.org/

These people have good intentions.

The problem is that they don't manage to go critical because there's to way for students to create content, everything is manually curated.

You can't even comment on the textbooks. Or at least \x[ciro-santilli] hasn't found a way to do so.

This massive lost opportunity is even shown graphically at: https://cnx.org/about (https://web.archive.org/web/20201127013553/https://cnx.org/about[archive]) where there is a clear separation between:
* "authors", who can create content
* "students", who can consume content
Maybe this wasn't the case in their legacy website, https://legacy.cnx.org/content?legacy=true[], but not sure, and they are retiring that now.

Thus, \x[write-free-books-to-get-famous-website]. License: \x[cc-by]! So we could re-use their stuff!

By \x[rice-university].

\Video[https://www.youtube.com/watch?v=RRymi-lFHpE]
{title=Richard Baraniuk on open-source learning by \x[ted-conference] (2006)}

= Internet forum
{c}
{parent=website}
{wiki}

= 4chan
{parent=internet-forum}
{wiki}

\x[online-forums-that-lock-threads-after-some-time-are-evil]{c}. What else needs to be said?

= Hackster.io
{c}
{parent=internet-forum}

https://www.hackster.io/

= Hacker News
{c}
{parent=internet-forum}
{wiki}

https://news.ycombinator.com/

The most popular programming news sharing forum of the 2010's by far. If your content gets shared there, and it stays on top for a day, the traffic peak will be incredible. \x[reddit] posts are sure to follow.

Basically a programming-only \x[reddit]-lite.

\x[ciro-santilli] had a few of his content shared there as mentioned at \x[articles].

= Q&A software
{c}
{parent=internet-forum}
{wiki}

= Quora
{c}
{parent=q-and-a-software}
{wiki}

Quora is crap, but in part due to some \x[idiotic-stack-overflow-policies], it is the best crap we've got for certain (mostly useless) subjects. Until \x[write-free-books-to-get-famous-website] dominates the world.

The worst thing about quora is that you cannot subscribe only to certain subjects on your feed. Quora just keeps pumping \x[shit] you never subscribed to, no matter what. Ciro, for sport, unfollowed every single idiotic subject it was proposing, but it didn't work, sooner or later Quora just keeps pumping more shit back. Mind you, some of that shit is fun. But it's still shit. Though on second thought, \x[youtube] also randomly decides to reset Ciro's humongous "don't recomend this shitty channel" choices from time to time, which is not much different...

See also: https://cirosantilli.com/china-dictatorship/quora

= Stack Overflow
{c}
{parent=q-and-a-software}
{wiki}

The best place to get answers to programming questions as of 2019. \x[google] into Stack Overflow is always the best bet.

An overview of \x[ciro-santilli]'s Stack Overflow contribution can be found at: \x[ciro-santilli-s-stack-overflow-contributions].

\Image[https://web.archive.org/web/20200718095316im_/https://external-preview.redd.it/KiTyVKRwMwHSmTNKeInAVSsjyeSgcRlRgSEp_u9CByA.png?width=960&crop=smart&auto=webp&s=bfca099f99cea0eae883ddb2a59409f08a3c7d2e]
{title=\x[stack-overflow] in a nutshell.}
{description=As the "WTF look at my points" guy, \x[ciro-santilli] approves of this \x[meme]. A few more elements could be added, notably \x[stack-overflow-link-only-answer-policy][deletion of the last link-only answer], but good enough. By the profile image, the editor is actually serial editor https://stackoverflow.com/users/63550/peter-mortensen[Peter Mortensen], his https://stackoverflow.com/users/63550/peter-mortensen?tab=activity&sort=revisions[edit count is insane], predominantly style and grammar. \x[ciro-santilli] welcomes grammar fixes, but more subjective style fixes can be a bit annoying.}
{height=800}
{source=https://www.reddit.com/r/ProgrammerHumor/comments/55i0nl/stack_overflow_in_a_nutshell/}

= Reply to Stack Overflow is doomed posts
{parent=stack-overflow}

Stack Overflow does have an super naive reputation and moderation system and overly restrictive subject matter, which \x[ciro-santilli] wants to improve upon with: \x[write-free-books-to-get-famous-website].

However, it is the best that we have now, and if you \x[ciro-santilli-s-stack-overflow-contributions][use it like Ciro], you won't get tired:
* monitor only rare tags that you know a lot about, let others answer duplicates on big tags for you
* only answer on bigger tags when you find a better answer than can be found on the page
* accept that sometimes things are bound to go wrong, that reputation is meaningless, and move on

What else would you expect from a naive algorithm system that has 10 million newbies asking stuff?

= The Machiavellian Stack Overflow contributor
{parent=stack-overflow}

* always upvote questions you care about, to increase the probability that they will get answered
* never upvote other people's answers unless you might gain from it somehow, otherwise you are just giving other high reputation users more reputation relative to you
* only mark something to close or as a duplicate if it will bring you some advantage, because closing things creates enemies, especially if the OP has a high profile

  One example advantage is if you have already answered the question (and the duplicate as well in case of duplicates), because this will prevent competitors from adding new better answers to overtake you.
* protect questions you've answered whenever someone with less than 10 reputation answers it with a bad answer, to prevent other good contributors from coming along and beating you
* when you find a duplicate pool answer every question with similar answers.

  Alter each answer slightly to avoid the \x[stack-overflow-no-duplicate-answers-policy][idiotic duplicate answer detector].

  If one of the question closes, it is not too bad, as it continues netting you to upvotes, and prevents new answers from coming in.
* follow on Twitter/RSS someone who comments on the top features of new software releases. E.g. for \x[git], follow \x[github] on \x[twitter], \x[c-plus-plus] on \x[reddit]. Then run back to any question which has a new answer.
* always upvote the question when you answer it:
  * the more upvotes, more likely people are to click it.
  * the OP is more likely to see your answer and feel good and upvote you
* if a niche question only has few answers and you come with a good one, upvote the existing ones by other high profile users.

  This may lead to them upvoting or liking you.

  Even if they don't, other people will still see your answer anyway, and this will lead to people to upvoting you more just to make your great answer surpass the current ones, especially if the accepted one has less upvotes than yours. Being second is often an asset.
* always upvote comments that favor you:
  * "I like this answer!" on your answers
  * "also look at that question" when you have answered that question
* don't invest a lot in edits. They don't give you rep, and they can https://mathoverflow.net/revisions/11557/4[get reverted] and waste your time.

  Why are you trying to help other people's answers to get rep anyways? Just make a separate answer instead! :-)
* if you answer a question by newbie without 15 reputation, find their other questions if any and upvote them, so that the OP can upvote your answer in addition to just accepting
* If you haven't answered a question, link to related questions you've answered on question comments, so more people will come to your answers.

  If you have answered the question, only link to other questions at the bottom of your answer, so that people won't go away before they reach your answer, and so as to strengthen your answer.
* if a question has 50 million answers and you answer it (often due to a new feature), make a comment on the question pointing to your answer
* if you get a downvote, always leave a comment asking why. It is not because you care about their useless opinion, but because other readers might see the comment, feel sorry for you, and upvote.
* ask any questions under a separate anonymous accounts. Because:
  * intelligent people are born knowing, and don't ever ask any questions, so that would hurt your reputation
  * downvoting questions does not take 1 reputation away from the downvoter, and so it greatly opens the door for your opponents to downvote you without any cost.

= Stack Overflow Vote Fraud Script
{c}
{parent=stack-overflow}

https://github.com/cirosantilli/stack-overflow-vote-fraud-script

How do you think Ciro got \x[ciro-santilli-s-stack-overflow-contributions][his rep]? Just kidding.

\x[stack-overflow] later forbade Ciro from advertising this project as described at: \x[ciro-santilli-s-stack-overflow-suspension-for-vote-fraud-script-2019]{full}. Those newbs know nothing about \x[security-through-obscurity].

= Ciro Santilli's Stack Overflow suspension for vote fraud script 2019
{parent=stack-overflow-vote-fraud-script}
{c}

After \x[ciro-santilli] got a lot of attention on Hacker News https://news.ycombinator.com/item?id=19428700 his Stack Overflow account was suspended for 3 days http://web.archive.org/web/20190320163458/https://stackoverflow.com/users/895245/ciro-santilli-新疆改造中心-六四事件-法轮功 and he received a magic notification that led to a private message:
\Q[
Hello,

I'm writing in reference to your Stack Overflow account:

I don't understand why you are actively promoting and assisting people to commit fraud on the site.

I've removed this from your profile https://github.com/cirosantilli/stack-overflow-vote-fraud-script and do not expect you to post it around the site.

I'm suspending you to gain your attention on this matter.

We have temporarily suspended your account; you may return after 3 days.

Regards,

Stack Overflow Moderation Team

To: Aaron Hall ♦;Andy ♦;Baum mit Augen ♦;Bhargav Rao ♦;Bohemian ♦;BoltClock ♦;Brad Larson ♦;ChrisF ♦;Cody Gray ♦;deceze ♦;Ed Cottrell ♦;Flexo ♦;George Stocker ♦;Jean-François Fabre ♦;Jon Clements ♦;josliber ♦;Madara Uchiha ♦;Martijn Pieters ♦;meagar ♦;Michael Myers ♦;Rob ♦;Robert Harvey ♦;Ry- ♦;Samuel Liew ♦;Undo ♦;Yvette Colomb ♦
]

Ciro's reply was:
\Q[
Hi mods,

* https://en.wikipedia.org/wiki/Security_through_obscurity

  https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle

  https://stackoverflow.com/questions/533965/why-is-security-through-obscurity-a-bad-idea

  Security by obscurity does not work. If that is all Stack Overflow relies on, and that is what it looks like, then it is guaranteed to be flawed and already been attacked.

  That is one of the reasons that my website will eventually beat Stack Overflow: https://github.com/cirosantilli/write-free-science-books-to-get-famous-website/tree/d77b18d2e7acb3558615797c36195f60dfd26306#pagerank-with-tags
* If you had messaged me and told me "take down or suspend" I would have done it immediately because I understand the meaning of political power.

  That would have been the better course of action for everyone: I get no block, and you get no bad publicity as I shout Kerckhoff's principle on Twitter.

  But maybe it is a good thing that people learn more about that.
* Is there an existing public discussion saying that you cannot advertise vote fraud tools on this website?

  If not, can you please create that meta thread as a reference for future users, and perhaps let the community decide by itself?

  In particular, will you still suspend me if I don't take down the GitHub repo?

  Because if not, does it make any sense to prevent it from being mentioned in Stack Overflow? Any good GitHub repo just gets enough Google pagerank that it won't matter.

  And if yes, nothing prevents me from re-uploading on an anonymous account.
]

https://twitter.com/cirosantilli/status/1108413211840339970

Reply and unsuspend quickly followed, with link still removed:
\Q[
I suspended you to get your attention. Your attitude about going to Twitter about it does not bode well with me.

Feel free to have whatever you want in your GitHub repo. Just don't advertise tools to make it easier for people to circumvent the rules. As easy or as hard as it may be to circumvent them, you're handing it to people who may not be capable of doing so. It doesn't help.

Don't make threats to upload on an anonymous account. Accounts created to circumvent previous warnings are not welcomed on the site.

We don't need a meta thread to discuss whether it's ok to post voting fraud links in your profile and we definitely don't need to give it anymore publicity.

I'll unsuspend you, now we've had this discussion.

Regards,

Stack Overflow Moderation Team
]

A meta thread was later created by Yvette, to which Ciro answered with the correct unpopular answer that will be downvoted to oblivion: https://meta.stackoverflow.com/questions/381577/is-it-ok-to-have-links-on-how-to-create-sock-puppets-and-gain-rep-fraudulently-i/381635#381635

Yvette had also previously \x[stack-overflow-content-deletion][deleted one or two of Ciro's answers for being duplicates], which is a policy Ciro is against: if the questions are not dupes, a single answer might still directly reply to both of them.

Yvette later announced that she was leaving the website: https://meta.stackoverflow.com/questions/399495/leaving-the-site-and-the-network-mid-election-is-not-the-best-but-theres-no[]. This is evil, but Ciro was happy. He does not mean harm to Yvette, but in their limited interaction, Ciro disagreed with her choices.

= Idiotic Stack Overflow policies
{parent=stack-overflow}

= Closing questions as off-topic
{parent=idiotic-stack-overflow-policies}

There's no point.

The question remains there, but people lose the ability to help the asker.

Reputation is meaningless regardless, since \x[javascript] gurus will always have 1000x more readers than low level junkies.

The deeper problem: the existence of multiple separate websites instead of just using the tags on a single website.

= Stack Overflow content deletion
{parent=idiotic-stack-overflow-policies}

Stack overflow allows deleting content/making it visible only to 10k rep users.

\x[ciro-santilli] is strictly against this, and this is an intended core policy of \x[write-free-books-to-get-famous-website].

If you delete people's content randomly, they will be much less likely to write anything.

Getting downvoted to oblivion is one thing, but data loss? Unacceptable.

Only \x[illegal] content must ever be deleted.

= Stack Overflow policy that you cannot harshly criticize the character of a politician
{parent=idiotic-stack-overflow-policies}

https://cirosantilli.com/china-dictatorship/stack-overflow-forbids-criticizing-the-character-of-genocidal-political-leaders-like-xi-jinping

= Stack Overflow link-only answer policy
{parent=idiotic-stack-overflow-policies}

The link will break, and the answer will lose. Or the person who summarizes inline will get more upvotes because people are lazy to click the link. Also, \x[web-archiving] exists.

This is especially idiotic when it is a link to another post in \x[stack-overflow] itself.

= Stack Overflow no duplicate answers policy
{parent=idiotic-stack-overflow-policies}

It's great right? You can't link to your other answer alone: \x[stack-overflow-link-only-answer-policy], but you can't copy the other answer either.

And because not all duplicate close votes succeed, see e.g. https://stackoverflow.com/questions/59649238/how-to-use-the-m5ops-in-gem5-such-m5-exit-and-m5-dump-stats-in-se-mode/63955139#63955139 the result is that someone else will come and answer the same thing in a different wording.

And some answers answer two questions that are not duplicates, e.g. superset/subset questions.

So just do a slight variation wording yourself and get all the reputation.

Related:

* https://meta.stackexchange.com/questions/1096/how-should-we-deal-with-duplicate-answers
* https://meta.stackexchange.com/questions/243243/vote-to-delete-answers-as-duplicates-of-earlier-answers/243271#243271

= Stack Overflow maximum 200 daily reputation limit
{parent=idiotic-stack-overflow-policies}

Why. Why. Why is there no limit to how much I can help, but there is a limit to how many thanks I can get?

At most, limit it to a single answer to avoid highly publicized events, e.g. an answer being shared on \x[reddit]. But across answers? It makes no sense.

The two ways main ways to overcome this limit are the 15 point answer accept reputation and bounties.

200 reputation per day works out 73k a year BTW.

= Stack Overflow user
{parent=stack-overflow}

= Epic Stack Overflow users
{parent=stack-overflow-user}

* https://stackoverflow.com/users/379897/r-github-stop-helping-icea
* https://unix.stackexchange.com/users/885/gilles-so-stop-being-evil

= Stack Overflow users Ciro Santilli dislikes
{parent=stack-overflow-user}

Nothing personal, just \x[ciro-santilli], mostly it is that strongly disagrees with the moderation philosophies of these users.

Users who are publicly against the ability to criticize the character of politicians, shown after "I think Trump is disgusting as a person" was removed from Ciro's profile: https://cirosantilli.com/china-dictatorship/stack-overflow-forbids-criticizing-the-character-of-genocidal-political-leaders-like-xi-jinping[]. Most notably, https://meta.stackexchange.com/users/135565/journeyman-geek[Journeyman Geek], who:
* is also https://meta.stackexchange.com/questions/361486/can-i-say-on-my-profile-that-i-find-that-an-ex-president-of-a-country-or-other/361500#361500[against political speech against the CCP in Stack Overflow]
* single handedly deletes opposing answers without giving any explanation

Yvette Colomb deleted a few of Ciro's answers, related: \x[ciro-santilli-s-stack-overflow-suspension-for-vote-fraud-script-2019].

= List of Stack Overflow users
{c}
{parent=stack-overflow-user}

= Gordon Linoff
{c}
{parent=list-of-stack-overflow-users}

https://stackoverflow.com/users/1144035/gordon-linoff

Infinitely many \x[sql] answers.

As mentioned at \x[ciro-santilli-s-stack-overflow-contributions], he just answers every semi-duplicate immediatly as it is asked, and is therefore able to overcome the \x[stack-overflow-maximum-200-daily-reputation-limit] by far. E.g. in 2018, Gordon https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange[reached 135k] (https://web.archive.org/web/20191013090451/https://stackexchange.com/leagues/1/year/stackoverflow/2018-01-01?sort=reputationchange[archive]), thus almost double the 73k yearly limit due to the 200 daily limit, all of that with accepts.

This is in contrast to \x[ciro-santilli]'s contribution style which is to only answer questions as he needs the subject, or generally important questions that aroused his interest.

2014 \x[blog]{c} post describing his activity: http://blog.data-miners.com/2014/08/an-achievement-on-stack-overflow.html[], key quote:
\Q[For a few months, I sporadically answered questions. Then, in the first week of May, my Mom's younger brother passed away. That meant lots of time hanging around family, planning the funeral, and the like. Answering questions on Stack Overflow turned out to be a good way to get away from things. So, I became more intent.]
so that suggests his contributions also take a \x[meditative] value.

http://www.data-miners.com/linoff.htm mentions he's an SQL consultant that consulted for several big companies.

\x[linkedin] profile: https://www.linkedin.com/in/gordonlinoff/ says he now works at the \x[new-york-times].

2021 \x[reddit] thread about him: https://www.reddit.com/r/programming/comments/puok1h/a_single_person_answered_76k_questions_about_sql/ mentions that by then he had:
\Q[answered 76k questions about SQL on StackOverflow. Averaging 22.8 answers per day, every day, for the past 8.6 years.]

= Ron Maimon
{c}
{parent=list-of-stack-overflow-users}
{title2=mad physicist, conspiracy theorist}

This hardcore \x[physics] dude has amazing content, notably in \x[particle-physics], and he seems to know the \x[history-of-physics] insanely well, notably emphasizing that \x[there-is-value-of-tutorials-written-by-early-pioneers-of-the-field], see also \x[how-to-teach-and-learn-physics]{full}.

\Image[https://web.archive.org/web/20200802101844im_/https://www.gravatar.com/avatar/706ad14d2e33372b999b059ed544031d?s=328&d=identicon&r=PG]
{title=Ron Maimon's \x[physics-stack-exchange] profile picture.}
{source=https://physics.stackexchange.com/users/4864/ron-maimon}

He does subscribe to some theories which \x[ciro-santilli] considers conspiracy theories, e.g. his ideas about the \x[boston-marathon-bombing] that got him banned from \x[quora] (a ban which \x[social-media-as-a-public-utility][Ciro strongly opposes due to freedom of speech concerns!]), but the \x[physics] might be sound, \x[ciro-santilli] does not know enough physics to judge, but it often feels that what he says makes sense.

Ron seems to share a few philosophies which Ciro greatly agrees with as part of \x[cirism], which together with his knowledge of \x[physics], make Ciro greatly respect Ron. Such philosophies include:
* \x[education] views, notably emphasising \x[autodidacticism]
  * https://www.quora.com/Why-should-high-school-students-learn-physics/answer/Ron-Maimon[], highlighted at https://gmachine1729.livejournal.com/161418.html[]: "Why should high school students learn physics?" Answer:
    \Q[But they should learn it, preferably on their own, because the school doesn't know how to teach physics. Physics is extremely interesting, even the elementary kind. It takes the mathematics you learn in high school and uses it to describe certain natural phenomenon completely, beyond what was imagined possible in the wildest dreams of people like Pythagoras or Archimedes. If you have a computer, Newton's laws plus a tiny code can produce the motion of the planets around the sun, the motion of a free-twirling baton, the motion of colliding billiards, it's very simple.]
    Yes, please, give it to me baby:
    * \x[write-free-books-to-get-famous-website/motivation]
    * \x[computational-physics]
* enthusiasm for \x[molecular-biology-technologies], seen e.g. at: https://www.quora.com/Why-are-an-abundance-of-physicists-moving-to-theoretical-biology/answer/Ron-Maimon on \x[quora]:
  \Q[\[biology\] is also clearly going to be the major technology of the 21st century, you should have a sugar outlet next to the electrical outlet, and plug in artificial biological technology made out of artificial cells. To plan these requires a complete method of describing biological cells, a precise model of all the processes, so that you can make artificial ones, and it produces a type of precise control on single-molecule chemistry that makes chemists drool.]
  Ciro is actually specifically curious about \x[whole-cell-simulation] which he makes reference to.
* \x[effortless-effort]:
  * https://www.quora.com/How-do-you-control-your-urge-to-access-the-internet-so-you-can-complete-your-assignments[] How do you control your urge to access the \x[internet] so you can complete your assignments?:
    \Q[I don't. I consider the internet the first priority, as it will be viewed by thousands of people, and will have a real impact, while other assignments are lower priority, as they will only have an impact locally.]

He has either been blocked from or quit every single website he participates in due to his highly combative nature:
* https://physics.meta.stackexchange.com/users/4864/ron-maimon from \x[physics-stack-exchange]:
  * https://physics.meta.stackexchange.com/questions/976/physics-ses-inability-to-deal-with-users-who-are-highly-persistent-have-kook-b a user mentions:
  \Q[The thing about Ron Maimon is he definitely comes here to talk about physics. I personally can't get into discussions with him for two reasons: first, he's so single-minded in his own point of view that you can't really communicate with him back and forth; secondly, the structure of this forum is simply not conducive to extended discussions. But he sometimes posts things that are so coherently argued and with such intricate detail that even if I can't understand them myself, I just can't believe he's simply pulling this stuff out of his ass.]
  * https://physics.meta.stackexchange.com/questions/1376/what-violation-caused-this-suspension[] a user mentions:
  \Q[The thing that makes me pretty angry about Ron's behaviour is that he does not distinguish between common consensus belief and his own private research - this makes evaluating his claims hard for a third party not familiar with physics.]
* https://www.quora.com/profile/Ron-Maimon[], he was very active on \x[quora], until he was blocked for his views on the \x[boston-marathon-bombing] as mentioned at \x[video-ron-maimon-interview-with-jeff-meverson-2014]
Ron explicitly defends this combative approach at https://youtu.be/ObXbKbpkSjQ?t=944 from \x[video-ron-maimon-interview-with-jeff-meverson-2014]:
\Q[In order to have this process work \[finding of truth\] it is extremely important that the tone is hostile, that it is like a court of law, where you have an adversarial relationship with your opponent. Because if you have a friendly relationship with your opponent, then political consensus is preserved.]
And notably, relevant to https://cirosantilli.com/china-dictatorship/stack-overflow-mods-refuse-to-clarify-if-anti-ccp-imagery-is-allowed-or-not-2021
\Q[Unfortunately, when you're in a minority, the only way to correct the consensus view is to just shout it, and repeat it, until people go and look and check for themselves. The reason is that it creates an adversarial atmosphere where the people have to pick sides, and they don't like to pick sides, they would rather have everyone be happy. So when you have to pick sides, what do you do? You either butt out, you just leave it alone, you run away. Or you sit and review the evidence until you know which side to pick.]
and he than also mentions that \x[wolfgang-pauli] was a major proponent of this in \x[physics], and so was \x[galileo].

https://chat.stackexchange.com/transcript/message/7104585#7104585 mentions that he was at \x[cornell-university] and did \x[all-but-dissertation], but he mentions that he was still \x[self-taught]:
\Q[
Eugene Seidel: On your personal info page you write that you are not a physics Ph.D. but does that mean you were a \x[physics] \x[undergrad] in college then went to grad school and finished \x[all-but-dissertation][ABD]... or are you entirely self taught?

Ron Maimon: \x[all-but-dissertation][ABD]. I am self- taught though, I only went to school for accreditation. I had a thesis worth of work at the time I left grad-school,

Eugene Seidel: ok thanks

Ron Maimon: I was just kind of sickened by \x[academic] stuff that was going on--- large extra dimensions were popular then.

Eric Walker: Anyway, thanks Ron -- I'll get back to you with more questions soon, I'm sure.

Ron Maimon: Also I was at Cornell, my advisor left for Cincinnatti, and I was not in very good standing there (I was kind of a jerk, as I still am). Some friends wanted to start a biotech company called "Gene Network Sciences", and I joined them.
]
This is corroborated e.g. at: http://pages.physics.cornell.edu/~gtoombes/Student_Index.html

This is the company he talks about: https://en.wikipedia.org/wiki/GNS_Healthcare[].

At https://youtu.be/ObXbKbpkSjQ?t=2454 from \x[video-ron-maimon-interview-with-jeff-meverson-2014] he mentions his brother is a professor. At https://physics.stackexchange.com/questions/32382/could-we-build-a-supercomputer-out-of-wires-and-switches-instead-of-a-microchip confirms that his brother's name is "Gaby Maimon", so this https://www.rockefeller.edu/our-scientists/heads-of-laboratories/985-gaby-maimon/ neuroscience professor at the Rockerfeller University. Looks, age, location and research interest match.

Ron disappeared from the \x[internet] at around 2014. Ciro figures he's hanging out with \x[ettore-majorana] somewhere.

Some notable technical posts:
* https://physics.stackexchange.com/questions/535/why-does-kinetic-energy-increase-quadratically-not-linearly-with-speed/14752#14752 answer to "Why does \x[kinetic-energy] increase quadratically, not linearly, with speed?" on \x[physics-stack-exchange]

Some notable history posts:
* https://physics.stackexchange.com/questions/18632/good-book-on-the-history-of-quantum-mechanics/18643#18643

Bibliography:
* https://gmachine1729.livejournal.com/161418.html Ron Maimon answers about physics and math on Quora (part 1) by Sheng Li (2020)

\Video[https://www.youtube.com/watch?v=ObXbKbpkSjQ]
{title=\x[ron-maimon] interview with Jeff Meverson (2014)}
{description=Ripped from Jeff's "Quoracast": https://player.fm/series/quoracast-podcast/ron-maimon-truther Ron mentions he was an early-\x[usenet] user. Key points:
* https://youtu.be/ObXbKbpkSjQ?t=2247 mentions that there is a question on \x[quora] where Ron said he took a vow of poverty when he was 10. This reminded Ciro of \x[ciro-santilli-s-cheapness].
* https://youtu.be/ObXbKbpkSjQ?t=2532 mentions his admiration for \x[leonard-susskind], in particular him starting out as a plumber
}

= Stack Exchange
{c}
{parent=stack-overflow}
{wiki}

Waste of time sub-sites that should instead be merged into \x[stack-overflow] as different tags.

Nowhere is this waste more visible than at: https://cs50.stackexchange.com/[]. A website just for some specific course that is completely covered by other sites of the network? What a humongous waste!!!

= Physics Stack Exchange
{c}
{parent=stack-exchange}
{wiki}

= LessWrong
{c}
{parent=internet-forum}
{wiki}

* https://www.lesswrong.com/
* https://www.reddit.com/r/OutOfTheLoop/comments/3ttw2e/what_is_lesswrong_and_why_do_people_say_it_is_a/

= Eliezer Yudkowsky
{c}
{parent=lesswrong}
{wiki}

= Reddit
{c}
{parent=internet-forum}
{wiki}

\x[ciro-santilli]'s account is https://www.reddit.com/user/cirosantilli/[], see also: \x[accounts].

= Usenet
{c}
{parent=internet-forum}
{wiki}

= Eternal September
{c}
{parent=usenet}
{wiki}

= Mailing list
{parent=website}
{wiki}

It boggles \x[ciro-santilli]'s mind that people use \x[mailing-list] to collaborate on projects!

The only explanation is that the dinosaurs who created the projects are unable to adapt to new superior technologies.

Yes, Ciro is talking to you, big fundamental projects from last century: \x[linux-kernel], \x[gnu-compiler-collection] (https://gcc.gnu.org/lists.html[]), \x[binutils] (https://sourceware.org/binutils/[]), etc.

Some of you are already using Bugzilla for the bugs, so kudos. But if you've seen their benefit, why you still use the mailing list for patches?

Advantages of mailing lists:
* threaded replies, which almost no issue tracker has. \x[github] feature request: https://github.com/isaacs/github/issues/837

Disadvantages: everything else:
* cannot subscribed to a single thread. Which forces you to create an email filter for each one of them you subscribe to.
* no metadata, notably the notion of closing / merging, but also upvotes

  You have to read thirty messages before you can know if the bug was solved or not.
* it is insanely hard to reply to messages from before you were subscribed: https://webapps.stackexchange.com/questions/23197/reply-to-mailman-archived-message/115088#115088

  This forces everyone to subscribe to all lists, and then set up email filters to not be flooded with emails.
* hard to apply patches locally to test them out: https://stackoverflow.com/questions/5062389/how-to-use-git-am-to-apply-patches-from-email-messages/49082916#49082916

  Unless they use Patchwork, which adds one more website on top of the mess.

  And then \x[gmail] corrupts your patches, and you are forced to use `git send-email`, which does not work on some network configurations: https://stackoverflow.com/questions/28038662/how-to-solve-unable-to-initialize-smtp-properly-when-using-using-git-send-ema or setup ThunderBird.
* often have to subscribe to post at all, thus cluttering your inbox further
* you can edit posts to make them clearer.

  Yes, people could vandalize their answers when they get mad, and threads might stop making sense after edits. But this can be solved with an undeletable post history like Stack Overflow has (but not any other tracker does).

  Or archive.org :-)

  In any case, what do you think will happen more often and have greater impact:
  * people vandalize their posts
  * people fix their silly typos and improve content
* searchable by author, keyword, etc. without Google. Yes, mailing list trackers could have decent implementations to overcome that. But no, GNU Mailman which everyone uses does not have it. Google barely indexes it.

  And I don't think Google properly indexes many of the mailing list archives for some reason: I never get hits for my own posts a week later, while I often do on GitHub issues.
* people have to learn about top posting vs inline posting, and this requires infinite education of new users
* Line comments in code reviews like GitHub and GitLab.

  On mailing lists: either put a comment in the middle of a huge patch and let other people find it, or (more likely) copy paste the part of the patch that you are talking about.
* most mail web UIs suck.

  OK, this is not an unsolvable or intrinsic problem, but still a problem.

  E.g.: `ezmlm` it is not possible to see the entire content in a single page: <https://gcc.gnu.org/ml/gcc/2015-07/threads.html>

  Unless you like reading threads backwards and with 4 levels of `>` quotations.

  The alternative: do like LLVM and send attachments. Yes, I we all love opening up attachments on our browsers.

  The real solution: everyone can create branches and pull requests. Also has the benefit of running CI on the pull requests.

Not sure:
* you can have infinitely many trackers to replicate data in case apocalypse happens in some part of the world.

  Although I'm not sure this is an advantage, as you don't know anymore which one is the canonical trackers an advantage, as you don't know anymore which one is the canonical tracker.

  And all web interfaces already have an API to export messages, and someone has already scripted it to import from any web UI to any web UI for you.

  And GitHub offers infinite precise history transparently on its API.

Smart people who agree with Ciro:
* https://news.ycombinator.com/item?id=13631069
* https://softwareengineering.stackexchange.com/questions/191961/why-do-some-big-projects-like-git-and-debian-only-use-a-mailing-list-and-not-a#comment779146_256479

= Online marketplace
{parent=website}
{wiki}

= Fiverr
{c}
{parent=online-marketplace}
{wiki}

= Personal web page
{parent=website}
{wiki}

= Personal website
{synonym}

= Piracy website
{parent=website}
{wiki}

= Shadow library
{parent=piracy-website}
{wiki}

= Z-Library
{c}
{parent=shadow-library}
{wiki}

= Web archiving
{parent=website}
{wiki}

The remedy to cowardice, inattention, censorship and amorality.

Due to \x[ciro-santilli-s-campaign-for-freedom-of-speech-in-china], \x[ciro-santilli] maintains information on this at mostly at:
https://cirosantilli.com/china-dictatorship/wayback-machine
https://cirosantilli.com/china-dictatorship/archive-today

\x[dan-dascalescu]'s "Web page archiving" comparison table: https://web.archive.org/web/20130922192354/http://wiki.dandascalescu.com/reviews/online_services/web_page_archiving

= Archive.today
{c}
{parent=web-archiving}
{wiki}

https://cirosantilli.com/china-dictatorship/archive-today

= Internet Archive
{c}
{parent=web-archiving}
{wiki}

https://help.archive.org/hc/en-us/articles/360016554912-Borrowing-From-The-Lending-Library is the most amazing thing ever made.

= Wayback Machine
{c}
{parent=internet-archive}
{wiki}

https://cirosantilli.com/china-dictatorship/wayback-machine

= Wiki
{parent=website}
{wiki}

In other sections:
* \x[wikileaks]{child}

= DokuWiki
{c}
{parent=wiki}
{wiki}

= Know Your Meme
{c}
{parent=wiki}
{wiki}

https://knowyourmeme.com/

The dominating \x[meme] \x[database] as of 2020.

= NLab
{c}
{parent=wiki}
{wiki}

https://ncatlab.org

= TV Tropes
{c}
{parent=wiki}
{wiki}

https://tvtropes.org

Classifies clichés in storytelling.

Every page is highly intelligent and interlinked to other pages.

It is incredible.

= It's Popular Now It Sucks
{c}
{parent=tv-tropes}

https://tvtropes.org/pmwiki/pmwiki.php/Main/ItsPopularNowItSucks on \x[tv-tropes].

This is true: \x[high-budget-movies-are-shit]. Just TV Trops can articular it infinitely better than \x[ciro-santilli] can.

Related:
* \x[enter-through-the-narrow-gate]

= Hipster
{c}
{parent=it-s-popular-now-it-sucks}
{wiki}

= Wikipedia
{c}
{parent=wiki}
{wiki}

Why Wikipedia sucks: \x[write-free-books-to-get-famous-website/wikipedia]{full}.

Best languages:
* https://en.wikipedia.org/wiki/Latin_Wikipedia[latin]
* https://en.wikipedia.org/wiki/Esperanto_Wikipedia[esperanto]. Other constructed languages: https://en.wikipedia.org/wiki/Wikipedia:List_of_constructed_languages_with_Wikipedias

= Wiki-binge
{c}
{parent=wikipedia}

https://www.urbandictionary.com/define.php?term=wiki-binge

= Ciro Santilli's Wikipedia contributions
{c}
{parent=wikipedia}

Let's see how long they last:
* \x[julian-schwinger]: https://en.wikipedia.org/w/index.php?title=Julian_Schwinger&oldid=1039812272 greatly expanded the Early life and career with information from the book \x[qed-and-the-men-who-made-it-dyson-feynman-schwinger-and-tomonaga-by-silvan-schweber-1994]

= Wikimedia Commons
{parent=wikipedia}
{wiki}

A really good option to store educational media such as \x[media-rationale-of-ciro-santilli-s-website][images and video]!

Shame that like the rest of Wikimedia, their interface is so clunky and lacking obvious features.

= WikiWikiWeb
{c}
{title2=C2 wiki}
{parent=wiki}

https://wiki.c2.com

The venerable first \x[wiki].

The pre-\x[eternal-september] feeling is palpable.

People could freely comment their thoughts and sign below, making it much closer to what \x[ciro-santilli] wants \x[write-free-books-to-get-famous-website] to be. But with upvotes ;-)

Nothing can better encapsulate the nostalgia of early day Internet. Genius at times, banal at others, you will be forever in our hearts!

= YouTube
{c}
{parent=website}
{wiki}

\x[ciro-santilli] publishes videos of this not-so-common visual programming experiments on his YouTube channel occasionally: https://www.youtube.com/c/CiroSantilli[]. Ciro should however not be lazy and also upload each video produced to \x[wikimedia-commons], since YouTube does not offer a download option even for videos marked with a \x[creative-commons-license]: https://www.quora.com/Can-I-download-Creative-Commons-licensed-YouTube-videos-to-edit-them-and-use-them/answer/Tarmo-Toikkanen[]!

This is also where Ciro's downtime converged to in his early 30's, since he long lost patience for stupid \x[video-game]{p} and \x[television-series].

Ciro developed one interesting technique: while scrolling through YouTube's useless recommendations, when he understands what a channel is about, he either immediately:
* subscribes if it is amazing and then "Don't recommend channel"
* otherwise just "Don't recommend channel" immediately
This helps to keep this feed clean of boring stuff he already knows about. There is unfortunately an \i[infinite] amount of useless videos out there however on the topics of:
* sports
* music, mostly idiotic top of the charts
* news and political commentary
* food
* programming tutorials. Meh, got \x[stack-overflow].
* stuff that is \x[having-more-than-one-natural-language-is-bad-for-the-world][not in English], and notably languages that Ciro does not even speak!
* motorcycles
* https://en.wikipedia.org/wiki/ASMR[ASMR]
* cute animals
* gaming and movie commentary. Ciro is interested only in a very specific number of \x[video-game]{p}
* nature life, e.g. hiking, cycling, or living in isolation, this Ciro enjoys
* science for kids (\x[popular-science])
and no matter how much you say you don't want to hear about them, YouTube juts keeps on sending more.

Things Ciro hates about YouTube:
* you can't follow or ignore a subject, only indirectly tell the algorithm about that. Once you click a popular cat video, you will be forced to watch cat videos for all eternity.

Likely \x[ffmpeg-is-the-backend-of-youtube].

Bought by \x[google]{parent} in 2006.

\Video[https://www.youtube.com/watch?v=XAJEXUNmP5M]
{title=r | p 2006: YouTube: From Concept to Hypergrowth - Jawed Karim by acmuiuc (2006)}
{description=Explains that the key enabling technology for YouTube was the addition of video capabilities to \x[adobe-flash][Macromedia Flash 7].}

= YouTube poop
{parent=youtube}

* https://www.youtube.com/channel/UCDyR_C_QVjZR24ze0fl5S_Q Goat-on-a-Stick channel

\Video[https://www.youtube.com/watch?v=g-sgw9bPV4A]
{title=Kazoo Kid - Trap Remix by Mike Diva (2016)}

\Video[https://www.youtube.com/watch?v=3Q12xOukVAI]
{title=Ravioli Remix: Black and Yellow by Wiz Krablifa by TheDoubleAgent (2015)}

\Video[https://www.youtube.com/watch?v=Fc1P-AEaEp8&list=PLcZOZrP1P_V6uAU4QhldipGBW86qJFvLk&index=13]
{title=Afraid of Technology by adarkenedroom (2008)}
{description=TODO source show, appears "Brass Eye", TODO episode https://www.reddit.com/r/videos/comments/jpyfi/technology_scares_the_crap_out_of_me/}

= youtube-dl
{parent=youtube}

https://github.com/ytdl-org/youtube-dl

This thing dowloads \x[youtube] videos. The thing downloads \x[twitter] videos. The thing downloads BBC videos. It is just \x[godlike].

= YouTube channel
{parent=youtube}

= The best YouTube channels
{parent=youtube-channel}

* https://www.youtube.com/channel/UCM2YmsRUeIbRkqjgNm0eTGQ Journeyman Pictures. Basically a VICE-like, focused on \x[fucked] up things happening in poor countries or regions.
* \x[mediocre-amateur]{child}
* \x[youtube-comedy-channel]{child}

= Web of Stories
{c}
{parent=the-best-youtube-channels}

https://www.youtube.com/user/webofstories

Full channel title: "Web of Stories - Life Stories of Remarkable People".

1-2 to hour long interviews, the number of \x[nobel-prize] winners is off-the-charts. The videos have transcripts on the description!

TODO what is their affiliation/who is behind it? There is nothing on the website.

https://en.wikipedia.org/wiki/Web_of_Stories small wiki with almost no citations.

= The best scientific YouTube channels
{parent=the-best-youtube-channels}

* \x[mathematics-youtube-channel]{child}{p}
* \x[particle-physics-youtube-channel]{child}{p}
  * \x[dietterich-labs]{child}

= Applied Science
{c}
{disambiguate=YouTube channel}
{parent=the-best-scientific-youtube-channels}

https://www.youtube.com/channel/UCivA7_KLKWo43tFcCkFvydw

Host: Ben Krasnow.

Deals with materials, \x[chemistry], \x[microscopy], electronics.

Uber practical, well described setups deep science stuff, he is awesome and has been at \x[google] since 2014: https://www.linkedin.com/in/ben-krasnow-6796a94/

Ben studied at \x[university-of-california-santa-barbara].

= EngineerGuy
{c}
{parent=the-best-scientific-youtube-channels}

https://www.youtube.com/c/engineerguyvideo

https://en.wikipedia.org/wiki/William_S._Hammack

Does deliver good concise ideas. Now we need something on the \x[the-missing-link-between-basic-and-advanced][less concise side of it].

= NileRed
{c}
{parent=the-best-scientific-youtube-channels}

https://www.youtube.com/channel/UCFhXFikryT4aFcLkLw2LBLA

Great \x[chemistry] content. Well detailed setups, notably substance extraction from off-the-shelf products.

= Cody's lab
{c}
{parent=the-best-scientific-youtube-channels}

https://www.youtube.com/channel/UCu6mSoMNzHQiBIOCkHUa2Aw

This dude is \x[mind-blowing]. Big respect.

Some of the most impressive videos are the ones in which he goes and extracts metals from minerals himself all the way.

\Video[https://www.youtube.com/watch?v=x1mv0vwb08Y]
{title=What's Been Going On With Cody'sLab? by \x[cody-s-lab] (2019)}
{description=Cody opening up about some issues he's having life. Notably: \x[being-naughty-and-creative-are-correlated].}
