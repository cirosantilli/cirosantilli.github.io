= Linear algebra
{wiki}

= Linear function
{parent=linear-algebra}
{wiki}

= Linear
{synonym}

= Linearly
{synonym}

The term is not very clear, as it could either mean:
* a \x[real-number] function whose graph is a line, i.e.:
  $$f(x) = ax + b$$
  or for higher dimensions, a \x[hyperplane]:
  $$f(x_1, x_2, \ldots, x_n) = c_1 x_1 + c_2 x_2 + \ldots + c_n x_n + b$$
* a \x[linear-map]. Note that the above linear functions are not linear maps unless $b = 0$ (known as the homogeneous case), because e.g.:
  $$f(x + y) = ax + ay + b$$
  but
  $$f(x) + f(y) = ax + b + ay + b$$
  For this reason, it is better never to refer to linear maps as linear functions.

= Linear map
{parent=linear-algebra}
{title2=linear operator}
{wiki}

A linear map is a function $f : V_1(F) \to V_2(F)$ where $V_1(F)$ and $V_2(F)$ are two vector spaces over \x[underlying-field-of-a-vector-space][underlying fields] $F$ such that:
$$
\forall v_{1}, v_{2} \in V_1, c_{1}, c_{2} \in F \\
f(c_{1} v_{1} + c_{2} v_{2}) = c_{1} f(v_{1}) + c_{2} f(v_{2})
$$

A common case is $F = \R$, $V_1 = \R_m$ and $V_2 = \R_n$.

One thing that makes such functions particularly simple is that they can be fully specified by specifyin how they act on all possible combinations of input basis vectors: they are therefore specified by only a finite number of elements of $F$.

Every linear map in \x[finite-dimension] can be represented by a \x[matrix], the points of the \x[domain-function] being represented as \x[vector]{p}.

As such, when we say "linear map", we can think of a generalization of \x[matrix-multiplication] that makes sense in \x[infinite-dimensional] spaces like \x[hilbert-space]{p}, since calling such infinite dimensional maps "matrices" is stretching it a bit, since we would need to specify infinitely many rows and columns.

The prototypical building block of \x[infinite-dimensional] linear map is the \x[derivative]. In that case, the vectors being operated upon are \x[function]{p}, which cannot therefore be specified by a finite number of parameters, e.g. 

For example, the left side of the \x[time-independent-schrodinger-equation] is a linear map. And the \x[time-independent-schrodinger-equation] can be seen as a \x[eigenvalue] problem.

= Form
{disambiguate=mathematics}
{parent=linear-map}

A form is a \x[function] from a \x[vector-space] to elements of the \x[underlying-field-of-the-vector-space].

Examples:
* \x[linear-form]
* \x[bilinear-form]
* \x[multilinear-form]

= Linear form
{parent=linear-map}
{wiki}

A \x[linear-map]{c} where the \x[image-mathematics] is the \x[underlying-field-of-the-vector-space], e.g. $\R^n \to \R$.

The set of all \x[linear-form]{p} over a \x[vector-space] forms another vector space called the \x[dual-space].

= Matrix representation of a linear form
{parent=linear-form}

For the typical case of a linear form over \x[r-n], the form can be seen just as a row vector with n elements, the full form being specified by the value of each of the \x[basis-vector]{p}.

= Dual space
{parent=linear-form}
{title2=$V^*$}
{wiki}

The dual space of a \x[vector-space] $V$, sometimes denoted $V^*$, is the vector space of all \x[linear-form]{p} over $V$ with the obvious addition and scalar multiplication operations defined.

Since a linear form is completely determined by how it acts on a \x[basis], and since for each basis element it is specified by a scalar, at least in finite dimension, the dimension of the dual space is the same as the $V$, and so they are isomorphic because \x[all-vector-spaces-of-the-same-dimension-on-a-given-field-are-isomorphic], and so the dual is quite a boring concept in the context of finite dimension.

Infinite dimension seems more interesting however, see: https://en.wikipedia.org/w/index.php?title=Dual_space&oldid=1046421278#Infinite-dimensional_case

One place where duals are different from the non-duals however is when dealing with \x[tensor]{p}, because they transform differently than vectors from the base space $V$.

= Dual vector
{parent=dual-space}
{title2=$e^i$}

Dual vectors are the members of a \x[dual-space].

In the context of \x[tensor]{p} , we use raised indices to refer to members of the dual basis vs the underlying basis:
$$
\begin{aligned}
e_1 & \in V \\
e_2 & \in V \\
e_3 & \in V \\
e^1 & \in V^* \\
e^2 & \in V^* \\
e^3 & \in V^* \\
\end{aligned}
$$
The dual basis vectors $e^i$ are defined to "pick the corresponding coordinate" out of elements of V. E.g.:
$$
\begin{aligned}
e^1 (4, -3, 6) & =  4 \\
e^2 (4, -3, 6) & = -3 \\
e^3 (4, -3, 6) & =  6 \\
\end{aligned}
$$
By expanding into the basis, we can put this more succinctly with the \x[kronecker-delta] as:
$$
e^i(e_j) = \delta_{ij}
$$

Note that in \x[einstein-notation], the components of a dual vector have lower indices. This works well with the upper case indices of the dual vectors, allowing us to write a dual vector $f$ as:
$$
f = f_i e^i
$$

In the context of \x[quantum-mechanics], the \x[bra-ket][bra] notation is also used for dual vectors.

= Linear operator
{parent=linear-map}
{wiki}

= Operator
{synonym}

We define it as a \x[linear-map] where the \x[domain-function] is the same as the \x[image-mathematics], i.e. an \x[endofunction].

Examples:
* a 2x2 matrix can represent a \x[linear-map] from \x[r-2] to \x[r-2], so which is a linear operator
* the \x[derivative] is a \x[linear-map] from \x[c-infty] to \x[c-infty], so which is also a linear operator

= Adjoint operator
{parent=linear-operator}
{title2=$A^\dagger$}

Given a \x[linear-operator] $A$ over a space $S$ that has a \x[inner-product] defined, we define the adjoint operator $A^\dagger$ (the $\dagger$ symbol is called "dagger") as the unique operator that satisfies:
$$
\forall v, w \in S, <Av, w> = <v, A^{\dagger} w>
$$

= Self-adjoint operator
{parent=linear-map}
{wiki}

= Self-adjoint
{synonym}

= Multilinear map
{parent=linear-map}
{wiki}

= Bilinear map
{parent=multilinear-map}
{wiki}

= Bilinear product
{synonym}

\x[linear-map]{c} of two variables.

More formally, given 3 \x[vector-space]{p} X, Y, Z over a single \x[field-mathematics], a bilinear map is a function from:
$$f : X \times Y \to Z$$
that is linear on the first two arguments from X and Y, i.e.:
$$f(a_1\vec{x_1} + a_2\vec{x_2}, \vec{y}) = a_1f(\vec{x_1}, \vec{y}) + a_2f(\vec{x_2}, \vec{y})$$
Note that the definition only makes sense if all three vector spaces are over the same field, because linearity can mix up each of them.

The most important example by far is the \x[dot-product] from $\R^n \times \R^n \to \R$, which is more specifically also a \x[symmetric-bilinear-form].

= Bilinear form
{parent=multilinear-map}
{title2=$B(x, y)$}
{wiki}

Analogous to a \x[linear-form], a bilinear form is a \x[bilinear-map]{c} where the \x[image-mathematics] is the \x[underlying-field-of-the-vector-space], e.g. $\R^n \times \R^m \to \R$.

Some definitions require both of the input spaces to be the same, e.g. $\R^n \times \R^n \to \R$, but it doesn't make much different in general.

The most important example of a bilinear form is the \x[dot-product]. It is only defined if both the input spaces are the same.

= Matrix representation of a bilinear form
{parent=bilinear-form}

As usual, it is useful to think about how a \x[bilinear-form] looks like in terms of \x[vector]{p} and \x[matrix]{p}.

Unlike a \x[linear-form], which \x[matrix-representation-of-a-linear-form][was a vector], because it has two inputs, the bilinear form is represented by a matrix $M$ which encodes the value for each possible pair of \x[basis-vector]{p}.

In terms of that \x[matrix], the form $B(x,y)$ is then given by:
$$
B(x,y) = x^T M y
$$

= Effect of a change of basis on the matrix of a bilinear form
{parent=matrix-representation-of-a-bilinear-form}
{title2=$B_2 = C^T B C$}

If $C$ is the \x[change-of-basis-matrix], then the \x[matrix-representation-of-a-bilinear-form] $M$ that looked like:
$$
B(x,y) = x^T M y
$$
then the matrix in the new basis is:
$$
C^T M C
$$
\x[sylvester-s-law-of-inertia] then tells us that the number of positive, negative and 0 eigenvalues of both of those matrices is the same.

Proof: the value of a given bilinear form cannot change due to a \x[change-of-basis], since the bilinear form is just a \x[function-mathematics], and does not depend on the choice of basis. The only thing that change is the matrix representation of the form. Therefore, we must have:
$$
x^T M y = x_{new}^T M_{new} y_{new}
$$
and in the new basis:
$$
x = C x_{new} \\
y = C y_{new} \\
x_{new}^T M_{new} y_{new} = x^T M y =  (Cx_{new})^T M (Cy_{new}) = x_{new}^T (C^T M C) y_{new} \\
$$
and so since:
$$
\forall x_{new}, y_{new} x_{new}^T M_{new} y_{new} = x_{new}^T (C^T M C) y_{new} \implies M_{new} = C^T M C \\
$$

Related:
* https://proofwiki.org/wiki/Matrix_of_Bilinear_Form_Under_Change_of_Basis

= Multilinear form
{parent=multilinear-map}
{wiki}

See \x[form-mathematics].

Analogous to a \x[linear-form], a multilinear form is a \x[multilinear-map]{c} where the \x[image-mathematics] is the \x[underlying-field-of-the-vector-space], e.g. $\R^{n_1} \times \R^{n_2} \times \R^{n_2} \to \R$.

= Symmetric bilinear map
{parent=multilinear-map}
{wiki}

Subcase of \x[symmetric-multilinear-map]:
$$f(x, y) = f(y, x)$$

Requires the two inputs $x$ and $y$ to be in the same \x[vector-space] of course.

The most important example is the \x[dot-product], which is also a \x[positive-definite-symmetric-bilinear-form].

= Symmetric bilinear form
{parent=symmetric-bilinear-map}
{wiki}

\x[symmetric-bilinear-map]{p} that is also a \x[bilinear-form].

= Matrix representation of a symmetric bilinear form
{parent=symmetric-bilinear-form}

= Matrix representation of the symmetric bilinear form
{synonym}

Like the \x[matrix-representation-of-a-bilinear-form], it is a \x[matrix], but now the matrix has to be a \x[symmetric-matrix].

We can then immediately see that the matrix is symmetric, then so is the form. We have:
$$
B(x,y) = x^T M y
$$
But because $B(x,y)$ is a \x[scalar], we have:
$$
B(x,y) = B(x,y)^T
$$
and:
$$
B(x,y) = B(x,y)^T = (x^T M y)^T = y^T M^T x = y^T M^T x = y^T M x = B(y,x)
$$

= Hermitian form
{c}
{parent=symmetric-bilinear-map}
{wiki}

The \x[complex-number] analogue of a \x[symmetric-bilinear-form].

The prototypical example of it is the \x[complex-dot-product].

Note that this form is neither strictly \x[symmetric-bilinear-map][symmetric], it satisfies:
$$
<x, y> = \overline{<y, x>}
$$
where the over bar indicates the \x[complex-conjugate], nor is it linear for complex scalar multiplication on the second argument.

Bibliography:
* https://mathworld.wolfram.com/HermitianForm.html

= Matrix representation of a Hermitian form
{parent=hermitian-form};

A \x[hermitian-matrix].

= Quadratic form
{parent=symmetric-bilinear-map}
{wiki}

\x[multivariate-polynomial]{c} where each term has degree 2, e.g.:
$$
f(x,y) = 2y^2 + 10yx + x^2
$$
is a quadratic form because each term has degree 2:
* $y^2$
* $xy$
* $x^2$
but e.g.:
$$
f(x,y) = 2y^2 + 10yx + x^3
$$
is not because the term $x^3$ has degree 3.

There is a \x[1-to-1] relationship between \x[quadratic-form]{p} and \x[symmetric-bilinear-form]{p}. In matrix representation, this can be written as:
$$
\vec{x}^T B \vec{x}
$$
where $\vec{x}$ contains each of the variabes of the form, e.g. for 2 variables:
$$
\vec{x} = [x, y]
$$

Strictly speaking, the associated \x[bilinear-form] would not need to be a \x[symmetric-bilinear-form], at least for the \x[real-number]{p} or \x[complex-number]{p} which are \x[commutative]. E.g.:
$$
\begin{bmatrix}x y\end{bmatrix}
\begin{bmatrix}0 & 1 \\ 2 & 0 \\ \end{bmatrix}
\begin{bmatrix}x \\ y \\ \end{bmatrix}
=
\begin{bmatrix}x y\end{bmatrix}
\begin{bmatrix}y \\ 2x \\\end{bmatrix}
= xy + 2yx
= 3xy
$$
But that same matrix could also be written in symmetric form as:
$$\begin{bmatrix}0 & 1.5 \\ 1.5 & 0 \\ \end{bmatrix}$$
so why not I guess, its simpler/more restricted.

= Positive definite symmetric bilinear form
{parent=symmetric-bilinear-map}
{wiki}

\x[symmetric-bilinear-form]{c} that is also positive definite, i.e.:
$$
\forall x, B(x, x) > 0
$$

= Matrix representation of a positive definite symmetric bilinear form
{parent=positive-definite-symmetric-bilinear-form}

A \x[positive-definite-matrix] that is also a \x[symmetric-matrix].

= Skew-symmetric bilinear map
{parent=symmetric-bilinear-map}

= Antisymmetric bilinear map
{synonym}

Subcase of \x[antisymmetric-multilinear-map]:
$$f(x, y) = -f(y, x)$$

= Skew-symmetric bilinear form
{parent=symmetric-bilinear-map}
{wiki}

\x[skew-symmetric-bilinear-map]{c} that is also a \x[bilinear-form].

= Symmetric multilinear map
{parent=multilinear-map}

Same value if you swap any input arguments.

= Antisymmetric multilinear map
{parent=symmetric-multilinear-map}

Change sign if you swap two input values.

= Alternating multilinear map
{parent=multilinear-map}

Implies \x[antisymmetric-multilinear-map].

= Dot product
{parent=linear-algebra}
{wiki}

The definition of the "dot product" of a general space varies quite a lot with different contexts.

Most definitions tend to be \x[bilinear-form]{p}.

We use the unqualified generally refers to the dot product of \x[real-coordinate-space]{p}, which is a \x[positive-definite-symmetric-bilinear-form]. Other important examples include:
* the \x[complex-dot-product], which is not strictly \x[symmetric-bilinear-map][symmetric] nor \x[linear], but it is \x[positive-definite]
* \x[minkowski-inner-product], sometimes called" "Minkowski dot product is not \x[positive-definite]
The rest of this section is about the \x[r-n] case.

The \x[positive-definite] part of the definition likely comes in because we are so familiar with \x[metric-space]{p}, which requires a positive \x[norm] in the \x[norm-induced-by-an-inner-product].

The default \x[euclidean-space] definition, we use the \x[matrix-representation-of-a-symmetric-bilinear-form] as the identity matrix, e.g. in \x[r-3]:
$$
M =
\begin{bmatrix}
1 & 0 & 0 \\
0 & 1 & 0 \\
0 & 0 & 1 \\
\end{bmatrix}
$$
so that:
$$
\vec{x} \cdot \vec{y}
=
\begin{bmatrix}
x_1 & x_2 & x_3 \\
\end{bmatrix}
\begin{bmatrix}
1 & 0 & 0 \\
0 & 1 & 0 \\
0 & 0 & 1 \\
\end{bmatrix}
\begin{bmatrix}
y_1 \\
y_2 \\
y_3 \\
\end{bmatrix}
=
x_1y_1 + x_2y_2 + x_3y_3
$$

= Orthogonality
{parent=dot-product}
{wiki}

= Orthogonal
{synonym}

= Orthonormality
{parent=orthogonality}
{wiki}

= Orthonormal
{synonym}

= Angle
{parent=dot-product}
{wiki}

= Cross product
{parent=linear-algebra}
{title2=$\va{x} \times \va{y}$}
{wiki}

= Jacobi identity
{c}
{parent=cross-product}
{wiki}

= Index picking function
{parent=linear-algebra}

= Kronecker delta
{c}
{parent=index-picking-function}
{title2=$\delta_{ij}$}
{wiki}

= Levi-Civita symbol
{c}
{parent=index-picking-function}
{title2=$\varepsilon$}
{wiki}

Denoted by the \x[greek-letter-epsilon] with `\varepsilon` encoding in \x[latex].

Definition:
* \x[odd-permutation]: -1
* \x[even-permutation]: 1
* not a \x[permutation]: 0. This happens iff two more more indices are repeated

= Levi-Civita symbol as a tensor
{parent=levi-civita-symbol}

\x[an-introduction-to-tensors-and-group-theory-for-physicists-by-nadir-jeevanjee-2011]{c} shows that this is a \x[tensor] that represents the \x[volume-of-a-parallelepiped].

It takes as input three vectors, and outputs one real number, the volume. And it is linear on each vector. This perfectly satisfied the definition of a tensor of \x[order-of-a-tensor][order] (3,0).

Given a basis $(e_i, e_j, e_k)$ and a function that return the volume of a parallelepiped given by three vectors $V(v_1, v_2, v_3)$, $\varepsilon_{ikj} = V(e_i, e_j, e_k)$.

= Projection
{disambiguate=mathematics}
{parent=linear-algebra}

= Matrix
{parent=linear-algebra}
{wiki}

= Matrix operation
{parent=matrix}
{wiki}

= Determinant
{parent=matrix-operation}
{title2=$det$}
{wiki}

Name origin: likely because it "determines" if a matrix is \x[invertible-matrix][invertible] or not, as a matrix is invertible iff determinant is not zero.

= Matrix inverse
{parent=matrix-operation}
{title2=$M^{-1}$}

When it exists, which is not for all matrices, only \x[invertible-matrix], the inverse is denoted:
$$
M^{-1}
$$

= Invertible matrix
{parent=matrix-inverse}
{tag=named-matrix}
{wiki}

The set of all \x[invertible-matrix]{p} forms a \x[group]: the \x[general-linear-group] with \x[matrix-multiplication]. Non-invertible matrices don't form a group due to the lack of inverse.

= Transpose
{parent=matrix-operation}
{title2=$M^T$}
{wiki}

= Transpose of a matrix multiplication
{parent=transpose}
{wiki}

When it distributes it inverts the order of the \x[matrix-multiplication]:
$$(MN)^T = N^T M^T$$

= Inverse of the transpose
{parent=transpose}
{wiki}

The \x[transpose] and \x[matrix-inverse] commute:
$$
(M^T)-1 = (M^{-1})^T
$$

= Matrix multiplication
{parent=matrix}
{wiki}

= Matrix product
{synonym}

Since a \x[matrix] $M$ can be seen as a \x[linear-map] $f_M(\vec{x})$, the product of two matrices $MN$ can be seen as the composition of two \x[linear-map]{p}:
$$f_M(f_N(\vec{x}))$$
One cool thing about linear functions is that we can easily pre-calculate this product only once to obtain a new matrix, and so we don't have to do both multiplications separately each time.

= Matrix multiplication algorithm
{parent=matrix-multiplication}
{tag=computational-problem}

https://math.stackexchange.com/questions/30330/fast-algorithm-for-solving-system-of-linear-equations/259372#259372

= Matrix decomposition
{parent=matrix-multiplication}
{wiki}

= Eigenvalues and eigenvectors
{parent=matrix}
{wiki}

= Applications of eigenvalues and eigenvectors
{parent=eigenvalues-and-eigenvectors}

* https://math.stackexchange.com/questions/23312/what-is-the-importance-of-eigenvalues-eigenvectors/3503875#3503875
* https://math.stackexchange.com/questions/1520832/real-life-examples-for-eigenvalues-eigenvectors
* https://matheducators.stackexchange.com/questions/520/what-is-a-good-motivation-showcase-for-a-student-for-the-study-of-eigenvalues

= Characteristic polynomial
{parent=eigenvalues-and-eigenvectors}
{wiki}

= Eigenvalue
{parent=eigenvalues-and-eigenvectors}

See: \x[eigenvalues-and-eigenvectors].

= Spectrum
{disambiguate=functional analysis}
{parent=eigenvalue}

Set of \x[eigenvalue]{p} of a \x[linear-operator].

= Continuous spectrum
{disambiguate=functional analysis}
{parent=spectrum-functional-analysis}

Unlike the simple case of a \x[matrix], in \x[infinite-dimensional] vector spaces, the spectrum may be continuous.

The quintessential example of that is the spectrum of the \x[position-operator] in \x[quantum-mechanics], in which any \x[real-number] is a possible \x[eigenvalue], since the particle may be found in any position. The associated \x[eigenvector]{p} are the corresponding \x[dirac-delta-function]{p}.

= Eigendecomposition of a matrix
{parent=eigenvalues-and-eigenvectors}
{wiki}

= Eigendecomposition
{synonym}

Every \x[invertible-matrix] $M$ can be written as:
$$
M = QDQ^{-1}
$$
where:
* $D$ is a \x[diagonal-matrix] containing the \x[eigenvalue]{p} of $M$
* columns of $Q$ are \x[eigenvector]{p} of $M$
Note therefore that this decomposition is unique up to swapping the order of eigenvectors. We could fix a canonical form by sorting eigenvectors from smallest to largest in the case of a \x[real-number].

Intuitively, Note that this is just the \x[change-of-basis] formula, and so:
* $Q^{-1}$ changes basis to align to the eigenvectors
* $D$ multiplies eigenvectors simply by eigenvalues
* $Q$ changes back to the original basis

= Eigendecomposition of a real symmetric matrix
{parent=eigendecomposition-of-a-matrix}

= The eigendecomposition of a real symmetric matrix is done with orthogonal matrices
{synonym}

The general result from \x[eigendecomposition-of-a-matrix]:
$$
M = QDQ^{-1}
$$
becomes:
$$
M = ODO^T
$$
where $O$ is an \x[orthogonal-matrix], and therefore has $O^{-1} = O^T$.

= Sylvester's law of inertia
{c}
{parent=eigendecomposition-of-a-matrix}
{wiki}

The main interest of this theorem is in \x[classifying-mathematics] the \x[indefinite-orthogonal-group]{p}, which in turn is fundamental because the \x[lorentz-group] is an \x[indefinite-orthogonal-group]{p}, see: \x[all-indefinite-orthogonal-groups-of-matrices-of-equal-metric-signature-are-isomorphic].

It also tells us that a \x[change-of-basis] does not the alter the \x[metric-signature] of a \x[bilinear-form], see \x[matrix-congruence-can-be-seen-as-the-change-of-basis-of-a-bilinear-form].

The theorem states that the number of 0, 1 and -1 in the \x[metric-signature] is the same for two \x[symmetric-matrix]{p} that are \x[congruent-matrix]{p}.

For example, consider:
$$
A = \begin{bmatrix}2 & \sqrt{2} \\ \sqrt{2} & 3 \\\end{bmatrix}
$$

The \x[eigenvalue]{p} of $A$ are $1$ and $4$, and the associated eigenvectors are:
$$
v_1 = [-\sqrt{2}, 1]^T
v_4 = [\sqrt{2}/2, 1]^T
$$
\x[sympy] code:
``
A = Matrix([[2, sqrt(2)], [sqrt(2), 3]])
A.eigenvects()
``
and from the \x[eigendecomposition-of-a-real-symmetric-matrix] we know that:
$$
A = PDP^T =
\begin{bmatrix}-\sqrt{2} & \sqrt{2}/2 \\ 1 & 1\\\end{bmatrix}
\begin{bmatrix}1 & 0 \\ 0 & 4\\\end{bmatrix}
\begin{bmatrix}-\sqrt{2} & 1 \\ \sqrt{2}/2 & 1\\\end{bmatrix}
$$

Now, instead of $P$, we could use $PE$, where $E$ is an arbitrary \x[diagonal-matrix] of type:
$$
\begin{bmatrix}e_1 & 0 \\ 0 & e_2\\\end{bmatrix}
$$
With this, would reach a new matrix $B$:
$$
B = (PE)D(PE)^T = P(EDE^T)P^T = P(EED)P^T
$$
Therefore, with this congruence, we are able to multiply the eigenvalues of $A$ by any positive number $e_1^2$ and $e_2^2$. Since we are multiplying by two arbitrary positive numbers, we cannot change the signs of the original eigenvalues, and so the \x[metric-signature] is maintained, but respecting that any value can be reached.

Note that the \x[matrix-congruence] relation looks a bit like the \x[eigendecomposition-of-a-matrix]:
$$
D = SMS^T
$$
but note that $D$ does not have to contain \x[eigenvalue]{p}, unlike the \x[eigendecomposition-of-a-matrix]. This is because here $S$ is not fixed to having \x[eigenvector]{p} in its columns.

But because the matrix is symmetric however, we could always choose $S$ to actually diagonalize as mentioned at \x[eigendecomposition-of-a-real-symmetric-matrix]. Therefore, the \x[metric-signature] can be seen directly from \x[eigenvalue]{p}.

Also, because $D$ is a \x[diagonal-matrix], and thus symmetric, it must be that:
$$
S^T = S^{-1}
$$

What this does represent, is a general \x[change-of-basis] that maintains the matrix a \x[symmetric-matrix].

Related:
* https://math.stackexchange.com/questions/1817906/sylvesters-law-of-inertia
* https://math.stackexchange.com/questions/1284601/what-is-the-lie-group-that-leaves-this-matrix-invariant
* https://physics.stackexchange.com/questions/24495/metric-signature-explanation

= Congruent matrix
{parent=sylvester-s-law-of-inertia}

= Matrix congruence
{synonym}

Two \x[symmetric-matrix]{p} $A$ and $B$ are defined to be congruent if there exists an $S$ in \x[gl-n] such that:
$$
A = S B S^T
$$

= Matrix congruence can be seen as the change of basis of a bilinear form
{parent=congruent-matrix}

From \x[effect-of-a-change-of-basis-on-the-matrix-of-a-bilinear-form], remember that a change of basis $C$ modifies the \x[matrix-representation-of-a-bilinear-form] as:
$$
C^T M C
$$

So, by taking $S = C^T$, we understand that two matrices being congruent means that they can both correspond to the same \x[bilinear-form] in different bases.

= Matrix similarity
{parent=sylvester-s-law-of-inertia}
{wiki}

= Similar matrix
{synonym}

= Metric signature
{parent=sylvester-s-law-of-inertia}
{wiki}

= Metric signature matrix
{parent=metric-signature}

= Eigenvector
{parent=eigenvalues-and-eigenvectors}

See: \x[eigenvalues-and-eigenvectors].

= Eigenvectors and eigenvalues of the identity matrix
{parent=eigenvalues-and-eigenvectors}

https://math.stackexchange.com/questions/1507290/linear-algebra-identity-matrix-and-its-relation-to-eigenvalues-and-eigenvectors/3934023#3934023

= Spectral theorem
{parent=eigenvalues-and-eigenvectors}
{wiki}

* https://math.stackexchange.com/questions/1557878/do-infinite-dimensional-hermitian-operators-admit-a-complete-basis-of-eigenvecto
* https://mathoverflow.net/questions/45426/diagonalization-of-infinite-hermitian-matrices

= Hermitian matrix
{c}
{parent=spectral-theorem}
{wiki}

= Hermitian operator
{c}
{parent=hermitian-matrix}

= Hermitian
{c}
{synonym}

This is the possibly infinite dimensional version of a \x[hermitian-matrix], since \x[linear-operator]{p} are the possibly infinite dimensional version of \x[matrix]{p}.

There's a catch though: now we don't have explicit matrix indices here however in general, the generalized definition is shown at: https://en.wikipedia.org/w/index.php?title=Hermitian_adjoint&oldid=1032475701#Definition_for_bounded_operators_between_Hilbert_spaces

= Riesz representation theorem
{c}
{parent=hermitian-operator}

= Kronecker product
{c}
{parent=matrix}
{wiki}

= Named matrix
{parent=matrix}
{wiki=List_of_named_matrices}

= Diagonal matrix
{parent=named-matrix}
{wiki}

Forms a \x[normal-subgroup] of the \x[general-linear-group].

= Scalar matrix
{parent=diagonal-matrix}
{title2=$Z(V)$}
{wiki=Diagonal_matrix#Scalar_matrix}

Forms a \x[normal-subgroup] of the \x[general-linear-group].

= Identity matrix
{parent=scalar-matrix}
{title2=$I_n$}
{wiki}

= Square matrix
{parent=named-matrix}
{wiki}

= Matrix ring
{parent=square-matrix}
{wiki}

= Matrix ring of degree n
{title2}
{synonym}

= $M_n$
{title2}
{synonym}

= Set of all n-by-y square matrices
{title2}
{synonym}

The matrix ring of degree n $M_n$ is the set of all n-by-n square matrices together with the usual \x[vector-space] and \x[matrix-multiplication] operations.

This set forms a \x[ring-mathematics].

Related terminology:
* https://math.stackexchange.com/questions/412200/what-is-the-notation-for-the-set-of-all-m-times-n-matrices

= Orthogonal matrix
{parent=named-matrix}
{wiki}

Members of the \x[orthogonal-group].

= Unitary matrix
{parent=orthogonal-matrix}
{wiki}

\x[complex-number][Complex] analogue of \x[orthogonal-matrix].

Applications:
* in \x[quantum-computer]{p} programming basically comes down to creating one big unitary matrix as explained at: \x[quantum-computing-is-just-matrix-multiplication]

= Triangular matrix
{parent=named-matrix}
{wiki}

= Symmetric matrix
{parent=named-matrix}
{wiki}

A \x[matrix] that equals its \x[transpose]:
$$
M = M^T
$$

Can represent a \x[symmetric-bilinear-form] as shown at \x[matrix-representation-of-a-symmetric-bilinear-form], or a \x[quadratic-form].

= Definite matrix
{parent=symmetric-matrix}
{wiki}

The definition implies that this is also a \x[symmetric-matrix].

= Positive definite matrix
{parent=definite-matrix}

= Positive definite
{synonym}

The \x[dot-product] is a \x[positive-definite-matrix], and so we see that those will have an important link to familiar \x[geometry].

= Skew-symmetric matrix
{parent=symmetric-matrix}
{wiki}

= Antisymmetric matrix
{title2}
{synonym}

WTF is a skew? "Antisymmetric" is just such a better name! And it also appears in other definitions such as \x[antisymmetric-multilinear-map].

= Skew-symmetric form
{parent=skew-symmetric-matrix}

= Vector space
{parent=linear-algebra}
{wiki}

= Basis
{disambiguate=linear algebra}
{parent=vector-space}
{wiki}

= Basis
{synonym}

= Basis vector
{synonym}

= Change of basis
{parent=basis-linear-algebra}
{wiki}

$$N = BMB^{-1}$$
where:
* $M$: matrix in the old basis
* $N$: matrix in the new basis
* $B$: change of basis matrix

= Change of basis matrix
{parent=change-of-basis}

The change of basis matrix $C$ is the matrix that allows us to express the new basis in an old basis:
$$x_{old} = Cx_{new}$$

Mnemonic is as follows: consider we have an initial basis $(x_{old}, y_{old})$. Now, we define the new basis in terms of the old basis, e.g.:
$$
\begin{aligned}
x_{new} &= 1x_{old} + 2y_{old} \\
y_{new} &= 3x_{old} + 4y_{old} \\
\end{aligned}
$$
which can be written in matrix form as:
$$
\begin{bmatrix}x_{new} \\ y_{new} \\\end{bmatrix} =
\begin{bmatrix}1 && 2 \\ 3 && 4 \\\end{bmatrix}
\begin{bmatrix}x_{old} \\ y_{old} \\\end{bmatrix}
$$
and so if we set:
$$
M = \begin{bmatrix}1 && 2 \\ 3 && 4 \\\end{bmatrix}
$$
we have:
$$
\vec{x_{new}} = M\vec{x_{old}}
$$

The usual question then is: given a vector in the new basis, how do we represent it in the old basis?

The answer is that we simply have to calculate the \x[matrix-inverse] of $M$:
$$
\vec{x_{old}} =  M^{-1}\vec{x_{new}}
$$

That $M^{-1}$ is the matrix inverse.

= Change of basis between symmetric matrices
{parent=change-of-basis}

When we have a \x[symmetric-matrix], a \x[change-of-basis] keeps symmetry iff it is done by an \x[orthogonal-matrix], in which case:
$$N = BMB^{-1} = OMO^T$$

= Linear independence
{parent=basis-linear-algebra}
{wiki}

= Linearly independent
{synonym}

= Classification of vector spaces
{parent=vector-space}

= All vector spaces of the same dimension on a given field are isomorphic
{synonym}

https://en.wikipedia.org/wiki/Dimension_(vector_space)#Facts

= Underlying field of a vector space
{parent=vector-space}

= Underlying field of the vector space
{synonym}

Every vector space is defined over a \x[field-mathematics].

E.g. in $\R^3$, the underlying \x[field-mathematics] is $\R$, the \x[real-number]{p}. And in $\C^2$ the underlying field is $\C$, the \x[complex-number]{p}.

Any field can be used, including \x[finite-field]. But the underlying thing has to be a field, because the definitions of a vector need all field properties to hold to make sense.

Elements of the underlying field of a vector space are known as \x[scalar-mathematics].

= Vector
{disambiguate=mathematics}
{parent=vector-space}
{wiki=Vector (mathematics and physics)}

= Vector
{synonym}

= Vectorized
{synonym}

= Scalar
{disambiguate=mathematics}
{parent=vector-mathematics}
{wiki}

= Scalar
{synonym}

A member of the \x[underlying-field-of-a-vector-space]. E.g. in $\R^3$, the underlying field is $\R$, and a scalar is a member of $\R$, i.e. a \x[real-number].

= Tensor
{parent=linear-algebra}
{wiki}

A \x[multilinear-form] with a \x[domain-function] that looks like:
$$
V^m \times {V*}^n \to \R
$$
where $V*$ is the \x[dual-space].

Because a tensor is a \x[multilinear-form], it can be fully specified by how it act on all combinations of basis sets, which can be done in terms of components. We refer to each component as:
$$
T_{i_1 \ldots i_m}^{j_1 \ldots j_n} = T(e_{i_1}, \ldots, e_{i_m}, e^{j_1}, \ldots, e^{j_m})
$$
where we remember that the raised indices refer \x[dual-vector].

Some examples:
* \x[levi-civita-symbol-as-a-tensor]{child}
* \x[a-linear-map-is-a-1-1-tensor]

= A linear map is a (1,1) tensor
{parent=tensor}

A linear map $A$ can be seen as a (1,1) \x[tensor] because:
$$
T(w, v*) = v* A w
$$
is a number, $v*$. is a \x[dual-vector], and \x[w] is a \x[vector]. Furthermoe, $T$ is linear in both $v*$ and $w$. All of this makes $T$ fullfill the definition of a (1,1) tensor.

= Tensor space
{parent=tensor}
{title2=$T^{(m, n)}$}

Bibliography:
* https://mathworld.wolfram.com/TensorSpace.html

= Order of a tensor
{parent=tensor-space}

$T^{(m, n)}$ has order $(m, n)$

= Einstein notation
{c}
{parent=tensor}
{wiki}

= Einstein summation convention
{c}
{synonym}
{title2}

The https://en.wikipedia.org/w/index.php?title=Einstein_notation&oldid=1021244532[Wikipedia page] of this article is basically a masterclass why \x[ourbigbook-com/wikipedia][Wikipedia is useless for learning technical subjects]. They are not even able to teach such a simple subject properly there!

Bibliography:
* https://www.maths.cam.ac.uk/postgrad/part-iii/files/misc/index-notation.pdf gives a definition that does not consider upper and lower indexes, it only counts how many times the indices appear

  Their definition of the \x[laplacian] is a bit wrong as only one $i$ appears in it, they likely meant to have written $\pdv{}{x_i}\pdv{F}{x_i}$ instead of $\pdv{^2 F}{x_i^2}$, related: 

= Raised and lowered indices
{parent=einstein-notation}

TODO what is the point of them? Why not just sum over every index that appears twice, regardless of where it is, as mentioned at: https://www.maths.cam.ac.uk/postgrad/part-iii/files/misc/index-notation.pdf[].

Vectors with the index on top such as $x^i$ are the "regular vectors", they are called \x[covariant-vector]{p}.

Those in indices on bottom are called \x[contravariant-vector]{p}.

It is possible to change between them by \x[raising-and-lowering-indices].

The values are different only when the \x[metric-signature-matrix] is different from the \x[identity-matrix].

= Raised index
{parent=raised-and-lowered-indices}

= Lowered index
{parent=raised-and-lowered-indices}

= Raising and lowering indices
{c}
{parent=raised-and-lowered-indices}
{wiki}

= Implicit metric signature in Einstein notation
{parent=einstein-notation}

Then a specific \x[metric] is involved, sometimes we want to automatically add it to products.

E.g., in a context considering the common \x[minkowski-inner-product-matrix] where the $\eta$ 4x4 matrix and $\mu$ is a vector in \x[r-4]
$$
x^{\mu} x_{\mu} = x^{\mu} \eta_{\mu \nu} x^{\nu} = -x_0^2 + x_1^2 + x_2^2 + x_3^2;
$$
which leads to the change of sign of some terms.

= Einstein notation for partial derivatives
{parent=einstein-notation}

The \x[einstein-summation-convention] works will with \x[partial-derivative], and this case is widely used in \x[particle-physics].

\x[partial-index-partial-derivative-notation]{c} is the \x[partial-derivative-notation] commonly used in this context, as we want to do operations by index rather than by labels such as $x$, $y$, $z$.

This notation also allows us to have \x[raised-and-lowered-indices] on the \x[partial-derivative-symbol] TODO how are they different?

= Divergence in Einstein notation
{parent=einstein-notation-for-partial-derivatives}

Given a vector function of three variables:
$$
F(x_0, x_1, x_2) = (F^0(x_0, x_1, x_2), F^1(x_0, x_1, x_2), F^2(x_0, x_1, x_2)) : \R^3 \to \R^3
$$
so note that we are denoting each component of $F$ as $F^i$ with a \x[raised-index].

Then, the \x[divergence] can be written in \x[einstein-notation] as:
$$
\div{F} = \partial_i F^i(x_0, x_1, x_2) = \pdv{F^i(x_0, x_1, x_2)}{x^i} = \pdv{F^0(x_0, x_1, x_2)}{x_0} + \pdv{F^1(x_0, x_1, x_2)}{x_1} + \pdv{F^2(x_0, x_1, x_2)}{x_2}
$$

It is common to just omit the variables of the function, so we tend to just say:
$$
\div{F} = \partial_i F^i
$$
or equivalently when referring just to the operation:
$$
\div{} = \partial_i
$$

= Laplacian in Einstein notation
{c}
{parent=einstein-notation-for-partial-derivatives}
{title2=$\partial_i \partial^i$}

Given a real function of three variables:
$$
F(x_0, x_1, x_2) = : \R^3 \to \R
$$
its \x[laplacian] can be written as:
$$
\laplacian{F(x_0, x_1, x_2)} = \partial_i \partial^i F(x_0, x_1, x_2) = \\
\partial_0 \partial^0 F(x_0, x_1, x_2) + \partial_1 \partial^1 F(x_0, x_1, x_2) + \partial_2 \partial^2 F(x_0, x_1, x_2) \\
\partial_0^2 F(x_0, x_1, x_2) + \partial_1^2 F(x_0, x_1, x_2) + \partial_2^2 F(x_0, x_1, x_2)
$$

It is common to just omit the variables of the function, so we tend to just say:
$$
\laplacian{F} = \partial_i \partial^i F
$$
or equivalently when referring just to the operation:
$$
\laplacian{} = \partial_i \partial^i
$$

= D'alembert operator in Einstein notation
{c}
{parent=laplacian-in-einstein-notation}
{title2=$\partial_i \partial^i$}

Given the function $\psi$:
$$
\psi : \R^4 \to \C
$$
the operator can be written in \x[planck-units] as:
$$
\partial_i \partial^i \psi(x_0, x_1, x_2, x_3) - m^2 \psi(x_0, x_1, x_2, x_3) = 0
$$
often written without function arguments as:
$$
\partial_i \partial^i \psi
$$
Note how this looks just like the \x[laplacian-in-einstein-notation],  since the \x[d-alembert-operator] is just a generalization of the \x[laplace-operator] to \x[minkowski-space].

= Klein-Gordon equation in Einstein notation
{parent=d-alembert-operator-in-einstein-notation}

The \x[klein-gordon-equation] can be written in terms of the \x[d-alembert-operator] as:
$$
\Box \psi + m^2 \psi = 0
$$
so we can expand the \x[d-alembert-operator-in-einstein-notation] to:
$$
\partial_i \partial^i \psi - m^2 \psi = 0
$$

= Covariance and contravariance of vectors
{parent=einstein-notation}
{wiki}

= Covariant vector
{parent=covariance-and-contravariance-of-vectors}

= Contravariant vector
{parent=covariance-and-contravariance-of-vectors}

= Linear algebra bibliography
{parent=linear-algebra}

https://textbooks.math.gatech.edu/ila/index.html Interactive Linear Algebra. Source: https://github.com/QBobWatson/ila[]. Written in \x[mathbook-xml].
